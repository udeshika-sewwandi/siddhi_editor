package org.xtext.example.siddhi.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.siddhi.services.SiddhiGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSiddhiParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Unidirectional", "Milliseconds", "Aggregation", "Millisecond", "Aggregate", "Partition", "Function", "Millisec", "Snapshot", "Current", "Expired", "Minutes", "Seconds", "Trigger", "Define", "Delete", "Double", "Events", "Having", "Insert", "Minute", "Months", "Object", "Output", "Return", "Second", "Select", "Stream", "String", "Update", "Window", "Within", "Begin", "Every", "False", "First", "Float", "Group", "Hours", "Inner", "Month", "Outer", "Right", "Table", "Weeks", "Years", "Bool", "Days", "From", "Full", "Hour", "Into", "Join", "Last", "Left", "Long", "Null", "Plan", "True", "Week", "With", "Year", "FullStopFullStopFullStop", "All", "And", "App", "Day", "End", "For", "Int", "Min", "Not", "Per", "Raw", "Sec", "Set", "ExclamationMarkEqualsSign", "HyphenMinusGreaterThanSign", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "GreaterThanSignEqualsSign", "As", "At", "By", "In", "Is", "Of", "On", "Or", "NumberSign", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "CommercialAt", "LeftSquareBracket", "RightSquareBracket", "D", "E", "F", "L", "RULE_SCRIPT_ATOM", "RULE_SCRIPT", "RULE_ID_QUOTES", "RULE_ID", "RULE_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "RULE_STRING"
    };
    public static final int Delete=19;
    public static final int App=69;
    public static final int Left=58;
    public static final int Or=92;
    public static final int Raw=77;
    public static final int String=32;
    public static final int False=38;
    public static final int Insert=23;
    public static final int Minutes=15;
    public static final int Inner=43;
    public static final int LessThanSign=105;
    public static final int Month=44;
    public static final int Millisec=11;
    public static final int Define=18;
    public static final int LeftParenthesis=95;
    public static final int Bool=50;
    public static final int GreaterThanSign=107;
    public static final int RULE_ID=119;
    public static final int Weeks=48;
    public static final int Hour=54;
    public static final int Expired=14;
    public static final int Having=22;
    public static final int GreaterThanSignEqualsSign=84;
    public static final int Sec=78;
    public static final int Snapshot=12;
    public static final int Float=40;
    public static final int EqualsSignEqualsSign=83;
    public static final int Min=74;
    public static final int PlusSign=98;
    public static final int RULE_INT=120;
    public static final int RULE_ML_COMMENT=121;
    public static final int Object=26;
    public static final int LeftSquareBracket=110;
    public static final int Current=13;
    public static final int Week=63;
    public static final int Group=41;
    public static final int Set=79;
    public static final int D=112;
    public static final int In=88;
    public static final int E=113;
    public static final int F=114;
    public static final int Right=46;
    public static final int RULE_SCRIPT_ATOM=116;
    public static final int Is=89;
    public static final int L=115;
    public static final int Aggregation=6;
    public static final int Millisecond=7;
    public static final int Comma=99;
    public static final int As=85;
    public static final int HyphenMinus=100;
    public static final int At=86;
    public static final int Minute=24;
    public static final int Events=21;
    public static final int Output=27;
    public static final int Days=51;
    public static final int Begin=36;
    public static final int LessThanSignEqualsSign=82;
    public static final int Solidus=102;
    public static final int Window=34;
    public static final int FullStop=101;
    public static final int Table=47;
    public static final int RULE_ID_QUOTES=118;
    public static final int Join=56;
    public static final int Plan=61;
    public static final int CommercialAt=109;
    public static final int Semicolon=104;
    public static final int Year=65;
    public static final int QuestionMark=108;
    public static final int By=87;
    public static final int Select=30;
    public static final int ExclamationMarkEqualsSign=80;
    public static final int Aggregate=8;
    public static final int HyphenMinusGreaterThanSign=81;
    public static final int Day=70;
    public static final int All=67;
    public static final int Null=60;
    public static final int True=62;
    public static final int Update=33;
    public static final int Full=53;
    public static final int FullStopFullStopFullStop=66;
    public static final int PercentSign=94;
    public static final int Last=57;
    public static final int Unidirectional=4;
    public static final int Trigger=17;
    public static final int Stream=31;
    public static final int First=39;
    public static final int RightSquareBracket=111;
    public static final int Into=55;
    public static final int Years=49;
    public static final int Months=25;
    public static final int For=72;
    public static final int RightParenthesis=96;
    public static final int Double=20;
    public static final int Not=75;
    public static final int And=68;
    public static final int NumberSign=93;
    public static final int Long=59;
    public static final int End=71;
    public static final int Hours=42;
    public static final int RULE_STRING=125;
    public static final int Outer=45;
    public static final int Int=73;
    public static final int With=64;
    public static final int RULE_SL_COMMENT=122;
    public static final int Function=10;
    public static final int EqualsSign=106;
    public static final int Colon=103;
    public static final int EOF=-1;
    public static final int Asterisk=97;
    public static final int RULE_SCRIPT=117;
    public static final int Partition=9;
    public static final int Return=28;
    public static final int RULE_WS=123;
    public static final int From=52;
    public static final int RULE_ANY_OTHER=124;
    public static final int Milliseconds=5;
    public static final int Second=29;
    public static final int Of=90;
    public static final int Within=35;
    public static final int Every=37;
    public static final int Seconds=16;
    public static final int Per=76;
    public static final int On=91;

    // delegates
    // delegators


        public InternalSiddhiParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSiddhiParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[491+1];
             
             
        }
        

    public String[] getTokenNames() { return InternalSiddhiParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSiddhiParser.g"; }



     	private SiddhiGrammarAccess grammarAccess;

        public InternalSiddhiParser(TokenStream input, SiddhiGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "SiddhiQL";
       	}

       	@Override
       	protected SiddhiGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleSiddhiQL"
    // InternalSiddhiParser.g:58:1: entryRuleSiddhiQL returns [EObject current=null] : iv_ruleSiddhiQL= ruleSiddhiQL EOF ;
    public final EObject entryRuleSiddhiQL() throws RecognitionException {
        EObject current = null;
        int entryRuleSiddhiQL_StartIndex = input.index();
        EObject iv_ruleSiddhiQL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return current; }
            // InternalSiddhiParser.g:58:49: (iv_ruleSiddhiQL= ruleSiddhiQL EOF )
            // InternalSiddhiParser.g:59:2: iv_ruleSiddhiQL= ruleSiddhiQL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSiddhiQLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSiddhiQL=ruleSiddhiQL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSiddhiQL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRuleSiddhiQL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSiddhiQL"


    // $ANTLR start "ruleSiddhiQL"
    // InternalSiddhiParser.g:65:1: ruleSiddhiQL returns [EObject current=null] : ( (lv_elements_0_0= ruleExecutionPlan ) )* ;
    public final EObject ruleSiddhiQL() throws RecognitionException {
        EObject current = null;
        int ruleSiddhiQL_StartIndex = input.index();
        EObject lv_elements_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return current; }
            // InternalSiddhiParser.g:71:2: ( ( (lv_elements_0_0= ruleExecutionPlan ) )* )
            // InternalSiddhiParser.g:72:2: ( (lv_elements_0_0= ruleExecutionPlan ) )*
            {
            // InternalSiddhiParser.g:72:2: ( (lv_elements_0_0= ruleExecutionPlan ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==Define||LA1_0==CommercialAt) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSiddhiParser.g:73:3: (lv_elements_0_0= ruleExecutionPlan )
            	    {
            	    // InternalSiddhiParser.g:73:3: (lv_elements_0_0= ruleExecutionPlan )
            	    // InternalSiddhiParser.g:74:4: lv_elements_0_0= ruleExecutionPlan
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getSiddhiQLAccess().getElementsExecutionPlanParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_elements_0_0=ruleExecutionPlan();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getSiddhiQLRule());
            	      				}
            	      				add(
            	      					current,
            	      					"elements",
            	      					lv_elements_0_0,
            	      					"org.xtext.example.siddhi.Siddhi.ExecutionPlan");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, ruleSiddhiQL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSiddhiQL"


    // $ANTLR start "entryRuleExecutionPlan"
    // InternalSiddhiParser.g:94:1: entryRuleExecutionPlan returns [EObject current=null] : iv_ruleExecutionPlan= ruleExecutionPlan EOF ;
    public final EObject entryRuleExecutionPlan() throws RecognitionException {
        EObject current = null;
        int entryRuleExecutionPlan_StartIndex = input.index();
        EObject iv_ruleExecutionPlan = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return current; }
            // InternalSiddhiParser.g:94:54: (iv_ruleExecutionPlan= ruleExecutionPlan EOF )
            // InternalSiddhiParser.g:95:2: iv_ruleExecutionPlan= ruleExecutionPlan EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutionPlanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExecutionPlan=ruleExecutionPlan();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutionPlan; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRuleExecutionPlan_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutionPlan"


    // $ANTLR start "ruleExecutionPlan"
    // InternalSiddhiParser.g:101:1: ruleExecutionPlan returns [EObject current=null] : ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) ) ;
    public final EObject ruleExecutionPlan() throws RecognitionException {
        EObject current = null;
        int ruleExecutionPlan_StartIndex = input.index();
        Token otherlv_7=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_appAnn_0_0 = null;

        EObject lv_defStream_1_0 = null;

        EObject lv_defTable_2_0 = null;

        EObject lv_def_window_3_0 = null;

        EObject lv_defTrigger_4_0 = null;

        EObject lv_defFunction_5_0 = null;

        EObject lv_defAgrregation_6_0 = null;

        EObject lv_defStream_8_0 = null;

        EObject lv_defTable_9_0 = null;

        EObject lv_def_window_10_0 = null;

        EObject lv_defTrigger_11_0 = null;

        EObject lv_defFunction_12_0 = null;

        EObject lv_defAgrregation_13_0 = null;

        EObject lv_exElement_15_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return current; }
            // InternalSiddhiParser.g:107:2: ( ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) ) )
            // InternalSiddhiParser.g:108:2: ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) )
            {
            // InternalSiddhiParser.g:108:2: ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) )
            // InternalSiddhiParser.g:109:3: ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? )
            {
            // InternalSiddhiParser.g:109:3: ( (lv_appAnn_0_0= ruleAppAnnotation ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==CommercialAt) ) {
                    int LA2_1 = input.LA(2);

                    if ( (LA2_1==App) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // InternalSiddhiParser.g:110:4: (lv_appAnn_0_0= ruleAppAnnotation )
            	    {
            	    // InternalSiddhiParser.g:110:4: (lv_appAnn_0_0= ruleAppAnnotation )
            	    // InternalSiddhiParser.g:111:5: lv_appAnn_0_0= ruleAppAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecutionPlanAccess().getAppAnnAppAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_appAnn_0_0=ruleAppAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	      					}
            	      					add(
            	      						current,
            	      						"appAnn",
            	      						lv_appAnn_0_0,
            	      						"org.xtext.example.siddhi.Siddhi.AppAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // InternalSiddhiParser.g:128:3: ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? )
            // InternalSiddhiParser.g:129:4: ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )?
            {
            // InternalSiddhiParser.g:129:4: ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) ) )
            int alt3=6;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CommercialAt) ) {
                int LA3_1 = input.LA(2);

                if ( (synpred1_InternalSiddhiParser()) ) {
                    alt3=1;
                }
                else if ( (synpred2_InternalSiddhiParser()) ) {
                    alt3=2;
                }
                else if ( (synpred3_InternalSiddhiParser()) ) {
                    alt3=3;
                }
                else if ( (synpred6_InternalSiddhiParser()) ) {
                    alt3=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA3_0==Define) ) {
                int LA3_2 = input.LA(2);

                if ( (synpred1_InternalSiddhiParser()) ) {
                    alt3=1;
                }
                else if ( (synpred2_InternalSiddhiParser()) ) {
                    alt3=2;
                }
                else if ( (synpred3_InternalSiddhiParser()) ) {
                    alt3=3;
                }
                else if ( (synpred4_InternalSiddhiParser()) ) {
                    alt3=4;
                }
                else if ( (synpred5_InternalSiddhiParser()) ) {
                    alt3=5;
                }
                else if ( (synpred6_InternalSiddhiParser()) ) {
                    alt3=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSiddhiParser.g:130:5: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) )
                    {
                    // InternalSiddhiParser.g:130:5: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) )
                    // InternalSiddhiParser.g:131:6: ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream )
                    {
                    // InternalSiddhiParser.g:135:6: (lv_defStream_1_0= ruleDefinitionStream )
                    // InternalSiddhiParser.g:136:7: lv_defStream_1_0= ruleDefinitionStream
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defStream_1_0=ruleDefinitionStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defStream",
                      								lv_defStream_1_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionStream");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:154:5: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) )
                    {
                    // InternalSiddhiParser.g:154:5: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) )
                    // InternalSiddhiParser.g:155:6: ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable )
                    {
                    // InternalSiddhiParser.g:159:6: (lv_defTable_2_0= ruleDefinitionTable )
                    // InternalSiddhiParser.g:160:7: lv_defTable_2_0= ruleDefinitionTable
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defTable_2_0=ruleDefinitionTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defTable",
                      								lv_defTable_2_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionTable");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:178:5: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) )
                    {
                    // InternalSiddhiParser.g:178:5: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) )
                    // InternalSiddhiParser.g:179:6: ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow )
                    {
                    // InternalSiddhiParser.g:183:6: (lv_def_window_3_0= ruleDefinitionWindow )
                    // InternalSiddhiParser.g:184:7: lv_def_window_3_0= ruleDefinitionWindow
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_def_window_3_0=ruleDefinitionWindow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"def_window",
                      								lv_def_window_3_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionWindow");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:202:5: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) )
                    {
                    // InternalSiddhiParser.g:202:5: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) )
                    // InternalSiddhiParser.g:203:6: ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger )
                    {
                    // InternalSiddhiParser.g:207:6: (lv_defTrigger_4_0= ruleDefinitionTrigger )
                    // InternalSiddhiParser.g:208:7: lv_defTrigger_4_0= ruleDefinitionTrigger
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defTrigger_4_0=ruleDefinitionTrigger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defTrigger",
                      								lv_defTrigger_4_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionTrigger");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:226:5: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) )
                    {
                    // InternalSiddhiParser.g:226:5: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) )
                    // InternalSiddhiParser.g:227:6: ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction )
                    {
                    // InternalSiddhiParser.g:231:6: (lv_defFunction_5_0= ruleDefinitionFunction )
                    // InternalSiddhiParser.g:232:7: lv_defFunction_5_0= ruleDefinitionFunction
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_0_4_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defFunction_5_0=ruleDefinitionFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defFunction",
                      								lv_defFunction_5_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionFunction");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:250:5: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) )
                    {
                    // InternalSiddhiParser.g:250:5: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation ) )
                    // InternalSiddhiParser.g:251:6: ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_6_0= ruleDefinitionAggregation )
                    {
                    // InternalSiddhiParser.g:255:6: (lv_defAgrregation_6_0= ruleDefinitionAggregation )
                    // InternalSiddhiParser.g:256:7: lv_defAgrregation_6_0= ruleDefinitionAggregation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefAgrregationDefinitionAggregationParserRuleCall_1_0_5_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defAgrregation_6_0=ruleDefinitionAggregation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defAgrregation",
                      								lv_defAgrregation_6_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionAggregation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:274:4: ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==Semicolon) ) {
                    int LA5_1 = input.LA(2);

                    if ( (synpred13_InternalSiddhiParser()) ) {
                        alt5=1;
                    }


                }


                switch (alt5) {
            	case 1 :
            	    // InternalSiddhiParser.g:275:5: ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) )
            	    {
            	    // InternalSiddhiParser.g:340:5: (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) ) )
            	    // InternalSiddhiParser.g:341:6: otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) )
            	    {
            	    otherlv_7=(Token)match(input,Semicolon,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_7, grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_1_0_0());
            	      					
            	    }
            	    // InternalSiddhiParser.g:345:6: ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) ) )
            	    int alt4=6;
            	    int LA4_0 = input.LA(1);

            	    if ( (LA4_0==CommercialAt) ) {
            	        int LA4_1 = input.LA(2);

            	        if ( (synpred14_InternalSiddhiParser()) ) {
            	            alt4=1;
            	        }
            	        else if ( (synpred15_InternalSiddhiParser()) ) {
            	            alt4=2;
            	        }
            	        else if ( (synpred16_InternalSiddhiParser()) ) {
            	            alt4=3;
            	        }
            	        else if ( (synpred19_InternalSiddhiParser()) ) {
            	            alt4=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 4, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else if ( (LA4_0==Define) ) {
            	        int LA4_2 = input.LA(2);

            	        if ( (synpred14_InternalSiddhiParser()) ) {
            	            alt4=1;
            	        }
            	        else if ( (synpred15_InternalSiddhiParser()) ) {
            	            alt4=2;
            	        }
            	        else if ( (synpred16_InternalSiddhiParser()) ) {
            	            alt4=3;
            	        }
            	        else if ( (synpred17_InternalSiddhiParser()) ) {
            	            alt4=4;
            	        }
            	        else if ( (synpred18_InternalSiddhiParser()) ) {
            	            alt4=5;
            	        }
            	        else if ( (synpred19_InternalSiddhiParser()) ) {
            	            alt4=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 4, 2, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 4, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt4) {
            	        case 1 :
            	            // InternalSiddhiParser.g:346:7: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) )
            	            {
            	            // InternalSiddhiParser.g:346:7: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) )
            	            // InternalSiddhiParser.g:347:8: ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream )
            	            {
            	            // InternalSiddhiParser.g:351:8: (lv_defStream_8_0= ruleDefinitionStream )
            	            // InternalSiddhiParser.g:352:9: lv_defStream_8_0= ruleDefinitionStream
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_1_0_1_0_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defStream_8_0=ruleDefinitionStream();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defStream",
            	              										lv_defStream_8_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionStream");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:370:7: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) )
            	            {
            	            // InternalSiddhiParser.g:370:7: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) )
            	            // InternalSiddhiParser.g:371:8: ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable )
            	            {
            	            // InternalSiddhiParser.g:375:8: (lv_defTable_9_0= ruleDefinitionTable )
            	            // InternalSiddhiParser.g:376:9: lv_defTable_9_0= ruleDefinitionTable
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_1_0_1_1_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defTable_9_0=ruleDefinitionTable();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defTable",
            	              										lv_defTable_9_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionTable");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalSiddhiParser.g:394:7: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) )
            	            {
            	            // InternalSiddhiParser.g:394:7: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) )
            	            // InternalSiddhiParser.g:395:8: ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow )
            	            {
            	            // InternalSiddhiParser.g:399:8: (lv_def_window_10_0= ruleDefinitionWindow )
            	            // InternalSiddhiParser.g:400:9: lv_def_window_10_0= ruleDefinitionWindow
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_1_0_1_2_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_def_window_10_0=ruleDefinitionWindow();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"def_window",
            	              										lv_def_window_10_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionWindow");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 4 :
            	            // InternalSiddhiParser.g:418:7: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) )
            	            {
            	            // InternalSiddhiParser.g:418:7: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) )
            	            // InternalSiddhiParser.g:419:8: ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger )
            	            {
            	            // InternalSiddhiParser.g:423:8: (lv_defTrigger_11_0= ruleDefinitionTrigger )
            	            // InternalSiddhiParser.g:424:9: lv_defTrigger_11_0= ruleDefinitionTrigger
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_1_0_1_3_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defTrigger_11_0=ruleDefinitionTrigger();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defTrigger",
            	              										lv_defTrigger_11_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionTrigger");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 5 :
            	            // InternalSiddhiParser.g:442:7: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) )
            	            {
            	            // InternalSiddhiParser.g:442:7: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) )
            	            // InternalSiddhiParser.g:443:8: ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction )
            	            {
            	            // InternalSiddhiParser.g:447:8: (lv_defFunction_12_0= ruleDefinitionFunction )
            	            // InternalSiddhiParser.g:448:9: lv_defFunction_12_0= ruleDefinitionFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_1_0_1_4_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defFunction_12_0=ruleDefinitionFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defFunction",
            	              										lv_defFunction_12_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionFunction");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 6 :
            	            // InternalSiddhiParser.g:466:7: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) )
            	            {
            	            // InternalSiddhiParser.g:466:7: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation ) )
            	            // InternalSiddhiParser.g:467:8: ( ( ruleDefinitionAggregation ) )=> (lv_defAgrregation_13_0= ruleDefinitionAggregation )
            	            {
            	            // InternalSiddhiParser.g:471:8: (lv_defAgrregation_13_0= ruleDefinitionAggregation )
            	            // InternalSiddhiParser.g:472:9: lv_defAgrregation_13_0= ruleDefinitionAggregation
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefAgrregationDefinitionAggregationParserRuleCall_1_1_0_1_5_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defAgrregation_13_0=ruleDefinitionAggregation();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defAgrregation",
            	              										lv_defAgrregation_13_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionAggregation");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalSiddhiParser.g:492:4: ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==Semicolon) ) {
                    int LA6_1 = input.LA(2);

                    if ( (synpred20_InternalSiddhiParser()) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // InternalSiddhiParser.g:493:5: ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) )
            	    {
            	    // InternalSiddhiParser.g:502:5: (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) )
            	    // InternalSiddhiParser.g:503:6: otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) )
            	    {
            	    otherlv_14=(Token)match(input,Semicolon,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_14, grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_2_0_0());
            	      					
            	    }
            	    // InternalSiddhiParser.g:507:6: ( (lv_exElement_15_0= ruleExecutionElement ) )
            	    // InternalSiddhiParser.g:508:7: (lv_exElement_15_0= ruleExecutionElement )
            	    {
            	    // InternalSiddhiParser.g:508:7: (lv_exElement_15_0= ruleExecutionElement )
            	    // InternalSiddhiParser.g:509:8: lv_exElement_15_0= ruleExecutionElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getExecutionPlanAccess().getExElementExecutionElementParserRuleCall_1_2_0_1_0());
            	      							
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_exElement_15_0=ruleExecutionElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	      								}
            	      								add(
            	      									current,
            	      									"exElement",
            	      									lv_exElement_15_0,
            	      									"org.xtext.example.siddhi.Siddhi.ExecutionElement");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            // InternalSiddhiParser.g:528:4: (otherlv_16= Semicolon )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Semicolon) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalSiddhiParser.g:529:5: otherlv_16= Semicolon
                    {
                    otherlv_16=(Token)match(input,Semicolon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_3());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, ruleExecutionPlan_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExecutionPlan"


    // $ANTLR start "entryRuleExecutionElement"
    // InternalSiddhiParser.g:539:1: entryRuleExecutionElement returns [EObject current=null] : iv_ruleExecutionElement= ruleExecutionElement EOF ;
    public final EObject entryRuleExecutionElement() throws RecognitionException {
        EObject current = null;
        int entryRuleExecutionElement_StartIndex = input.index();
        EObject iv_ruleExecutionElement = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return current; }
            // InternalSiddhiParser.g:539:57: (iv_ruleExecutionElement= ruleExecutionElement EOF )
            // InternalSiddhiParser.g:540:2: iv_ruleExecutionElement= ruleExecutionElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutionElementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExecutionElement=ruleExecutionElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutionElement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRuleExecutionElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutionElement"


    // $ANTLR start "ruleExecutionElement"
    // InternalSiddhiParser.g:546:1: ruleExecutionElement returns [EObject current=null] : ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) ) ;
    public final EObject ruleExecutionElement() throws RecognitionException {
        EObject current = null;
        int ruleExecutionElement_StartIndex = input.index();
        EObject lv_execPartition_0_0 = null;

        EObject lv_que_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return current; }
            // InternalSiddhiParser.g:552:2: ( ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) ) )
            // InternalSiddhiParser.g:553:2: ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) )
            {
            // InternalSiddhiParser.g:553:2: ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==CommercialAt) ) {
                int LA8_1 = input.LA(2);

                if ( (synpred21_InternalSiddhiParser()) ) {
                    alt8=1;
                }
                else if ( (synpred22_InternalSiddhiParser()) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA8_0==Partition) && (synpred21_InternalSiddhiParser())) {
                alt8=1;
            }
            else if ( (LA8_0==From) && (synpred22_InternalSiddhiParser())) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSiddhiParser.g:554:3: ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) )
                    {
                    // InternalSiddhiParser.g:554:3: ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) )
                    // InternalSiddhiParser.g:555:4: ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) )
                    {
                    // InternalSiddhiParser.g:561:4: ( (lv_execPartition_0_0= ruleExecPartition ) )
                    // InternalSiddhiParser.g:562:5: (lv_execPartition_0_0= ruleExecPartition )
                    {
                    // InternalSiddhiParser.g:562:5: (lv_execPartition_0_0= ruleExecPartition )
                    // InternalSiddhiParser.g:563:6: lv_execPartition_0_0= ruleExecPartition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutionElementAccess().getExecPartitionExecPartitionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_execPartition_0_0=ruleExecPartition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutionElementRule());
                      						}
                      						set(
                      							current,
                      							"execPartition",
                      							lv_execPartition_0_0,
                      							"org.xtext.example.siddhi.Siddhi.ExecPartition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:582:3: ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) )
                    {
                    // InternalSiddhiParser.g:582:3: ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) )
                    // InternalSiddhiParser.g:583:4: ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) )
                    {
                    // InternalSiddhiParser.g:589:4: ( (lv_que_1_0= ruleQuery ) )
                    // InternalSiddhiParser.g:590:5: (lv_que_1_0= ruleQuery )
                    {
                    // InternalSiddhiParser.g:590:5: (lv_que_1_0= ruleQuery )
                    // InternalSiddhiParser.g:591:6: lv_que_1_0= ruleQuery
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutionElementAccess().getQueQueryParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_que_1_0=ruleQuery();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutionElementRule());
                      						}
                      						set(
                      							current,
                      							"que",
                      							lv_que_1_0,
                      							"org.xtext.example.siddhi.Siddhi.Query");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, ruleExecutionElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExecutionElement"


    // $ANTLR start "entryRuleDefinitionStream"
    // InternalSiddhiParser.g:613:1: entryRuleDefinitionStream returns [EObject current=null] : iv_ruleDefinitionStream= ruleDefinitionStream EOF ;
    public final EObject entryRuleDefinitionStream() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionStream_StartIndex = input.index();
        EObject iv_ruleDefinitionStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return current; }
            // InternalSiddhiParser.g:613:57: (iv_ruleDefinitionStream= ruleDefinitionStream EOF )
            // InternalSiddhiParser.g:614:2: iv_ruleDefinitionStream= ruleDefinitionStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionStream=ruleDefinitionStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuleDefinitionStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionStream"


    // $ANTLR start "ruleDefinitionStream"
    // InternalSiddhiParser.g:620:1: ruleDefinitionStream returns [EObject current=null] : ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] (this_STREAM_3= ruleSTREAM[$current] | this_TABLE_4= ruleTABLE[$current] ) ( (lv_src_5_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_7_0= ruleFeatures ) ) (otherlv_8= Comma ( (lv_feature_9_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) ;
    public final EObject ruleDefinitionStream() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionStream_StartIndex = input.index();
        Token otherlv_8=null;
        EObject lv_ann_1_0 = null;

        EObject this_DEFINE_2 = null;

        EObject this_STREAM_3 = null;

        EObject this_TABLE_4 = null;

        EObject lv_src_5_0 = null;

        EObject lv_feature_7_0 = null;

        EObject lv_feature_9_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return current; }
            // InternalSiddhiParser.g:626:2: ( ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] (this_STREAM_3= ruleSTREAM[$current] | this_TABLE_4= ruleTABLE[$current] ) ( (lv_src_5_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_7_0= ruleFeatures ) ) (otherlv_8= Comma ( (lv_feature_9_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:627:2: ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] (this_STREAM_3= ruleSTREAM[$current] | this_TABLE_4= ruleTABLE[$current] ) ( (lv_src_5_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_7_0= ruleFeatures ) ) (otherlv_8= Comma ( (lv_feature_9_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            {
            // InternalSiddhiParser.g:627:2: ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] (this_STREAM_3= ruleSTREAM[$current] | this_TABLE_4= ruleTABLE[$current] ) ( (lv_src_5_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_7_0= ruleFeatures ) ) (otherlv_8= Comma ( (lv_feature_9_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            // InternalSiddhiParser.g:628:3: () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] (this_STREAM_3= ruleSTREAM[$current] | this_TABLE_4= ruleTABLE[$current] ) ( (lv_src_5_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_7_0= ruleFeatures ) ) (otherlv_8= Comma ( (lv_feature_9_0= ruleFeatures ) ) )* ruleCLOSE_PAR
            {
            // InternalSiddhiParser.g:628:3: ()
            // InternalSiddhiParser.g:629:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionStreamAccess().getDefinitionStreamAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:635:3: ( (lv_ann_1_0= ruleAnnotation ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==CommercialAt) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalSiddhiParser.g:636:4: (lv_ann_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:636:4: (lv_ann_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:637:5: lv_ann_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionStreamAccess().getAnnAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann",
            	      						lv_ann_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionStreamRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionStreamAccess().getDEFINEParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_8);
            this_DEFINE_2=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_2;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:665:3: (this_STREAM_3= ruleSTREAM[$current] | this_TABLE_4= ruleTABLE[$current] )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==Stream) ) {
                alt10=1;
            }
            else if ( (LA10_0==Table) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSiddhiParser.g:666:4: this_STREAM_3= ruleSTREAM[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDefinitionStreamRule());
                      				}
                      				newCompositeNode(grammarAccess.getDefinitionStreamAccess().getSTREAMParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_STREAM_3=ruleSTREAM(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_STREAM_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:678:4: this_TABLE_4= ruleTABLE[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDefinitionStreamRule());
                      				}
                      				newCompositeNode(grammarAccess.getDefinitionStreamAccess().getTABLEParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_TABLE_4=ruleTABLE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TABLE_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:690:3: ( (lv_src_5_0= ruleSource1 ) )
            // InternalSiddhiParser.g:691:4: (lv_src_5_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:691:4: (lv_src_5_0= ruleSource1 )
            // InternalSiddhiParser.g:692:5: lv_src_5_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionStreamAccess().getSrcSource1ParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_src_5_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_5_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionStreamAccess().getOPEN_PARParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:716:3: ( (lv_feature_7_0= ruleFeatures ) )
            // InternalSiddhiParser.g:717:4: (lv_feature_7_0= ruleFeatures )
            {
            // InternalSiddhiParser.g:717:4: (lv_feature_7_0= ruleFeatures )
            // InternalSiddhiParser.g:718:5: lv_feature_7_0= ruleFeatures
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_feature_7_0=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
              					}
              					add(
              						current,
              						"feature",
              						lv_feature_7_0,
              						"org.xtext.example.siddhi.Siddhi.Features");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:735:3: (otherlv_8= Comma ( (lv_feature_9_0= ruleFeatures ) ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==Comma) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalSiddhiParser.g:736:4: otherlv_8= Comma ( (lv_feature_9_0= ruleFeatures ) )
            	    {
            	    otherlv_8=(Token)match(input,Comma,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getDefinitionStreamAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:740:4: ( (lv_feature_9_0= ruleFeatures ) )
            	    // InternalSiddhiParser.g:741:5: (lv_feature_9_0= ruleFeatures )
            	    {
            	    // InternalSiddhiParser.g:741:5: (lv_feature_9_0= ruleFeatures )
            	    // InternalSiddhiParser.g:742:6: lv_feature_9_0= ruleFeatures
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_feature_9_0=ruleFeatures();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
            	      						}
            	      						add(
            	      							current,
            	      							"feature",
            	      							lv_feature_9_0,
            	      							"org.xtext.example.siddhi.Siddhi.Features");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionStreamAccess().getCLOSE_PARParserRuleCall_8());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruleDefinitionStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionStream"


    // $ANTLR start "entryRuleDefinitionTable"
    // InternalSiddhiParser.g:771:1: entryRuleDefinitionTable returns [EObject current=null] : iv_ruleDefinitionTable= ruleDefinitionTable EOF ;
    public final EObject entryRuleDefinitionTable() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionTable_StartIndex = input.index();
        EObject iv_ruleDefinitionTable = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return current; }
            // InternalSiddhiParser.g:771:56: (iv_ruleDefinitionTable= ruleDefinitionTable EOF )
            // InternalSiddhiParser.g:772:2: iv_ruleDefinitionTable= ruleDefinitionTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionTableRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionTable=ruleDefinitionTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionTable; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRuleDefinitionTable_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionTable"


    // $ANTLR start "ruleDefinitionTable"
    // InternalSiddhiParser.g:778:1: ruleDefinitionTable returns [EObject current=null] : ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) ;
    public final EObject ruleDefinitionTable() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionTable_StartIndex = input.index();
        Token otherlv_7=null;
        EObject lv_ann1_1_0 = null;

        EObject this_DEFINE_2 = null;

        EObject this_TABLE_3 = null;

        EObject lv_src_4_0 = null;

        EObject lv_feature_6_0 = null;

        EObject lv_feature_8_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return current; }
            // InternalSiddhiParser.g:784:2: ( ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:785:2: ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            {
            // InternalSiddhiParser.g:785:2: ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            // InternalSiddhiParser.g:786:3: () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR
            {
            // InternalSiddhiParser.g:786:3: ()
            // InternalSiddhiParser.g:787:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionTableAccess().getDefinitionTableAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:793:3: ( (lv_ann1_1_0= ruleAnnotation ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==CommercialAt) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalSiddhiParser.g:794:4: (lv_ann1_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:794:4: (lv_ann1_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:795:5: lv_ann1_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionTableAccess().getAnn1AnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann1_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann1",
            	      						lv_ann1_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionTableRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getDEFINEParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_8);
            this_DEFINE_2=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionTableRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getTABLEParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_TABLE_3=ruleTABLE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TABLE_3;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:834:3: ( (lv_src_4_0= ruleSource1 ) )
            // InternalSiddhiParser.g:835:4: (lv_src_4_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:835:4: (lv_src_4_0= ruleSource1 )
            // InternalSiddhiParser.g:836:5: lv_src_4_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionTableAccess().getSrcSource1ParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_src_4_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_4_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getOPEN_PARParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:860:3: ( (lv_feature_6_0= ruleFeatures ) )
            // InternalSiddhiParser.g:861:4: (lv_feature_6_0= ruleFeatures )
            {
            // InternalSiddhiParser.g:861:4: (lv_feature_6_0= ruleFeatures )
            // InternalSiddhiParser.g:862:5: lv_feature_6_0= ruleFeatures
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_feature_6_0=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
              					}
              					add(
              						current,
              						"feature",
              						lv_feature_6_0,
              						"org.xtext.example.siddhi.Siddhi.Features");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:879:3: (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==Comma) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalSiddhiParser.g:880:4: otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) )
            	    {
            	    otherlv_7=(Token)match(input,Comma,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getDefinitionTableAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:884:4: ( (lv_feature_8_0= ruleFeatures ) )
            	    // InternalSiddhiParser.g:885:5: (lv_feature_8_0= ruleFeatures )
            	    {
            	    // InternalSiddhiParser.g:885:5: (lv_feature_8_0= ruleFeatures )
            	    // InternalSiddhiParser.g:886:6: lv_feature_8_0= ruleFeatures
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_feature_8_0=ruleFeatures();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"feature",
            	      							lv_feature_8_0,
            	      							"org.xtext.example.siddhi.Siddhi.Features");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getCLOSE_PARParserRuleCall_8());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, ruleDefinitionTable_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionTable"


    // $ANTLR start "entryRuleDefinitionWindow"
    // InternalSiddhiParser.g:915:1: entryRuleDefinitionWindow returns [EObject current=null] : iv_ruleDefinitionWindow= ruleDefinitionWindow EOF ;
    public final EObject entryRuleDefinitionWindow() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionWindow_StartIndex = input.index();
        EObject iv_ruleDefinitionWindow = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return current; }
            // InternalSiddhiParser.g:915:57: (iv_ruleDefinitionWindow= ruleDefinitionWindow EOF )
            // InternalSiddhiParser.g:916:2: iv_ruleDefinitionWindow= ruleDefinitionWindow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionWindowRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionWindow=ruleDefinitionWindow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionWindow; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRuleDefinitionWindow_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionWindow"


    // $ANTLR start "ruleDefinitionWindow"
    // InternalSiddhiParser.g:922:1: ruleDefinitionWindow returns [EObject current=null] : ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? ) ;
    public final EObject ruleDefinitionWindow() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionWindow_StartIndex = input.index();
        Token otherlv_7=null;
        EObject lv_ann2_1_0 = null;

        EObject this_DEFINE_2 = null;

        EObject this_WINDOW_3 = null;

        EObject lv_src_4_0 = null;

        EObject lv_feature_6_0 = null;

        EObject lv_feature_8_0 = null;

        EObject lv_funcOp_10_0 = null;

        EObject this_OUTPUT_11 = null;

        EObject lv_opEventType_12_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return current; }
            // InternalSiddhiParser.g:928:2: ( ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? ) )
            // InternalSiddhiParser.g:929:2: ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? )
            {
            // InternalSiddhiParser.g:929:2: ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? )
            // InternalSiddhiParser.g:930:3: () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )?
            {
            // InternalSiddhiParser.g:930:3: ()
            // InternalSiddhiParser.g:931:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionWindowAccess().getDefinitionWindowAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:937:3: ( (lv_ann2_1_0= ruleAnnotation ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==CommercialAt) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalSiddhiParser.g:938:4: (lv_ann2_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:938:4: (lv_ann2_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:939:5: lv_ann2_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getAnn2AnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann2_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann2",
            	      						lv_ann2_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionWindowRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getDEFINEParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_12);
            this_DEFINE_2=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionWindowRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getWINDOWParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_WINDOW_3=ruleWINDOW(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WINDOW_3;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:978:3: ( (lv_src_4_0= ruleSource1 ) )
            // InternalSiddhiParser.g:979:4: (lv_src_4_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:979:4: (lv_src_4_0= ruleSource1 )
            // InternalSiddhiParser.g:980:5: lv_src_4_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getSrcSource1ParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_src_4_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_4_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getOPEN_PARParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1004:3: ( (lv_feature_6_0= ruleFeatures ) )
            // InternalSiddhiParser.g:1005:4: (lv_feature_6_0= ruleFeatures )
            {
            // InternalSiddhiParser.g:1005:4: (lv_feature_6_0= ruleFeatures )
            // InternalSiddhiParser.g:1006:5: lv_feature_6_0= ruleFeatures
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_feature_6_0=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
              					}
              					add(
              						current,
              						"feature",
              						lv_feature_6_0,
              						"org.xtext.example.siddhi.Siddhi.Features");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1023:3: (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==Comma) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalSiddhiParser.g:1024:4: otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) )
            	    {
            	    otherlv_7=(Token)match(input,Comma,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getDefinitionWindowAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:1028:4: ( (lv_feature_8_0= ruleFeatures ) )
            	    // InternalSiddhiParser.g:1029:5: (lv_feature_8_0= ruleFeatures )
            	    {
            	    // InternalSiddhiParser.g:1029:5: (lv_feature_8_0= ruleFeatures )
            	    // InternalSiddhiParser.g:1030:6: lv_feature_8_0= ruleFeatures
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_feature_8_0=ruleFeatures();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"feature",
            	      							lv_feature_8_0,
            	      							"org.xtext.example.siddhi.Siddhi.Features");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getCLOSE_PARParserRuleCall_8());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1055:3: ( (lv_funcOp_10_0= ruleFunctionOperation ) )
            // InternalSiddhiParser.g:1056:4: (lv_funcOp_10_0= ruleFunctionOperation )
            {
            // InternalSiddhiParser.g:1056:4: (lv_funcOp_10_0= ruleFunctionOperation )
            // InternalSiddhiParser.g:1057:5: lv_funcOp_10_0= ruleFunctionOperation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getFuncOpFunctionOperationParserRuleCall_9_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_13);
            lv_funcOp_10_0=ruleFunctionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
              					}
              					set(
              						current,
              						"funcOp",
              						lv_funcOp_10_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionOperation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1074:3: (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==Output) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalSiddhiParser.g:1075:4: this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDefinitionWindowRule());
                      				}
                      				newCompositeNode(grammarAccess.getDefinitionWindowAccess().getOUTPUTParserRuleCall_10_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    this_OUTPUT_11=ruleOUTPUT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTPUT_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:1086:4: ( (lv_opEventType_12_0= ruleOutputEventType ) )
                    // InternalSiddhiParser.g:1087:5: (lv_opEventType_12_0= ruleOutputEventType )
                    {
                    // InternalSiddhiParser.g:1087:5: (lv_opEventType_12_0= ruleOutputEventType )
                    // InternalSiddhiParser.g:1088:6: lv_opEventType_12_0= ruleOutputEventType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefinitionWindowAccess().getOpEventTypeOutputEventTypeParserRuleCall_10_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_opEventType_12_0=ruleOutputEventType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
                      						}
                      						set(
                      							current,
                      							"opEventType",
                      							lv_opEventType_12_0,
                      							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, ruleDefinitionWindow_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionWindow"


    // $ANTLR start "entryRuleDefinitionTrigger"
    // InternalSiddhiParser.g:1110:1: entryRuleDefinitionTrigger returns [EObject current=null] : iv_ruleDefinitionTrigger= ruleDefinitionTrigger EOF ;
    public final EObject entryRuleDefinitionTrigger() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionTrigger_StartIndex = input.index();
        EObject iv_ruleDefinitionTrigger = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return current; }
            // InternalSiddhiParser.g:1110:58: (iv_ruleDefinitionTrigger= ruleDefinitionTrigger EOF )
            // InternalSiddhiParser.g:1111:2: iv_ruleDefinitionTrigger= ruleDefinitionTrigger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionTriggerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionTrigger=ruleDefinitionTrigger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionTrigger; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRuleDefinitionTrigger_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionTrigger"


    // $ANTLR start "ruleDefinitionTrigger"
    // InternalSiddhiParser.g:1117:1: ruleDefinitionTrigger returns [EObject current=null] : ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) ) ;
    public final EObject ruleDefinitionTrigger() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionTrigger_StartIndex = input.index();
        EObject this_DEFINE_1 = null;

        EObject this_TRIGGER_2 = null;

        EObject lv_tn_3_0 = null;

        EObject this_AT_4 = null;

        EObject lv_every_5_0 = null;

        EObject lv_tv_6_0 = null;

        EObject lv_sv_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return current; }
            // InternalSiddhiParser.g:1123:2: ( ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) ) )
            // InternalSiddhiParser.g:1124:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) )
            {
            // InternalSiddhiParser.g:1124:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) )
            // InternalSiddhiParser.g:1125:3: () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) )
            {
            // InternalSiddhiParser.g:1125:3: ()
            // InternalSiddhiParser.g:1126:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionTriggerAccess().getDefinitionTriggerAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:1132:3: (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] )
            // InternalSiddhiParser.g:1133:4: this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current]
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionTriggerRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getDEFINEParserRuleCall_1_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_15);
            this_DEFINE_1=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_DEFINE_1;
              				afterParserOrEnumRuleCall();
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionTriggerRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getTRIGGERParserRuleCall_1_1());
              			
            }
            pushFollow(FollowSets000.FOLLOW_16);
            this_TRIGGER_2=ruleTRIGGER(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_TRIGGER_2;
              				afterParserOrEnumRuleCall();
              			
            }

            }

            // InternalSiddhiParser.g:1156:3: ( (lv_tn_3_0= ruleTriggerName ) )
            // InternalSiddhiParser.g:1157:4: (lv_tn_3_0= ruleTriggerName )
            {
            // InternalSiddhiParser.g:1157:4: (lv_tn_3_0= ruleTriggerName )
            // InternalSiddhiParser.g:1158:5: lv_tn_3_0= ruleTriggerName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getTnTriggerNameParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_tn_3_0=ruleTriggerName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
              					}
              					set(
              						current,
              						"tn",
              						lv_tn_3_0,
              						"org.xtext.example.siddhi.Siddhi.TriggerName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionTriggerRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getATParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_18);
            this_AT_4=ruleAT(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AT_4;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1186:3: ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==Every) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_STRING) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSiddhiParser.g:1187:4: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) )
                    {
                    // InternalSiddhiParser.g:1187:4: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) )
                    // InternalSiddhiParser.g:1188:5: ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) )
                    {
                    // InternalSiddhiParser.g:1188:5: ( (lv_every_5_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:1189:6: (lv_every_5_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:1189:6: (lv_every_5_0= ruleEVERY )
                    // InternalSiddhiParser.g:1190:7: lv_every_5_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getEveryEVERYParserRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_every_5_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
                      							}
                      							set(
                      								current,
                      								"every",
                      								lv_every_5_0,
                      								"org.xtext.example.siddhi.Siddhi.EVERY");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:1207:5: ( (lv_tv_6_0= ruleTimeValue ) )
                    // InternalSiddhiParser.g:1208:6: (lv_tv_6_0= ruleTimeValue )
                    {
                    // InternalSiddhiParser.g:1208:6: (lv_tv_6_0= ruleTimeValue )
                    // InternalSiddhiParser.g:1209:7: lv_tv_6_0= ruleTimeValue
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getTvTimeValueParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tv_6_0=ruleTimeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
                      							}
                      							set(
                      								current,
                      								"tv",
                      								lv_tv_6_0,
                      								"org.xtext.example.siddhi.Siddhi.TimeValue");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:1228:4: ( (lv_sv_7_0= ruleStringValue ) )
                    {
                    // InternalSiddhiParser.g:1228:4: ( (lv_sv_7_0= ruleStringValue ) )
                    // InternalSiddhiParser.g:1229:5: (lv_sv_7_0= ruleStringValue )
                    {
                    // InternalSiddhiParser.g:1229:5: (lv_sv_7_0= ruleStringValue )
                    // InternalSiddhiParser.g:1230:6: lv_sv_7_0= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getSvStringValueParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sv_7_0=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
                      						}
                      						set(
                      							current,
                      							"sv",
                      							lv_sv_7_0,
                      							"org.xtext.example.siddhi.Siddhi.StringValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, ruleDefinitionTrigger_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionTrigger"


    // $ANTLR start "entryRuleDefinitionFunction"
    // InternalSiddhiParser.g:1252:1: entryRuleDefinitionFunction returns [EObject current=null] : iv_ruleDefinitionFunction= ruleDefinitionFunction EOF ;
    public final EObject entryRuleDefinitionFunction() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionFunction_StartIndex = input.index();
        EObject iv_ruleDefinitionFunction = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return current; }
            // InternalSiddhiParser.g:1252:59: (iv_ruleDefinitionFunction= ruleDefinitionFunction EOF )
            // InternalSiddhiParser.g:1253:2: iv_ruleDefinitionFunction= ruleDefinitionFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionFunction=ruleDefinitionFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRuleDefinitionFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionFunction"


    // $ANTLR start "ruleDefinitionFunction"
    // InternalSiddhiParser.g:1259:1: ruleDefinitionFunction returns [EObject current=null] : ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) ) ;
    public final EObject ruleDefinitionFunction() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionFunction_StartIndex = input.index();
        EObject this_DEFINE_1 = null;

        EObject this_FUNCTION_2 = null;

        EObject lv_fn_3_0 = null;

        EObject lv_ln_5_0 = null;

        EObject this_RETURN_7 = null;

        EObject lv_attr_type_8_0 = null;

        EObject lv_func_body_9_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return current; }
            // InternalSiddhiParser.g:1265:2: ( ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) ) )
            // InternalSiddhiParser.g:1266:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) )
            {
            // InternalSiddhiParser.g:1266:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) )
            // InternalSiddhiParser.g:1267:3: () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) )
            {
            // InternalSiddhiParser.g:1267:3: ()
            // InternalSiddhiParser.g:1268:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionFunctionAccess().getDefinitionFunctionAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:1274:3: (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] )
            // InternalSiddhiParser.g:1275:4: this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current]
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionFunctionRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getDEFINEParserRuleCall_1_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_20);
            this_DEFINE_1=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_DEFINE_1;
              				afterParserOrEnumRuleCall();
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionFunctionRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getFUNCTIONParserRuleCall_1_1());
              			
            }
            pushFollow(FollowSets000.FOLLOW_16);
            this_FUNCTION_2=ruleFUNCTION(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_FUNCTION_2;
              				afterParserOrEnumRuleCall();
              			
            }

            }

            // InternalSiddhiParser.g:1298:3: ( (lv_fn_3_0= ruleFunctionName ) )
            // InternalSiddhiParser.g:1299:4: (lv_fn_3_0= ruleFunctionName )
            {
            // InternalSiddhiParser.g:1299:4: (lv_fn_3_0= ruleFunctionName )
            // InternalSiddhiParser.g:1300:5: lv_fn_3_0= ruleFunctionName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getFnFunctionNameParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_21);
            lv_fn_3_0=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"fn",
              						lv_fn_3_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getOPEN_SQARE_BRACKETSParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_16);
            ruleOPEN_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1324:3: ( (lv_ln_5_0= ruleLanguageName ) )
            // InternalSiddhiParser.g:1325:4: (lv_ln_5_0= ruleLanguageName )
            {
            // InternalSiddhiParser.g:1325:4: (lv_ln_5_0= ruleLanguageName )
            // InternalSiddhiParser.g:1326:5: lv_ln_5_0= ruleLanguageName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getLnLanguageNameParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_ln_5_0=ruleLanguageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"ln",
              						lv_ln_5_0,
              						"org.xtext.example.siddhi.Siddhi.LanguageName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_23);
            ruleCLOSE_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getRETURNParserRuleCall_6());
              		
            }
            pushFollow(FollowSets000.FOLLOW_24);
            this_RETURN_7=ruleRETURN(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RETURN_7;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1361:3: ( (lv_attr_type_8_0= ruleAttributeType ) )
            // InternalSiddhiParser.g:1362:4: (lv_attr_type_8_0= ruleAttributeType )
            {
            // InternalSiddhiParser.g:1362:4: (lv_attr_type_8_0= ruleAttributeType )
            // InternalSiddhiParser.g:1363:5: lv_attr_type_8_0= ruleAttributeType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getAttr_typeAttributeTypeParserRuleCall_7_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_25);
            lv_attr_type_8_0=ruleAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"attr_type",
              						lv_attr_type_8_0,
              						"org.xtext.example.siddhi.Siddhi.AttributeType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1380:3: ( (lv_func_body_9_0= ruleFunctionBody ) )
            // InternalSiddhiParser.g:1381:4: (lv_func_body_9_0= ruleFunctionBody )
            {
            // InternalSiddhiParser.g:1381:4: (lv_func_body_9_0= ruleFunctionBody )
            // InternalSiddhiParser.g:1382:5: lv_func_body_9_0= ruleFunctionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getFunc_bodyFunctionBodyParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_func_body_9_0=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"func_body",
              						lv_func_body_9_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, ruleDefinitionFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionFunction"


    // $ANTLR start "entryRuleDefinitionAggregation"
    // InternalSiddhiParser.g:1403:1: entryRuleDefinitionAggregation returns [EObject current=null] : iv_ruleDefinitionAggregation= ruleDefinitionAggregation EOF ;
    public final EObject entryRuleDefinitionAggregation() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionAggregation_StartIndex = input.index();
        EObject iv_ruleDefinitionAggregation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return current; }
            // InternalSiddhiParser.g:1403:62: (iv_ruleDefinitionAggregation= ruleDefinitionAggregation EOF )
            // InternalSiddhiParser.g:1404:2: iv_ruleDefinitionAggregation= ruleDefinitionAggregation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionAggregationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionAggregation=ruleDefinitionAggregation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionAggregation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRuleDefinitionAggregation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionAggregation"


    // $ANTLR start "ruleDefinitionAggregation"
    // InternalSiddhiParser.g:1410:1: ruleDefinitionAggregation returns [EObject current=null] : ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) ) ;
    public final EObject ruleDefinitionAggregation() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionAggregation_StartIndex = input.index();
        EObject lv_ann_1_0 = null;

        EObject this_DEFINE_2 = null;

        EObject this_AGGREGATION_3 = null;

        EObject lv_src_4_0 = null;

        EObject this_FROM_5 = null;

        EObject lv_stdStream_6_0 = null;

        EObject lv_groupByQuerySel_7_0 = null;

        EObject this_AGGREGATE_8 = null;

        EObject this_BY_9 = null;

        EObject lv_attrRef_10_0 = null;

        EObject lv_eve_11_0 = null;

        EObject lv_aggrTime_12_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return current; }
            // InternalSiddhiParser.g:1416:2: ( ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) ) )
            // InternalSiddhiParser.g:1417:2: ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) )
            {
            // InternalSiddhiParser.g:1417:2: ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) )
            // InternalSiddhiParser.g:1418:3: () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) )
            {
            // InternalSiddhiParser.g:1418:3: ()
            // InternalSiddhiParser.g:1419:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionAggregationAccess().getDefinitionAggregationAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:1425:3: ( (lv_ann_1_0= ruleAnnotation ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==CommercialAt) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalSiddhiParser.g:1426:4: (lv_ann_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:1426:4: (lv_ann_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:1427:5: lv_ann_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAnnAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann",
            	      						lv_ann_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getDEFINEParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_26);
            this_DEFINE_2=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAGGREGATIONParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_AGGREGATION_3=ruleAGGREGATION(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AGGREGATION_3;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1466:3: ( (lv_src_4_0= ruleSource1 ) )
            // InternalSiddhiParser.g:1467:4: (lv_src_4_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:1467:4: (lv_src_4_0= ruleSource1 )
            // InternalSiddhiParser.g:1468:5: lv_src_4_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getSrcSource1ParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_6);
            lv_src_4_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_4_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getFROMParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_FROM_5=ruleFROM(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FROM_5;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1496:3: ( (lv_stdStream_6_0= ruleStandardStream ) )
            // InternalSiddhiParser.g:1497:4: (lv_stdStream_6_0= ruleStandardStream )
            {
            // InternalSiddhiParser.g:1497:4: (lv_stdStream_6_0= ruleStandardStream )
            // InternalSiddhiParser.g:1498:5: lv_stdStream_6_0= ruleStandardStream
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getStdStreamStandardStreamParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_27);
            lv_stdStream_6_0=ruleStandardStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"stdStream",
              						lv_stdStream_6_0,
              						"org.xtext.example.siddhi.Siddhi.StandardStream");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1515:3: ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) )
            // InternalSiddhiParser.g:1516:4: (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection )
            {
            // InternalSiddhiParser.g:1516:4: (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection )
            // InternalSiddhiParser.g:1517:5: lv_groupByQuerySel_7_0= ruleGroupByQuerySelection
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getGroupByQuerySelGroupByQuerySelectionParserRuleCall_7_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_groupByQuerySel_7_0=ruleGroupByQuerySelection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"groupByQuerySel",
              						lv_groupByQuerySel_7_0,
              						"org.xtext.example.siddhi.Siddhi.GroupByQuerySelection");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAGGREGATEParserRuleCall_8());
              		
            }
            pushFollow(FollowSets000.FOLLOW_29);
            this_AGGREGATE_8=ruleAGGREGATE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AGGREGATE_8;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1545:3: (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==By) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalSiddhiParser.g:1546:4: this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDefinitionAggregationRule());
                      				}
                      				newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getBYParserRuleCall_9_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_BY_9=ruleBY(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BY_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:1557:4: ( (lv_attrRef_10_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:1558:5: (lv_attrRef_10_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:1558:5: (lv_attrRef_10_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:1559:6: lv_attrRef_10_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAttrRefAttributeReferenceParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    lv_attrRef_10_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
                      						}
                      						set(
                      							current,
                      							"attrRef",
                      							lv_attrRef_10_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:1577:3: ( (lv_eve_11_0= ruleEVERY ) )
            // InternalSiddhiParser.g:1578:4: (lv_eve_11_0= ruleEVERY )
            {
            // InternalSiddhiParser.g:1578:4: (lv_eve_11_0= ruleEVERY )
            // InternalSiddhiParser.g:1579:5: lv_eve_11_0= ruleEVERY
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getEveEVERYParserRuleCall_10_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_eve_11_0=ruleEVERY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"eve",
              						lv_eve_11_0,
              						"org.xtext.example.siddhi.Siddhi.EVERY");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1596:3: ( (lv_aggrTime_12_0= ruleAggregationTime ) )
            // InternalSiddhiParser.g:1597:4: (lv_aggrTime_12_0= ruleAggregationTime )
            {
            // InternalSiddhiParser.g:1597:4: (lv_aggrTime_12_0= ruleAggregationTime )
            // InternalSiddhiParser.g:1598:5: lv_aggrTime_12_0= ruleAggregationTime
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAggrTimeAggregationTimeParserRuleCall_11_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_aggrTime_12_0=ruleAggregationTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"aggrTime",
              						lv_aggrTime_12_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTime");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, ruleDefinitionAggregation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionAggregation"


    // $ANTLR start "entryRuleAggregationTime"
    // InternalSiddhiParser.g:1619:1: entryRuleAggregationTime returns [EObject current=null] : iv_ruleAggregationTime= ruleAggregationTime EOF ;
    public final EObject entryRuleAggregationTime() throws RecognitionException {
        EObject current = null;
        int entryRuleAggregationTime_StartIndex = input.index();
        EObject iv_ruleAggregationTime = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return current; }
            // InternalSiddhiParser.g:1619:56: (iv_ruleAggregationTime= ruleAggregationTime EOF )
            // InternalSiddhiParser.g:1620:2: iv_ruleAggregationTime= ruleAggregationTime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregationTimeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAggregationTime=ruleAggregationTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregationTime; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRuleAggregationTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregationTime"


    // $ANTLR start "ruleAggregationTime"
    // InternalSiddhiParser.g:1626:1: ruleAggregationTime returns [EObject current=null] : (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_aggregation_time_interval_1= ruleaggregation_time_interval ) ;
    public final EObject ruleAggregationTime() throws RecognitionException {
        EObject current = null;
        int ruleAggregationTime_StartIndex = input.index();
        EObject this_AggregationTimeRange_0 = null;

        EObject this_aggregation_time_interval_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return current; }
            // InternalSiddhiParser.g:1632:2: ( (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_aggregation_time_interval_1= ruleaggregation_time_interval ) )
            // InternalSiddhiParser.g:1633:2: (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_aggregation_time_interval_1= ruleaggregation_time_interval )
            {
            // InternalSiddhiParser.g:1633:2: (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_aggregation_time_interval_1= ruleaggregation_time_interval )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalSiddhiParser.g:1634:3: this_AggregationTimeRange_0= ruleAggregationTimeRange
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAggregationTimeAccess().getAggregationTimeRangeParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AggregationTimeRange_0=ruleAggregationTimeRange();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AggregationTimeRange_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:1643:3: this_aggregation_time_interval_1= ruleaggregation_time_interval
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAggregationTimeAccess().getAggregation_time_intervalParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_aggregation_time_interval_1=ruleaggregation_time_interval();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_aggregation_time_interval_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, ruleAggregationTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAggregationTime"


    // $ANTLR start "entryRuleaggregation_time_interval"
    // InternalSiddhiParser.g:1655:1: entryRuleaggregation_time_interval returns [EObject current=null] : iv_ruleaggregation_time_interval= ruleaggregation_time_interval EOF ;
    public final EObject entryRuleaggregation_time_interval() throws RecognitionException {
        EObject current = null;
        int entryRuleaggregation_time_interval_StartIndex = input.index();
        EObject iv_ruleaggregation_time_interval = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return current; }
            // InternalSiddhiParser.g:1655:66: (iv_ruleaggregation_time_interval= ruleaggregation_time_interval EOF )
            // InternalSiddhiParser.g:1656:2: iv_ruleaggregation_time_interval= ruleaggregation_time_interval EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregation_time_intervalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleaggregation_time_interval=ruleaggregation_time_interval();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleaggregation_time_interval; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRuleaggregation_time_interval_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleaggregation_time_interval"


    // $ANTLR start "ruleaggregation_time_interval"
    // InternalSiddhiParser.g:1662:1: ruleaggregation_time_interval returns [EObject current=null] : ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* ) ;
    public final EObject ruleaggregation_time_interval() throws RecognitionException {
        EObject current = null;
        int ruleaggregation_time_interval_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_aggrtimeDur_0_0 = null;

        EObject lv_aggrtimeDur_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return current; }
            // InternalSiddhiParser.g:1668:2: ( ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* ) )
            // InternalSiddhiParser.g:1669:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* )
            {
            // InternalSiddhiParser.g:1669:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* )
            // InternalSiddhiParser.g:1670:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )*
            {
            // InternalSiddhiParser.g:1670:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) )
            // InternalSiddhiParser.g:1671:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            {
            // InternalSiddhiParser.g:1671:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            // InternalSiddhiParser.g:1672:5: lv_aggrtimeDur_0_0= ruleAggregationTimeDuration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_aggrtimeDur_0_0=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregation_time_intervalRule());
              					}
              					add(
              						current,
              						"aggrtimeDur",
              						lv_aggrtimeDur_0_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1689:3: (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==Comma) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalSiddhiParser.g:1690:4: otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            	    {
            	    otherlv_1=(Token)match(input,Comma,FollowSets000.FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getAggregation_time_intervalAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:1694:4: ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            	    // InternalSiddhiParser.g:1695:5: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            	    {
            	    // InternalSiddhiParser.g:1695:5: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            	    // InternalSiddhiParser.g:1696:6: lv_aggrtimeDur_2_0= ruleAggregationTimeDuration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_aggrtimeDur_2_0=ruleAggregationTimeDuration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAggregation_time_intervalRule());
            	      						}
            	      						add(
            	      							current,
            	      							"aggrtimeDur",
            	      							lv_aggrtimeDur_2_0,
            	      							"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, ruleaggregation_time_interval_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleaggregation_time_interval"


    // $ANTLR start "entryRuleAggregationTimeDuration"
    // InternalSiddhiParser.g:1718:1: entryRuleAggregationTimeDuration returns [EObject current=null] : iv_ruleAggregationTimeDuration= ruleAggregationTimeDuration EOF ;
    public final EObject entryRuleAggregationTimeDuration() throws RecognitionException {
        EObject current = null;
        int entryRuleAggregationTimeDuration_StartIndex = input.index();
        EObject iv_ruleAggregationTimeDuration = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return current; }
            // InternalSiddhiParser.g:1718:64: (iv_ruleAggregationTimeDuration= ruleAggregationTimeDuration EOF )
            // InternalSiddhiParser.g:1719:2: iv_ruleAggregationTimeDuration= ruleAggregationTimeDuration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregationTimeDurationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAggregationTimeDuration=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregationTimeDuration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRuleAggregationTimeDuration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregationTimeDuration"


    // $ANTLR start "ruleAggregationTimeDuration"
    // InternalSiddhiParser.g:1725:1: ruleAggregationTimeDuration returns [EObject current=null] : (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] ) ;
    public final EObject ruleAggregationTimeDuration() throws RecognitionException {
        EObject current = null;
        int ruleAggregationTimeDuration_StartIndex = input.index();
        EObject this_SECONDS_0 = null;

        EObject this_MINUTES_1 = null;

        EObject this_HOURS_2 = null;

        EObject this_DAYS_3 = null;

        EObject this_WEEKS_4 = null;

        EObject this_MONTHS_5 = null;

        EObject this_YEARS_6 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return current; }
            // InternalSiddhiParser.g:1731:2: ( (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] ) )
            // InternalSiddhiParser.g:1732:2: (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] )
            {
            // InternalSiddhiParser.g:1732:2: (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] )
            int alt22=7;
            switch ( input.LA(1) ) {
            case Seconds:
            case Second:
            case Sec:
                {
                alt22=1;
                }
                break;
            case Minutes:
            case Minute:
            case Min:
                {
                alt22=2;
                }
                break;
            case Hours:
            case Hour:
                {
                alt22=3;
                }
                break;
            case Days:
            case Day:
                {
                alt22=4;
                }
                break;
            case Weeks:
            case Week:
                {
                alt22=5;
                }
                break;
            case Months:
            case Month:
                {
                alt22=6;
                }
                break;
            case Years:
            case Year:
                {
                alt22=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSiddhiParser.g:1733:3: this_SECONDS_0= ruleSECONDS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getSECONDSParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SECONDS_0=ruleSECONDS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SECONDS_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:1745:3: this_MINUTES_1= ruleMINUTES[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getMINUTESParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MINUTES_1=ruleMINUTES(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MINUTES_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:1757:3: this_HOURS_2= ruleHOURS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getHOURSParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HOURS_2=ruleHOURS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HOURS_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:1769:3: this_DAYS_3= ruleDAYS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getDAYSParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DAYS_3=ruleDAYS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DAYS_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:1781:3: this_WEEKS_4= ruleWEEKS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getWEEKSParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WEEKS_4=ruleWEEKS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WEEKS_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:1793:3: this_MONTHS_5= ruleMONTHS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getMONTHSParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MONTHS_5=ruleMONTHS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MONTHS_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:1805:3: this_YEARS_6= ruleYEARS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getYEARSParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_YEARS_6=ruleYEARS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_YEARS_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, ruleAggregationTimeDuration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAggregationTimeDuration"


    // $ANTLR start "entryRuleAggregationTimeRange"
    // InternalSiddhiParser.g:1820:1: entryRuleAggregationTimeRange returns [EObject current=null] : iv_ruleAggregationTimeRange= ruleAggregationTimeRange EOF ;
    public final EObject entryRuleAggregationTimeRange() throws RecognitionException {
        EObject current = null;
        int entryRuleAggregationTimeRange_StartIndex = input.index();
        EObject iv_ruleAggregationTimeRange = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return current; }
            // InternalSiddhiParser.g:1820:61: (iv_ruleAggregationTimeRange= ruleAggregationTimeRange EOF )
            // InternalSiddhiParser.g:1821:2: iv_ruleAggregationTimeRange= ruleAggregationTimeRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregationTimeRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAggregationTimeRange=ruleAggregationTimeRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregationTimeRange; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRuleAggregationTimeRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregationTimeRange"


    // $ANTLR start "ruleAggregationTimeRange"
    // InternalSiddhiParser.g:1827:1: ruleAggregationTimeRange returns [EObject current=null] : ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) ) ;
    public final EObject ruleAggregationTimeRange() throws RecognitionException {
        EObject current = null;
        int ruleAggregationTimeRange_StartIndex = input.index();
        EObject lv_aggrtimeDur_0_0 = null;

        EObject lv_aggrtimeDur_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return current; }
            // InternalSiddhiParser.g:1833:2: ( ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) ) )
            // InternalSiddhiParser.g:1834:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )
            {
            // InternalSiddhiParser.g:1834:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )
            // InternalSiddhiParser.g:1835:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            {
            // InternalSiddhiParser.g:1835:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) )
            // InternalSiddhiParser.g:1836:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            {
            // InternalSiddhiParser.g:1836:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            // InternalSiddhiParser.g:1837:5: lv_aggrtimeDur_0_0= ruleAggregationTimeDuration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_33);
            lv_aggrtimeDur_0_0=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregationTimeRangeRule());
              					}
              					add(
              						current,
              						"aggrtimeDur",
              						lv_aggrtimeDur_0_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAggregationTimeRangeAccess().getTRIPLE_DOTParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_31);
            ruleTRIPLE_DOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1861:3: ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            // InternalSiddhiParser.g:1862:4: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            {
            // InternalSiddhiParser.g:1862:4: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            // InternalSiddhiParser.g:1863:5: lv_aggrtimeDur_2_0= ruleAggregationTimeDuration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_aggrtimeDur_2_0=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregationTimeRangeRule());
              					}
              					add(
              						current,
              						"aggrtimeDur",
              						lv_aggrtimeDur_2_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, ruleAggregationTimeRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAggregationTimeRange"


    // $ANTLR start "entryRuleFunctionName"
    // InternalSiddhiParser.g:1884:1: entryRuleFunctionName returns [EObject current=null] : iv_ruleFunctionName= ruleFunctionName EOF ;
    public final EObject entryRuleFunctionName() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionName_StartIndex = input.index();
        EObject iv_ruleFunctionName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return current; }
            // InternalSiddhiParser.g:1884:53: (iv_ruleFunctionName= ruleFunctionName EOF )
            // InternalSiddhiParser.g:1885:2: iv_ruleFunctionName= ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionName=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRuleFunctionName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalSiddhiParser.g:1891:1: ruleFunctionName returns [EObject current=null] : ( (lv_id_0_0= RULE_ID ) ) ;
    public final EObject ruleFunctionName() throws RecognitionException {
        EObject current = null;
        int ruleFunctionName_StartIndex = input.index();
        Token lv_id_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return current; }
            // InternalSiddhiParser.g:1897:2: ( ( (lv_id_0_0= RULE_ID ) ) )
            // InternalSiddhiParser.g:1898:2: ( (lv_id_0_0= RULE_ID ) )
            {
            // InternalSiddhiParser.g:1898:2: ( (lv_id_0_0= RULE_ID ) )
            // InternalSiddhiParser.g:1899:3: (lv_id_0_0= RULE_ID )
            {
            // InternalSiddhiParser.g:1899:3: (lv_id_0_0= RULE_ID )
            // InternalSiddhiParser.g:1900:4: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_id_0_0, grammarAccess.getFunctionNameAccess().getIdIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFunctionNameRule());
              				}
              				setWithLastConsumed(
              					current,
              					"id",
              					lv_id_0_0,
              					"org.xtext.example.siddhi.Siddhi.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, ruleFunctionName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleLanguageName"
    // InternalSiddhiParser.g:1919:1: entryRuleLanguageName returns [EObject current=null] : iv_ruleLanguageName= ruleLanguageName EOF ;
    public final EObject entryRuleLanguageName() throws RecognitionException {
        EObject current = null;
        int entryRuleLanguageName_StartIndex = input.index();
        EObject iv_ruleLanguageName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return current; }
            // InternalSiddhiParser.g:1919:53: (iv_ruleLanguageName= ruleLanguageName EOF )
            // InternalSiddhiParser.g:1920:2: iv_ruleLanguageName= ruleLanguageName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLanguageNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLanguageName=ruleLanguageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLanguageName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRuleLanguageName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLanguageName"


    // $ANTLR start "ruleLanguageName"
    // InternalSiddhiParser.g:1926:1: ruleLanguageName returns [EObject current=null] : ( (lv_id_0_0= RULE_ID ) ) ;
    public final EObject ruleLanguageName() throws RecognitionException {
        EObject current = null;
        int ruleLanguageName_StartIndex = input.index();
        Token lv_id_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return current; }
            // InternalSiddhiParser.g:1932:2: ( ( (lv_id_0_0= RULE_ID ) ) )
            // InternalSiddhiParser.g:1933:2: ( (lv_id_0_0= RULE_ID ) )
            {
            // InternalSiddhiParser.g:1933:2: ( (lv_id_0_0= RULE_ID ) )
            // InternalSiddhiParser.g:1934:3: (lv_id_0_0= RULE_ID )
            {
            // InternalSiddhiParser.g:1934:3: (lv_id_0_0= RULE_ID )
            // InternalSiddhiParser.g:1935:4: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_id_0_0, grammarAccess.getLanguageNameAccess().getIdIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLanguageNameRule());
              				}
              				setWithLastConsumed(
              					current,
              					"id",
              					lv_id_0_0,
              					"org.xtext.example.siddhi.Siddhi.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, ruleLanguageName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLanguageName"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalSiddhiParser.g:1954:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionBody_StartIndex = input.index();
        EObject iv_ruleFunctionBody = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return current; }
            // InternalSiddhiParser.g:1954:53: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalSiddhiParser.g:1955:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRuleFunctionBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalSiddhiParser.g:1961:1: ruleFunctionBody returns [EObject current=null] : ( (lv_value_0_0= RULE_SCRIPT ) ) ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;
        int ruleFunctionBody_StartIndex = input.index();
        Token lv_value_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return current; }
            // InternalSiddhiParser.g:1967:2: ( ( (lv_value_0_0= RULE_SCRIPT ) ) )
            // InternalSiddhiParser.g:1968:2: ( (lv_value_0_0= RULE_SCRIPT ) )
            {
            // InternalSiddhiParser.g:1968:2: ( (lv_value_0_0= RULE_SCRIPT ) )
            // InternalSiddhiParser.g:1969:3: (lv_value_0_0= RULE_SCRIPT )
            {
            // InternalSiddhiParser.g:1969:3: (lv_value_0_0= RULE_SCRIPT )
            // InternalSiddhiParser.g:1970:4: lv_value_0_0= RULE_SCRIPT
            {
            lv_value_0_0=(Token)match(input,RULE_SCRIPT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFunctionBodyAccess().getValueSCRIPTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFunctionBodyRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.xtext.example.siddhi.Siddhi.SCRIPT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ruleFunctionBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleTriggerName"
    // InternalSiddhiParser.g:1989:1: entryRuleTriggerName returns [EObject current=null] : iv_ruleTriggerName= ruleTriggerName EOF ;
    public final EObject entryRuleTriggerName() throws RecognitionException {
        EObject current = null;
        int entryRuleTriggerName_StartIndex = input.index();
        EObject iv_ruleTriggerName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return current; }
            // InternalSiddhiParser.g:1989:52: (iv_ruleTriggerName= ruleTriggerName EOF )
            // InternalSiddhiParser.g:1990:2: iv_ruleTriggerName= ruleTriggerName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTriggerNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTriggerName=ruleTriggerName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTriggerName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRuleTriggerName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTriggerName"


    // $ANTLR start "ruleTriggerName"
    // InternalSiddhiParser.g:1996:1: ruleTriggerName returns [EObject current=null] : ( (lv_id_0_0= RULE_ID ) ) ;
    public final EObject ruleTriggerName() throws RecognitionException {
        EObject current = null;
        int ruleTriggerName_StartIndex = input.index();
        Token lv_id_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return current; }
            // InternalSiddhiParser.g:2002:2: ( ( (lv_id_0_0= RULE_ID ) ) )
            // InternalSiddhiParser.g:2003:2: ( (lv_id_0_0= RULE_ID ) )
            {
            // InternalSiddhiParser.g:2003:2: ( (lv_id_0_0= RULE_ID ) )
            // InternalSiddhiParser.g:2004:3: (lv_id_0_0= RULE_ID )
            {
            // InternalSiddhiParser.g:2004:3: (lv_id_0_0= RULE_ID )
            // InternalSiddhiParser.g:2005:4: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_id_0_0, grammarAccess.getTriggerNameAccess().getIdIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTriggerNameRule());
              				}
              				setWithLastConsumed(
              					current,
              					"id",
              					lv_id_0_0,
              					"org.xtext.example.siddhi.Siddhi.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, ruleTriggerName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTriggerName"


    // $ANTLR start "entryRuleAppAnnotation"
    // InternalSiddhiParser.g:2024:1: entryRuleAppAnnotation returns [EObject current=null] : iv_ruleAppAnnotation= ruleAppAnnotation EOF ;
    public final EObject entryRuleAppAnnotation() throws RecognitionException {
        EObject current = null;
        int entryRuleAppAnnotation_StartIndex = input.index();
        EObject iv_ruleAppAnnotation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return current; }
            // InternalSiddhiParser.g:2024:54: (iv_ruleAppAnnotation= ruleAppAnnotation EOF )
            // InternalSiddhiParser.g:2025:2: iv_ruleAppAnnotation= ruleAppAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppAnnotation=ruleAppAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRuleAppAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAppAnnotation"


    // $ANTLR start "ruleAppAnnotation"
    // InternalSiddhiParser.g:2031:1: ruleAppAnnotation returns [EObject current=null] : (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_na_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? ) ;
    public final EObject ruleAppAnnotation() throws RecognitionException {
        EObject current = null;
        int ruleAppAnnotation_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject this_APP_1 = null;

        EObject lv_na_3_0 = null;

        EObject lv_ann5_5_0 = null;

        EObject lv_ann5_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return current; }
            // InternalSiddhiParser.g:2037:2: ( (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_na_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? ) )
            // InternalSiddhiParser.g:2038:2: (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_na_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? )
            {
            // InternalSiddhiParser.g:2038:2: (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_na_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? )
            // InternalSiddhiParser.g:2039:3: otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_na_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )?
            {
            otherlv_0=(Token)match(input,CommercialAt,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAppAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAppAnnotationAccess().getAPPParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_35);
            this_APP_1=ruleAPP();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_APP_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAppAnnotationAccess().getColonKeyword_2());
              		
            }
            // InternalSiddhiParser.g:2055:3: ( (lv_na_3_0= ruleName ) )
            // InternalSiddhiParser.g:2056:4: (lv_na_3_0= ruleName )
            {
            // InternalSiddhiParser.g:2056:4: (lv_na_3_0= ruleName )
            // InternalSiddhiParser.g:2057:5: lv_na_3_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAppAnnotationAccess().getNaNameParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_na_3_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAppAnnotationRule());
              					}
              					set(
              						current,
              						"na",
              						lv_na_3_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2074:3: ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==LeftParenthesis) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalSiddhiParser.g:2075:4: ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAppAnnotationAccess().getOPEN_PARParserRuleCall_4_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:2082:4: ( (lv_ann5_5_0= ruleAnnotationElement ) )
                    // InternalSiddhiParser.g:2083:5: (lv_ann5_5_0= ruleAnnotationElement )
                    {
                    // InternalSiddhiParser.g:2083:5: (lv_ann5_5_0= ruleAnnotationElement )
                    // InternalSiddhiParser.g:2084:6: lv_ann5_5_0= ruleAnnotationElement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_ann5_5_0=ruleAnnotationElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAppAnnotationRule());
                      						}
                      						add(
                      							current,
                      							"ann5",
                      							lv_ann5_5_0,
                      							"org.xtext.example.siddhi.Siddhi.AnnotationElement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:2101:4: (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==Comma) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:2102:5: otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAppAnnotationAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSiddhiParser.g:2106:5: ( (lv_ann5_7_0= ruleAnnotationElement ) )
                    	    // InternalSiddhiParser.g:2107:6: (lv_ann5_7_0= ruleAnnotationElement )
                    	    {
                    	    // InternalSiddhiParser.g:2107:6: (lv_ann5_7_0= ruleAnnotationElement )
                    	    // InternalSiddhiParser.g:2108:7: lv_ann5_7_0= ruleAnnotationElement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_11);
                    	    lv_ann5_7_0=ruleAnnotationElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAppAnnotationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ann5",
                    	      								lv_ann5_7_0,
                    	      								"org.xtext.example.siddhi.Siddhi.AnnotationElement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAppAnnotationAccess().getCLOSE_PARParserRuleCall_4_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, ruleAppAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAppAnnotation"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSiddhiParser.g:2138:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;
        int entryRuleAnnotation_StartIndex = input.index();
        EObject iv_ruleAnnotation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return current; }
            // InternalSiddhiParser.g:2138:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSiddhiParser.g:2139:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRuleAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSiddhiParser.g:2145:1: ruleAnnotation returns [EObject current=null] : (otherlv_0= CommercialAt ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;
        int ruleAnnotation_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_5=null;
        EObject lv_na_1_0 = null;

        EObject lv_annElement_3_0 = null;

        EObject lv_ann_4_0 = null;

        EObject lv_annElement_6_0 = null;

        EObject lv_ann_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return current; }
            // InternalSiddhiParser.g:2151:2: ( (otherlv_0= CommercialAt ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) ) )
            // InternalSiddhiParser.g:2152:2: (otherlv_0= CommercialAt ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) )
            {
            // InternalSiddhiParser.g:2152:2: (otherlv_0= CommercialAt ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:2153:3: otherlv_0= CommercialAt ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR )
            {
            otherlv_0=(Token)match(input,CommercialAt,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSiddhiParser.g:2157:3: ( (lv_na_1_0= ruleName ) )
            // InternalSiddhiParser.g:2158:4: (lv_na_1_0= ruleName )
            {
            // InternalSiddhiParser.g:2158:4: (lv_na_1_0= ruleName )
            // InternalSiddhiParser.g:2159:5: lv_na_1_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotationAccess().getNaNameParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_na_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotationRule());
              					}
              					set(
              						current,
              						"na",
              						lv_na_1_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2176:3: ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR )
            // InternalSiddhiParser.g:2177:4: ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getOPEN_PARParserRuleCall_2_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_38);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }
            // InternalSiddhiParser.g:2184:4: ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_ID||LA25_0==RULE_STRING) ) {
                alt25=1;
            }
            else if ( (LA25_0==CommercialAt) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSiddhiParser.g:2185:5: ( (lv_annElement_3_0= ruleAnnotationElement ) )
                    {
                    // InternalSiddhiParser.g:2185:5: ( (lv_annElement_3_0= ruleAnnotationElement ) )
                    // InternalSiddhiParser.g:2186:6: (lv_annElement_3_0= ruleAnnotationElement )
                    {
                    // InternalSiddhiParser.g:2186:6: (lv_annElement_3_0= ruleAnnotationElement )
                    // InternalSiddhiParser.g:2187:7: lv_annElement_3_0= ruleAnnotationElement
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_annElement_3_0=ruleAnnotationElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAnnotationRule());
                      							}
                      							add(
                      								current,
                      								"annElement",
                      								lv_annElement_3_0,
                      								"org.xtext.example.siddhi.Siddhi.AnnotationElement");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:2205:5: ( (lv_ann_4_0= ruleAnnotation ) )
                    {
                    // InternalSiddhiParser.g:2205:5: ( (lv_ann_4_0= ruleAnnotation ) )
                    // InternalSiddhiParser.g:2206:6: (lv_ann_4_0= ruleAnnotation )
                    {
                    // InternalSiddhiParser.g:2206:6: (lv_ann_4_0= ruleAnnotation )
                    // InternalSiddhiParser.g:2207:7: lv_ann_4_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_ann_4_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAnnotationRule());
                      							}
                      							add(
                      								current,
                      								"ann",
                      								lv_ann_4_0,
                      								"org.xtext.example.siddhi.Siddhi.Annotation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:2225:4: (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==Comma) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalSiddhiParser.g:2226:5: otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) )
            	    {
            	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_5, grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalSiddhiParser.g:2230:5: ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) )
            	    int alt26=2;
            	    int LA26_0 = input.LA(1);

            	    if ( (LA26_0==RULE_ID||LA26_0==RULE_STRING) ) {
            	        alt26=1;
            	    }
            	    else if ( (LA26_0==CommercialAt) ) {
            	        alt26=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 26, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt26) {
            	        case 1 :
            	            // InternalSiddhiParser.g:2231:6: ( (lv_annElement_6_0= ruleAnnotationElement ) )
            	            {
            	            // InternalSiddhiParser.g:2231:6: ( (lv_annElement_6_0= ruleAnnotationElement ) )
            	            // InternalSiddhiParser.g:2232:7: (lv_annElement_6_0= ruleAnnotationElement )
            	            {
            	            // InternalSiddhiParser.g:2232:7: (lv_annElement_6_0= ruleAnnotationElement )
            	            // InternalSiddhiParser.g:2233:8: lv_annElement_6_0= ruleAnnotationElement
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_2_1_0_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_11);
            	            lv_annElement_6_0=ruleAnnotationElement();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAnnotationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"annElement",
            	              									lv_annElement_6_0,
            	              									"org.xtext.example.siddhi.Siddhi.AnnotationElement");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:2251:6: ( (lv_ann_7_0= ruleAnnotation ) )
            	            {
            	            // InternalSiddhiParser.g:2251:6: ( (lv_ann_7_0= ruleAnnotation ) )
            	            // InternalSiddhiParser.g:2252:7: (lv_ann_7_0= ruleAnnotation )
            	            {
            	            // InternalSiddhiParser.g:2252:7: (lv_ann_7_0= ruleAnnotation )
            	            // InternalSiddhiParser.g:2253:8: lv_ann_7_0= ruleAnnotation
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_2_1_1_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_11);
            	            lv_ann_7_0=ruleAnnotation();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAnnotationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"ann",
            	              									lv_ann_7_0,
            	              									"org.xtext.example.siddhi.Siddhi.Annotation");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getCLOSE_PARParserRuleCall_2_3());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, ruleAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleAnnotationElement"
    // InternalSiddhiParser.g:2284:1: entryRuleAnnotationElement returns [EObject current=null] : iv_ruleAnnotationElement= ruleAnnotationElement EOF ;
    public final EObject entryRuleAnnotationElement() throws RecognitionException {
        EObject current = null;
        int entryRuleAnnotationElement_StartIndex = input.index();
        EObject iv_ruleAnnotationElement = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return current; }
            // InternalSiddhiParser.g:2284:58: (iv_ruleAnnotationElement= ruleAnnotationElement EOF )
            // InternalSiddhiParser.g:2285:2: iv_ruleAnnotationElement= ruleAnnotationElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationElementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotationElement=ruleAnnotationElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationElement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRuleAnnotationElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationElement"


    // $ANTLR start "ruleAnnotationElement"
    // InternalSiddhiParser.g:2291:1: ruleAnnotationElement returns [EObject current=null] : ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) ) ;
    public final EObject ruleAnnotationElement() throws RecognitionException {
        EObject current = null;
        int ruleAnnotationElement_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_propName_0_0 = null;

        EObject lv_propVal_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return current; }
            // InternalSiddhiParser.g:2297:2: ( ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) ) )
            // InternalSiddhiParser.g:2298:2: ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) )
            {
            // InternalSiddhiParser.g:2298:2: ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) )
            // InternalSiddhiParser.g:2299:3: ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) )
            {
            // InternalSiddhiParser.g:2299:3: ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_ID) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalSiddhiParser.g:2300:4: ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign
                    {
                    // InternalSiddhiParser.g:2300:4: ( (lv_propName_0_0= rulePropertyName ) )
                    // InternalSiddhiParser.g:2301:5: (lv_propName_0_0= rulePropertyName )
                    {
                    // InternalSiddhiParser.g:2301:5: (lv_propName_0_0= rulePropertyName )
                    // InternalSiddhiParser.g:2302:6: lv_propName_0_0= rulePropertyName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotationElementAccess().getPropNamePropertyNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_propName_0_0=rulePropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotationElementRule());
                      						}
                      						set(
                      							current,
                      							"propName",
                      							lv_propName_0_0,
                      							"org.xtext.example.siddhi.Siddhi.PropertyName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:2324:3: ( (lv_propVal_2_0= rulePropertyValue ) )
            // InternalSiddhiParser.g:2325:4: (lv_propVal_2_0= rulePropertyValue )
            {
            // InternalSiddhiParser.g:2325:4: (lv_propVal_2_0= rulePropertyValue )
            // InternalSiddhiParser.g:2326:5: lv_propVal_2_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotationElementAccess().getPropValPropertyValueParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_propVal_2_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotationElementRule());
              					}
              					set(
              						current,
              						"propVal",
              						lv_propVal_2_0,
              						"org.xtext.example.siddhi.Siddhi.PropertyValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, ruleAnnotationElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationElement"


    // $ANTLR start "entryRulePropertyValue"
    // InternalSiddhiParser.g:2347:1: entryRulePropertyValue returns [EObject current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final EObject entryRulePropertyValue() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyValue_StartIndex = input.index();
        EObject iv_rulePropertyValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return current; }
            // InternalSiddhiParser.g:2347:54: (iv_rulePropertyValue= rulePropertyValue EOF )
            // InternalSiddhiParser.g:2348:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePropertyValue=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRulePropertyValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyValue"


    // $ANTLR start "rulePropertyValue"
    // InternalSiddhiParser.g:2354:1: rulePropertyValue returns [EObject current=null] : ( (lv_sv_0_0= ruleStringValue ) ) ;
    public final EObject rulePropertyValue() throws RecognitionException {
        EObject current = null;
        int rulePropertyValue_StartIndex = input.index();
        EObject lv_sv_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return current; }
            // InternalSiddhiParser.g:2360:2: ( ( (lv_sv_0_0= ruleStringValue ) ) )
            // InternalSiddhiParser.g:2361:2: ( (lv_sv_0_0= ruleStringValue ) )
            {
            // InternalSiddhiParser.g:2361:2: ( (lv_sv_0_0= ruleStringValue ) )
            // InternalSiddhiParser.g:2362:3: (lv_sv_0_0= ruleStringValue )
            {
            // InternalSiddhiParser.g:2362:3: (lv_sv_0_0= ruleStringValue )
            // InternalSiddhiParser.g:2363:4: lv_sv_0_0= ruleStringValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPropertyValueAccess().getSvStringValueParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_sv_0_0=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPropertyValueRule());
              				}
              				set(
              					current,
              					"sv",
              					lv_sv_0_0,
              					"org.xtext.example.siddhi.Siddhi.StringValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, rulePropertyValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePropertyValue"


    // $ANTLR start "entryRulePropertyName"
    // InternalSiddhiParser.g:2383:1: entryRulePropertyName returns [EObject current=null] : iv_rulePropertyName= rulePropertyName EOF ;
    public final EObject entryRulePropertyName() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyName_StartIndex = input.index();
        EObject iv_rulePropertyName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return current; }
            // InternalSiddhiParser.g:2383:53: (iv_rulePropertyName= rulePropertyName EOF )
            // InternalSiddhiParser.g:2384:2: iv_rulePropertyName= rulePropertyName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePropertyName=rulePropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRulePropertyName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyName"


    // $ANTLR start "rulePropertyName"
    // InternalSiddhiParser.g:2390:1: rulePropertyName returns [EObject current=null] : ( () ( (lv_na_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_na_3_0= ruleName ) ) )* ) ;
    public final EObject rulePropertyName() throws RecognitionException {
        EObject current = null;
        int rulePropertyName_StartIndex = input.index();
        EObject lv_na_1_0 = null;

        EObject lv_ps_2_0 = null;

        EObject lv_na_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return current; }
            // InternalSiddhiParser.g:2396:2: ( ( () ( (lv_na_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_na_3_0= ruleName ) ) )* ) )
            // InternalSiddhiParser.g:2397:2: ( () ( (lv_na_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_na_3_0= ruleName ) ) )* )
            {
            // InternalSiddhiParser.g:2397:2: ( () ( (lv_na_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_na_3_0= ruleName ) ) )* )
            // InternalSiddhiParser.g:2398:3: () ( (lv_na_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_na_3_0= ruleName ) ) )*
            {
            // InternalSiddhiParser.g:2398:3: ()
            // InternalSiddhiParser.g:2399:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPropertyNameAccess().getPropertyNameAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:2405:3: ( (lv_na_1_0= ruleName ) )
            // InternalSiddhiParser.g:2406:4: (lv_na_1_0= ruleName )
            {
            // InternalSiddhiParser.g:2406:4: (lv_na_1_0= ruleName )
            // InternalSiddhiParser.g:2407:5: lv_na_1_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPropertyNameAccess().getNaNameParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_40);
            lv_na_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPropertyNameRule());
              					}
              					add(
              						current,
              						"na",
              						lv_na_1_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2424:3: ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_na_3_0= ruleName ) ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( ((LA29_0>=HyphenMinus && LA29_0<=FullStop)||LA29_0==Colon) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalSiddhiParser.g:2425:4: ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_na_3_0= ruleName ) )
            	    {
            	    // InternalSiddhiParser.g:2425:4: ( (lv_ps_2_0= rulePropertySeparator ) )
            	    // InternalSiddhiParser.g:2426:5: (lv_ps_2_0= rulePropertySeparator )
            	    {
            	    // InternalSiddhiParser.g:2426:5: (lv_ps_2_0= rulePropertySeparator )
            	    // InternalSiddhiParser.g:2427:6: lv_ps_2_0= rulePropertySeparator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPropertyNameAccess().getPsPropertySeparatorParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_ps_2_0=rulePropertySeparator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPropertyNameRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ps",
            	      							lv_ps_2_0,
            	      							"org.xtext.example.siddhi.Siddhi.PropertySeparator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:2444:4: ( (lv_na_3_0= ruleName ) )
            	    // InternalSiddhiParser.g:2445:5: (lv_na_3_0= ruleName )
            	    {
            	    // InternalSiddhiParser.g:2445:5: (lv_na_3_0= ruleName )
            	    // InternalSiddhiParser.g:2446:6: lv_na_3_0= ruleName
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPropertyNameAccess().getNaNameParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_40);
            	    lv_na_3_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPropertyNameRule());
            	      						}
            	      						add(
            	      							current,
            	      							"na",
            	      							lv_na_3_0,
            	      							"org.xtext.example.siddhi.Siddhi.Name");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, rulePropertyName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePropertyName"


    // $ANTLR start "entryRulePropertySeparator"
    // InternalSiddhiParser.g:2468:1: entryRulePropertySeparator returns [EObject current=null] : iv_rulePropertySeparator= rulePropertySeparator EOF ;
    public final EObject entryRulePropertySeparator() throws RecognitionException {
        EObject current = null;
        int entryRulePropertySeparator_StartIndex = input.index();
        EObject iv_rulePropertySeparator = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return current; }
            // InternalSiddhiParser.g:2468:58: (iv_rulePropertySeparator= rulePropertySeparator EOF )
            // InternalSiddhiParser.g:2469:2: iv_rulePropertySeparator= rulePropertySeparator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertySeparatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePropertySeparator=rulePropertySeparator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertySeparator; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRulePropertySeparator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePropertySeparator"


    // $ANTLR start "rulePropertySeparator"
    // InternalSiddhiParser.g:2475:1: rulePropertySeparator returns [EObject current=null] : ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) ) ;
    public final EObject rulePropertySeparator() throws RecognitionException {
        EObject current = null;
        int rulePropertySeparator_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return current; }
            // InternalSiddhiParser.g:2481:2: ( ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) ) )
            // InternalSiddhiParser.g:2482:2: ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) )
            {
            // InternalSiddhiParser.g:2482:2: ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) )
            int alt30=3;
            switch ( input.LA(1) ) {
            case FullStop:
                {
                alt30=1;
                }
                break;
            case HyphenMinus:
                {
                alt30=2;
                }
                break;
            case Colon:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalSiddhiParser.g:2483:3: ( () ruleDOT )
                    {
                    // InternalSiddhiParser.g:2483:3: ( () ruleDOT )
                    // InternalSiddhiParser.g:2484:4: () ruleDOT
                    {
                    // InternalSiddhiParser.g:2484:4: ()
                    // InternalSiddhiParser.g:2485:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertySeparatorAccess().getDOTParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:2500:3: ( () ruleMINUS )
                    {
                    // InternalSiddhiParser.g:2500:3: ( () ruleMINUS )
                    // InternalSiddhiParser.g:2501:4: () ruleMINUS
                    {
                    // InternalSiddhiParser.g:2501:4: ()
                    // InternalSiddhiParser.g:2502:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertySeparatorAccess().getMINUSParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMINUS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:2517:3: ( () ruleCOL )
                    {
                    // InternalSiddhiParser.g:2517:3: ( () ruleCOL )
                    // InternalSiddhiParser.g:2518:4: () ruleCOL
                    {
                    // InternalSiddhiParser.g:2518:4: ()
                    // InternalSiddhiParser.g:2519:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertySeparatorAccess().getCOLParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCOL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, rulePropertySeparator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePropertySeparator"


    // $ANTLR start "entryRuleFeatures"
    // InternalSiddhiParser.g:2537:1: entryRuleFeatures returns [EObject current=null] : iv_ruleFeatures= ruleFeatures EOF ;
    public final EObject entryRuleFeatures() throws RecognitionException {
        EObject current = null;
        int entryRuleFeatures_StartIndex = input.index();
        EObject iv_ruleFeatures = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return current; }
            // InternalSiddhiParser.g:2537:49: (iv_ruleFeatures= ruleFeatures EOF )
            // InternalSiddhiParser.g:2538:2: iv_ruleFeatures= ruleFeatures EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeaturesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFeatures=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatures; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRuleFeatures_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatures"


    // $ANTLR start "ruleFeatures"
    // InternalSiddhiParser.g:2544:1: ruleFeatures returns [EObject current=null] : ( ( (lv_name_0_0= ruleIdNew ) ) ( (lv_type_1_0= ruleAttributeType ) ) ) ;
    public final EObject ruleFeatures() throws RecognitionException {
        EObject current = null;
        int ruleFeatures_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return current; }
            // InternalSiddhiParser.g:2550:2: ( ( ( (lv_name_0_0= ruleIdNew ) ) ( (lv_type_1_0= ruleAttributeType ) ) ) )
            // InternalSiddhiParser.g:2551:2: ( ( (lv_name_0_0= ruleIdNew ) ) ( (lv_type_1_0= ruleAttributeType ) ) )
            {
            // InternalSiddhiParser.g:2551:2: ( ( (lv_name_0_0= ruleIdNew ) ) ( (lv_type_1_0= ruleAttributeType ) ) )
            // InternalSiddhiParser.g:2552:3: ( (lv_name_0_0= ruleIdNew ) ) ( (lv_type_1_0= ruleAttributeType ) )
            {
            // InternalSiddhiParser.g:2552:3: ( (lv_name_0_0= ruleIdNew ) )
            // InternalSiddhiParser.g:2553:4: (lv_name_0_0= ruleIdNew )
            {
            // InternalSiddhiParser.g:2553:4: (lv_name_0_0= ruleIdNew )
            // InternalSiddhiParser.g:2554:5: lv_name_0_0= ruleIdNew
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeaturesAccess().getNameIdNewParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_24);
            lv_name_0_0=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeaturesRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.xtext.example.siddhi.Siddhi.IdNew");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2571:3: ( (lv_type_1_0= ruleAttributeType ) )
            // InternalSiddhiParser.g:2572:4: (lv_type_1_0= ruleAttributeType )
            {
            // InternalSiddhiParser.g:2572:4: (lv_type_1_0= ruleAttributeType )
            // InternalSiddhiParser.g:2573:5: lv_type_1_0= ruleAttributeType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeaturesAccess().getTypeAttributeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_type_1_0=ruleAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeaturesRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.example.siddhi.Siddhi.AttributeType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, ruleFeatures_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFeatures"


    // $ANTLR start "entryRuleAttributeType"
    // InternalSiddhiParser.g:2594:1: entryRuleAttributeType returns [EObject current=null] : iv_ruleAttributeType= ruleAttributeType EOF ;
    public final EObject entryRuleAttributeType() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeType_StartIndex = input.index();
        EObject iv_ruleAttributeType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return current; }
            // InternalSiddhiParser.g:2594:54: (iv_ruleAttributeType= ruleAttributeType EOF )
            // InternalSiddhiParser.g:2595:2: iv_ruleAttributeType= ruleAttributeType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeType=ruleAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeType; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRuleAttributeType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeType"


    // $ANTLR start "ruleAttributeType"
    // InternalSiddhiParser.g:2601:1: ruleAttributeType returns [EObject current=null] : ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) ) ;
    public final EObject ruleAttributeType() throws RecognitionException {
        EObject current = null;
        int ruleAttributeType_StartIndex = input.index();
        EObject this_STRINGS_1 = null;

        EObject this_INTS_3 = null;

        EObject this_LONG_5 = null;

        EObject this_FLOAT_7 = null;

        EObject this_DOUBLE_9 = null;

        EObject this_BOOL_11 = null;

        EObject this_OBJECT_13 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return current; }
            // InternalSiddhiParser.g:2607:2: ( ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) ) )
            // InternalSiddhiParser.g:2608:2: ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) )
            {
            // InternalSiddhiParser.g:2608:2: ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) )
            int alt31=7;
            switch ( input.LA(1) ) {
            case String:
                {
                alt31=1;
                }
                break;
            case Int:
                {
                alt31=2;
                }
                break;
            case Long:
                {
                alt31=3;
                }
                break;
            case Float:
                {
                alt31=4;
                }
                break;
            case Double:
                {
                alt31=5;
                }
                break;
            case Bool:
                {
                alt31=6;
                }
                break;
            case Object:
                {
                alt31=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalSiddhiParser.g:2609:3: ( () this_STRINGS_1= ruleSTRINGS[$current] )
                    {
                    // InternalSiddhiParser.g:2609:3: ( () this_STRINGS_1= ruleSTRINGS[$current] )
                    // InternalSiddhiParser.g:2610:4: () this_STRINGS_1= ruleSTRINGS[$current]
                    {
                    // InternalSiddhiParser.g:2610:4: ()
                    // InternalSiddhiParser.g:2611:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getSTRINGSParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_STRINGS_1=ruleSTRINGS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_STRINGS_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:2630:3: ( () this_INTS_3= ruleINTS[$current] )
                    {
                    // InternalSiddhiParser.g:2630:3: ( () this_INTS_3= ruleINTS[$current] )
                    // InternalSiddhiParser.g:2631:4: () this_INTS_3= ruleINTS[$current]
                    {
                    // InternalSiddhiParser.g:2631:4: ()
                    // InternalSiddhiParser.g:2632:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getINTSParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_INTS_3=ruleINTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INTS_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:2651:3: ( () this_LONG_5= ruleLONG[$current] )
                    {
                    // InternalSiddhiParser.g:2651:3: ( () this_LONG_5= ruleLONG[$current] )
                    // InternalSiddhiParser.g:2652:4: () this_LONG_5= ruleLONG[$current]
                    {
                    // InternalSiddhiParser.g:2652:4: ()
                    // InternalSiddhiParser.g:2653:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getLONGParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LONG_5=ruleLONG(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LONG_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:2672:3: ( () this_FLOAT_7= ruleFLOAT[$current] )
                    {
                    // InternalSiddhiParser.g:2672:3: ( () this_FLOAT_7= ruleFLOAT[$current] )
                    // InternalSiddhiParser.g:2673:4: () this_FLOAT_7= ruleFLOAT[$current]
                    {
                    // InternalSiddhiParser.g:2673:4: ()
                    // InternalSiddhiParser.g:2674:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_3_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getFLOATParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FLOAT_7=ruleFLOAT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FLOAT_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:2693:3: ( () this_DOUBLE_9= ruleDOUBLE[$current] )
                    {
                    // InternalSiddhiParser.g:2693:3: ( () this_DOUBLE_9= ruleDOUBLE[$current] )
                    // InternalSiddhiParser.g:2694:4: () this_DOUBLE_9= ruleDOUBLE[$current]
                    {
                    // InternalSiddhiParser.g:2694:4: ()
                    // InternalSiddhiParser.g:2695:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_4_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getDOUBLEParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DOUBLE_9=ruleDOUBLE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DOUBLE_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:2714:3: ( () this_BOOL_11= ruleBOOL[$current] )
                    {
                    // InternalSiddhiParser.g:2714:3: ( () this_BOOL_11= ruleBOOL[$current] )
                    // InternalSiddhiParser.g:2715:4: () this_BOOL_11= ruleBOOL[$current]
                    {
                    // InternalSiddhiParser.g:2715:4: ()
                    // InternalSiddhiParser.g:2716:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_5_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getBOOLParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BOOL_11=ruleBOOL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BOOL_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:2735:3: ( () this_OBJECT_13= ruleOBJECT[$current] )
                    {
                    // InternalSiddhiParser.g:2735:3: ( () this_OBJECT_13= ruleOBJECT[$current] )
                    // InternalSiddhiParser.g:2736:4: () this_OBJECT_13= ruleOBJECT[$current]
                    {
                    // InternalSiddhiParser.g:2736:4: ()
                    // InternalSiddhiParser.g:2737:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_6_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getOBJECTParserRuleCall_6_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OBJECT_13=ruleOBJECT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OBJECT_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, ruleAttributeType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeType"


    // $ANTLR start "entryRuleExecPartition"
    // InternalSiddhiParser.g:2759:1: entryRuleExecPartition returns [EObject current=null] : iv_ruleExecPartition= ruleExecPartition EOF ;
    public final EObject entryRuleExecPartition() throws RecognitionException {
        EObject current = null;
        int entryRuleExecPartition_StartIndex = input.index();
        EObject iv_ruleExecPartition = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return current; }
            // InternalSiddhiParser.g:2759:54: (iv_ruleExecPartition= ruleExecPartition EOF )
            // InternalSiddhiParser.g:2760:2: iv_ruleExecPartition= ruleExecPartition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecPartitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExecPartition=ruleExecPartition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecPartition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRuleExecPartition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExecPartition"


    // $ANTLR start "ruleExecPartition"
    // InternalSiddhiParser.g:2766:1: ruleExecPartition returns [EObject current=null] : ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] ) ;
    public final EObject ruleExecPartition() throws RecognitionException {
        EObject current = null;
        int ruleExecPartition_StartIndex = input.index();
        Token otherlv_5=null;
        Token otherlv_11=null;
        EObject lv_ann4_0_0 = null;

        EObject this_PARTITION_1 = null;

        EObject this_WITH_2 = null;

        EObject lv_partWithStream_4_0 = null;

        EObject lv_partWithStream_6_0 = null;

        EObject this_BEGIN_8 = null;

        EObject lv_qu_9_0 = null;

        EObject lv_qu_10_0 = null;

        EObject this_END_12 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return current; }
            // InternalSiddhiParser.g:2772:2: ( ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] ) )
            // InternalSiddhiParser.g:2773:2: ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] )
            {
            // InternalSiddhiParser.g:2773:2: ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] )
            // InternalSiddhiParser.g:2774:3: ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current]
            {
            // InternalSiddhiParser.g:2774:3: ( (lv_ann4_0_0= ruleAnnotation ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==CommercialAt) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalSiddhiParser.g:2775:4: (lv_ann4_0_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:2775:4: (lv_ann4_0_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:2776:5: lv_ann4_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecPartitionAccess().getAnn4AnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_ann4_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann4",
            	      						lv_ann4_0_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getPARTITIONParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_42);
            this_PARTITION_1=rulePARTITION(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PARTITION_1;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getWITHParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_10);
            this_WITH_2=ruleWITH(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WITH_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExecPartitionAccess().getOPEN_PARParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_43);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:2822:3: ( (lv_partWithStream_4_0= rulePartitionWithStream ) )
            // InternalSiddhiParser.g:2823:4: (lv_partWithStream_4_0= rulePartitionWithStream )
            {
            // InternalSiddhiParser.g:2823:4: (lv_partWithStream_4_0= rulePartitionWithStream )
            // InternalSiddhiParser.g:2824:5: lv_partWithStream_4_0= rulePartitionWithStream
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_partWithStream_4_0=rulePartitionWithStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
              					}
              					add(
              						current,
              						"partWithStream",
              						lv_partWithStream_4_0,
              						"org.xtext.example.siddhi.Siddhi.PartitionWithStream");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2841:3: (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==Comma) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalSiddhiParser.g:2842:4: otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) )
            	    {
            	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getExecPartitionAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:2846:4: ( (lv_partWithStream_6_0= rulePartitionWithStream ) )
            	    // InternalSiddhiParser.g:2847:5: (lv_partWithStream_6_0= rulePartitionWithStream )
            	    {
            	    // InternalSiddhiParser.g:2847:5: (lv_partWithStream_6_0= rulePartitionWithStream )
            	    // InternalSiddhiParser.g:2848:6: lv_partWithStream_6_0= rulePartitionWithStream
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_partWithStream_6_0=rulePartitionWithStream();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExecPartitionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"partWithStream",
            	      							lv_partWithStream_6_0,
            	      							"org.xtext.example.siddhi.Siddhi.PartitionWithStream");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExecPartitionAccess().getCLOSE_PARParserRuleCall_6());
              		
            }
            pushFollow(FollowSets000.FOLLOW_44);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getBEGINParserRuleCall_7());
              		
            }
            pushFollow(FollowSets000.FOLLOW_6);
            this_BEGIN_8=ruleBEGIN(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BEGIN_8;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:2884:3: ( (lv_qu_9_0= ruleQuery ) )
            // InternalSiddhiParser.g:2885:4: (lv_qu_9_0= ruleQuery )
            {
            // InternalSiddhiParser.g:2885:4: (lv_qu_9_0= ruleQuery )
            // InternalSiddhiParser.g:2886:5: lv_qu_9_0= ruleQuery
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_45);
            lv_qu_9_0=ruleQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
              					}
              					add(
              						current,
              						"qu",
              						lv_qu_9_0,
              						"org.xtext.example.siddhi.Siddhi.Query");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2903:3: ( (lv_qu_10_0= ruleQuery ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==From||LA34_0==CommercialAt) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSiddhiParser.g:2904:4: (lv_qu_10_0= ruleQuery )
            	    {
            	    // InternalSiddhiParser.g:2904:4: (lv_qu_10_0= ruleQuery )
            	    // InternalSiddhiParser.g:2905:5: lv_qu_10_0= ruleQuery
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    lv_qu_10_0=ruleQuery();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"qu",
            	      						lv_qu_10_0,
            	      						"org.xtext.example.siddhi.Siddhi.Query");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            // InternalSiddhiParser.g:2922:3: (otherlv_11= Semicolon )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==Semicolon) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSiddhiParser.g:2923:4: otherlv_11= Semicolon
                    {
                    otherlv_11=(Token)match(input,Semicolon,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getExecPartitionAccess().getSemicolonKeyword_10());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getENDParserRuleCall_11());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_END_12=ruleEND(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_END_12;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, ruleExecPartition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExecPartition"


    // $ANTLR start "entryRulePartitionWithStream"
    // InternalSiddhiParser.g:2943:1: entryRulePartitionWithStream returns [EObject current=null] : iv_rulePartitionWithStream= rulePartitionWithStream EOF ;
    public final EObject entryRulePartitionWithStream() throws RecognitionException {
        EObject current = null;
        int entryRulePartitionWithStream_StartIndex = input.index();
        EObject iv_rulePartitionWithStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return current; }
            // InternalSiddhiParser.g:2943:60: (iv_rulePartitionWithStream= rulePartitionWithStream EOF )
            // InternalSiddhiParser.g:2944:2: iv_rulePartitionWithStream= rulePartitionWithStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPartitionWithStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePartitionWithStream=rulePartitionWithStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePartitionWithStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRulePartitionWithStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePartitionWithStream"


    // $ANTLR start "rulePartitionWithStream"
    // InternalSiddhiParser.g:2950:1: rulePartitionWithStream returns [EObject current=null] : (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) ) ;
    public final EObject rulePartitionWithStream() throws RecognitionException {
        EObject current = null;
        int rulePartitionWithStream_StartIndex = input.index();
        EObject this_ConditionRanges_0 = null;

        EObject lv_of_1_0 = null;

        EObject lv_str_id2_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return current; }
            // InternalSiddhiParser.g:2956:2: ( (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) ) )
            // InternalSiddhiParser.g:2957:2: (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) )
            {
            // InternalSiddhiParser.g:2957:2: (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) )
            // InternalSiddhiParser.g:2958:3: this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPartitionWithStreamAccess().getConditionRangesParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_46);
            this_ConditionRanges_0=ruleConditionRanges();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConditionRanges_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:2966:3: ( (lv_of_1_0= ruleOF ) )
            // InternalSiddhiParser.g:2967:4: (lv_of_1_0= ruleOF )
            {
            // InternalSiddhiParser.g:2967:4: (lv_of_1_0= ruleOF )
            // InternalSiddhiParser.g:2968:5: lv_of_1_0= ruleOF
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPartitionWithStreamAccess().getOfOFParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_of_1_0=ruleOF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPartitionWithStreamRule());
              					}
              					set(
              						current,
              						"of",
              						lv_of_1_0,
              						"org.xtext.example.siddhi.Siddhi.OF");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2985:3: ( (lv_str_id2_2_0= ruleSource ) )
            // InternalSiddhiParser.g:2986:4: (lv_str_id2_2_0= ruleSource )
            {
            // InternalSiddhiParser.g:2986:4: (lv_str_id2_2_0= ruleSource )
            // InternalSiddhiParser.g:2987:5: lv_str_id2_2_0= ruleSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPartitionWithStreamAccess().getStr_id2SourceParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_str_id2_2_0=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPartitionWithStreamRule());
              					}
              					set(
              						current,
              						"str_id2",
              						lv_str_id2_2_0,
              						"org.xtext.example.siddhi.Siddhi.Source");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, rulePartitionWithStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePartitionWithStream"


    // $ANTLR start "entryRuleConditionRanges"
    // InternalSiddhiParser.g:3008:1: entryRuleConditionRanges returns [EObject current=null] : iv_ruleConditionRanges= ruleConditionRanges EOF ;
    public final EObject entryRuleConditionRanges() throws RecognitionException {
        EObject current = null;
        int entryRuleConditionRanges_StartIndex = input.index();
        EObject iv_ruleConditionRanges = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return current; }
            // InternalSiddhiParser.g:3008:56: (iv_ruleConditionRanges= ruleConditionRanges EOF )
            // InternalSiddhiParser.g:3009:2: iv_ruleConditionRanges= ruleConditionRanges EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRangesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditionRanges=ruleConditionRanges();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionRanges; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleConditionRanges_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionRanges"


    // $ANTLR start "ruleConditionRanges"
    // InternalSiddhiParser.g:3015:1: ruleConditionRanges returns [EObject current=null] : ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* ) ;
    public final EObject ruleConditionRanges() throws RecognitionException {
        EObject current = null;
        int ruleConditionRanges_StartIndex = input.index();
        EObject lv_conRange_0_0 = null;

        EObject lv_or_1_0 = null;

        EObject lv_conRange_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return current; }
            // InternalSiddhiParser.g:3021:2: ( ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* ) )
            // InternalSiddhiParser.g:3022:2: ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* )
            {
            // InternalSiddhiParser.g:3022:2: ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* )
            // InternalSiddhiParser.g:3023:3: ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )*
            {
            // InternalSiddhiParser.g:3023:3: ( (lv_conRange_0_0= ruleConditionRange ) )
            // InternalSiddhiParser.g:3024:4: (lv_conRange_0_0= ruleConditionRange )
            {
            // InternalSiddhiParser.g:3024:4: (lv_conRange_0_0= ruleConditionRange )
            // InternalSiddhiParser.g:3025:5: lv_conRange_0_0= ruleConditionRange
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_conRange_0_0=ruleConditionRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionRangesRule());
              					}
              					add(
              						current,
              						"conRange",
              						lv_conRange_0_0,
              						"org.xtext.example.siddhi.Siddhi.ConditionRange");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3042:3: ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==Or) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalSiddhiParser.g:3043:4: ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) )
            	    {
            	    // InternalSiddhiParser.g:3043:4: ( (lv_or_1_0= ruleOR ) )
            	    // InternalSiddhiParser.g:3044:5: (lv_or_1_0= ruleOR )
            	    {
            	    // InternalSiddhiParser.g:3044:5: (lv_or_1_0= ruleOR )
            	    // InternalSiddhiParser.g:3045:6: lv_or_1_0= ruleOR
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionRangesAccess().getOrORParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_or_1_0=ruleOR();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionRangesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"or",
            	      							lv_or_1_0,
            	      							"org.xtext.example.siddhi.Siddhi.OR");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:3062:4: ( (lv_conRange_2_0= ruleConditionRange ) )
            	    // InternalSiddhiParser.g:3063:5: (lv_conRange_2_0= ruleConditionRange )
            	    {
            	    // InternalSiddhiParser.g:3063:5: (lv_conRange_2_0= ruleConditionRange )
            	    // InternalSiddhiParser.g:3064:6: lv_conRange_2_0= ruleConditionRange
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    lv_conRange_2_0=ruleConditionRange();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionRangesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"conRange",
            	      							lv_conRange_2_0,
            	      							"org.xtext.example.siddhi.Siddhi.ConditionRange");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleConditionRanges_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConditionRanges"


    // $ANTLR start "entryRuleConditionRange"
    // InternalSiddhiParser.g:3086:1: entryRuleConditionRange returns [EObject current=null] : iv_ruleConditionRange= ruleConditionRange EOF ;
    public final EObject entryRuleConditionRange() throws RecognitionException {
        EObject current = null;
        int entryRuleConditionRange_StartIndex = input.index();
        EObject iv_ruleConditionRange = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return current; }
            // InternalSiddhiParser.g:3086:55: (iv_ruleConditionRange= ruleConditionRange EOF )
            // InternalSiddhiParser.g:3087:2: iv_ruleConditionRange= ruleConditionRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditionRange=ruleConditionRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionRange; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRuleConditionRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionRange"


    // $ANTLR start "ruleConditionRange"
    // InternalSiddhiParser.g:3093:1: ruleConditionRange returns [EObject current=null] : ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? ) ;
    public final EObject ruleConditionRange() throws RecognitionException {
        EObject current = null;
        int ruleConditionRange_StartIndex = input.index();
        EObject lv_expr_0_0 = null;

        EObject lv_a_1_0 = null;

        EObject lv_sv_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return current; }
            // InternalSiddhiParser.g:3099:2: ( ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? ) )
            // InternalSiddhiParser.g:3100:2: ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? )
            {
            // InternalSiddhiParser.g:3100:2: ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? )
            // InternalSiddhiParser.g:3101:3: ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )?
            {
            // InternalSiddhiParser.g:3101:3: ( (lv_expr_0_0= ruleExpression ) )
            // InternalSiddhiParser.g:3102:4: (lv_expr_0_0= ruleExpression )
            {
            // InternalSiddhiParser.g:3102:4: (lv_expr_0_0= ruleExpression )
            // InternalSiddhiParser.g:3103:5: lv_expr_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionRangeAccess().getExprExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_expr_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionRangeRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_0_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3120:3: ( (lv_a_1_0= ruleAS ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==As) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSiddhiParser.g:3121:4: (lv_a_1_0= ruleAS )
                    {
                    // InternalSiddhiParser.g:3121:4: (lv_a_1_0= ruleAS )
                    // InternalSiddhiParser.g:3122:5: lv_a_1_0= ruleAS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConditionRangeAccess().getAASParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_a_1_0=ruleAS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConditionRangeRule());
                      					}
                      					set(
                      						current,
                      						"a",
                      						lv_a_1_0,
                      						"org.xtext.example.siddhi.Siddhi.AS");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:3139:3: ( (lv_sv_2_0= ruleStringValue ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_STRING) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalSiddhiParser.g:3140:4: (lv_sv_2_0= ruleStringValue )
                    {
                    // InternalSiddhiParser.g:3140:4: (lv_sv_2_0= ruleStringValue )
                    // InternalSiddhiParser.g:3141:5: lv_sv_2_0= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConditionRangeAccess().getSvStringValueParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sv_2_0=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConditionRangeRule());
                      					}
                      					set(
                      						current,
                      						"sv",
                      						lv_sv_2_0,
                      						"org.xtext.example.siddhi.Siddhi.StringValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, ruleConditionRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConditionRange"


    // $ANTLR start "entryRuleQuery"
    // InternalSiddhiParser.g:3162:1: entryRuleQuery returns [EObject current=null] : iv_ruleQuery= ruleQuery EOF ;
    public final EObject entryRuleQuery() throws RecognitionException {
        EObject current = null;
        int entryRuleQuery_StartIndex = input.index();
        EObject iv_ruleQuery = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return current; }
            // InternalSiddhiParser.g:3162:46: (iv_ruleQuery= ruleQuery EOF )
            // InternalSiddhiParser.g:3163:2: iv_ruleQuery= ruleQuery EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuery=ruleQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuery; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleQuery_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQuery"


    // $ANTLR start "ruleQuery"
    // InternalSiddhiParser.g:3169:1: ruleQuery returns [EObject current=null] : ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) )? ) ;
    public final EObject ruleQuery() throws RecognitionException {
        EObject current = null;
        int ruleQuery_StartIndex = input.index();
        EObject lv_ann3_1_0 = null;

        EObject this_FROM_2 = null;

        EObject lv_qInp_3_0 = null;

        EObject lv_querySec_4_0 = null;

        EObject lv_outRate_5_0 = null;

        EObject lv_qOutput_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return current; }
            // InternalSiddhiParser.g:3175:2: ( ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) )? ) )
            // InternalSiddhiParser.g:3176:2: ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) )? )
            {
            // InternalSiddhiParser.g:3176:2: ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) )? )
            // InternalSiddhiParser.g:3177:3: () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) )?
            {
            // InternalSiddhiParser.g:3177:3: ()
            // InternalSiddhiParser.g:3178:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQueryAccess().getQueryAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:3184:3: ( (lv_ann3_1_0= ruleAnnotation ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==CommercialAt) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalSiddhiParser.g:3185:4: (lv_ann3_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:3185:4: (lv_ann3_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:3186:5: lv_ann3_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getQueryAccess().getAnn3AnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_ann3_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getQueryRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann3",
            	      						lv_ann3_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getQueryRule());
              			}
              			newCompositeNode(grammarAccess.getQueryAccess().getFROMParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_50);
            this_FROM_2=ruleFROM(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FROM_2;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:3214:3: ( (lv_qInp_3_0= ruleQueryInput ) )
            // InternalSiddhiParser.g:3215:4: (lv_qInp_3_0= ruleQueryInput )
            {
            // InternalSiddhiParser.g:3215:4: (lv_qInp_3_0= ruleQueryInput )
            // InternalSiddhiParser.g:3216:5: lv_qInp_3_0= ruleQueryInput
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQueryAccess().getQInpQueryInputParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_51);
            lv_qInp_3_0=ruleQueryInput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQueryRule());
              					}
              					set(
              						current,
              						"qInp",
              						lv_qInp_3_0,
              						"org.xtext.example.siddhi.Siddhi.QueryInput");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3233:3: ( (lv_querySec_4_0= ruleQuerySection ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==Select) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSiddhiParser.g:3234:4: (lv_querySec_4_0= ruleQuerySection )
                    {
                    // InternalSiddhiParser.g:3234:4: (lv_querySec_4_0= ruleQuerySection )
                    // InternalSiddhiParser.g:3235:5: lv_querySec_4_0= ruleQuerySection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQueryAccess().getQuerySecQuerySectionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_querySec_4_0=ruleQuerySection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQueryRule());
                      					}
                      					set(
                      						current,
                      						"querySec",
                      						lv_querySec_4_0,
                      						"org.xtext.example.siddhi.Siddhi.QuerySection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:3252:3: ( (lv_outRate_5_0= ruleOutputRate ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==Output) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalSiddhiParser.g:3253:4: (lv_outRate_5_0= ruleOutputRate )
                    {
                    // InternalSiddhiParser.g:3253:4: (lv_outRate_5_0= ruleOutputRate )
                    // InternalSiddhiParser.g:3254:5: lv_outRate_5_0= ruleOutputRate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQueryAccess().getOutRateOutputRateParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_outRate_5_0=ruleOutputRate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQueryRule());
                      					}
                      					set(
                      						current,
                      						"outRate",
                      						lv_outRate_5_0,
                      						"org.xtext.example.siddhi.Siddhi.OutputRate");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:3271:3: ( (lv_qOutput_6_0= ruleQueryOutput ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==Delete||LA42_0==Insert||LA42_0==Return||LA42_0==Update) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSiddhiParser.g:3272:4: (lv_qOutput_6_0= ruleQueryOutput )
                    {
                    // InternalSiddhiParser.g:3272:4: (lv_qOutput_6_0= ruleQueryOutput )
                    // InternalSiddhiParser.g:3273:5: lv_qOutput_6_0= ruleQueryOutput
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQueryAccess().getQOutputQueryOutputParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_qOutput_6_0=ruleQueryOutput();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQueryRule());
                      					}
                      					set(
                      						current,
                      						"qOutput",
                      						lv_qOutput_6_0,
                      						"org.xtext.example.siddhi.Siddhi.QueryOutput");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleQuery_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQuery"


    // $ANTLR start "entryRuleQueryInput"
    // InternalSiddhiParser.g:3294:1: entryRuleQueryInput returns [EObject current=null] : iv_ruleQueryInput= ruleQueryInput EOF ;
    public final EObject entryRuleQueryInput() throws RecognitionException {
        EObject current = null;
        int entryRuleQueryInput_StartIndex = input.index();
        EObject iv_ruleQueryInput = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return current; }
            // InternalSiddhiParser.g:3294:51: (iv_ruleQueryInput= ruleQueryInput EOF )
            // InternalSiddhiParser.g:3295:2: iv_ruleQueryInput= ruleQueryInput EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryInputRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQueryInput=ruleQueryInput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryInput; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuleQueryInput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryInput"


    // $ANTLR start "ruleQueryInput"
    // InternalSiddhiParser.g:3301:1: ruleQueryInput returns [EObject current=null] : ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) ) ;
    public final EObject ruleQueryInput() throws RecognitionException {
        EObject current = null;
        int ruleQueryInput_StartIndex = input.index();
        EObject lv_js_1_0 = null;

        EObject lv_seqSrcChanin_2_0 = null;

        EObject lv_ps_3_0 = null;

        EObject lv_anonStream_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return current; }
            // InternalSiddhiParser.g:3307:2: ( ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) ) )
            // InternalSiddhiParser.g:3308:2: ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) )
            {
            // InternalSiddhiParser.g:3308:2: ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) )
            // InternalSiddhiParser.g:3309:3: () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) )
            {
            // InternalSiddhiParser.g:3309:3: ()
            // InternalSiddhiParser.g:3310:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQueryInputAccess().getQueryInputAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:3316:3: ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) )
            int alt43=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA43_1 = input.LA(2);

                if ( (synpred23_InternalSiddhiParser()) ) {
                    alt43=1;
                }
                else if ( (synpred24_InternalSiddhiParser()) ) {
                    alt43=2;
                }
                else if ( (synpred25_InternalSiddhiParser()) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;
                }
                }
                break;
            case Every:
                {
                int LA43_2 = input.LA(2);

                if ( (synpred24_InternalSiddhiParser()) ) {
                    alt43=2;
                }
                else if ( (synpred25_InternalSiddhiParser()) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
                {
                int LA43_3 = input.LA(2);

                if ( (synpred24_InternalSiddhiParser()) ) {
                    alt43=2;
                }
                else if ( (synpred25_InternalSiddhiParser()) ) {
                    alt43=3;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA43_4 = input.LA(2);

                if ( (synpred24_InternalSiddhiParser()) ) {
                    alt43=2;
                }
                else if ( (synpred25_InternalSiddhiParser()) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 4, input);

                    throw nvae;
                }
                }
                break;
            case From:
                {
                alt43=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // InternalSiddhiParser.g:3317:4: ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) )
                    {
                    // InternalSiddhiParser.g:3317:4: ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) )
                    // InternalSiddhiParser.g:3318:5: ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream )
                    {
                    // InternalSiddhiParser.g:3322:5: (lv_js_1_0= ruleJoinStream )
                    // InternalSiddhiParser.g:3323:6: lv_js_1_0= ruleJoinStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getJsJoinStreamParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_js_1_0=ruleJoinStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"js",
                      							lv_js_1_0,
                      							"org.xtext.example.siddhi.Siddhi.JoinStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:3341:4: ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) )
                    {
                    // InternalSiddhiParser.g:3341:4: ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) )
                    // InternalSiddhiParser.g:3342:5: ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream )
                    {
                    // InternalSiddhiParser.g:3346:5: (lv_seqSrcChanin_2_0= ruleSequenceStream )
                    // InternalSiddhiParser.g:3347:6: lv_seqSrcChanin_2_0= ruleSequenceStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getSeqSrcChaninSequenceStreamParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_seqSrcChanin_2_0=ruleSequenceStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"seqSrcChanin",
                      							lv_seqSrcChanin_2_0,
                      							"org.xtext.example.siddhi.Siddhi.SequenceStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:3365:4: ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) )
                    {
                    // InternalSiddhiParser.g:3365:4: ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) )
                    // InternalSiddhiParser.g:3366:5: ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream )
                    {
                    // InternalSiddhiParser.g:3370:5: (lv_ps_3_0= rulePatternStream )
                    // InternalSiddhiParser.g:3371:6: lv_ps_3_0= rulePatternStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getPsPatternStreamParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ps_3_0=rulePatternStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"ps",
                      							lv_ps_3_0,
                      							"org.xtext.example.siddhi.Siddhi.PatternStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:3389:4: ( (lv_anonStream_4_0= ruleAnonymousStream ) )
                    {
                    // InternalSiddhiParser.g:3389:4: ( (lv_anonStream_4_0= ruleAnonymousStream ) )
                    // InternalSiddhiParser.g:3390:5: (lv_anonStream_4_0= ruleAnonymousStream )
                    {
                    // InternalSiddhiParser.g:3390:5: (lv_anonStream_4_0= ruleAnonymousStream )
                    // InternalSiddhiParser.g:3391:6: lv_anonStream_4_0= ruleAnonymousStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getAnonStreamAnonymousStreamParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_anonStream_4_0=ruleAnonymousStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"anonStream",
                      							lv_anonStream_4_0,
                      							"org.xtext.example.siddhi.Siddhi.AnonymousStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruleQueryInput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQueryInput"


    // $ANTLR start "entryRuleJoinStream"
    // InternalSiddhiParser.g:3413:1: entryRuleJoinStream returns [EObject current=null] : iv_ruleJoinStream= ruleJoinStream EOF ;
    public final EObject entryRuleJoinStream() throws RecognitionException {
        EObject current = null;
        int entryRuleJoinStream_StartIndex = input.index();
        EObject iv_ruleJoinStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return current; }
            // InternalSiddhiParser.g:3413:51: (iv_ruleJoinStream= ruleJoinStream EOF )
            // InternalSiddhiParser.g:3414:2: iv_ruleJoinStream= ruleJoinStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJoinStream=ruleJoinStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJoinStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleJoinStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleJoinStream"


    // $ANTLR start "ruleJoinStream"
    // InternalSiddhiParser.g:3420:1: ruleJoinStream returns [EObject current=null] : ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( (lv_wt_5_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) ) ( (lv_right_source_8_0= ruleJoinSource ) ) ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )? ( (lv_wt_11_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_14_0= rulejoins ) ) ( (lv_right_source_15_0= ruleJoinSource ) ) ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )? ( (lv_wt_18_0= ruleWithinTime ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_19= ruleStandardStream ) ) ;
    public final EObject ruleJoinStream() throws RecognitionException {
        EObject current = null;
        int ruleJoinStream_StartIndex = input.index();
        EObject lv_left_source_0_0 = null;

        EObject lv_right_source_1_0 = null;

        EObject lv_right_uni_2_0 = null;

        EObject lv_on_3_0 = null;

        EObject lv_expr_4_0 = null;

        EObject lv_wt_5_0 = null;

        EObject lv_left_source_6_0 = null;

        EObject lv_join_7_0 = null;

        EObject lv_right_source_8_0 = null;

        EObject lv_on_9_0 = null;

        EObject lv_expr_10_0 = null;

        EObject lv_wt_11_0 = null;

        EObject lv_left_source_12_0 = null;

        EObject lv_left_uni_13_0 = null;

        EObject lv_join_14_0 = null;

        EObject lv_right_source_15_0 = null;

        EObject lv_on_16_0 = null;

        EObject lv_expr_17_0 = null;

        EObject lv_wt_18_0 = null;

        EObject this_StandardStream_19 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return current; }
            // InternalSiddhiParser.g:3426:2: ( ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( (lv_wt_5_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) ) ( (lv_right_source_8_0= ruleJoinSource ) ) ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )? ( (lv_wt_11_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_14_0= rulejoins ) ) ( (lv_right_source_15_0= ruleJoinSource ) ) ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )? ( (lv_wt_18_0= ruleWithinTime ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_19= ruleStandardStream ) ) )
            // InternalSiddhiParser.g:3427:2: ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( (lv_wt_5_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) ) ( (lv_right_source_8_0= ruleJoinSource ) ) ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )? ( (lv_wt_11_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_14_0= rulejoins ) ) ( (lv_right_source_15_0= ruleJoinSource ) ) ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )? ( (lv_wt_18_0= ruleWithinTime ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_19= ruleStandardStream ) )
            {
            // InternalSiddhiParser.g:3427:2: ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( (lv_wt_5_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) ) ( (lv_right_source_8_0= ruleJoinSource ) ) ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )? ( (lv_wt_11_0= ruleWithinTime ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_14_0= rulejoins ) ) ( (lv_right_source_15_0= ruleJoinSource ) ) ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )? ( (lv_wt_18_0= ruleWithinTime ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_19= ruleStandardStream ) )
            int alt50=4;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_ID) ) {
                int LA50_1 = input.LA(2);

                if ( (synpred26_InternalSiddhiParser()) ) {
                    alt50=1;
                }
                else if ( (synpred27_InternalSiddhiParser()) ) {
                    alt50=2;
                }
                else if ( (synpred28_InternalSiddhiParser()) ) {
                    alt50=3;
                }
                else if ( (synpred29_InternalSiddhiParser()) ) {
                    alt50=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalSiddhiParser.g:3428:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( (lv_wt_5_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:3428:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( (lv_wt_5_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:3429:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( (lv_wt_5_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:3429:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) )
                    // InternalSiddhiParser.g:3430:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) )
                    {
                    // InternalSiddhiParser.g:3443:5: ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) )
                    // InternalSiddhiParser.g:3444:6: ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) )
                    {
                    // InternalSiddhiParser.g:3444:6: ( (lv_left_source_0_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:3445:7: (lv_left_source_0_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:3445:7: (lv_left_source_0_0= ruleJoinSource )
                    // InternalSiddhiParser.g:3446:8: lv_left_source_0_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_0_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_left_source_0_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_source",
                      									lv_left_source_0_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3463:6: ( (lv_right_source_1_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:3464:7: (lv_right_source_1_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:3464:7: (lv_right_source_1_0= ruleJoinSource )
                    // InternalSiddhiParser.g:3465:8: lv_right_source_1_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_0_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_right_source_1_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"right_source",
                      									lv_right_source_1_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:3484:4: ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) )
                    // InternalSiddhiParser.g:3485:5: (lv_right_uni_2_0= ruleUNIDIRECTIONAL )
                    {
                    // InternalSiddhiParser.g:3485:5: (lv_right_uni_2_0= ruleUNIDIRECTIONAL )
                    // InternalSiddhiParser.g:3486:6: lv_right_uni_2_0= ruleUNIDIRECTIONAL
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_uniUNIDIRECTIONALParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_right_uni_2_0=ruleUNIDIRECTIONAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"right_uni",
                      							lv_right_uni_2_0,
                      							"org.xtext.example.siddhi.Siddhi.UNIDIRECTIONAL");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3503:4: ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==On) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalSiddhiParser.g:3504:5: ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) )
                            {
                            // InternalSiddhiParser.g:3504:5: ( (lv_on_3_0= ruleON ) )
                            // InternalSiddhiParser.g:3505:6: (lv_on_3_0= ruleON )
                            {
                            // InternalSiddhiParser.g:3505:6: (lv_on_3_0= ruleON )
                            // InternalSiddhiParser.g:3506:7: lv_on_3_0= ruleON
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_43);
                            lv_on_3_0=ruleON();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"on",
                              								lv_on_3_0,
                              								"org.xtext.example.siddhi.Siddhi.ON");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:3523:5: ( (lv_expr_4_0= ruleExpression ) )
                            // InternalSiddhiParser.g:3524:6: (lv_expr_4_0= ruleExpression )
                            {
                            // InternalSiddhiParser.g:3524:6: (lv_expr_4_0= ruleExpression )
                            // InternalSiddhiParser.g:3525:7: lv_expr_4_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_expr_4_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"expr",
                              								lv_expr_4_0,
                              								"org.xtext.example.siddhi.Siddhi.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:3543:4: ( (lv_wt_5_0= ruleWithinTime ) )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==Within) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalSiddhiParser.g:3544:5: (lv_wt_5_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:3544:5: (lv_wt_5_0= ruleWithinTime )
                            // InternalSiddhiParser.g:3545:6: lv_wt_5_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_5_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              						}
                              						set(
                              							current,
                              							"wt",
                              							lv_wt_5_0,
                              							"org.xtext.example.siddhi.Siddhi.WithinTime");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:3564:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) ) ( (lv_right_source_8_0= ruleJoinSource ) ) ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )? ( (lv_wt_11_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:3564:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) ) ( (lv_right_source_8_0= ruleJoinSource ) ) ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )? ( (lv_wt_11_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:3565:4: ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) ) ( (lv_right_source_8_0= ruleJoinSource ) ) ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )? ( (lv_wt_11_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:3565:4: ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) ) )
                    // InternalSiddhiParser.g:3566:5: ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) )
                    {
                    // InternalSiddhiParser.g:3579:5: ( ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) ) )
                    // InternalSiddhiParser.g:3580:6: ( (lv_left_source_6_0= ruleJoinSource ) ) ( (lv_join_7_0= rulejoins ) )
                    {
                    // InternalSiddhiParser.g:3580:6: ( (lv_left_source_6_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:3581:7: (lv_left_source_6_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:3581:7: (lv_left_source_6_0= ruleJoinSource )
                    // InternalSiddhiParser.g:3582:8: lv_left_source_6_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_1_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_left_source_6_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_source",
                      									lv_left_source_6_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3599:6: ( (lv_join_7_0= rulejoins ) )
                    // InternalSiddhiParser.g:3600:7: (lv_join_7_0= rulejoins )
                    {
                    // InternalSiddhiParser.g:3600:7: (lv_join_7_0= rulejoins )
                    // InternalSiddhiParser.g:3601:8: lv_join_7_0= rulejoins
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_1_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_join_7_0=rulejoins();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"join",
                      									lv_join_7_0,
                      									"org.xtext.example.siddhi.Siddhi.joins");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:3620:4: ( (lv_right_source_8_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:3621:5: (lv_right_source_8_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:3621:5: (lv_right_source_8_0= ruleJoinSource )
                    // InternalSiddhiParser.g:3622:6: lv_right_source_8_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_right_source_8_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"right_source",
                      							lv_right_source_8_0,
                      							"org.xtext.example.siddhi.Siddhi.JoinSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3639:4: ( ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) ) )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==On) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalSiddhiParser.g:3640:5: ( (lv_on_9_0= ruleON ) ) ( (lv_expr_10_0= ruleExpression ) )
                            {
                            // InternalSiddhiParser.g:3640:5: ( (lv_on_9_0= ruleON ) )
                            // InternalSiddhiParser.g:3641:6: (lv_on_9_0= ruleON )
                            {
                            // InternalSiddhiParser.g:3641:6: (lv_on_9_0= ruleON )
                            // InternalSiddhiParser.g:3642:7: lv_on_9_0= ruleON
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_1_2_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_43);
                            lv_on_9_0=ruleON();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"on",
                              								lv_on_9_0,
                              								"org.xtext.example.siddhi.Siddhi.ON");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:3659:5: ( (lv_expr_10_0= ruleExpression ) )
                            // InternalSiddhiParser.g:3660:6: (lv_expr_10_0= ruleExpression )
                            {
                            // InternalSiddhiParser.g:3660:6: (lv_expr_10_0= ruleExpression )
                            // InternalSiddhiParser.g:3661:7: lv_expr_10_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_1_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_expr_10_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"expr",
                              								lv_expr_10_0,
                              								"org.xtext.example.siddhi.Siddhi.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:3679:4: ( (lv_wt_11_0= ruleWithinTime ) )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==Within) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalSiddhiParser.g:3680:5: (lv_wt_11_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:3680:5: (lv_wt_11_0= ruleWithinTime )
                            // InternalSiddhiParser.g:3681:6: lv_wt_11_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_1_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_11_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              						}
                              						set(
                              							current,
                              							"wt",
                              							lv_wt_11_0,
                              							"org.xtext.example.siddhi.Siddhi.WithinTime");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:3700:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_14_0= rulejoins ) ) ( (lv_right_source_15_0= ruleJoinSource ) ) ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )? ( (lv_wt_18_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:3700:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_14_0= rulejoins ) ) ( (lv_right_source_15_0= ruleJoinSource ) ) ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )? ( (lv_wt_18_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:3701:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_14_0= rulejoins ) ) ( (lv_right_source_15_0= ruleJoinSource ) ) ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )? ( (lv_wt_18_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:3701:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) ) )
                    // InternalSiddhiParser.g:3702:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) )
                    {
                    // InternalSiddhiParser.g:3715:5: ( ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) ) )
                    // InternalSiddhiParser.g:3716:6: ( (lv_left_source_12_0= ruleJoinSource ) ) ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) )
                    {
                    // InternalSiddhiParser.g:3716:6: ( (lv_left_source_12_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:3717:7: (lv_left_source_12_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:3717:7: (lv_left_source_12_0= ruleJoinSource )
                    // InternalSiddhiParser.g:3718:8: lv_left_source_12_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_left_source_12_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_source",
                      									lv_left_source_12_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3735:6: ( (lv_left_uni_13_0= ruleUNIDIRECTIONAL ) )
                    // InternalSiddhiParser.g:3736:7: (lv_left_uni_13_0= ruleUNIDIRECTIONAL )
                    {
                    // InternalSiddhiParser.g:3736:7: (lv_left_uni_13_0= ruleUNIDIRECTIONAL )
                    // InternalSiddhiParser.g:3737:8: lv_left_uni_13_0= ruleUNIDIRECTIONAL
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_uniUNIDIRECTIONALParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_left_uni_13_0=ruleUNIDIRECTIONAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_uni",
                      									lv_left_uni_13_0,
                      									"org.xtext.example.siddhi.Siddhi.UNIDIRECTIONAL");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:3756:4: ( (lv_join_14_0= rulejoins ) )
                    // InternalSiddhiParser.g:3757:5: (lv_join_14_0= rulejoins )
                    {
                    // InternalSiddhiParser.g:3757:5: (lv_join_14_0= rulejoins )
                    // InternalSiddhiParser.g:3758:6: lv_join_14_0= rulejoins
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_join_14_0=rulejoins();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"join",
                      							lv_join_14_0,
                      							"org.xtext.example.siddhi.Siddhi.joins");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3775:4: ( (lv_right_source_15_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:3776:5: (lv_right_source_15_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:3776:5: (lv_right_source_15_0= ruleJoinSource )
                    // InternalSiddhiParser.g:3777:6: lv_right_source_15_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_right_source_15_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"right_source",
                      							lv_right_source_15_0,
                      							"org.xtext.example.siddhi.Siddhi.JoinSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3794:4: ( ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) ) )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==On) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalSiddhiParser.g:3795:5: ( (lv_on_16_0= ruleON ) ) ( (lv_expr_17_0= ruleExpression ) )
                            {
                            // InternalSiddhiParser.g:3795:5: ( (lv_on_16_0= ruleON ) )
                            // InternalSiddhiParser.g:3796:6: (lv_on_16_0= ruleON )
                            {
                            // InternalSiddhiParser.g:3796:6: (lv_on_16_0= ruleON )
                            // InternalSiddhiParser.g:3797:7: lv_on_16_0= ruleON
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_2_3_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_43);
                            lv_on_16_0=ruleON();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"on",
                              								lv_on_16_0,
                              								"org.xtext.example.siddhi.Siddhi.ON");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:3814:5: ( (lv_expr_17_0= ruleExpression ) )
                            // InternalSiddhiParser.g:3815:6: (lv_expr_17_0= ruleExpression )
                            {
                            // InternalSiddhiParser.g:3815:6: (lv_expr_17_0= ruleExpression )
                            // InternalSiddhiParser.g:3816:7: lv_expr_17_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_expr_17_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"expr",
                              								lv_expr_17_0,
                              								"org.xtext.example.siddhi.Siddhi.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:3834:4: ( (lv_wt_18_0= ruleWithinTime ) )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==Within) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalSiddhiParser.g:3835:5: (lv_wt_18_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:3835:5: (lv_wt_18_0= ruleWithinTime )
                            // InternalSiddhiParser.g:3836:6: lv_wt_18_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_2_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_18_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              						}
                              						set(
                              							current,
                              							"wt",
                              							lv_wt_18_0,
                              							"org.xtext.example.siddhi.Siddhi.WithinTime");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:3855:3: ( ( ruleStandardStream )=>this_StandardStream_19= ruleStandardStream )
                    {
                    // InternalSiddhiParser.g:3855:3: ( ( ruleStandardStream )=>this_StandardStream_19= ruleStandardStream )
                    // InternalSiddhiParser.g:3856:4: ( ruleStandardStream )=>this_StandardStream_19= ruleStandardStream
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJoinStreamAccess().getStandardStreamParserRuleCall_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StandardStream_19=ruleStandardStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StandardStream_19;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleJoinStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleJoinStream"


    // $ANTLR start "entryRuleJoinSource"
    // InternalSiddhiParser.g:3870:1: entryRuleJoinSource returns [EObject current=null] : iv_ruleJoinSource= ruleJoinSource EOF ;
    public final EObject entryRuleJoinSource() throws RecognitionException {
        EObject current = null;
        int entryRuleJoinSource_StartIndex = input.index();
        EObject iv_ruleJoinSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return current; }
            // InternalSiddhiParser.g:3870:51: (iv_ruleJoinSource= ruleJoinSource EOF )
            // InternalSiddhiParser.g:3871:2: iv_ruleJoinSource= ruleJoinSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJoinSource=ruleJoinSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJoinSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRuleJoinSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleJoinSource"


    // $ANTLR start "ruleJoinSource"
    // InternalSiddhiParser.g:3877:1: ruleJoinSource returns [EObject current=null] : (this_MainSource_0= ruleMainSource ( ( (lv_a_1_0= ruleAS ) ) ( (lv_strAlias_2_0= ruleStreamAlias ) ) )? ) ;
    public final EObject ruleJoinSource() throws RecognitionException {
        EObject current = null;
        int ruleJoinSource_StartIndex = input.index();
        EObject this_MainSource_0 = null;

        EObject lv_a_1_0 = null;

        EObject lv_strAlias_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return current; }
            // InternalSiddhiParser.g:3883:2: ( (this_MainSource_0= ruleMainSource ( ( (lv_a_1_0= ruleAS ) ) ( (lv_strAlias_2_0= ruleStreamAlias ) ) )? ) )
            // InternalSiddhiParser.g:3884:2: (this_MainSource_0= ruleMainSource ( ( (lv_a_1_0= ruleAS ) ) ( (lv_strAlias_2_0= ruleStreamAlias ) ) )? )
            {
            // InternalSiddhiParser.g:3884:2: (this_MainSource_0= ruleMainSource ( ( (lv_a_1_0= ruleAS ) ) ( (lv_strAlias_2_0= ruleStreamAlias ) ) )? )
            // InternalSiddhiParser.g:3885:3: this_MainSource_0= ruleMainSource ( ( (lv_a_1_0= ruleAS ) ) ( (lv_strAlias_2_0= ruleStreamAlias ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getJoinSourceAccess().getMainSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_58);
            this_MainSource_0=ruleMainSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MainSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:3893:3: ( ( (lv_a_1_0= ruleAS ) ) ( (lv_strAlias_2_0= ruleStreamAlias ) ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==As) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSiddhiParser.g:3894:4: ( (lv_a_1_0= ruleAS ) ) ( (lv_strAlias_2_0= ruleStreamAlias ) )
                    {
                    // InternalSiddhiParser.g:3894:4: ( (lv_a_1_0= ruleAS ) )
                    // InternalSiddhiParser.g:3895:5: (lv_a_1_0= ruleAS )
                    {
                    // InternalSiddhiParser.g:3895:5: (lv_a_1_0= ruleAS )
                    // InternalSiddhiParser.g:3896:6: lv_a_1_0= ruleAS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinSourceAccess().getAASParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_a_1_0=ruleAS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinSourceRule());
                      						}
                      						set(
                      							current,
                      							"a",
                      							lv_a_1_0,
                      							"org.xtext.example.siddhi.Siddhi.AS");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3913:4: ( (lv_strAlias_2_0= ruleStreamAlias ) )
                    // InternalSiddhiParser.g:3914:5: (lv_strAlias_2_0= ruleStreamAlias )
                    {
                    // InternalSiddhiParser.g:3914:5: (lv_strAlias_2_0= ruleStreamAlias )
                    // InternalSiddhiParser.g:3915:6: lv_strAlias_2_0= ruleStreamAlias
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinSourceAccess().getStrAliasStreamAliasParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_strAlias_2_0=ruleStreamAlias();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinSourceRule());
                      						}
                      						set(
                      							current,
                      							"strAlias",
                      							lv_strAlias_2_0,
                      							"org.xtext.example.siddhi.Siddhi.StreamAlias");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, ruleJoinSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleJoinSource"


    // $ANTLR start "entryRuleStreamAlias"
    // InternalSiddhiParser.g:3937:1: entryRuleStreamAlias returns [EObject current=null] : iv_ruleStreamAlias= ruleStreamAlias EOF ;
    public final EObject entryRuleStreamAlias() throws RecognitionException {
        EObject current = null;
        int entryRuleStreamAlias_StartIndex = input.index();
        EObject iv_ruleStreamAlias = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return current; }
            // InternalSiddhiParser.g:3937:52: (iv_ruleStreamAlias= ruleStreamAlias EOF )
            // InternalSiddhiParser.g:3938:2: iv_ruleStreamAlias= ruleStreamAlias EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStreamAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStreamAlias=ruleStreamAlias();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStreamAlias; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRuleStreamAlias_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStreamAlias"


    // $ANTLR start "ruleStreamAlias"
    // InternalSiddhiParser.g:3944:1: ruleStreamAlias returns [EObject current=null] : ( (lv_na_0_0= ruleName ) ) ;
    public final EObject ruleStreamAlias() throws RecognitionException {
        EObject current = null;
        int ruleStreamAlias_StartIndex = input.index();
        EObject lv_na_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return current; }
            // InternalSiddhiParser.g:3950:2: ( ( (lv_na_0_0= ruleName ) ) )
            // InternalSiddhiParser.g:3951:2: ( (lv_na_0_0= ruleName ) )
            {
            // InternalSiddhiParser.g:3951:2: ( (lv_na_0_0= ruleName ) )
            // InternalSiddhiParser.g:3952:3: (lv_na_0_0= ruleName )
            {
            // InternalSiddhiParser.g:3952:3: (lv_na_0_0= ruleName )
            // InternalSiddhiParser.g:3953:4: lv_na_0_0= ruleName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getStreamAliasAccess().getNaNameParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_na_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getStreamAliasRule());
              				}
              				set(
              					current,
              					"na",
              					lv_na_0_0,
              					"org.xtext.example.siddhi.Siddhi.Name");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, ruleStreamAlias_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStreamAlias"


    // $ANTLR start "entryRulejoins"
    // InternalSiddhiParser.g:3973:1: entryRulejoins returns [EObject current=null] : iv_rulejoins= rulejoins EOF ;
    public final EObject entryRulejoins() throws RecognitionException {
        EObject current = null;
        int entryRulejoins_StartIndex = input.index();
        EObject iv_rulejoins = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return current; }
            // InternalSiddhiParser.g:3973:46: (iv_rulejoins= rulejoins EOF )
            // InternalSiddhiParser.g:3974:2: iv_rulejoins= rulejoins EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulejoins=rulejoins();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulejoins; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRulejoins_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulejoins"


    // $ANTLR start "rulejoins"
    // InternalSiddhiParser.g:3980:1: rulejoins returns [EObject current=null] : ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) ) ;
    public final EObject rulejoins() throws RecognitionException {
        EObject current = null;
        int rulejoins_StartIndex = input.index();
        EObject this_LEFT_1 = null;

        EObject this_OUTER_2 = null;

        EObject this_JOIN_3 = null;

        EObject this_RIGHT_5 = null;

        EObject this_OUTER_6 = null;

        EObject this_JOIN_7 = null;

        EObject this_FULL_9 = null;

        EObject this_OUTER_10 = null;

        EObject this_JOIN_11 = null;

        EObject this_OUTER_13 = null;

        EObject this_JOIN_14 = null;

        EObject this_INNER_16 = null;

        EObject this_JOIN_17 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return current; }
            // InternalSiddhiParser.g:3986:2: ( ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) ) )
            // InternalSiddhiParser.g:3987:2: ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) )
            {
            // InternalSiddhiParser.g:3987:2: ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) )
            int alt53=5;
            switch ( input.LA(1) ) {
            case Left:
                {
                alt53=1;
                }
                break;
            case Right:
                {
                alt53=2;
                }
                break;
            case Full:
                {
                alt53=3;
                }
                break;
            case Outer:
                {
                alt53=4;
                }
                break;
            case Inner:
            case Join:
                {
                alt53=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalSiddhiParser.g:3988:3: ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:3988:3: ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:3989:4: () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:3989:4: ()
                    // InternalSiddhiParser.g:3990:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getLEFTParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    this_LEFT_1=ruleLEFT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LEFT_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    this_OUTER_2=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_0_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_3=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4031:3: ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:4031:3: ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:4032:4: () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:4032:4: ()
                    // InternalSiddhiParser.g:4033:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getRIGHTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    this_RIGHT_5=ruleRIGHT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RIGHT_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    this_OUTER_6=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_1_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_7=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:4074:3: ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:4074:3: ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:4075:4: () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:4075:4: ()
                    // InternalSiddhiParser.g:4076:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getFULLParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    this_FULL_9=ruleFULL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FULL_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    this_OUTER_10=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_2_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_11=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:4117:3: ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:4117:3: ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:4118:4: () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:4118:4: ()
                    // InternalSiddhiParser.g:4119:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_3_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    this_OUTER_13=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_3_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_14=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_14;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:4149:3: ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:4149:3: ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:4150:4: () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:4150:4: ()
                    // InternalSiddhiParser.g:4151:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:4157:4: (this_INNER_16= ruleINNER[$current] )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==Inner) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalSiddhiParser.g:4158:5: this_INNER_16= ruleINNER[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getJoinsRule());
                              					}
                              					newCompositeNode(grammarAccess.getJoinsAccess().getINNERParserRuleCall_4_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_57);
                            this_INNER_16=ruleINNER(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_INNER_16;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_4_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_17=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_17;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, rulejoins_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulejoins"


    // $ANTLR start "entryRuleStandardStream"
    // InternalSiddhiParser.g:4186:1: entryRuleStandardStream returns [EObject current=null] : iv_ruleStandardStream= ruleStandardStream EOF ;
    public final EObject entryRuleStandardStream() throws RecognitionException {
        EObject current = null;
        int entryRuleStandardStream_StartIndex = input.index();
        EObject iv_ruleStandardStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return current; }
            // InternalSiddhiParser.g:4186:55: (iv_ruleStandardStream= ruleStandardStream EOF )
            // InternalSiddhiParser.g:4187:2: iv_ruleStandardStream= ruleStandardStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStandardStream=ruleStandardStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleStandardStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardStream"


    // $ANTLR start "ruleStandardStream"
    // InternalSiddhiParser.g:4193:1: ruleStandardStream returns [EObject current=null] : (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) ) ;
    public final EObject ruleStandardStream() throws RecognitionException {
        EObject current = null;
        int ruleStandardStream_StartIndex = input.index();
        EObject this_MainSource_0 = null;

        EObject lv_postWindowHandlers_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return current; }
            // InternalSiddhiParser.g:4199:2: ( (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) ) )
            // InternalSiddhiParser.g:4200:2: (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) )
            {
            // InternalSiddhiParser.g:4200:2: (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) )
            // InternalSiddhiParser.g:4201:3: this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getStandardStreamAccess().getMainSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_60);
            this_MainSource_0=ruleMainSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MainSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:4209:3: ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            // InternalSiddhiParser.g:4210:4: ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )?
            {
            // InternalSiddhiParser.g:4216:4: ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==NumberSign||LA54_0==LeftSquareBracket) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSiddhiParser.g:4217:5: (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers )
                    {
                    // InternalSiddhiParser.g:4217:5: (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers )
                    // InternalSiddhiParser.g:4218:6: lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStandardStreamAccess().getPostWindowHandlersBasicSourceStreamHandlersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_postWindowHandlers_1_0=ruleBasicSourceStreamHandlers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStandardStreamRule());
                      						}
                      						set(
                      							current,
                      							"postWindowHandlers",
                      							lv_postWindowHandlers_1_0,
                      							"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandlers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleStandardStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStandardStream"


    // $ANTLR start "entryRuleMainSource"
    // InternalSiddhiParser.g:4240:1: entryRuleMainSource returns [EObject current=null] : iv_ruleMainSource= ruleMainSource EOF ;
    public final EObject entryRuleMainSource() throws RecognitionException {
        EObject current = null;
        int entryRuleMainSource_StartIndex = input.index();
        EObject iv_ruleMainSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return current; }
            // InternalSiddhiParser.g:4240:51: (iv_ruleMainSource= ruleMainSource EOF )
            // InternalSiddhiParser.g:4241:2: iv_ruleMainSource= ruleMainSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMainSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMainSource=ruleMainSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMainSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRuleMainSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMainSource"


    // $ANTLR start "ruleMainSource"
    // InternalSiddhiParser.g:4247:1: ruleMainSource returns [EObject current=null] : ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) ) ;
    public final EObject ruleMainSource() throws RecognitionException {
        EObject current = null;
        int ruleMainSource_StartIndex = input.index();
        EObject lv_src_0_0 = null;

        EObject lv_basicSSh_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return current; }
            // InternalSiddhiParser.g:4253:2: ( ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) ) )
            // InternalSiddhiParser.g:4254:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) )
            {
            // InternalSiddhiParser.g:4254:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) )
            // InternalSiddhiParser.g:4255:3: ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) )
            {
            // InternalSiddhiParser.g:4255:3: ( (lv_src_0_0= ruleSource ) )
            // InternalSiddhiParser.g:4256:4: (lv_src_0_0= ruleSource )
            {
            // InternalSiddhiParser.g:4256:4: (lv_src_0_0= ruleSource )
            // InternalSiddhiParser.g:4257:5: lv_src_0_0= ruleSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMainSourceAccess().getSrcSourceParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_61);
            lv_src_0_0=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMainSourceRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_0_0,
              						"org.xtext.example.siddhi.Siddhi.Source");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:4274:3: ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) )
            // InternalSiddhiParser.g:4275:4: (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 )
            {
            // InternalSiddhiParser.g:4275:4: (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 )
            // InternalSiddhiParser.g:4276:5: lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMainSourceAccess().getBasicSShBasicSourceStreamHandlers1ParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_basicSSh_1_0=ruleBasicSourceStreamHandlers1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMainSourceRule());
              					}
              					set(
              						current,
              						"basicSSh",
              						lv_basicSSh_1_0,
              						"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandlers1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, ruleMainSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMainSource"


    // $ANTLR start "entryRulePatternStream"
    // InternalSiddhiParser.g:4297:1: entryRulePatternStream returns [EObject current=null] : iv_rulePatternStream= rulePatternStream EOF ;
    public final EObject entryRulePatternStream() throws RecognitionException {
        EObject current = null;
        int entryRulePatternStream_StartIndex = input.index();
        EObject iv_rulePatternStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return current; }
            // InternalSiddhiParser.g:4297:54: (iv_rulePatternStream= rulePatternStream EOF )
            // InternalSiddhiParser.g:4298:2: iv_rulePatternStream= rulePatternStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternStream=rulePatternStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRulePatternStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternStream"


    // $ANTLR start "rulePatternStream"
    // InternalSiddhiParser.g:4304:1: rulePatternStream returns [EObject current=null] : ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) ) ;
    public final EObject rulePatternStream() throws RecognitionException {
        EObject current = null;
        int rulePatternStream_StartIndex = input.index();
        EObject this_EveryPatternSourceChain_0 = null;

        EObject this_AbsentPatternSourceChain_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return current; }
            // InternalSiddhiParser.g:4310:2: ( ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) ) )
            // InternalSiddhiParser.g:4311:2: ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) )
            {
            // InternalSiddhiParser.g:4311:2: ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) )
            int alt55=2;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA55_1 = input.LA(2);

                if ( (synpred31_InternalSiddhiParser()) ) {
                    alt55=1;
                }
                else if ( (synpred32_InternalSiddhiParser()) ) {
                    alt55=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA55_2 = input.LA(2);

                if ( (synpred31_InternalSiddhiParser()) ) {
                    alt55=1;
                }
                else if ( (synpred32_InternalSiddhiParser()) ) {
                    alt55=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 2, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA55_3 = input.LA(2);

                if ( (synpred31_InternalSiddhiParser()) ) {
                    alt55=1;
                }
                else if ( (synpred32_InternalSiddhiParser()) ) {
                    alt55=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 3, input);

                    throw nvae;
                }
                }
                break;
            case Every:
                {
                int LA55_4 = input.LA(2);

                if ( (synpred31_InternalSiddhiParser()) ) {
                    alt55=1;
                }
                else if ( (synpred32_InternalSiddhiParser()) ) {
                    alt55=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalSiddhiParser.g:4312:3: ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:4312:3: ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:4313:4: ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPatternStreamAccess().getEveryPatternSourceChainParserRuleCall_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EveryPatternSourceChain_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EveryPatternSourceChain_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4324:3: ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:4324:3: ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain )
                    // InternalSiddhiParser.g:4325:4: ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPatternStreamAccess().getAbsentPatternSourceChainParserRuleCall_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AbsentPatternSourceChain_1=ruleAbsentPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_AbsentPatternSourceChain_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, rulePatternStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternStream"


    // $ANTLR start "entryRuleEveryPatternSourceChain"
    // InternalSiddhiParser.g:4339:1: entryRuleEveryPatternSourceChain returns [EObject current=null] : iv_ruleEveryPatternSourceChain= ruleEveryPatternSourceChain EOF ;
    public final EObject entryRuleEveryPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryPatternSourceChain_StartIndex = input.index();
        EObject iv_ruleEveryPatternSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return current; }
            // InternalSiddhiParser.g:4339:64: (iv_ruleEveryPatternSourceChain= ruleEveryPatternSourceChain EOF )
            // InternalSiddhiParser.g:4340:2: iv_ruleEveryPatternSourceChain= ruleEveryPatternSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryPatternSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryPatternSourceChain=ruleEveryPatternSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryPatternSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleEveryPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryPatternSourceChain"


    // $ANTLR start "ruleEveryPatternSourceChain"
    // InternalSiddhiParser.g:4346:1: ruleEveryPatternSourceChain returns [EObject current=null] : (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* ) ;
    public final EObject ruleEveryPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleEveryPatternSourceChain_StartIndex = input.index();
        Token lv_op_2_0=null;
        EObject this_EveryPatternSourceChain1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return current; }
            // InternalSiddhiParser.g:4352:2: ( (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* ) )
            // InternalSiddhiParser.g:4353:2: (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:4353:2: (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* )
            // InternalSiddhiParser.g:4354:3: this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChain1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_62);
            this_EveryPatternSourceChain1_0=ruleEveryPatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EveryPatternSourceChain1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:4362:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalSiddhiParser.g:4363:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:4378:4: ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) )
            	    // InternalSiddhiParser.g:4379:5: () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) )
            	    {
            	    // InternalSiddhiParser.g:4379:5: ()
            	    // InternalSiddhiParser.g:4380:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChainLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:4386:5: ( (lv_op_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:4387:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:4387:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:4388:7: lv_op_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_op_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_op_2_0, grammarAccess.getEveryPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getEveryPatternSourceChainRule());
            	      							}
            	      							setWithLastConsumed(current, "op", lv_op_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:4400:5: ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) )
            	    // InternalSiddhiParser.g:4401:6: (lv_right_3_0= ruleEveryPatternSourceChain1 )
            	    {
            	    // InternalSiddhiParser.g:4401:6: (lv_right_3_0= ruleEveryPatternSourceChain1 )
            	    // InternalSiddhiParser.g:4402:7: lv_right_3_0= ruleEveryPatternSourceChain1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getEveryPatternSourceChainAccess().getRightEveryPatternSourceChain1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_right_3_0=ruleEveryPatternSourceChain1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getEveryPatternSourceChainRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleEveryPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryPatternSourceChain"


    // $ANTLR start "entryRuleEveryPatternSourceChain1"
    // InternalSiddhiParser.g:4425:1: entryRuleEveryPatternSourceChain1 returns [EObject current=null] : iv_ruleEveryPatternSourceChain1= ruleEveryPatternSourceChain1 EOF ;
    public final EObject entryRuleEveryPatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryPatternSourceChain1_StartIndex = input.index();
        EObject iv_ruleEveryPatternSourceChain1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return current; }
            // InternalSiddhiParser.g:4425:65: (iv_ruleEveryPatternSourceChain1= ruleEveryPatternSourceChain1 EOF )
            // InternalSiddhiParser.g:4426:2: iv_ruleEveryPatternSourceChain1= ruleEveryPatternSourceChain1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryPatternSourceChain1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryPatternSourceChain1=ruleEveryPatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryPatternSourceChain1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleEveryPatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryPatternSourceChain1"


    // $ANTLR start "ruleEveryPatternSourceChain1"
    // InternalSiddhiParser.g:4432:1: ruleEveryPatternSourceChain1 returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) ) ;
    public final EObject ruleEveryPatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int ruleEveryPatternSourceChain1_StartIndex = input.index();
        EObject lv_eps_1_0 = null;

        EObject lv_wt_3_0 = null;

        EObject lv_psc_4_0 = null;

        EObject lv_every_5_0 = null;

        EObject lv_psc_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return current; }
            // InternalSiddhiParser.g:4438:2: ( ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) ) )
            // InternalSiddhiParser.g:4439:2: ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) )
            {
            // InternalSiddhiParser.g:4439:2: ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) )
            int alt58=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA58_1 = input.LA(2);

                if ( (synpred34_InternalSiddhiParser()) ) {
                    alt58=1;
                }
                else if ( (true) ) {
                    alt58=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 58, 1, input);

                    throw nvae;
                }
                }
                break;
            case Not:
            case RULE_ID:
                {
                alt58=2;
                }
                break;
            case Every:
                {
                alt58=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalSiddhiParser.g:4440:3: ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:4440:3: ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:4441:4: ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:4456:4: ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:4457:5: ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:4464:5: ( (lv_eps_1_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:4465:6: (lv_eps_1_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:4465:6: (lv_eps_1_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:4466:7: lv_eps_1_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getEpsEveryPatternSourceChainParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_eps_1_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      							}
                      							set(
                      								current,
                      								"eps",
                      								lv_eps_1_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:4490:5: ( (lv_wt_3_0= ruleWithinTime ) )?
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==Within) ) {
                        alt57=1;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalSiddhiParser.g:4491:6: (lv_wt_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:4491:6: (lv_wt_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:4492:7: lv_wt_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                              							}
                              							set(
                              								current,
                              								"wt",
                              								lv_wt_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4512:3: ( (lv_psc_4_0= rulePatternSourceChain ) )
                    {
                    // InternalSiddhiParser.g:4512:3: ( (lv_psc_4_0= rulePatternSourceChain ) )
                    // InternalSiddhiParser.g:4513:4: (lv_psc_4_0= rulePatternSourceChain )
                    {
                    // InternalSiddhiParser.g:4513:4: (lv_psc_4_0= rulePatternSourceChain )
                    // InternalSiddhiParser.g:4514:5: lv_psc_4_0= rulePatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_psc_4_0=rulePatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      					}
                      					set(
                      						current,
                      						"psc",
                      						lv_psc_4_0,
                      						"org.xtext.example.siddhi.Siddhi.PatternSourceChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:4532:3: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) )
                    {
                    // InternalSiddhiParser.g:4532:3: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) )
                    // InternalSiddhiParser.g:4533:4: ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) )
                    {
                    // InternalSiddhiParser.g:4533:4: ( (lv_every_5_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:4534:5: (lv_every_5_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:4534:5: (lv_every_5_0= ruleEVERY )
                    // InternalSiddhiParser.g:4535:6: lv_every_5_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getEveryEVERYParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    lv_every_5_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      						}
                      						set(
                      							current,
                      							"every",
                      							lv_every_5_0,
                      							"org.xtext.example.siddhi.Siddhi.EVERY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:4552:4: ( (lv_psc_6_0= rulePatternSourceChain1 ) )
                    // InternalSiddhiParser.g:4553:5: (lv_psc_6_0= rulePatternSourceChain1 )
                    {
                    // InternalSiddhiParser.g:4553:5: (lv_psc_6_0= rulePatternSourceChain1 )
                    // InternalSiddhiParser.g:4554:6: lv_psc_6_0= rulePatternSourceChain1
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChain1ParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_psc_6_0=rulePatternSourceChain1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      						}
                      						set(
                      							current,
                      							"psc",
                      							lv_psc_6_0,
                      							"org.xtext.example.siddhi.Siddhi.PatternSourceChain1");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleEveryPatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryPatternSourceChain1"


    // $ANTLR start "entryRulePatternSourceChain"
    // InternalSiddhiParser.g:4576:1: entryRulePatternSourceChain returns [EObject current=null] : iv_rulePatternSourceChain= rulePatternSourceChain EOF ;
    public final EObject entryRulePatternSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRulePatternSourceChain_StartIndex = input.index();
        EObject iv_rulePatternSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return current; }
            // InternalSiddhiParser.g:4576:59: (iv_rulePatternSourceChain= rulePatternSourceChain EOF )
            // InternalSiddhiParser.g:4577:2: iv_rulePatternSourceChain= rulePatternSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternSourceChain=rulePatternSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRulePatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternSourceChain"


    // $ANTLR start "rulePatternSourceChain"
    // InternalSiddhiParser.g:4583:1: rulePatternSourceChain returns [EObject current=null] : (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* ) ;
    public final EObject rulePatternSourceChain() throws RecognitionException {
        EObject current = null;
        int rulePatternSourceChain_StartIndex = input.index();
        Token lv_op_2_0=null;
        EObject this_PatternSourceChain1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return current; }
            // InternalSiddhiParser.g:4589:2: ( (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* ) )
            // InternalSiddhiParser.g:4590:2: (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:4590:2: (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* )
            // InternalSiddhiParser.g:4591:3: this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPatternSourceChainAccess().getPatternSourceChain1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_62);
            this_PatternSourceChain1_0=rulePatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PatternSourceChain1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:4599:3: ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )*
            loop59:
            do {
                int alt59=2;
                alt59 = dfa59.predict(input);
                switch (alt59) {
            	case 1 :
            	    // InternalSiddhiParser.g:4600:4: ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:4601:4: ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) )
            	    // InternalSiddhiParser.g:4602:5: () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) )
            	    {
            	    // InternalSiddhiParser.g:4602:5: ()
            	    // InternalSiddhiParser.g:4603:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getPatternSourceChainAccess().getPatternSourceChainLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:4609:5: ( (lv_op_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:4610:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:4610:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:4611:7: lv_op_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_op_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_op_2_0, grammarAccess.getPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getPatternSourceChainRule());
            	      							}
            	      							setWithLastConsumed(current, "op", lv_op_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:4623:5: ( (lv_right_3_0= rulePatternSourceChain1 ) )
            	    // InternalSiddhiParser.g:4624:6: (lv_right_3_0= rulePatternSourceChain1 )
            	    {
            	    // InternalSiddhiParser.g:4624:6: (lv_right_3_0= rulePatternSourceChain1 )
            	    // InternalSiddhiParser.g:4625:7: lv_right_3_0= rulePatternSourceChain1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPatternSourceChainAccess().getRightPatternSourceChain1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_right_3_0=rulePatternSourceChain1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPatternSourceChainRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.PatternSourceChain1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, rulePatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternSourceChain"


    // $ANTLR start "entryRulePatternSourceChain1"
    // InternalSiddhiParser.g:4648:1: entryRulePatternSourceChain1 returns [EObject current=null] : iv_rulePatternSourceChain1= rulePatternSourceChain1 EOF ;
    public final EObject entryRulePatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int entryRulePatternSourceChain1_StartIndex = input.index();
        EObject iv_rulePatternSourceChain1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return current; }
            // InternalSiddhiParser.g:4648:60: (iv_rulePatternSourceChain1= rulePatternSourceChain1 EOF )
            // InternalSiddhiParser.g:4649:2: iv_rulePatternSourceChain1= rulePatternSourceChain1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternSourceChain1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternSourceChain1=rulePatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternSourceChain1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRulePatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternSourceChain1"


    // $ANTLR start "rulePatternSourceChain1"
    // InternalSiddhiParser.g:4655:1: rulePatternSourceChain1 returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) ) ;
    public final EObject rulePatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int rulePatternSourceChain1_StartIndex = input.index();
        EObject lv_psc_2_1_0 = null;

        EObject lv_wt_3_0 = null;

        EObject lv_ps_4_0 = null;

        EObject lv_wt_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return current; }
            // InternalSiddhiParser.g:4661:2: ( ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) ) )
            // InternalSiddhiParser.g:4662:2: ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            {
            // InternalSiddhiParser.g:4662:2: ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==LeftParenthesis) ) {
                int LA62_1 = input.LA(2);

                if ( (synpred36_InternalSiddhiParser()) ) {
                    alt62=1;
                }
                else if ( (true) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA62_0==Not||LA62_0==RULE_ID) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalSiddhiParser.g:4663:3: ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:4663:3: ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:4664:4: ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:4679:4: ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:4680:5: ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:4687:5: ( (lv_psc_2_1_0= rulePatternSourceChain ) )
                    // InternalSiddhiParser.g:4688:6: (lv_psc_2_1_0= rulePatternSourceChain )
                    {
                    // InternalSiddhiParser.g:4688:6: (lv_psc_2_1_0= rulePatternSourceChain )
                    // InternalSiddhiParser.g:4689:7: lv_psc_2_1_0= rulePatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPatternSourceChain1Access().getPsc_2PatternSourceChainParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_psc_2_1_0=rulePatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                      							}
                      							set(
                      								current,
                      								"psc_2",
                      								lv_psc_2_1_0,
                      								"org.xtext.example.siddhi.Siddhi.PatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:4713:5: ( (lv_wt_3_0= ruleWithinTime ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==Within) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalSiddhiParser.g:4714:6: (lv_wt_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:4714:6: (lv_wt_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:4715:7: lv_wt_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                              							}
                              							set(
                              								current,
                              								"wt",
                              								lv_wt_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4735:3: ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:4735:3: ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:4736:4: ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:4736:4: ( (lv_ps_4_0= rulePatternSource ) )
                    // InternalSiddhiParser.g:4737:5: (lv_ps_4_0= rulePatternSource )
                    {
                    // InternalSiddhiParser.g:4737:5: (lv_ps_4_0= rulePatternSource )
                    // InternalSiddhiParser.g:4738:6: lv_ps_4_0= rulePatternSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPatternSourceChain1Access().getPsPatternSourceParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_ps_4_0=rulePatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                      						}
                      						set(
                      							current,
                      							"ps",
                      							lv_ps_4_0,
                      							"org.xtext.example.siddhi.Siddhi.PatternSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:4755:4: ( (lv_wt_5_0= ruleWithinTime ) )?
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==Within) ) {
                        alt61=1;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalSiddhiParser.g:4756:5: (lv_wt_5_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:4756:5: (lv_wt_5_0= ruleWithinTime )
                            // InternalSiddhiParser.g:4757:6: lv_wt_5_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_5_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                              						}
                              						set(
                              							current,
                              							"wt",
                              							lv_wt_5_0,
                              							"org.xtext.example.siddhi.Siddhi.WithinTime");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, rulePatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternSourceChain1"


    // $ANTLR start "entryRulePatternSource"
    // InternalSiddhiParser.g:4779:1: entryRulePatternSource returns [EObject current=null] : iv_rulePatternSource= rulePatternSource EOF ;
    public final EObject entryRulePatternSource() throws RecognitionException {
        EObject current = null;
        int entryRulePatternSource_StartIndex = input.index();
        EObject iv_rulePatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return current; }
            // InternalSiddhiParser.g:4779:54: (iv_rulePatternSource= rulePatternSource EOF )
            // InternalSiddhiParser.g:4780:2: iv_rulePatternSource= rulePatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternSource=rulePatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRulePatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternSource"


    // $ANTLR start "rulePatternSource"
    // InternalSiddhiParser.g:4786:1: rulePatternSource returns [EObject current=null] : ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) ) ;
    public final EObject rulePatternSource() throws RecognitionException {
        EObject current = null;
        int rulePatternSource_StartIndex = input.index();
        EObject lv_lss_0_0 = null;

        EObject lv_pss_1_0 = null;

        EObject lv_stdss_2_0 = null;

        EObject lv_logicalAbsStatefulSrc_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return current; }
            // InternalSiddhiParser.g:4792:2: ( ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) ) )
            // InternalSiddhiParser.g:4793:2: ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) )
            {
            // InternalSiddhiParser.g:4793:2: ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) )
            int alt63=4;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_ID) ) {
                int LA63_1 = input.LA(2);

                if ( (synpred37_InternalSiddhiParser()) ) {
                    alt63=1;
                }
                else if ( (synpred38_InternalSiddhiParser()) ) {
                    alt63=2;
                }
                else if ( (synpred39_InternalSiddhiParser()) ) {
                    alt63=3;
                }
                else if ( (synpred40_InternalSiddhiParser()) ) {
                    alt63=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 63, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA63_0==LeftParenthesis) && (synpred40_InternalSiddhiParser())) {
                alt63=4;
            }
            else if ( (LA63_0==Not) && (synpred40_InternalSiddhiParser())) {
                alt63=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalSiddhiParser.g:4794:3: ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:4794:3: ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) )
                    // InternalSiddhiParser.g:4795:4: ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource )
                    {
                    // InternalSiddhiParser.g:4799:4: (lv_lss_0_0= ruleLogicalStatefulSource )
                    // InternalSiddhiParser.g:4800:5: lv_lss_0_0= ruleLogicalStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getLssLogicalStatefulSourceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_lss_0_0=ruleLogicalStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"lss",
                      						lv_lss_0_0,
                      						"org.xtext.example.siddhi.Siddhi.LogicalStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4818:3: ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:4818:3: ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) )
                    // InternalSiddhiParser.g:4819:4: ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource )
                    {
                    // InternalSiddhiParser.g:4823:4: (lv_pss_1_0= rulePatternCollectionStatefulSource )
                    // InternalSiddhiParser.g:4824:5: lv_pss_1_0= rulePatternCollectionStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getPssPatternCollectionStatefulSourceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_pss_1_0=rulePatternCollectionStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"pss",
                      						lv_pss_1_0,
                      						"org.xtext.example.siddhi.Siddhi.PatternCollectionStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:4842:3: ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:4842:3: ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:4843:4: ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:4847:4: (lv_stdss_2_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:4848:5: lv_stdss_2_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getStdssStandardStatefulSourceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdss_2_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"stdss",
                      						lv_stdss_2_0,
                      						"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:4866:3: ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:4866:3: ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) )
                    // InternalSiddhiParser.g:4867:4: ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource )
                    {
                    // InternalSiddhiParser.g:4871:4: (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource )
                    // InternalSiddhiParser.g:4872:5: lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_logicalAbsStatefulSrc_3_0=ruleLogicalAbsentStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"logicalAbsStatefulSrc",
                      						lv_logicalAbsStatefulSrc_3_0,
                      						"org.xtext.example.siddhi.Siddhi.LogicalAbsentStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, rulePatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternSource"


    // $ANTLR start "entryRuleLogicalStatefulSource"
    // InternalSiddhiParser.g:4893:1: entryRuleLogicalStatefulSource returns [EObject current=null] : iv_ruleLogicalStatefulSource= ruleLogicalStatefulSource EOF ;
    public final EObject entryRuleLogicalStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLogicalStatefulSource_StartIndex = input.index();
        EObject iv_ruleLogicalStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return current; }
            // InternalSiddhiParser.g:4893:62: (iv_ruleLogicalStatefulSource= ruleLogicalStatefulSource EOF )
            // InternalSiddhiParser.g:4894:2: iv_ruleLogicalStatefulSource= ruleLogicalStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalStatefulSource=ruleLogicalStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRuleLogicalStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalStatefulSource"


    // $ANTLR start "ruleLogicalStatefulSource"
    // InternalSiddhiParser.g:4900:1: ruleLogicalStatefulSource returns [EObject current=null] : ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) ) ;
    public final EObject ruleLogicalStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleLogicalStatefulSource_StartIndex = input.index();
        EObject lv_stdSource_0_0 = null;

        EObject lv_and_1_0 = null;

        EObject lv_stdSource_2_0 = null;

        EObject lv_stdSource_3_0 = null;

        EObject lv_or_4_0 = null;

        EObject lv_stdSource_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return current; }
            // InternalSiddhiParser.g:4906:2: ( ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) ) )
            // InternalSiddhiParser.g:4907:2: ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) )
            {
            // InternalSiddhiParser.g:4907:2: ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_ID) ) {
                int LA64_1 = input.LA(2);

                if ( (synpred41_InternalSiddhiParser()) ) {
                    alt64=1;
                }
                else if ( (synpred42_InternalSiddhiParser()) ) {
                    alt64=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalSiddhiParser.g:4908:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:4908:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:4909:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:4909:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) )
                    // InternalSiddhiParser.g:4910:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) )
                    {
                    // InternalSiddhiParser.g:4923:5: ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) )
                    // InternalSiddhiParser.g:4924:6: ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) )
                    {
                    // InternalSiddhiParser.g:4924:6: ( (lv_stdSource_0_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:4925:7: (lv_stdSource_0_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:4925:7: (lv_stdSource_0_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:4926:8: lv_stdSource_0_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_stdSource_0_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								add(
                      									current,
                      									"stdSource",
                      									lv_stdSource_0_0,
                      									"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:4943:6: ( (lv_and_1_0= ruleAND ) )
                    // InternalSiddhiParser.g:4944:7: (lv_and_1_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:4944:7: (lv_and_1_0= ruleAND )
                    // InternalSiddhiParser.g:4945:8: lv_and_1_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getAndANDParserRuleCall_0_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_and_1_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"and",
                      									lv_and_1_0,
                      									"org.xtext.example.siddhi.Siddhi.AND");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:4964:4: ( (lv_stdSource_2_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:4965:5: (lv_stdSource_2_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:4965:5: (lv_stdSource_2_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:4966:6: lv_stdSource_2_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_2_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      						}
                      						add(
                      							current,
                      							"stdSource",
                      							lv_stdSource_2_0,
                      							"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4985:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:4985:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:4986:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:4986:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) )
                    // InternalSiddhiParser.g:4987:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) )
                    {
                    // InternalSiddhiParser.g:5000:5: ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) )
                    // InternalSiddhiParser.g:5001:6: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) )
                    {
                    // InternalSiddhiParser.g:5001:6: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5002:7: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5002:7: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5003:8: lv_stdSource_3_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_stdSource_3_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								add(
                      									current,
                      									"stdSource",
                      									lv_stdSource_3_0,
                      									"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5020:6: ( (lv_or_4_0= ruleOR ) )
                    // InternalSiddhiParser.g:5021:7: (lv_or_4_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:5021:7: (lv_or_4_0= ruleOR )
                    // InternalSiddhiParser.g:5022:8: lv_or_4_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getOrORParserRuleCall_1_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_or_4_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"or",
                      									lv_or_4_0,
                      									"org.xtext.example.siddhi.Siddhi.OR");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:5041:4: ( (lv_stdSource_5_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5042:5: (lv_stdSource_5_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5042:5: (lv_stdSource_5_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5043:6: lv_stdSource_5_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_5_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      						}
                      						add(
                      							current,
                      							"stdSource",
                      							lv_stdSource_5_0,
                      							"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, ruleLogicalStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLogicalStatefulSource"


    // $ANTLR start "entryRulePatternCollectionStatefulSource"
    // InternalSiddhiParser.g:5065:1: entryRulePatternCollectionStatefulSource returns [EObject current=null] : iv_rulePatternCollectionStatefulSource= rulePatternCollectionStatefulSource EOF ;
    public final EObject entryRulePatternCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRulePatternCollectionStatefulSource_StartIndex = input.index();
        EObject iv_rulePatternCollectionStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return current; }
            // InternalSiddhiParser.g:5065:72: (iv_rulePatternCollectionStatefulSource= rulePatternCollectionStatefulSource EOF )
            // InternalSiddhiParser.g:5066:2: iv_rulePatternCollectionStatefulSource= rulePatternCollectionStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternCollectionStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternCollectionStatefulSource=rulePatternCollectionStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternCollectionStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRulePatternCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternCollectionStatefulSource"


    // $ANTLR start "rulePatternCollectionStatefulSource"
    // InternalSiddhiParser.g:5072:1: rulePatternCollectionStatefulSource returns [EObject current=null] : (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) ;
    public final EObject rulePatternCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int rulePatternCollectionStatefulSource_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_StandardStatefulSource_0 = null;

        EObject lv_coll_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return current; }
            // InternalSiddhiParser.g:5078:2: ( (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) )
            // InternalSiddhiParser.g:5079:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
            {
            // InternalSiddhiParser.g:5079:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
            // InternalSiddhiParser.g:5080:3: this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPatternCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_66);
            this_StandardStatefulSource_0=ruleStandardStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StandardStatefulSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPatternCollectionStatefulSourceAccess().getLessThanSignKeyword_1());
              		
            }
            // InternalSiddhiParser.g:5092:3: ( (lv_coll_2_0= ruleCollect ) )
            // InternalSiddhiParser.g:5093:4: (lv_coll_2_0= ruleCollect )
            {
            // InternalSiddhiParser.g:5093:4: (lv_coll_2_0= ruleCollect )
            // InternalSiddhiParser.g:5094:5: lv_coll_2_0= ruleCollect
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPatternCollectionStatefulSourceAccess().getCollCollectParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_coll_2_0=ruleCollect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPatternCollectionStatefulSourceRule());
              					}
              					set(
              						current,
              						"coll",
              						lv_coll_2_0,
              						"org.xtext.example.siddhi.Siddhi.Collect");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPatternCollectionStatefulSourceAccess().getGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, rulePatternCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternCollectionStatefulSource"


    // $ANTLR start "entryRuleCollect"
    // InternalSiddhiParser.g:5119:1: entryRuleCollect returns [EObject current=null] : iv_ruleCollect= ruleCollect EOF ;
    public final EObject entryRuleCollect() throws RecognitionException {
        EObject current = null;
        int entryRuleCollect_StartIndex = input.index();
        EObject iv_ruleCollect = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return current; }
            // InternalSiddhiParser.g:5119:48: (iv_ruleCollect= ruleCollect EOF )
            // InternalSiddhiParser.g:5120:2: iv_ruleCollect= ruleCollect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollect=ruleCollect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleCollect_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCollect"


    // $ANTLR start "ruleCollect"
    // InternalSiddhiParser.g:5126:1: ruleCollect returns [EObject current=null] : ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) ) ;
    public final EObject ruleCollect() throws RecognitionException {
        EObject current = null;
        int ruleCollect_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_start_1_0 = null;

        AntlrDatatypeRuleToken lv_end_3_0 = null;

        AntlrDatatypeRuleToken lv_start_4_0 = null;

        AntlrDatatypeRuleToken lv_end_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return current; }
            // InternalSiddhiParser.g:5132:2: ( ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) ) )
            // InternalSiddhiParser.g:5133:2: ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) )
            {
            // InternalSiddhiParser.g:5133:2: ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) )
            // InternalSiddhiParser.g:5134:3: () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL )
            {
            // InternalSiddhiParser.g:5134:3: ()
            // InternalSiddhiParser.g:5135:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCollectAccess().getCollectAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:5141:3: ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL )
            int alt65=4;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalSiddhiParser.g:5142:4: ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) )
                    {
                    // InternalSiddhiParser.g:5142:4: ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) )
                    // InternalSiddhiParser.g:5143:5: ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) )
                    {
                    // InternalSiddhiParser.g:5143:5: ( (lv_start_1_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:5144:6: (lv_start_1_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:5144:6: (lv_start_1_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:5145:7: lv_start_1_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_start_1_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"start",
                      								lv_start_1_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getCollectAccess().getColonKeyword_1_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:5166:5: ( (lv_end_3_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:5167:6: (lv_end_3_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:5167:6: (lv_end_3_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:5168:7: lv_end_3_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_end_3_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"end",
                      								lv_end_3_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:5187:4: ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon )
                    {
                    // InternalSiddhiParser.g:5187:4: ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon )
                    // InternalSiddhiParser.g:5188:5: ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon
                    {
                    // InternalSiddhiParser.g:5188:5: ( (lv_start_4_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:5189:6: (lv_start_4_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:5189:6: (lv_start_4_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:5190:7: lv_start_4_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_start_4_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"start",
                      								lv_start_4_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Colon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getCollectAccess().getColonKeyword_1_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:5213:4: (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) )
                    {
                    // InternalSiddhiParser.g:5213:4: (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) )
                    // InternalSiddhiParser.g:5214:5: otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) )
                    {
                    otherlv_6=(Token)match(input,Colon,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getCollectAccess().getColonKeyword_1_2_0());
                      				
                    }
                    // InternalSiddhiParser.g:5218:5: ( (lv_end_7_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:5219:6: (lv_end_7_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:5219:6: (lv_end_7_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:5220:7: lv_end_7_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_end_7_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"end",
                      								lv_end_7_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:5239:4: ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getCollectAccess().getINT_LITERALParserRuleCall_1_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleCollect_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCollect"


    // $ANTLR start "entryRuleWithinTime"
    // InternalSiddhiParser.g:5251:1: entryRuleWithinTime returns [EObject current=null] : iv_ruleWithinTime= ruleWithinTime EOF ;
    public final EObject entryRuleWithinTime() throws RecognitionException {
        EObject current = null;
        int entryRuleWithinTime_StartIndex = input.index();
        EObject iv_ruleWithinTime = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return current; }
            // InternalSiddhiParser.g:5251:51: (iv_ruleWithinTime= ruleWithinTime EOF )
            // InternalSiddhiParser.g:5252:2: iv_ruleWithinTime= ruleWithinTime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWithinTimeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWithinTime=ruleWithinTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWithinTime; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRuleWithinTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWithinTime"


    // $ANTLR start "ruleWithinTime"
    // InternalSiddhiParser.g:5258:1: ruleWithinTime returns [EObject current=null] : (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) ;
    public final EObject ruleWithinTime() throws RecognitionException {
        EObject current = null;
        int ruleWithinTime_StartIndex = input.index();
        EObject this_WITHIN_0 = null;

        EObject lv_tv_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return current; }
            // InternalSiddhiParser.g:5264:2: ( (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) )
            // InternalSiddhiParser.g:5265:2: (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            {
            // InternalSiddhiParser.g:5265:2: (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            // InternalSiddhiParser.g:5266:3: this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getWithinTimeRule());
              			}
              			newCompositeNode(grammarAccess.getWithinTimeAccess().getWITHINParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_19);
            this_WITHIN_0=ruleWITHIN(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WITHIN_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:5277:3: ( (lv_tv_1_0= ruleTimeValue ) )
            // InternalSiddhiParser.g:5278:4: (lv_tv_1_0= ruleTimeValue )
            {
            // InternalSiddhiParser.g:5278:4: (lv_tv_1_0= ruleTimeValue )
            // InternalSiddhiParser.g:5279:5: lv_tv_1_0= ruleTimeValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWithinTimeAccess().getTvTimeValueParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_tv_1_0=ruleTimeValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWithinTimeRule());
              					}
              					set(
              						current,
              						"tv",
              						lv_tv_1_0,
              						"org.xtext.example.siddhi.Siddhi.TimeValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, ruleWithinTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWithinTime"


    // $ANTLR start "entryRuleLogicalAbsentStatefulSource"
    // InternalSiddhiParser.g:5300:1: entryRuleLogicalAbsentStatefulSource returns [EObject current=null] : iv_ruleLogicalAbsentStatefulSource= ruleLogicalAbsentStatefulSource EOF ;
    public final EObject entryRuleLogicalAbsentStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLogicalAbsentStatefulSource_StartIndex = input.index();
        EObject iv_ruleLogicalAbsentStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return current; }
            // InternalSiddhiParser.g:5300:68: (iv_ruleLogicalAbsentStatefulSource= ruleLogicalAbsentStatefulSource EOF )
            // InternalSiddhiParser.g:5301:2: iv_ruleLogicalAbsentStatefulSource= ruleLogicalAbsentStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAbsentStatefulSource=ruleLogicalAbsentStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAbsentStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuleLogicalAbsentStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAbsentStatefulSource"


    // $ANTLR start "ruleLogicalAbsentStatefulSource"
    // InternalSiddhiParser.g:5307:1: ruleLogicalAbsentStatefulSource returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) ) ;
    public final EObject ruleLogicalAbsentStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleLogicalAbsentStatefulSource_StartIndex = input.index();
        EObject lv_logicalAbsStatefulSrc_1_0 = null;

        EObject lv_stdSource_3_0 = null;

        EObject lv_and_4_0 = null;

        EObject lv_not_5_0 = null;

        EObject lv_bs_6_0 = null;

        EObject this_NOT_7 = null;

        EObject lv_bs_8_0 = null;

        EObject lv_and_9_0 = null;

        EObject lv_stdSource_10_0 = null;

        EObject lv_stdSource_11_0 = null;

        EObject lv_and_12_0 = null;

        EObject lv_basicAbsentPatternSource1_13_0 = null;

        EObject lv_basicAbsentPatternSource1_14_0 = null;

        EObject lv_and_15_0 = null;

        EObject lv_stdSource_16_0 = null;

        EObject lv_basicAbsentPatternSource2_17_0 = null;

        EObject lv_and_18_0 = null;

        EObject lv_basicAbsentPatternSource_19_0 = null;

        EObject lv_stdSource_20_0 = null;

        EObject lv_o_21_0 = null;

        EObject lv_basicAbsentPatternSource1_22_0 = null;

        EObject lv_basicAbsentPatternSource1_23_0 = null;

        EObject lv_o_24_0 = null;

        EObject lv_stdSource_25_0 = null;

        EObject lv_basicAbsentPatternSource2_26_0 = null;

        EObject lv_o_27_0 = null;

        EObject lv_basicAbsentPatternSource_28_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return current; }
            // InternalSiddhiParser.g:5313:2: ( ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) ) )
            // InternalSiddhiParser.g:5314:2: ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:5314:2: ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) )
            int alt66=9;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalSiddhiParser.g:5315:3: ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )
                    {
                    // InternalSiddhiParser.g:5315:3: ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )
                    // InternalSiddhiParser.g:5316:4: ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:5326:4: ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:5327:5: ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:5334:5: ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) )
                    // InternalSiddhiParser.g:5335:6: (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource )
                    {
                    // InternalSiddhiParser.g:5335:6: (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource )
                    // InternalSiddhiParser.g:5336:7: lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_logicalAbsStatefulSrc_1_0=ruleLogicalAbsentStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"logicalAbsStatefulSrc",
                      								lv_logicalAbsStatefulSrc_1_0,
                      								"org.xtext.example.siddhi.Siddhi.LogicalAbsentStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:5363:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5363:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) )
                    // InternalSiddhiParser.g:5364:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) )
                    {
                    // InternalSiddhiParser.g:5387:4: ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) )
                    // InternalSiddhiParser.g:5388:5: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) )
                    {
                    // InternalSiddhiParser.g:5388:5: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5389:6: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5389:6: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5390:7: lv_stdSource_3_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_stdSource_3_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_3_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5407:5: ( (lv_and_4_0= ruleAND ) )
                    // InternalSiddhiParser.g:5408:6: (lv_and_4_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:5408:6: (lv_and_4_0= ruleAND )
                    // InternalSiddhiParser.g:5409:7: lv_and_4_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_and_4_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_4_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5426:5: ( (lv_not_5_0= ruleNOT ) )
                    // InternalSiddhiParser.g:5427:6: (lv_not_5_0= ruleNOT )
                    {
                    // InternalSiddhiParser.g:5427:6: (lv_not_5_0= ruleNOT )
                    // InternalSiddhiParser.g:5428:7: lv_not_5_0= ruleNOT
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNotNOTParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_not_5_0=ruleNOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"not",
                      								lv_not_5_0,
                      								"org.xtext.example.siddhi.Siddhi.NOT");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5445:5: ( (lv_bs_6_0= ruleBasicSource ) )
                    // InternalSiddhiParser.g:5446:6: (lv_bs_6_0= ruleBasicSource )
                    {
                    // InternalSiddhiParser.g:5446:6: (lv_bs_6_0= ruleBasicSource )
                    // InternalSiddhiParser.g:5447:7: lv_bs_6_0= ruleBasicSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_bs_6_0=ruleBasicSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"bs",
                      								lv_bs_6_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:5467:3: ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:5467:3: ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:5468:4: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:5468:4: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) )
                    // InternalSiddhiParser.g:5469:5: ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) )
                    {
                    // InternalSiddhiParser.g:5483:5: (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) )
                    // InternalSiddhiParser.g:5484:6: this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) )
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNOTParserRuleCall_2_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_NOT_7=ruleNOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						current = this_NOT_7;
                      						afterParserOrEnumRuleCall();
                      					
                    }
                    // InternalSiddhiParser.g:5492:6: ( (lv_bs_8_0= ruleBasicSource ) )
                    // InternalSiddhiParser.g:5493:7: (lv_bs_8_0= ruleBasicSource )
                    {
                    // InternalSiddhiParser.g:5493:7: (lv_bs_8_0= ruleBasicSource )
                    // InternalSiddhiParser.g:5494:8: lv_bs_8_0= ruleBasicSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_bs_8_0=ruleBasicSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"bs",
                      									lv_bs_8_0,
                      									"org.xtext.example.siddhi.Siddhi.BasicSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5511:6: ( (lv_and_9_0= ruleAND ) )
                    // InternalSiddhiParser.g:5512:7: (lv_and_9_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:5512:7: (lv_and_9_0= ruleAND )
                    // InternalSiddhiParser.g:5513:8: lv_and_9_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_2_0_0_2_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_and_9_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"and",
                      									lv_and_9_0,
                      									"org.xtext.example.siddhi.Siddhi.AND");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:5532:4: ( (lv_stdSource_10_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5533:5: (lv_stdSource_10_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5533:5: (lv_stdSource_10_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5534:6: lv_stdSource_10_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_10_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      						}
                      						set(
                      							current,
                      							"stdSource",
                      							lv_stdSource_10_0,
                      							"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:5553:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5553:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:5554:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:5572:4: ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:5573:5: ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:5573:5: ( (lv_stdSource_11_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5574:6: (lv_stdSource_11_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5574:6: (lv_stdSource_11_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5575:7: lv_stdSource_11_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_3_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_stdSource_11_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_11_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5592:5: ( (lv_and_12_0= ruleAND ) )
                    // InternalSiddhiParser.g:5593:6: (lv_and_12_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:5593:6: (lv_and_12_0= ruleAND )
                    // InternalSiddhiParser.g:5594:7: lv_and_12_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_and_12_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_12_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5611:5: ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5612:6: (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5612:6: (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5613:7: lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_3_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource1_13_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_13_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:5633:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5633:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) )
                    // InternalSiddhiParser.g:5634:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:5652:4: ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:5653:5: ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:5653:5: ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5654:6: (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5654:6: (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5655:7: lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_basicAbsentPatternSource1_14_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_14_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5672:5: ( (lv_and_15_0= ruleAND ) )
                    // InternalSiddhiParser.g:5673:6: (lv_and_15_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:5673:6: (lv_and_15_0= ruleAND )
                    // InternalSiddhiParser.g:5674:7: lv_and_15_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_and_15_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_15_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5691:5: ( (lv_stdSource_16_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5692:6: (lv_stdSource_16_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5692:6: (lv_stdSource_16_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5693:7: lv_stdSource_16_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_4_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_16_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_16_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:5713:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5713:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:5714:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:5732:4: ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:5733:5: ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:5733:5: ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5734:6: (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5734:6: (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5735:7: lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_5_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_basicAbsentPatternSource2_17_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource2",
                      								lv_basicAbsentPatternSource2_17_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5752:5: ( (lv_and_18_0= ruleAND ) )
                    // InternalSiddhiParser.g:5753:6: (lv_and_18_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:5753:6: (lv_and_18_0= ruleAND )
                    // InternalSiddhiParser.g:5754:7: lv_and_18_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_and_18_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_18_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5771:5: ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5772:6: (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5772:6: (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5773:7: lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_5_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_19_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_19_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:5793:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5793:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:5794:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:5812:4: ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:5813:5: ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:5813:5: ( (lv_stdSource_20_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5814:6: (lv_stdSource_20_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5814:6: (lv_stdSource_20_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5815:7: lv_stdSource_20_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_6_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_stdSource_20_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_20_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5832:5: ( (lv_o_21_0= ruleOR ) )
                    // InternalSiddhiParser.g:5833:6: (lv_o_21_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:5833:6: (lv_o_21_0= ruleOR )
                    // InternalSiddhiParser.g:5834:7: lv_o_21_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_6_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_o_21_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"o",
                      								lv_o_21_0,
                      								"org.xtext.example.siddhi.Siddhi.OR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5851:5: ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5852:6: (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5852:6: (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5853:7: lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_6_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource1_22_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_22_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalSiddhiParser.g:5873:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5873:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) )
                    // InternalSiddhiParser.g:5874:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:5892:4: ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:5893:5: ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:5893:5: ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5894:6: (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5894:6: (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5895:7: lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_7_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_basicAbsentPatternSource1_23_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_23_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5912:5: ( (lv_o_24_0= ruleOR ) )
                    // InternalSiddhiParser.g:5913:6: (lv_o_24_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:5913:6: (lv_o_24_0= ruleOR )
                    // InternalSiddhiParser.g:5914:7: lv_o_24_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_o_24_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"o",
                      								lv_o_24_0,
                      								"org.xtext.example.siddhi.Siddhi.OR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5931:5: ( (lv_stdSource_25_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:5932:6: (lv_stdSource_25_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:5932:6: (lv_stdSource_25_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:5933:7: lv_stdSource_25_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_7_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_25_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_25_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalSiddhiParser.g:5953:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5953:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:5954:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:5972:4: ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:5973:5: ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:5973:5: ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5974:6: (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5974:6: (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5975:7: lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_8_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_basicAbsentPatternSource2_26_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource2",
                      								lv_basicAbsentPatternSource2_26_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5992:5: ( (lv_o_27_0= ruleOR ) )
                    // InternalSiddhiParser.g:5993:6: (lv_o_27_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:5993:6: (lv_o_27_0= ruleOR )
                    // InternalSiddhiParser.g:5994:7: lv_o_27_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_8_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_o_27_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"o",
                      								lv_o_27_0,
                      								"org.xtext.example.siddhi.Siddhi.OR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:6011:5: ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:6012:6: (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6012:6: (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:6013:7: lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_8_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_28_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_28_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruleLogicalAbsentStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAbsentStatefulSource"


    // $ANTLR start "entryRuleAbsentPatternSourceChain"
    // InternalSiddhiParser.g:6036:1: entryRuleAbsentPatternSourceChain returns [EObject current=null] : iv_ruleAbsentPatternSourceChain= ruleAbsentPatternSourceChain EOF ;
    public final EObject entryRuleAbsentPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleAbsentPatternSourceChain_StartIndex = input.index();
        EObject iv_ruleAbsentPatternSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return current; }
            // InternalSiddhiParser.g:6036:65: (iv_ruleAbsentPatternSourceChain= ruleAbsentPatternSourceChain EOF )
            // InternalSiddhiParser.g:6037:2: iv_ruleAbsentPatternSourceChain= ruleAbsentPatternSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbsentPatternSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAbsentPatternSourceChain=ruleAbsentPatternSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbsentPatternSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuleAbsentPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAbsentPatternSourceChain"


    // $ANTLR start "ruleAbsentPatternSourceChain"
    // InternalSiddhiParser.g:6043:1: ruleAbsentPatternSourceChain returns [EObject current=null] : ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) ) ;
    public final EObject ruleAbsentPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleAbsentPatternSourceChain_StartIndex = input.index();
        EObject this_EVERY_0 = null;

        EObject lv_absentPatternSrcChain_2_0 = null;

        EObject lv_wt1_4_0 = null;

        EObject this_EveryAbsentPatternSource_5 = null;

        EObject this_LeftAbsentPatternSource_6 = null;

        EObject this_RightAbsentPatternSource_7 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return current; }
            // InternalSiddhiParser.g:6049:2: ( ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) ) )
            // InternalSiddhiParser.g:6050:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) )
            {
            // InternalSiddhiParser.g:6050:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) )
            int alt69=4;
            switch ( input.LA(1) ) {
            case Every:
                {
                int LA69_1 = input.LA(2);

                if ( (synpred52_InternalSiddhiParser()) ) {
                    alt69=1;
                }
                else if ( (true) ) {
                    alt69=2;
                }
                else if ( (synpred53_InternalSiddhiParser()) ) {
                    alt69=3;
                }
                else if ( (synpred54_InternalSiddhiParser()) ) {
                    alt69=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
                {
                int LA69_2 = input.LA(2);

                if ( (synpred52_InternalSiddhiParser()) ) {
                    alt69=1;
                }
                else if ( (synpred53_InternalSiddhiParser()) ) {
                    alt69=3;
                }
                else if ( (synpred54_InternalSiddhiParser()) ) {
                    alt69=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 2, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA69_3 = input.LA(2);

                if ( (true) ) {
                    alt69=2;
                }
                else if ( (synpred53_InternalSiddhiParser()) ) {
                    alt69=3;
                }
                else if ( (synpred54_InternalSiddhiParser()) ) {
                    alt69=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA69_4 = input.LA(2);

                if ( (synpred53_InternalSiddhiParser()) ) {
                    alt69=3;
                }
                else if ( (synpred54_InternalSiddhiParser()) ) {
                    alt69=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalSiddhiParser.g:6051:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:6051:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:6052:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:6070:4: ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:6071:5: (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:6071:5: (this_EVERY_0= ruleEVERY )?
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==Every) ) {
                        alt67=1;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalSiddhiParser.g:6072:6: this_EVERY_0= ruleEVERY
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getEVERYParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            this_EVERY_0=ruleEVERY();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVERY_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getOPEN_PARParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:6088:5: ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) )
                    // InternalSiddhiParser.g:6089:6: (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:6089:6: (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain )
                    // InternalSiddhiParser.g:6090:7: lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getAbsentPatternSrcChainAbsentPatternSourceChainParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_absentPatternSrcChain_2_0=ruleAbsentPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAbsentPatternSourceChainRule());
                      							}
                      							set(
                      								current,
                      								"absentPatternSrcChain",
                      								lv_absentPatternSrcChain_2_0,
                      								"org.xtext.example.siddhi.Siddhi.AbsentPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_3());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:6114:5: ( (lv_wt1_4_0= ruleWithinTime ) )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==Within) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalSiddhiParser.g:6115:6: (lv_wt1_4_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:6115:6: (lv_wt1_4_0= ruleWithinTime )
                            // InternalSiddhiParser.g:6116:7: lv_wt1_4_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getWt1WithinTimeParserRuleCall_0_0_4_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt1_4_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAbsentPatternSourceChainRule());
                              							}
                              							set(
                              								current,
                              								"wt1",
                              								lv_wt1_4_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6136:3: this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getEveryAbsentPatternSourceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EveryAbsentPatternSource_5=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EveryAbsentPatternSource_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:6145:3: ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6145:3: ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource )
                    // InternalSiddhiParser.g:6146:4: ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getLeftAbsentPatternSourceParserRuleCall_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LeftAbsentPatternSource_6=ruleLeftAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LeftAbsentPatternSource_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:6157:3: ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6157:3: ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource )
                    // InternalSiddhiParser.g:6158:4: ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getRightAbsentPatternSourceParserRuleCall_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RightAbsentPatternSource_7=ruleRightAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RightAbsentPatternSource_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruleAbsentPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAbsentPatternSourceChain"


    // $ANTLR start "entryRuleEveryAbsentPatternSource"
    // InternalSiddhiParser.g:6172:1: entryRuleEveryAbsentPatternSource returns [EObject current=null] : iv_ruleEveryAbsentPatternSource= ruleEveryAbsentPatternSource EOF ;
    public final EObject entryRuleEveryAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleEveryAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return current; }
            // InternalSiddhiParser.g:6172:65: (iv_ruleEveryAbsentPatternSource= ruleEveryAbsentPatternSource EOF )
            // InternalSiddhiParser.g:6173:2: iv_ruleEveryAbsentPatternSource= ruleEveryAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryAbsentPatternSource=ruleEveryAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleEveryAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryAbsentPatternSource"


    // $ANTLR start "ruleEveryAbsentPatternSource"
    // InternalSiddhiParser.g:6179:1: ruleEveryAbsentPatternSource returns [EObject current=null] : ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) ) ;
    public final EObject ruleEveryAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleEveryAbsentPatternSource_StartIndex = input.index();
        EObject this_EVERY_0 = null;

        EObject lv_basicAbsentPS_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return current; }
            // InternalSiddhiParser.g:6185:2: ( ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) ) )
            // InternalSiddhiParser.g:6186:2: ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) )
            {
            // InternalSiddhiParser.g:6186:2: ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) )
            // InternalSiddhiParser.g:6187:3: ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) )
            {
            // InternalSiddhiParser.g:6198:3: ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) )
            // InternalSiddhiParser.g:6199:4: (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) )
            {
            // InternalSiddhiParser.g:6199:4: (this_EVERY_0= ruleEVERY )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==Every) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSiddhiParser.g:6200:5: this_EVERY_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryAbsentPatternSourceAccess().getEVERYParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    this_EVERY_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_EVERY_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:6209:4: ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) )
            // InternalSiddhiParser.g:6210:5: (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource )
            {
            // InternalSiddhiParser.g:6210:5: (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource )
            // InternalSiddhiParser.g:6211:6: lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEveryAbsentPatternSourceAccess().getBasicAbsentPSBasicAbsentPatternSourceParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_basicAbsentPS_1_0=ruleBasicAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEveryAbsentPatternSourceRule());
              						}
              						set(
              							current,
              							"basicAbsentPS",
              							lv_basicAbsentPS_1_0,
              							"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleEveryAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryAbsentPatternSource"


    // $ANTLR start "entryRuleBasicAbsentPatternSource"
    // InternalSiddhiParser.g:6233:1: entryRuleBasicAbsentPatternSource returns [EObject current=null] : iv_ruleBasicAbsentPatternSource= ruleBasicAbsentPatternSource EOF ;
    public final EObject entryRuleBasicAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleBasicAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return current; }
            // InternalSiddhiParser.g:6233:65: (iv_ruleBasicAbsentPatternSource= ruleBasicAbsentPatternSource EOF )
            // InternalSiddhiParser.g:6234:2: iv_ruleBasicAbsentPatternSource= ruleBasicAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicAbsentPatternSource=ruleBasicAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleBasicAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicAbsentPatternSource"


    // $ANTLR start "ruleBasicAbsentPatternSource"
    // InternalSiddhiParser.g:6240:1: ruleBasicAbsentPatternSource returns [EObject current=null] : ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) ) ;
    public final EObject ruleBasicAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleBasicAbsentPatternSource_StartIndex = input.index();
        EObject this_NOT_0 = null;

        EObject lv_basicSrc_1_0 = null;

        EObject lv_ft_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return current; }
            // InternalSiddhiParser.g:6246:2: ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) ) )
            // InternalSiddhiParser.g:6247:2: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) )
            {
            // InternalSiddhiParser.g:6247:2: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) )
            // InternalSiddhiParser.g:6248:3: ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) )
            {
            // InternalSiddhiParser.g:6262:3: (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) )
            // InternalSiddhiParser.g:6263:4: this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) )
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBasicAbsentPatternSourceAccess().getNOTParserRuleCall_0_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_NOT_0=ruleNOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_NOT_0;
              				afterParserOrEnumRuleCall();
              			
            }
            // InternalSiddhiParser.g:6271:4: ( (lv_basicSrc_1_0= ruleBasicSource ) )
            // InternalSiddhiParser.g:6272:5: (lv_basicSrc_1_0= ruleBasicSource )
            {
            // InternalSiddhiParser.g:6272:5: (lv_basicSrc_1_0= ruleBasicSource )
            // InternalSiddhiParser.g:6273:6: lv_basicSrc_1_0= ruleBasicSource
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getBasicAbsentPatternSourceAccess().getBasicSrcBasicSourceParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_70);
            lv_basicSrc_1_0=ruleBasicSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getBasicAbsentPatternSourceRule());
              						}
              						set(
              							current,
              							"basicSrc",
              							lv_basicSrc_1_0,
              							"org.xtext.example.siddhi.Siddhi.BasicSource");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSiddhiParser.g:6290:4: ( (lv_ft_2_0= ruleForTime ) )
            // InternalSiddhiParser.g:6291:5: (lv_ft_2_0= ruleForTime )
            {
            // InternalSiddhiParser.g:6291:5: (lv_ft_2_0= ruleForTime )
            // InternalSiddhiParser.g:6292:6: lv_ft_2_0= ruleForTime
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getBasicAbsentPatternSourceAccess().getFtForTimeParserRuleCall_0_2_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ft_2_0=ruleForTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getBasicAbsentPatternSourceRule());
              						}
              						set(
              							current,
              							"ft",
              							lv_ft_2_0,
              							"org.xtext.example.siddhi.Siddhi.ForTime");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleBasicAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicAbsentPatternSource"


    // $ANTLR start "entryRuleForTime"
    // InternalSiddhiParser.g:6314:1: entryRuleForTime returns [EObject current=null] : iv_ruleForTime= ruleForTime EOF ;
    public final EObject entryRuleForTime() throws RecognitionException {
        EObject current = null;
        int entryRuleForTime_StartIndex = input.index();
        EObject iv_ruleForTime = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return current; }
            // InternalSiddhiParser.g:6314:48: (iv_ruleForTime= ruleForTime EOF )
            // InternalSiddhiParser.g:6315:2: iv_ruleForTime= ruleForTime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForTimeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleForTime=ruleForTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForTime; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRuleForTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleForTime"


    // $ANTLR start "ruleForTime"
    // InternalSiddhiParser.g:6321:1: ruleForTime returns [EObject current=null] : (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) ;
    public final EObject ruleForTime() throws RecognitionException {
        EObject current = null;
        int ruleForTime_StartIndex = input.index();
        EObject this_FOR_0 = null;

        EObject lv_tv_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return current; }
            // InternalSiddhiParser.g:6327:2: ( (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) )
            // InternalSiddhiParser.g:6328:2: (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            {
            // InternalSiddhiParser.g:6328:2: (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            // InternalSiddhiParser.g:6329:3: this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getForTimeRule());
              			}
              			newCompositeNode(grammarAccess.getForTimeAccess().getFORParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_19);
            this_FOR_0=ruleFOR(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FOR_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6340:3: ( (lv_tv_1_0= ruleTimeValue ) )
            // InternalSiddhiParser.g:6341:4: (lv_tv_1_0= ruleTimeValue )
            {
            // InternalSiddhiParser.g:6341:4: (lv_tv_1_0= ruleTimeValue )
            // InternalSiddhiParser.g:6342:5: lv_tv_1_0= ruleTimeValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForTimeAccess().getTvTimeValueParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_tv_1_0=ruleTimeValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForTimeRule());
              					}
              					set(
              						current,
              						"tv",
              						lv_tv_1_0,
              						"org.xtext.example.siddhi.Siddhi.TimeValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, ruleForTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleForTime"


    // $ANTLR start "entryRuleLeftAbsentPatternSource"
    // InternalSiddhiParser.g:6363:1: entryRuleLeftAbsentPatternSource returns [EObject current=null] : iv_ruleLeftAbsentPatternSource= ruleLeftAbsentPatternSource EOF ;
    public final EObject entryRuleLeftAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleLeftAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return current; }
            // InternalSiddhiParser.g:6363:64: (iv_ruleLeftAbsentPatternSource= ruleLeftAbsentPatternSource EOF )
            // InternalSiddhiParser.g:6364:2: iv_ruleLeftAbsentPatternSource= ruleLeftAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentPatternSource=ruleLeftAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRuleLeftAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentPatternSource"


    // $ANTLR start "ruleLeftAbsentPatternSource"
    // InternalSiddhiParser.g:6370:1: ruleLeftAbsentPatternSource returns [EObject current=null] : (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* ) ;
    public final EObject ruleLeftAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentPatternSource_StartIndex = input.index();
        Token lv_fb1_2_0=null;
        EObject this_LeftAbsentPatternSource1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return current; }
            // InternalSiddhiParser.g:6376:2: ( (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:6377:2: (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:6377:2: (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* )
            // InternalSiddhiParser.g:6378:3: this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_62);
            this_LeftAbsentPatternSource1_0=ruleLeftAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentPatternSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6386:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==HyphenMinusGreaterThanSign) ) {
                    int LA71_2 = input.LA(2);

                    if ( (synpred57_InternalSiddhiParser()) ) {
                        alt71=1;
                    }


                }


                switch (alt71) {
            	case 1 :
            	    // InternalSiddhiParser.g:6387:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:6402:4: ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) )
            	    // InternalSiddhiParser.g:6403:5: () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:6403:5: ()
            	    // InternalSiddhiParser.g:6404:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSourceLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:6410:5: ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:6411:6: (lv_fb1_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:6411:6: (lv_fb1_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:6412:7: lv_fb1_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb1_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb1_2_0, grammarAccess.getLeftAbsentPatternSourceAccess().getFb1HyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentPatternSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "fb1", lv_fb1_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:6424:5: ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) )
            	    // InternalSiddhiParser.g:6425:6: (lv_right_3_0= ruleLeftAbsentPatternSource1 )
            	    {
            	    // InternalSiddhiParser.g:6425:6: (lv_right_3_0= ruleLeftAbsentPatternSource1 )
            	    // InternalSiddhiParser.g:6426:7: lv_right_3_0= ruleLeftAbsentPatternSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentPatternSourceAccess().getRightLeftAbsentPatternSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_right_3_0=ruleLeftAbsentPatternSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.LeftAbsentPatternSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, ruleLeftAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentPatternSource"


    // $ANTLR start "entryRuleLeftAbsentPatternSource1"
    // InternalSiddhiParser.g:6449:1: entryRuleLeftAbsentPatternSource1 returns [EObject current=null] : iv_ruleLeftAbsentPatternSource1= ruleLeftAbsentPatternSource1 EOF ;
    public final EObject entryRuleLeftAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentPatternSource1_StartIndex = input.index();
        EObject iv_ruleLeftAbsentPatternSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }
            // InternalSiddhiParser.g:6449:65: (iv_ruleLeftAbsentPatternSource1= ruleLeftAbsentPatternSource1 EOF )
            // InternalSiddhiParser.g:6450:2: iv_ruleLeftAbsentPatternSource1= ruleLeftAbsentPatternSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentPatternSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentPatternSource1=ruleLeftAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentPatternSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleLeftAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentPatternSource1"


    // $ANTLR start "ruleLeftAbsentPatternSource1"
    // InternalSiddhiParser.g:6456:1: ruleLeftAbsentPatternSource1 returns [EObject current=null] : (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) ;
    public final EObject ruleLeftAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentPatternSource1_StartIndex = input.index();
        Token lv_fb_2_0=null;
        EObject this_LeftAbsentPatternSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }
            // InternalSiddhiParser.g:6462:2: ( (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) )
            // InternalSiddhiParser.g:6463:2: (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            {
            // InternalSiddhiParser.g:6463:2: (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            // InternalSiddhiParser.g:6464:3: this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_62);
            this_LeftAbsentPatternSource2_0=ruleLeftAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentPatternSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6472:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==HyphenMinusGreaterThanSign) ) {
                    int LA72_1 = input.LA(2);

                    if ( (synpred58_InternalSiddhiParser()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalSiddhiParser.g:6473:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    {
            	    // InternalSiddhiParser.g:6488:4: ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    // InternalSiddhiParser.g:6489:5: () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    {
            	    // InternalSiddhiParser.g:6489:5: ()
            	    // InternalSiddhiParser.g:6490:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:6496:5: ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:6497:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:6497:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:6498:7: lv_fb_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb_2_0, grammarAccess.getLeftAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentPatternSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "fb", lv_fb_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:6510:5: ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    // InternalSiddhiParser.g:6511:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    {
            	    // InternalSiddhiParser.g:6511:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    // InternalSiddhiParser.g:6512:7: lv_right_3_0= ruleEveryAbsentPatternSource
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_right_3_0=ruleEveryAbsentPatternSource();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, ruleLeftAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentPatternSource1"


    // $ANTLR start "entryRuleLeftAbsentPatternSource2"
    // InternalSiddhiParser.g:6535:1: entryRuleLeftAbsentPatternSource2 returns [EObject current=null] : iv_ruleLeftAbsentPatternSource2= ruleLeftAbsentPatternSource2 EOF ;
    public final EObject entryRuleLeftAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentPatternSource2_StartIndex = input.index();
        EObject iv_ruleLeftAbsentPatternSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return current; }
            // InternalSiddhiParser.g:6535:65: (iv_ruleLeftAbsentPatternSource2= ruleLeftAbsentPatternSource2 EOF )
            // InternalSiddhiParser.g:6536:2: iv_ruleLeftAbsentPatternSource2= ruleLeftAbsentPatternSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentPatternSource2=ruleLeftAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentPatternSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleLeftAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentPatternSource2"


    // $ANTLR start "ruleLeftAbsentPatternSource2"
    // InternalSiddhiParser.g:6542:1: ruleLeftAbsentPatternSource2 returns [EObject current=null] : ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) ) ;
    public final EObject ruleLeftAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentPatternSource2_StartIndex = input.index();
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject this_EVERY_0 = null;

        EObject lv_leftAbsPS_2_0 = null;

        EObject lv_wt2_4_0 = null;

        EObject lv_everyAbsPS_5_0 = null;

        EObject lv_everyPSC_7_0 = null;

        EObject lv_everyPSC_8_0 = null;

        EObject lv_leftAbsPatternSrc_10_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return current; }
            // InternalSiddhiParser.g:6548:2: ( ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) ) )
            // InternalSiddhiParser.g:6549:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:6549:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) )
            int alt75=3;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==Every) ) {
                int LA75_1 = input.LA(2);

                if ( (synpred59_InternalSiddhiParser()) ) {
                    alt75=1;
                }
                else if ( (synpred60_InternalSiddhiParser()) ) {
                    alt75=2;
                }
                else if ( (synpred61_InternalSiddhiParser()) ) {
                    alt75=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA75_0==LeftParenthesis) ) {
                int LA75_2 = input.LA(2);

                if ( (synpred59_InternalSiddhiParser()) ) {
                    alt75=1;
                }
                else if ( (synpred61_InternalSiddhiParser()) ) {
                    alt75=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA75_0==Not) ) {
                int LA75_3 = input.LA(2);

                if ( (synpred60_InternalSiddhiParser()) ) {
                    alt75=2;
                }
                else if ( (synpred61_InternalSiddhiParser()) ) {
                    alt75=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 3, input);

                    throw nvae;
                }
            }
            else if ( (LA75_0==RULE_ID) && (synpred61_InternalSiddhiParser())) {
                alt75=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalSiddhiParser.g:6550:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:6550:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:6551:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:6569:4: ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:6570:5: (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:6570:5: (this_EVERY_0= ruleEVERY )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==Every) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalSiddhiParser.g:6571:6: this_EVERY_0= ruleEVERY
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            this_EVERY_0=ruleEVERY();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVERY_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:6587:5: ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) )
                    // InternalSiddhiParser.g:6588:6: (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6588:6: (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource )
                    // InternalSiddhiParser.g:6589:7: lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPSLeftAbsentPatternSourceParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_leftAbsPS_2_0=ruleLeftAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsPS",
                      								lv_leftAbsPS_2_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:6613:5: ( (lv_wt2_4_0= ruleWithinTime ) )?
                    int alt74=2;
                    int LA74_0 = input.LA(1);

                    if ( (LA74_0==Within) ) {
                        alt74=1;
                    }
                    switch (alt74) {
                        case 1 :
                            // InternalSiddhiParser.g:6614:6: (lv_wt2_4_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:6614:6: (lv_wt2_4_0= ruleWithinTime )
                            // InternalSiddhiParser.g:6615:7: lv_wt2_4_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getWt2WithinTimeParserRuleCall_0_0_4_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt2_4_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                              							}
                              							add(
                              								current,
                              								"wt2",
                              								lv_wt2_4_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6635:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) )
                    {
                    // InternalSiddhiParser.g:6635:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) )
                    // InternalSiddhiParser.g:6636:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) )
                    {
                    // InternalSiddhiParser.g:6650:4: ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) )
                    // InternalSiddhiParser.g:6651:5: ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) )
                    {
                    // InternalSiddhiParser.g:6651:5: ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) )
                    // InternalSiddhiParser.g:6652:6: (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6652:6: (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource )
                    // InternalSiddhiParser.g:6653:7: lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEveryAbsPSEveryAbsentPatternSourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_everyAbsPS_5_0=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyAbsPS",
                      								lv_everyAbsPS_5_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:6674:5: ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:6675:6: (lv_everyPSC_7_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:6675:6: (lv_everyPSC_7_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:6676:7: lv_everyPSC_7_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everyPSC_7_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyPSC",
                      								lv_everyPSC_7_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:6696:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:6696:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:6697:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:6711:4: ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:6712:5: ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:6712:5: ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:6713:6: (lv_everyPSC_8_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:6713:6: (lv_everyPSC_8_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:6714:7: lv_everyPSC_8_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_everyPSC_8_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyPSC",
                      								lv_everyPSC_8_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:6735:5: ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) )
                    // InternalSiddhiParser.g:6736:6: (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6736:6: (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource )
                    // InternalSiddhiParser.g:6737:7: lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPatternSrcLeftAbsentPatternSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_leftAbsPatternSrc_10_0=ruleLeftAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsPatternSrc",
                      								lv_leftAbsPatternSrc_10_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleLeftAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentPatternSource2"


    // $ANTLR start "entryRuleRightAbsentPatternSource"
    // InternalSiddhiParser.g:6760:1: entryRuleRightAbsentPatternSource returns [EObject current=null] : iv_ruleRightAbsentPatternSource= ruleRightAbsentPatternSource EOF ;
    public final EObject entryRuleRightAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleRightAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return current; }
            // InternalSiddhiParser.g:6760:65: (iv_ruleRightAbsentPatternSource= ruleRightAbsentPatternSource EOF )
            // InternalSiddhiParser.g:6761:2: iv_ruleRightAbsentPatternSource= ruleRightAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentPatternSource=ruleRightAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRuleRightAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentPatternSource"


    // $ANTLR start "ruleRightAbsentPatternSource"
    // InternalSiddhiParser.g:6767:1: ruleRightAbsentPatternSource returns [EObject current=null] : (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* ) ;
    public final EObject ruleRightAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentPatternSource_StartIndex = input.index();
        Token lv_fb2_2_0=null;
        EObject this_RightAbsentPatternSource1_0 = null;

        EObject lv_right1_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return current; }
            // InternalSiddhiParser.g:6773:2: ( (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:6774:2: (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:6774:2: (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* )
            // InternalSiddhiParser.g:6775:3: this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_62);
            this_RightAbsentPatternSource1_0=ruleRightAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentPatternSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6783:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==HyphenMinusGreaterThanSign) ) {
                    int LA76_2 = input.LA(2);

                    if ( (synpred62_InternalSiddhiParser()) ) {
                        alt76=1;
                    }


                }


                switch (alt76) {
            	case 1 :
            	    // InternalSiddhiParser.g:6784:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:6799:4: ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) )
            	    // InternalSiddhiParser.g:6800:5: () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:6800:5: ()
            	    // InternalSiddhiParser.g:6801:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSourceLeft1Action_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:6807:5: ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:6808:6: (lv_fb2_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:6808:6: (lv_fb2_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:6809:7: lv_fb2_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb2_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb2_2_0, grammarAccess.getRightAbsentPatternSourceAccess().getFb2HyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentPatternSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "fb2", lv_fb2_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:6821:5: ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) )
            	    // InternalSiddhiParser.g:6822:6: (lv_right1_3_0= ruleRightAbsentPatternSource1 )
            	    {
            	    // InternalSiddhiParser.g:6822:6: (lv_right1_3_0= ruleRightAbsentPatternSource1 )
            	    // InternalSiddhiParser.g:6823:7: lv_right1_3_0= ruleRightAbsentPatternSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentPatternSourceAccess().getRight1RightAbsentPatternSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_right1_3_0=ruleRightAbsentPatternSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right1",
            	      								lv_right1_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.RightAbsentPatternSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, ruleRightAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentPatternSource"


    // $ANTLR start "entryRuleRightAbsentPatternSource1"
    // InternalSiddhiParser.g:6846:1: entryRuleRightAbsentPatternSource1 returns [EObject current=null] : iv_ruleRightAbsentPatternSource1= ruleRightAbsentPatternSource1 EOF ;
    public final EObject entryRuleRightAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentPatternSource1_StartIndex = input.index();
        EObject iv_ruleRightAbsentPatternSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return current; }
            // InternalSiddhiParser.g:6846:66: (iv_ruleRightAbsentPatternSource1= ruleRightAbsentPatternSource1 EOF )
            // InternalSiddhiParser.g:6847:2: iv_ruleRightAbsentPatternSource1= ruleRightAbsentPatternSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentPatternSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentPatternSource1=ruleRightAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentPatternSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, entryRuleRightAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentPatternSource1"


    // $ANTLR start "ruleRightAbsentPatternSource1"
    // InternalSiddhiParser.g:6853:1: ruleRightAbsentPatternSource1 returns [EObject current=null] : (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) ;
    public final EObject ruleRightAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentPatternSource1_StartIndex = input.index();
        Token lv_fb_2_0=null;
        EObject this_RightAbsentPatternSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return current; }
            // InternalSiddhiParser.g:6859:2: ( (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) )
            // InternalSiddhiParser.g:6860:2: (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            {
            // InternalSiddhiParser.g:6860:2: (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            // InternalSiddhiParser.g:6861:3: this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_62);
            this_RightAbsentPatternSource2_0=ruleRightAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentPatternSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6869:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==HyphenMinusGreaterThanSign) ) {
                    int LA77_1 = input.LA(2);

                    if ( (synpred63_InternalSiddhiParser()) ) {
                        alt77=1;
                    }


                }


                switch (alt77) {
            	case 1 :
            	    // InternalSiddhiParser.g:6870:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    {
            	    // InternalSiddhiParser.g:6885:4: ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    // InternalSiddhiParser.g:6886:5: () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    {
            	    // InternalSiddhiParser.g:6886:5: ()
            	    // InternalSiddhiParser.g:6887:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:6893:5: ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:6894:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:6894:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:6895:7: lv_fb_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb_2_0, grammarAccess.getRightAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentPatternSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "fb", lv_fb_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:6907:5: ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    // InternalSiddhiParser.g:6908:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    {
            	    // InternalSiddhiParser.g:6908:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    // InternalSiddhiParser.g:6909:7: lv_right_3_0= ruleEveryAbsentPatternSource
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_right_3_0=ruleEveryAbsentPatternSource();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, ruleRightAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentPatternSource1"


    // $ANTLR start "entryRuleRightAbsentPatternSource2"
    // InternalSiddhiParser.g:6932:1: entryRuleRightAbsentPatternSource2 returns [EObject current=null] : iv_ruleRightAbsentPatternSource2= ruleRightAbsentPatternSource2 EOF ;
    public final EObject entryRuleRightAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentPatternSource2_StartIndex = input.index();
        EObject iv_ruleRightAbsentPatternSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return current; }
            // InternalSiddhiParser.g:6932:66: (iv_ruleRightAbsentPatternSource2= ruleRightAbsentPatternSource2 EOF )
            // InternalSiddhiParser.g:6933:2: iv_ruleRightAbsentPatternSource2= ruleRightAbsentPatternSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentPatternSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentPatternSource2=ruleRightAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentPatternSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, entryRuleRightAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentPatternSource2"


    // $ANTLR start "ruleRightAbsentPatternSource2"
    // InternalSiddhiParser.g:6939:1: ruleRightAbsentPatternSource2 returns [EObject current=null] : ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) ) ;
    public final EObject ruleRightAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentPatternSource2_StartIndex = input.index();
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject this_EVERY_0 = null;

        EObject lv_rightAbsPS_2_0 = null;

        EObject lv_wt3_4_0 = null;

        EObject lv_everyPSC1_5_0 = null;

        EObject lv_everyAbsPS1_7_0 = null;

        EObject lv_everyAbsPS1_8_0 = null;

        EObject lv_rightAbsPS_10_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return current; }
            // InternalSiddhiParser.g:6945:2: ( ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) ) )
            // InternalSiddhiParser.g:6946:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:6946:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) )
            int alt80=3;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==Every) ) {
                int LA80_1 = input.LA(2);

                if ( (synpred64_InternalSiddhiParser()) ) {
                    alt80=1;
                }
                else if ( (synpred65_InternalSiddhiParser()) ) {
                    alt80=2;
                }
                else if ( (synpred66_InternalSiddhiParser()) ) {
                    alt80=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA80_0==LeftParenthesis) ) {
                int LA80_2 = input.LA(2);

                if ( (synpred64_InternalSiddhiParser()) ) {
                    alt80=1;
                }
                else if ( (synpred65_InternalSiddhiParser()) ) {
                    alt80=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA80_0==RULE_ID) && (synpred65_InternalSiddhiParser())) {
                alt80=2;
            }
            else if ( (LA80_0==Not) ) {
                int LA80_4 = input.LA(2);

                if ( (synpred65_InternalSiddhiParser()) ) {
                    alt80=2;
                }
                else if ( (synpred66_InternalSiddhiParser()) ) {
                    alt80=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 4, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalSiddhiParser.g:6947:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:6947:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:6948:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:6966:4: ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:6967:5: (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:6967:5: (this_EVERY_0= ruleEVERY )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==Every) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalSiddhiParser.g:6968:6: this_EVERY_0= ruleEVERY
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            this_EVERY_0=ruleEVERY();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVERY_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:6984:5: ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) )
                    // InternalSiddhiParser.g:6985:6: (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6985:6: (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource )
                    // InternalSiddhiParser.g:6986:7: lv_rightAbsPS_2_0= ruleRightAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_rightAbsPS_2_0=ruleRightAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsPS",
                      								lv_rightAbsPS_2_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7010:5: ( (lv_wt3_4_0= ruleWithinTime ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==Within) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalSiddhiParser.g:7011:6: (lv_wt3_4_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:7011:6: (lv_wt3_4_0= ruleWithinTime )
                            // InternalSiddhiParser.g:7012:7: lv_wt3_4_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getWt3WithinTimeParserRuleCall_0_0_4_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt3_4_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                              							}
                              							add(
                              								current,
                              								"wt3",
                              								lv_wt3_4_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7032:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:7032:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:7033:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:7047:4: ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:7048:5: ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:7048:5: ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:7049:6: (lv_everyPSC1_5_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:7049:6: (lv_everyPSC1_5_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:7050:7: lv_everyPSC1_5_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEveryPSC1EveryPatternSourceChainParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_everyPSC1_5_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyPSC1",
                      								lv_everyPSC1_5_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:7071:5: ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) )
                    // InternalSiddhiParser.g:7072:6: (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:7072:6: (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource )
                    // InternalSiddhiParser.g:7073:7: lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everyAbsPS1_7_0=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyAbsPS1",
                      								lv_everyAbsPS1_7_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:7093:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:7093:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:7094:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:7108:4: ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:7109:5: ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:7109:5: ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) )
                    // InternalSiddhiParser.g:7110:6: (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:7110:6: (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource )
                    // InternalSiddhiParser.g:7111:7: lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_everyAbsPS1_8_0=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyAbsPS1",
                      								lv_everyAbsPS1_8_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:7132:5: ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) )
                    // InternalSiddhiParser.g:7133:6: (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:7133:6: (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource )
                    // InternalSiddhiParser.g:7134:7: lv_rightAbsPS_10_0= ruleRightAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_rightAbsPS_10_0=ruleRightAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsPS",
                      								lv_rightAbsPS_10_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, ruleRightAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentPatternSource2"


    // $ANTLR start "entryRuleSequenceStream"
    // InternalSiddhiParser.g:7157:1: entryRuleSequenceStream returns [EObject current=null] : iv_ruleSequenceStream= ruleSequenceStream EOF ;
    public final EObject entryRuleSequenceStream() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceStream_StartIndex = input.index();
        EObject iv_ruleSequenceStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return current; }
            // InternalSiddhiParser.g:7157:55: (iv_ruleSequenceStream= ruleSequenceStream EOF )
            // InternalSiddhiParser.g:7158:2: iv_ruleSequenceStream= ruleSequenceStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceStream=ruleSequenceStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, entryRuleSequenceStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceStream"


    // $ANTLR start "ruleSequenceStream"
    // InternalSiddhiParser.g:7164:1: ruleSequenceStream returns [EObject current=null] : ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) ) ;
    public final EObject ruleSequenceStream() throws RecognitionException {
        EObject current = null;
        int ruleSequenceStream_StartIndex = input.index();
        EObject lv_everySequenceSourceChain_0_0 = null;

        EObject lv_everyAbsentSequenceSourceChain_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return current; }
            // InternalSiddhiParser.g:7170:2: ( ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) ) )
            // InternalSiddhiParser.g:7171:2: ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) )
            {
            // InternalSiddhiParser.g:7171:2: ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) )
            int alt81=2;
            switch ( input.LA(1) ) {
            case Every:
                {
                int LA81_1 = input.LA(2);

                if ( (synpred67_InternalSiddhiParser()) ) {
                    alt81=1;
                }
                else if ( (synpred68_InternalSiddhiParser()) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA81_2 = input.LA(2);

                if ( (synpred67_InternalSiddhiParser()) ) {
                    alt81=1;
                }
                else if ( (synpred68_InternalSiddhiParser()) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 2, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
                {
                int LA81_3 = input.LA(2);

                if ( (synpred67_InternalSiddhiParser()) ) {
                    alt81=1;
                }
                else if ( (synpred68_InternalSiddhiParser()) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 3, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA81_4 = input.LA(2);

                if ( (synpred67_InternalSiddhiParser()) ) {
                    alt81=1;
                }
                else if ( (synpred68_InternalSiddhiParser()) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }

            switch (alt81) {
                case 1 :
                    // InternalSiddhiParser.g:7172:3: ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) )
                    {
                    // InternalSiddhiParser.g:7172:3: ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) )
                    // InternalSiddhiParser.g:7173:4: ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:7177:4: (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain )
                    // InternalSiddhiParser.g:7178:5: lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceStreamAccess().getEverySequenceSourceChainEverySequenceSourceChainParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everySequenceSourceChain_0_0=ruleEverySequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSequenceStreamRule());
                      					}
                      					set(
                      						current,
                      						"everySequenceSourceChain",
                      						lv_everySequenceSourceChain_0_0,
                      						"org.xtext.example.siddhi.Siddhi.EverySequenceSourceChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7196:3: ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) )
                    {
                    // InternalSiddhiParser.g:7196:3: ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) )
                    // InternalSiddhiParser.g:7197:4: ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:7201:4: (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain )
                    // InternalSiddhiParser.g:7202:5: lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceStreamAccess().getEveryAbsentSequenceSourceChainEveryAbsentSequenceSourceChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everyAbsentSequenceSourceChain_1_0=ruleEveryAbsentSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSequenceStreamRule());
                      					}
                      					set(
                      						current,
                      						"everyAbsentSequenceSourceChain",
                      						lv_everyAbsentSequenceSourceChain_1_0,
                      						"org.xtext.example.siddhi.Siddhi.EveryAbsentSequenceSourceChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, ruleSequenceStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceStream"


    // $ANTLR start "entryRuleEverySequenceSourceChain"
    // InternalSiddhiParser.g:7223:1: entryRuleEverySequenceSourceChain returns [EObject current=null] : iv_ruleEverySequenceSourceChain= ruleEverySequenceSourceChain EOF ;
    public final EObject entryRuleEverySequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleEverySequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleEverySequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return current; }
            // InternalSiddhiParser.g:7223:65: (iv_ruleEverySequenceSourceChain= ruleEverySequenceSourceChain EOF )
            // InternalSiddhiParser.g:7224:2: iv_ruleEverySequenceSourceChain= ruleEverySequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEverySequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEverySequenceSourceChain=ruleEverySequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEverySequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, entryRuleEverySequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEverySequenceSourceChain"


    // $ANTLR start "ruleEverySequenceSourceChain"
    // InternalSiddhiParser.g:7230:1: ruleEverySequenceSourceChain returns [EObject current=null] : ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) ) ;
    public final EObject ruleEverySequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleEverySequenceSourceChain_StartIndex = input.index();
        Token otherlv_3=null;
        EObject this_EVERY_0 = null;

        EObject lv_seqSource_1_0 = null;

        EObject lv_wt_2_0 = null;

        EObject lv_ssc_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return current; }
            // InternalSiddhiParser.g:7236:2: ( ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) ) )
            // InternalSiddhiParser.g:7237:2: ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) )
            {
            // InternalSiddhiParser.g:7237:2: ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) )
            // InternalSiddhiParser.g:7238:3: ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) )
            {
            // InternalSiddhiParser.g:7260:3: ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) )
            // InternalSiddhiParser.g:7261:4: (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) )
            {
            // InternalSiddhiParser.g:7261:4: (this_EVERY_0= ruleEVERY )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==Every) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSiddhiParser.g:7262:5: this_EVERY_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getEVERYParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    this_EVERY_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_EVERY_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:7271:4: ( (lv_seqSource_1_0= ruleSequenceSource ) )
            // InternalSiddhiParser.g:7272:5: (lv_seqSource_1_0= ruleSequenceSource )
            {
            // InternalSiddhiParser.g:7272:5: (lv_seqSource_1_0= ruleSequenceSource )
            // InternalSiddhiParser.g:7273:6: lv_seqSource_1_0= ruleSequenceSource
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getSeqSourceSequenceSourceParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_seqSource_1_0=ruleSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEverySequenceSourceChainRule());
              						}
              						set(
              							current,
              							"seqSource",
              							lv_seqSource_1_0,
              							"org.xtext.example.siddhi.Siddhi.SequenceSource");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSiddhiParser.g:7290:4: ( (lv_wt_2_0= ruleWithinTime ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==Within) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSiddhiParser.g:7291:5: (lv_wt_2_0= ruleWithinTime )
                    {
                    // InternalSiddhiParser.g:7291:5: (lv_wt_2_0= ruleWithinTime )
                    // InternalSiddhiParser.g:7292:6: lv_wt_2_0= ruleWithinTime
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getWtWithinTimeParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_wt_2_0=ruleWithinTime();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEverySequenceSourceChainRule());
                      						}
                      						set(
                      							current,
                      							"wt",
                      							lv_wt_2_0,
                      							"org.xtext.example.siddhi.Siddhi.WithinTime");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getEverySequenceSourceChainAccess().getCommaKeyword_0_3());
              			
            }
            // InternalSiddhiParser.g:7313:4: ( (lv_ssc_4_0= ruleSequenceSourceChain ) )
            // InternalSiddhiParser.g:7314:5: (lv_ssc_4_0= ruleSequenceSourceChain )
            {
            // InternalSiddhiParser.g:7314:5: (lv_ssc_4_0= ruleSequenceSourceChain )
            // InternalSiddhiParser.g:7315:6: lv_ssc_4_0= ruleSequenceSourceChain
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getSscSequenceSourceChainParserRuleCall_0_4_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ssc_4_0=ruleSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEverySequenceSourceChainRule());
              						}
              						set(
              							current,
              							"ssc",
              							lv_ssc_4_0,
              							"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, ruleEverySequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEverySequenceSourceChain"


    // $ANTLR start "entryRuleEveryAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:7337:1: entryRuleEveryAbsentSequenceSourceChain returns [EObject current=null] : iv_ruleEveryAbsentSequenceSourceChain= ruleEveryAbsentSequenceSourceChain EOF ;
    public final EObject entryRuleEveryAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryAbsentSequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleEveryAbsentSequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return current; }
            // InternalSiddhiParser.g:7337:71: (iv_ruleEveryAbsentSequenceSourceChain= ruleEveryAbsentSequenceSourceChain EOF )
            // InternalSiddhiParser.g:7338:2: iv_ruleEveryAbsentSequenceSourceChain= ruleEveryAbsentSequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryAbsentSequenceSourceChain=ruleEveryAbsentSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryAbsentSequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, entryRuleEveryAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryAbsentSequenceSourceChain"


    // $ANTLR start "ruleEveryAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:7344:1: ruleEveryAbsentSequenceSourceChain returns [EObject current=null] : ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) ) ;
    public final EObject ruleEveryAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleEveryAbsentSequenceSourceChain_StartIndex = input.index();
        Token otherlv_2=null;
        EObject this_EVERY_0 = null;

        EObject lv_absSeqSrcChain_1_0 = null;

        EObject lv_seqSrcChain_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return current; }
            // InternalSiddhiParser.g:7350:2: ( ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) ) )
            // InternalSiddhiParser.g:7351:2: ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) )
            {
            // InternalSiddhiParser.g:7351:2: ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) )
            // InternalSiddhiParser.g:7352:3: ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) )
            {
            // InternalSiddhiParser.g:7369:3: ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) )
            // InternalSiddhiParser.g:7370:4: (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) )
            {
            // InternalSiddhiParser.g:7370:4: (this_EVERY_0= ruleEVERY )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==Every) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSiddhiParser.g:7371:5: this_EVERY_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getEVERYParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    this_EVERY_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_EVERY_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:7380:4: ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) )
            // InternalSiddhiParser.g:7381:5: (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain )
            {
            // InternalSiddhiParser.g:7381:5: (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain )
            // InternalSiddhiParser.g:7382:6: lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getAbsSeqSrcChainAbsentSequenceSourceChainParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_absSeqSrcChain_1_0=ruleAbsentSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEveryAbsentSequenceSourceChainRule());
              						}
              						set(
              							current,
              							"absSeqSrcChain",
              							lv_absSeqSrcChain_1_0,
              							"org.xtext.example.siddhi.Siddhi.AbsentSequenceSourceChain");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getEveryAbsentSequenceSourceChainAccess().getCommaKeyword_0_2());
              			
            }
            // InternalSiddhiParser.g:7403:4: ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) )
            // InternalSiddhiParser.g:7404:5: (lv_seqSrcChain_3_0= ruleSequenceSourceChain )
            {
            // InternalSiddhiParser.g:7404:5: (lv_seqSrcChain_3_0= ruleSequenceSourceChain )
            // InternalSiddhiParser.g:7405:6: lv_seqSrcChain_3_0= ruleSequenceSourceChain
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getSeqSrcChainSequenceSourceChainParserRuleCall_0_3_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_seqSrcChain_3_0=ruleSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEveryAbsentSequenceSourceChainRule());
              						}
              						set(
              							current,
              							"seqSrcChain",
              							lv_seqSrcChain_3_0,
              							"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, ruleEveryAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryAbsentSequenceSourceChain"


    // $ANTLR start "entryRuleAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:7427:1: entryRuleAbsentSequenceSourceChain returns [EObject current=null] : iv_ruleAbsentSequenceSourceChain= ruleAbsentSequenceSourceChain EOF ;
    public final EObject entryRuleAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleAbsentSequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleAbsentSequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return current; }
            // InternalSiddhiParser.g:7427:66: (iv_ruleAbsentSequenceSourceChain= ruleAbsentSequenceSourceChain EOF )
            // InternalSiddhiParser.g:7428:2: iv_ruleAbsentSequenceSourceChain= ruleAbsentSequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbsentSequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAbsentSequenceSourceChain=ruleAbsentSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbsentSequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, entryRuleAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAbsentSequenceSourceChain"


    // $ANTLR start "ruleAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:7434:1: ruleAbsentSequenceSourceChain returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) ) ;
    public final EObject ruleAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleAbsentSequenceSourceChain_StartIndex = input.index();
        EObject lv_absentSequenceSourceChain_1_0 = null;

        EObject lv_wt5_3_0 = null;

        EObject lv_basicAbsentPatternSource_4_0 = null;

        EObject lv_leftAbsentSequenceSource_5_0 = null;

        EObject lv_rightAbsentSequenceSource_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return current; }
            // InternalSiddhiParser.g:7440:2: ( ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) ) )
            // InternalSiddhiParser.g:7441:2: ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) )
            {
            // InternalSiddhiParser.g:7441:2: ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) )
            int alt86=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA86_1 = input.LA(2);

                if ( (synpred71_InternalSiddhiParser()) ) {
                    alt86=1;
                }
                else if ( (synpred73_InternalSiddhiParser()) ) {
                    alt86=3;
                }
                else if ( (synpred74_InternalSiddhiParser()) ) {
                    alt86=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 86, 1, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA86_2 = input.LA(2);

                if ( (synpred72_InternalSiddhiParser()) ) {
                    alt86=2;
                }
                else if ( (synpred73_InternalSiddhiParser()) ) {
                    alt86=3;
                }
                else if ( (synpred74_InternalSiddhiParser()) ) {
                    alt86=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 86, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA86_3 = input.LA(2);

                if ( (synpred73_InternalSiddhiParser()) ) {
                    alt86=3;
                }
                else if ( (synpred74_InternalSiddhiParser()) ) {
                    alt86=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 86, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }

            switch (alt86) {
                case 1 :
                    // InternalSiddhiParser.g:7442:3: ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:7442:3: ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:7443:4: ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:7458:4: ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:7459:5: ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7466:5: ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) )
                    // InternalSiddhiParser.g:7467:6: (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:7467:6: (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain )
                    // InternalSiddhiParser.g:7468:7: lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getAbsentSequenceSourceChainAbsentSequenceSourceChainParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_absentSequenceSourceChain_1_0=ruleAbsentSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      							}
                      							set(
                      								current,
                      								"absentSequenceSourceChain",
                      								lv_absentSequenceSourceChain_1_0,
                      								"org.xtext.example.siddhi.Siddhi.AbsentSequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7492:5: ( (lv_wt5_3_0= ruleWithinTime ) )?
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( (LA85_0==Within) ) {
                        alt85=1;
                    }
                    switch (alt85) {
                        case 1 :
                            // InternalSiddhiParser.g:7493:6: (lv_wt5_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:7493:6: (lv_wt5_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:7494:7: lv_wt5_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getWt5WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt5_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                              							}
                              							set(
                              								current,
                              								"wt5",
                              								lv_wt5_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7514:3: ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:7514:3: ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:7515:4: ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:7519:4: (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:7520:5: lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_4_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      					}
                      					set(
                      						current,
                      						"basicAbsentPatternSource",
                      						lv_basicAbsentPatternSource_4_0,
                      						"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:7538:3: ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:7538:3: ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:7539:4: ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:7543:4: (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource )
                    // InternalSiddhiParser.g:7544:5: lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_leftAbsentSequenceSource_5_0=ruleLeftAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      					}
                      					set(
                      						current,
                      						"leftAbsentSequenceSource",
                      						lv_leftAbsentSequenceSource_5_0,
                      						"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:7562:3: ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:7562:3: ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:7563:4: ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:7567:4: (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource )
                    // InternalSiddhiParser.g:7568:5: lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_rightAbsentSequenceSource_6_0=ruleRightAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      					}
                      					set(
                      						current,
                      						"rightAbsentSequenceSource",
                      						lv_rightAbsentSequenceSource_6_0,
                      						"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, ruleAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAbsentSequenceSourceChain"


    // $ANTLR start "entryRuleLeftAbsentSequenceSource"
    // InternalSiddhiParser.g:7589:1: entryRuleLeftAbsentSequenceSource returns [EObject current=null] : iv_ruleLeftAbsentSequenceSource= ruleLeftAbsentSequenceSource EOF ;
    public final EObject entryRuleLeftAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentSequenceSource_StartIndex = input.index();
        EObject iv_ruleLeftAbsentSequenceSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return current; }
            // InternalSiddhiParser.g:7589:65: (iv_ruleLeftAbsentSequenceSource= ruleLeftAbsentSequenceSource EOF )
            // InternalSiddhiParser.g:7590:2: iv_ruleLeftAbsentSequenceSource= ruleLeftAbsentSequenceSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentSequenceSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentSequenceSource=ruleLeftAbsentSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentSequenceSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, entryRuleLeftAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentSequenceSource"


    // $ANTLR start "ruleLeftAbsentSequenceSource"
    // InternalSiddhiParser.g:7596:1: ruleLeftAbsentSequenceSource returns [EObject current=null] : (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* ) ;
    public final EObject ruleLeftAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentSequenceSource_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_LeftAbsentSequenceSource1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return current; }
            // InternalSiddhiParser.g:7602:2: ( (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:7603:2: (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:7603:2: (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* )
            // InternalSiddhiParser.g:7604:3: this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_32);
            this_LeftAbsentSequenceSource1_0=ruleLeftAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentSequenceSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:7612:3: ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==Comma) ) {
                    int LA87_1 = input.LA(2);

                    if ( (synpred75_InternalSiddhiParser()) ) {
                        alt87=1;
                    }


                }


                switch (alt87) {
            	case 1 :
            	    // InternalSiddhiParser.g:7613:4: ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:7628:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) )
            	    // InternalSiddhiParser.g:7629:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:7629:5: ()
            	    // InternalSiddhiParser.g:7630:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSourceLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:7636:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:7637:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:7637:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:7638:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getLeftAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:7650:5: ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) )
            	    // InternalSiddhiParser.g:7651:6: (lv_right_3_0= ruleLeftAbsentSequenceSource1 )
            	    {
            	    // InternalSiddhiParser.g:7651:6: (lv_right_3_0= ruleLeftAbsentSequenceSource1 )
            	    // InternalSiddhiParser.g:7652:7: lv_right_3_0= ruleLeftAbsentSequenceSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSourceAccess().getRightLeftAbsentSequenceSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_right_3_0=ruleLeftAbsentSequenceSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, ruleLeftAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentSequenceSource"


    // $ANTLR start "entryRuleLeftAbsentSequenceSource1"
    // InternalSiddhiParser.g:7675:1: entryRuleLeftAbsentSequenceSource1 returns [EObject current=null] : iv_ruleLeftAbsentSequenceSource1= ruleLeftAbsentSequenceSource1 EOF ;
    public final EObject entryRuleLeftAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentSequenceSource1_StartIndex = input.index();
        EObject iv_ruleLeftAbsentSequenceSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return current; }
            // InternalSiddhiParser.g:7675:66: (iv_ruleLeftAbsentSequenceSource1= ruleLeftAbsentSequenceSource1 EOF )
            // InternalSiddhiParser.g:7676:2: iv_ruleLeftAbsentSequenceSource1= ruleLeftAbsentSequenceSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentSequenceSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentSequenceSource1=ruleLeftAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentSequenceSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, entryRuleLeftAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentSequenceSource1"


    // $ANTLR start "ruleLeftAbsentSequenceSource1"
    // InternalSiddhiParser.g:7682:1: ruleLeftAbsentSequenceSource1 returns [EObject current=null] : (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* ) ;
    public final EObject ruleLeftAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentSequenceSource1_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_LeftAbsentSequenceSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return current; }
            // InternalSiddhiParser.g:7688:2: ( (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* ) )
            // InternalSiddhiParser.g:7689:2: (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* )
            {
            // InternalSiddhiParser.g:7689:2: (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* )
            // InternalSiddhiParser.g:7690:3: this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_32);
            this_LeftAbsentSequenceSource2_0=ruleLeftAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentSequenceSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:7698:3: ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==Comma) ) {
                    int LA88_1 = input.LA(2);

                    if ( (synpred76_InternalSiddhiParser()) ) {
                        alt88=1;
                    }


                }


                switch (alt88) {
            	case 1 :
            	    // InternalSiddhiParser.g:7699:4: ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) )
            	    {
            	    // InternalSiddhiParser.g:7714:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) )
            	    // InternalSiddhiParser.g:7715:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) )
            	    {
            	    // InternalSiddhiParser.g:7715:5: ()
            	    // InternalSiddhiParser.g:7716:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:7722:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:7723:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:7723:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:7724:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getLeftAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:7736:5: ( (lv_right_3_0= ruleBasicAbsentPatternSource ) )
            	    // InternalSiddhiParser.g:7737:6: (lv_right_3_0= ruleBasicAbsentPatternSource )
            	    {
            	    // InternalSiddhiParser.g:7737:6: (lv_right_3_0= ruleBasicAbsentPatternSource )
            	    // InternalSiddhiParser.g:7738:7: lv_right_3_0= ruleBasicAbsentPatternSource
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource1Access().getRightBasicAbsentPatternSourceParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_right_3_0=ruleBasicAbsentPatternSource();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, ruleLeftAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentSequenceSource1"


    // $ANTLR start "entryRuleLeftAbsentSequenceSource2"
    // InternalSiddhiParser.g:7761:1: entryRuleLeftAbsentSequenceSource2 returns [EObject current=null] : iv_ruleLeftAbsentSequenceSource2= ruleLeftAbsentSequenceSource2 EOF ;
    public final EObject entryRuleLeftAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentSequenceSource2_StartIndex = input.index();
        EObject iv_ruleLeftAbsentSequenceSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return current; }
            // InternalSiddhiParser.g:7761:66: (iv_ruleLeftAbsentSequenceSource2= ruleLeftAbsentSequenceSource2 EOF )
            // InternalSiddhiParser.g:7762:2: iv_ruleLeftAbsentSequenceSource2= ruleLeftAbsentSequenceSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentSequenceSource2=ruleLeftAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentSequenceSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, entryRuleLeftAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentSequenceSource2"


    // $ANTLR start "ruleLeftAbsentSequenceSource2"
    // InternalSiddhiParser.g:7768:1: ruleLeftAbsentSequenceSource2 returns [EObject current=null] : ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) ) ;
    public final EObject ruleLeftAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentSequenceSource2_StartIndex = input.index();
        Token lv_comma_5_0=null;
        Token lv_comma_8_0=null;
        AntlrDatatypeRuleToken lv_op_0_0 = null;

        EObject lv_leftAbsentSequenceSource_1_0 = null;

        AntlrDatatypeRuleToken lv_cp_2_0 = null;

        EObject lv_wt6_3_0 = null;

        EObject lv_basicAbsentPatternSource_4_0 = null;

        EObject lv_sequenceSourceChain_6_0 = null;

        EObject lv_sequenceSourceChain_7_0 = null;

        EObject lv_leftAbsentSequenceSource_9_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return current; }
            // InternalSiddhiParser.g:7774:2: ( ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) ) )
            // InternalSiddhiParser.g:7775:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:7775:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) )
            int alt90=3;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==LeftParenthesis) ) {
                int LA90_1 = input.LA(2);

                if ( (synpred77_InternalSiddhiParser()) ) {
                    alt90=1;
                }
                else if ( (synpred79_InternalSiddhiParser()) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA90_0==Not) ) {
                int LA90_2 = input.LA(2);

                if ( (synpred78_InternalSiddhiParser()) ) {
                    alt90=2;
                }
                else if ( (synpred79_InternalSiddhiParser()) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA90_0==RULE_ID) && (synpred79_InternalSiddhiParser())) {
                alt90=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalSiddhiParser.g:7776:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:7776:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:7777:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:7800:4: ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:7801:5: ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:7801:5: ( (lv_op_0_0= ruleOPEN_PAR ) )
                    // InternalSiddhiParser.g:7802:6: (lv_op_0_0= ruleOPEN_PAR )
                    {
                    // InternalSiddhiParser.g:7802:6: (lv_op_0_0= ruleOPEN_PAR )
                    // InternalSiddhiParser.g:7803:7: lv_op_0_0= ruleOPEN_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    lv_op_0_0=ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"op",
                      								lv_op_0_0,
                      								"org.xtext.example.siddhi.Siddhi.OPEN_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7820:5: ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:7821:6: (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:7821:6: (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource )
                    // InternalSiddhiParser.g:7822:7: lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_leftAbsentSequenceSource_1_0=ruleLeftAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsentSequenceSource",
                      								lv_leftAbsentSequenceSource_1_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7839:5: ( (lv_cp_2_0= ruleCLOSE_PAR ) )
                    // InternalSiddhiParser.g:7840:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:7840:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:7841:7: lv_cp_2_0= ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_cp_2_0=ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"cp",
                      								lv_cp_2_0,
                      								"org.xtext.example.siddhi.Siddhi.CLOSE_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7858:5: ( (lv_wt6_3_0= ruleWithinTime ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==Within) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalSiddhiParser.g:7859:6: (lv_wt6_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:7859:6: (lv_wt6_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:7860:7: lv_wt6_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getWt6WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt6_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                              							}
                              							set(
                              								current,
                              								"wt6",
                              								lv_wt6_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7880:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) )
                    {
                    // InternalSiddhiParser.g:7880:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) )
                    // InternalSiddhiParser.g:7881:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) )
                    {
                    // InternalSiddhiParser.g:7899:4: ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) )
                    // InternalSiddhiParser.g:7900:5: ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) )
                    {
                    // InternalSiddhiParser.g:7900:5: ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:7901:6: (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:7901:6: (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:7902:7: lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_basicAbsentPatternSource_4_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_4_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7919:5: ( (lv_comma_5_0= Comma ) )
                    // InternalSiddhiParser.g:7920:6: (lv_comma_5_0= Comma )
                    {
                    // InternalSiddhiParser.g:7920:6: (lv_comma_5_0= Comma )
                    // InternalSiddhiParser.g:7921:7: lv_comma_5_0= Comma
                    {
                    lv_comma_5_0=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_comma_5_0, grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							setWithLastConsumed(current, "comma", lv_comma_5_0, ",");
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7933:5: ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) )
                    // InternalSiddhiParser.g:7934:6: (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:7934:6: (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain )
                    // InternalSiddhiParser.g:7935:7: lv_sequenceSourceChain_6_0= ruleSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sequenceSourceChain_6_0=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"sequenceSourceChain",
                      								lv_sequenceSourceChain_6_0,
                      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:7955:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:7955:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) )
                    // InternalSiddhiParser.g:7956:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) )
                    {
                    // InternalSiddhiParser.g:7974:4: ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) )
                    // InternalSiddhiParser.g:7975:5: ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:7975:5: ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) )
                    // InternalSiddhiParser.g:7976:6: (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:7976:6: (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain )
                    // InternalSiddhiParser.g:7977:7: lv_sequenceSourceChain_7_0= ruleSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_sequenceSourceChain_7_0=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"sequenceSourceChain",
                      								lv_sequenceSourceChain_7_0,
                      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7994:5: ( (lv_comma_8_0= Comma ) )
                    // InternalSiddhiParser.g:7995:6: (lv_comma_8_0= Comma )
                    {
                    // InternalSiddhiParser.g:7995:6: (lv_comma_8_0= Comma )
                    // InternalSiddhiParser.g:7996:7: lv_comma_8_0= Comma
                    {
                    lv_comma_8_0=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_comma_8_0, grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_2_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							setWithLastConsumed(current, "comma", lv_comma_8_0, ",");
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8008:5: ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:8009:6: (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:8009:6: (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource )
                    // InternalSiddhiParser.g:8010:7: lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_leftAbsentSequenceSource_9_0=ruleLeftAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsentSequenceSource",
                      								lv_leftAbsentSequenceSource_9_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, ruleLeftAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentSequenceSource2"


    // $ANTLR start "entryRuleRightAbsentSequenceSource"
    // InternalSiddhiParser.g:8033:1: entryRuleRightAbsentSequenceSource returns [EObject current=null] : iv_ruleRightAbsentSequenceSource= ruleRightAbsentSequenceSource EOF ;
    public final EObject entryRuleRightAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentSequenceSource_StartIndex = input.index();
        EObject iv_ruleRightAbsentSequenceSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return current; }
            // InternalSiddhiParser.g:8033:66: (iv_ruleRightAbsentSequenceSource= ruleRightAbsentSequenceSource EOF )
            // InternalSiddhiParser.g:8034:2: iv_ruleRightAbsentSequenceSource= ruleRightAbsentSequenceSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentSequenceSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentSequenceSource=ruleRightAbsentSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentSequenceSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, entryRuleRightAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentSequenceSource"


    // $ANTLR start "ruleRightAbsentSequenceSource"
    // InternalSiddhiParser.g:8040:1: ruleRightAbsentSequenceSource returns [EObject current=null] : (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* ) ;
    public final EObject ruleRightAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentSequenceSource_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_RightAbsentSequenceSource1_0 = null;

        EObject lv_right1_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return current; }
            // InternalSiddhiParser.g:8046:2: ( (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:8047:2: (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:8047:2: (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* )
            // InternalSiddhiParser.g:8048:3: this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_32);
            this_RightAbsentSequenceSource1_0=ruleRightAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentSequenceSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:8056:3: ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==Comma) ) {
                    int LA91_1 = input.LA(2);

                    if ( (synpred80_InternalSiddhiParser()) ) {
                        alt91=1;
                    }


                }


                switch (alt91) {
            	case 1 :
            	    // InternalSiddhiParser.g:8057:4: ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:8072:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) )
            	    // InternalSiddhiParser.g:8073:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:8073:5: ()
            	    // InternalSiddhiParser.g:8074:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSourceLeft1Action_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:8080:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:8081:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:8081:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:8082:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getRightAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentSequenceSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:8094:5: ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) )
            	    // InternalSiddhiParser.g:8095:6: (lv_right1_3_0= ruleRightAbsentSequenceSource1 )
            	    {
            	    // InternalSiddhiParser.g:8095:6: (lv_right1_3_0= ruleRightAbsentSequenceSource1 )
            	    // InternalSiddhiParser.g:8096:7: lv_right1_3_0= ruleRightAbsentSequenceSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentSequenceSourceAccess().getRight1RightAbsentSequenceSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_right1_3_0=ruleRightAbsentSequenceSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right1",
            	      								lv_right1_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, ruleRightAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentSequenceSource"


    // $ANTLR start "entryRuleRightAbsentSequenceSource1"
    // InternalSiddhiParser.g:8119:1: entryRuleRightAbsentSequenceSource1 returns [EObject current=null] : iv_ruleRightAbsentSequenceSource1= ruleRightAbsentSequenceSource1 EOF ;
    public final EObject entryRuleRightAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentSequenceSource1_StartIndex = input.index();
        EObject iv_ruleRightAbsentSequenceSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return current; }
            // InternalSiddhiParser.g:8119:67: (iv_ruleRightAbsentSequenceSource1= ruleRightAbsentSequenceSource1 EOF )
            // InternalSiddhiParser.g:8120:2: iv_ruleRightAbsentSequenceSource1= ruleRightAbsentSequenceSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentSequenceSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentSequenceSource1=ruleRightAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentSequenceSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, entryRuleRightAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentSequenceSource1"


    // $ANTLR start "ruleRightAbsentSequenceSource1"
    // InternalSiddhiParser.g:8126:1: ruleRightAbsentSequenceSource1 returns [EObject current=null] : (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* ) ;
    public final EObject ruleRightAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentSequenceSource1_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_RightAbsentSequenceSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return current; }
            // InternalSiddhiParser.g:8132:2: ( (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* ) )
            // InternalSiddhiParser.g:8133:2: (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* )
            {
            // InternalSiddhiParser.g:8133:2: (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* )
            // InternalSiddhiParser.g:8134:3: this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_32);
            this_RightAbsentSequenceSource2_0=ruleRightAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentSequenceSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:8142:3: ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==Comma) ) {
                    int LA92_1 = input.LA(2);

                    if ( (synpred81_InternalSiddhiParser()) ) {
                        alt92=1;
                    }


                }


                switch (alt92) {
            	case 1 :
            	    // InternalSiddhiParser.g:8143:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) )
            	    {
            	    // InternalSiddhiParser.g:8158:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) )
            	    // InternalSiddhiParser.g:8159:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) )
            	    {
            	    // InternalSiddhiParser.g:8159:5: ()
            	    // InternalSiddhiParser.g:8160:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:8166:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:8167:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:8167:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:8168:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getRightAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentSequenceSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:8180:5: ( (lv_right_3_0= ruleSequenceSourceChain ) )
            	    // InternalSiddhiParser.g:8181:6: (lv_right_3_0= ruleSequenceSourceChain )
            	    {
            	    // InternalSiddhiParser.g:8181:6: (lv_right_3_0= ruleSequenceSourceChain )
            	    // InternalSiddhiParser.g:8182:7: lv_right_3_0= ruleSequenceSourceChain
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource1Access().getRightSequenceSourceChainParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_right_3_0=ruleSequenceSourceChain();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, ruleRightAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentSequenceSource1"


    // $ANTLR start "entryRuleRightAbsentSequenceSource2"
    // InternalSiddhiParser.g:8205:1: entryRuleRightAbsentSequenceSource2 returns [EObject current=null] : iv_ruleRightAbsentSequenceSource2= ruleRightAbsentSequenceSource2 EOF ;
    public final EObject entryRuleRightAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentSequenceSource2_StartIndex = input.index();
        EObject iv_ruleRightAbsentSequenceSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return current; }
            // InternalSiddhiParser.g:8205:67: (iv_ruleRightAbsentSequenceSource2= ruleRightAbsentSequenceSource2 EOF )
            // InternalSiddhiParser.g:8206:2: iv_ruleRightAbsentSequenceSource2= ruleRightAbsentSequenceSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentSequenceSource2=ruleRightAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentSequenceSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, entryRuleRightAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentSequenceSource2"


    // $ANTLR start "ruleRightAbsentSequenceSource2"
    // InternalSiddhiParser.g:8212:1: ruleRightAbsentSequenceSource2 returns [EObject current=null] : ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) ) ;
    public final EObject ruleRightAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentSequenceSource2_StartIndex = input.index();
        Token lv_comma_5_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_op_0_0 = null;

        EObject lv_rightAbsentSequenceSource_1_0 = null;

        AntlrDatatypeRuleToken lv_cp_2_0 = null;

        EObject lv_wt7_3_0 = null;

        EObject lv_sequenceSourceChain_4_0 = null;

        EObject lv_basicAbsentPatternSource_6_0 = null;

        EObject lv_basicAbsentPatternSource_7_0 = null;

        EObject lv_rightAbsentSequenceSource_9_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return current; }
            // InternalSiddhiParser.g:8218:2: ( ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) ) )
            // InternalSiddhiParser.g:8219:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:8219:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) )
            int alt94=3;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==LeftParenthesis) ) {
                int LA94_1 = input.LA(2);

                if ( (synpred82_InternalSiddhiParser()) ) {
                    alt94=1;
                }
                else if ( (synpred83_InternalSiddhiParser()) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA94_0==RULE_ID) && (synpred83_InternalSiddhiParser())) {
                alt94=2;
            }
            else if ( (LA94_0==Not) ) {
                int LA94_3 = input.LA(2);

                if ( (synpred83_InternalSiddhiParser()) ) {
                    alt94=2;
                }
                else if ( (synpred84_InternalSiddhiParser()) ) {
                    alt94=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 3, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalSiddhiParser.g:8220:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:8220:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:8221:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:8244:4: ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:8245:5: ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:8245:5: ( (lv_op_0_0= ruleOPEN_PAR ) )
                    // InternalSiddhiParser.g:8246:6: (lv_op_0_0= ruleOPEN_PAR )
                    {
                    // InternalSiddhiParser.g:8246:6: (lv_op_0_0= ruleOPEN_PAR )
                    // InternalSiddhiParser.g:8247:7: lv_op_0_0= ruleOPEN_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    lv_op_0_0=ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"op",
                      								lv_op_0_0,
                      								"org.xtext.example.siddhi.Siddhi.OPEN_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8264:5: ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:8265:6: (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:8265:6: (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource )
                    // InternalSiddhiParser.g:8266:7: lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_rightAbsentSequenceSource_1_0=ruleRightAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsentSequenceSource",
                      								lv_rightAbsentSequenceSource_1_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8283:5: ( (lv_cp_2_0= ruleCLOSE_PAR ) )
                    // InternalSiddhiParser.g:8284:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:8284:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:8285:7: lv_cp_2_0= ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_cp_2_0=ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"cp",
                      								lv_cp_2_0,
                      								"org.xtext.example.siddhi.Siddhi.CLOSE_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8302:5: ( (lv_wt7_3_0= ruleWithinTime ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==Within) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalSiddhiParser.g:8303:6: (lv_wt7_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:8303:6: (lv_wt7_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:8304:7: lv_wt7_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getWt7WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt7_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                              							}
                              							set(
                              								current,
                              								"wt7",
                              								lv_wt7_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:8324:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8324:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:8325:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:8343:4: ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:8344:5: ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:8344:5: ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) )
                    // InternalSiddhiParser.g:8345:6: (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:8345:6: (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain )
                    // InternalSiddhiParser.g:8346:7: lv_sequenceSourceChain_4_0= ruleSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_sequenceSourceChain_4_0=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"sequenceSourceChain",
                      								lv_sequenceSourceChain_4_0,
                      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8363:5: ( (lv_comma_5_0= Comma ) )
                    // InternalSiddhiParser.g:8364:6: (lv_comma_5_0= Comma )
                    {
                    // InternalSiddhiParser.g:8364:6: (lv_comma_5_0= Comma )
                    // InternalSiddhiParser.g:8365:7: lv_comma_5_0= Comma
                    {
                    lv_comma_5_0=(Token)match(input,Comma,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_comma_5_0, grammarAccess.getRightAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							setWithLastConsumed(current, "comma", lv_comma_5_0, ",");
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8377:5: ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8378:6: (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8378:6: (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8379:7: lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_6_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_6_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:8399:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8399:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) )
                    // InternalSiddhiParser.g:8400:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) )
                    {
                    // InternalSiddhiParser.g:8414:4: ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) )
                    // InternalSiddhiParser.g:8415:5: ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:8415:5: ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8416:6: (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8416:6: (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8417:7: lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_basicAbsentPatternSource_7_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_7_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getRightAbsentSequenceSource2Access().getCommaKeyword_2_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:8438:5: ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:8439:6: (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:8439:6: (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource )
                    // InternalSiddhiParser.g:8440:7: lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_rightAbsentSequenceSource_9_0=ruleRightAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsentSequenceSource",
                      								lv_rightAbsentSequenceSource_9_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, ruleRightAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentSequenceSource2"


    // $ANTLR start "entryRuleSequenceSourceChain"
    // InternalSiddhiParser.g:8463:1: entryRuleSequenceSourceChain returns [EObject current=null] : iv_ruleSequenceSourceChain= ruleSequenceSourceChain EOF ;
    public final EObject entryRuleSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleSequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return current; }
            // InternalSiddhiParser.g:8463:60: (iv_ruleSequenceSourceChain= ruleSequenceSourceChain EOF )
            // InternalSiddhiParser.g:8464:2: iv_ruleSequenceSourceChain= ruleSequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceSourceChain=ruleSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, entryRuleSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceSourceChain"


    // $ANTLR start "ruleSequenceSourceChain"
    // InternalSiddhiParser.g:8470:1: ruleSequenceSourceChain returns [EObject current=null] : (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* ) ;
    public final EObject ruleSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleSequenceSourceChain_StartIndex = input.index();
        Token lv_op_2_0=null;
        EObject this_SequenceSourceChain1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return current; }
            // InternalSiddhiParser.g:8476:2: ( (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* ) )
            // InternalSiddhiParser.g:8477:2: (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:8477:2: (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* )
            // InternalSiddhiParser.g:8478:3: this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChain1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_32);
            this_SequenceSourceChain1_0=ruleSequenceSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SequenceSourceChain1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:8486:3: ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )*
            loop95:
            do {
                int alt95=2;
                alt95 = dfa95.predict(input);
                switch (alt95) {
            	case 1 :
            	    // InternalSiddhiParser.g:8487:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:8502:4: ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) )
            	    // InternalSiddhiParser.g:8503:5: () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) )
            	    {
            	    // InternalSiddhiParser.g:8503:5: ()
            	    // InternalSiddhiParser.g:8504:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChainLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:8510:5: ( (lv_op_2_0= Comma ) )
            	    // InternalSiddhiParser.g:8511:6: (lv_op_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:8511:6: (lv_op_2_0= Comma )
            	    // InternalSiddhiParser.g:8512:7: lv_op_2_0= Comma
            	    {
            	    lv_op_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_op_2_0, grammarAccess.getSequenceSourceChainAccess().getOpCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getSequenceSourceChainRule());
            	      							}
            	      							setWithLastConsumed(current, "op", lv_op_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:8524:5: ( (lv_right_3_0= ruleSequenceSourceChain1 ) )
            	    // InternalSiddhiParser.g:8525:6: (lv_right_3_0= ruleSequenceSourceChain1 )
            	    {
            	    // InternalSiddhiParser.g:8525:6: (lv_right_3_0= ruleSequenceSourceChain1 )
            	    // InternalSiddhiParser.g:8526:7: lv_right_3_0= ruleSequenceSourceChain1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSequenceSourceChainAccess().getRightSequenceSourceChain1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_right_3_0=ruleSequenceSourceChain1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSequenceSourceChainRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, ruleSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceSourceChain"


    // $ANTLR start "entryRuleSequenceSourceChain1"
    // InternalSiddhiParser.g:8549:1: entryRuleSequenceSourceChain1 returns [EObject current=null] : iv_ruleSequenceSourceChain1= ruleSequenceSourceChain1 EOF ;
    public final EObject entryRuleSequenceSourceChain1() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceSourceChain1_StartIndex = input.index();
        EObject iv_ruleSequenceSourceChain1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return current; }
            // InternalSiddhiParser.g:8549:61: (iv_ruleSequenceSourceChain1= ruleSequenceSourceChain1 EOF )
            // InternalSiddhiParser.g:8550:2: iv_ruleSequenceSourceChain1= ruleSequenceSourceChain1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceSourceChain1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceSourceChain1=ruleSequenceSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceSourceChain1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, entryRuleSequenceSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceSourceChain1"


    // $ANTLR start "ruleSequenceSourceChain1"
    // InternalSiddhiParser.g:8556:1: ruleSequenceSourceChain1 returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) ) ;
    public final EObject ruleSequenceSourceChain1() throws RecognitionException {
        EObject current = null;
        int ruleSequenceSourceChain1_StartIndex = input.index();
        EObject this_SequenceSourceChain_1 = null;

        EObject lv_wt1_3_0 = null;

        EObject this_SequenceSource_4 = null;

        EObject lv_wt_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return current; }
            // InternalSiddhiParser.g:8562:2: ( ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) ) )
            // InternalSiddhiParser.g:8563:2: ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            {
            // InternalSiddhiParser.g:8563:2: ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==LeftParenthesis) ) {
                int LA98_1 = input.LA(2);

                if ( (synpred86_InternalSiddhiParser()) ) {
                    alt98=1;
                }
                else if ( (true) ) {
                    alt98=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 98, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA98_0==Not||LA98_0==RULE_ID) ) {
                alt98=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // InternalSiddhiParser.g:8564:3: ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:8564:3: ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:8565:4: ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:8576:4: ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:8577:5: ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceChainParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    this_SequenceSourceChain_1=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_SequenceSourceChain_1;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:8599:5: ( (lv_wt1_3_0= ruleWithinTime ) )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==Within) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalSiddhiParser.g:8600:6: (lv_wt1_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:8600:6: (lv_wt1_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:8601:7: lv_wt1_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getWt1WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt1_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSequenceSourceChain1Rule());
                              							}
                              							add(
                              								current,
                              								"wt1",
                              								lv_wt1_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:8621:3: (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:8621:3: (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:8622:4: this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    this_SequenceSource_4=ruleSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SequenceSource_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:8630:4: ( (lv_wt_5_0= ruleWithinTime ) )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==Within) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalSiddhiParser.g:8631:5: (lv_wt_5_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:8631:5: (lv_wt_5_0= ruleWithinTime )
                            // InternalSiddhiParser.g:8632:6: lv_wt_5_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_5_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSequenceSourceChain1Rule());
                              						}
                              						set(
                              							current,
                              							"wt",
                              							lv_wt_5_0,
                              							"org.xtext.example.siddhi.Siddhi.WithinTime");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, ruleSequenceSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceSourceChain1"


    // $ANTLR start "entryRuleSequenceSource"
    // InternalSiddhiParser.g:8654:1: entryRuleSequenceSource returns [EObject current=null] : iv_ruleSequenceSource= ruleSequenceSource EOF ;
    public final EObject entryRuleSequenceSource() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceSource_StartIndex = input.index();
        EObject iv_ruleSequenceSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return current; }
            // InternalSiddhiParser.g:8654:55: (iv_ruleSequenceSource= ruleSequenceSource EOF )
            // InternalSiddhiParser.g:8655:2: iv_ruleSequenceSource= ruleSequenceSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceSource=ruleSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, entryRuleSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceSource"


    // $ANTLR start "ruleSequenceSource"
    // InternalSiddhiParser.g:8661:1: ruleSequenceSource returns [EObject current=null] : ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) ) ;
    public final EObject ruleSequenceSource() throws RecognitionException {
        EObject current = null;
        int ruleSequenceSource_StartIndex = input.index();
        EObject this_LogicalStatefulSource_0 = null;

        EObject this_SequenceCollectionStatefulSource_1 = null;

        EObject this_StandardStatefulSource_2 = null;

        EObject this_LogicalAbsentStatefulSource_3 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return current; }
            // InternalSiddhiParser.g:8667:2: ( ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) ) )
            // InternalSiddhiParser.g:8668:2: ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) )
            {
            // InternalSiddhiParser.g:8668:2: ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) )
            int alt99=4;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_ID) ) {
                int LA99_1 = input.LA(2);

                if ( (synpred87_InternalSiddhiParser()) ) {
                    alt99=1;
                }
                else if ( (synpred88_InternalSiddhiParser()) ) {
                    alt99=2;
                }
                else if ( (synpred89_InternalSiddhiParser()) ) {
                    alt99=3;
                }
                else if ( (synpred90_InternalSiddhiParser()) ) {
                    alt99=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA99_0==LeftParenthesis) && (synpred90_InternalSiddhiParser())) {
                alt99=4;
            }
            else if ( (LA99_0==Not) && (synpred90_InternalSiddhiParser())) {
                alt99=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalSiddhiParser.g:8669:3: ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource )
                    {
                    // InternalSiddhiParser.g:8669:3: ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource )
                    // InternalSiddhiParser.g:8670:4: ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getLogicalStatefulSourceParserRuleCall_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LogicalStatefulSource_0=ruleLogicalStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LogicalStatefulSource_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:8681:3: ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource )
                    {
                    // InternalSiddhiParser.g:8681:3: ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource )
                    // InternalSiddhiParser.g:8682:4: ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getSequenceCollectionStatefulSourceParserRuleCall_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SequenceCollectionStatefulSource_1=ruleSequenceCollectionStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SequenceCollectionStatefulSource_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:8693:3: ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:8693:3: ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:8694:4: ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getStandardStatefulSourceParserRuleCall_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StandardStatefulSource_2=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StandardStatefulSource_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:8705:3: ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource )
                    {
                    // InternalSiddhiParser.g:8705:3: ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource )
                    // InternalSiddhiParser.g:8706:4: ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getLogicalAbsentStatefulSourceParserRuleCall_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LogicalAbsentStatefulSource_3=ruleLogicalAbsentStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LogicalAbsentStatefulSource_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, ruleSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceSource"


    // $ANTLR start "entryRuleSequenceCollectionStatefulSource"
    // InternalSiddhiParser.g:8720:1: entryRuleSequenceCollectionStatefulSource returns [EObject current=null] : iv_ruleSequenceCollectionStatefulSource= ruleSequenceCollectionStatefulSource EOF ;
    public final EObject entryRuleSequenceCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceCollectionStatefulSource_StartIndex = input.index();
        EObject iv_ruleSequenceCollectionStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return current; }
            // InternalSiddhiParser.g:8720:73: (iv_ruleSequenceCollectionStatefulSource= ruleSequenceCollectionStatefulSource EOF )
            // InternalSiddhiParser.g:8721:2: iv_ruleSequenceCollectionStatefulSource= ruleSequenceCollectionStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceCollectionStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceCollectionStatefulSource=ruleSequenceCollectionStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceCollectionStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, entryRuleSequenceCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceCollectionStatefulSource"


    // $ANTLR start "ruleSequenceCollectionStatefulSource"
    // InternalSiddhiParser.g:8727:1: ruleSequenceCollectionStatefulSource returns [EObject current=null] : (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) ) ;
    public final EObject ruleSequenceCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleSequenceCollectionStatefulSource_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_zero_or_more_4_0=null;
        Token lv_zero_or_one_5_0=null;
        Token lv_one_or_more_6_0=null;
        EObject this_StandardStatefulSource_0 = null;

        EObject lv_coll_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return current; }
            // InternalSiddhiParser.g:8733:2: ( (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) ) )
            // InternalSiddhiParser.g:8734:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) )
            {
            // InternalSiddhiParser.g:8734:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) )
            // InternalSiddhiParser.g:8735:3: this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_75);
            this_StandardStatefulSource_0=ruleStandardStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StandardStatefulSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:8743:3: ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) )
            int alt100=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt100=1;
                }
                break;
            case Asterisk:
                {
                alt100=2;
                }
                break;
            case QuestionMark:
                {
                alt100=3;
                }
                break;
            case PlusSign:
                {
                alt100=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalSiddhiParser.g:8744:4: (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
                    {
                    // InternalSiddhiParser.g:8744:4: (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
                    // InternalSiddhiParser.g:8745:5: otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSequenceCollectionStatefulSourceAccess().getLessThanSignKeyword_1_0_0());
                      				
                    }
                    // InternalSiddhiParser.g:8749:5: ( (lv_coll_2_0= ruleCollect ) )
                    // InternalSiddhiParser.g:8750:6: (lv_coll_2_0= ruleCollect )
                    {
                    // InternalSiddhiParser.g:8750:6: (lv_coll_2_0= ruleCollect )
                    // InternalSiddhiParser.g:8751:7: lv_coll_2_0= ruleCollect
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSequenceCollectionStatefulSourceAccess().getCollCollectParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_68);
                    lv_coll_2_0=ruleCollect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"coll",
                      								lv_coll_2_0,
                      								"org.xtext.example.siddhi.Siddhi.Collect");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSequenceCollectionStatefulSourceAccess().getGreaterThanSignKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:8774:4: ( (lv_zero_or_more_4_0= Asterisk ) )
                    {
                    // InternalSiddhiParser.g:8774:4: ( (lv_zero_or_more_4_0= Asterisk ) )
                    // InternalSiddhiParser.g:8775:5: (lv_zero_or_more_4_0= Asterisk )
                    {
                    // InternalSiddhiParser.g:8775:5: (lv_zero_or_more_4_0= Asterisk )
                    // InternalSiddhiParser.g:8776:6: lv_zero_or_more_4_0= Asterisk
                    {
                    lv_zero_or_more_4_0=(Token)match(input,Asterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_zero_or_more_4_0, grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAsteriskKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      						}
                      						setWithLastConsumed(current, "zero_or_more", lv_zero_or_more_4_0, "*");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:8789:4: ( (lv_zero_or_one_5_0= QuestionMark ) )
                    {
                    // InternalSiddhiParser.g:8789:4: ( (lv_zero_or_one_5_0= QuestionMark ) )
                    // InternalSiddhiParser.g:8790:5: (lv_zero_or_one_5_0= QuestionMark )
                    {
                    // InternalSiddhiParser.g:8790:5: (lv_zero_or_one_5_0= QuestionMark )
                    // InternalSiddhiParser.g:8791:6: lv_zero_or_one_5_0= QuestionMark
                    {
                    lv_zero_or_one_5_0=(Token)match(input,QuestionMark,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_zero_or_one_5_0, grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneQuestionMarkKeyword_1_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      						}
                      						setWithLastConsumed(current, "zero_or_one", lv_zero_or_one_5_0, "?");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:8804:4: ( (lv_one_or_more_6_0= PlusSign ) )
                    {
                    // InternalSiddhiParser.g:8804:4: ( (lv_one_or_more_6_0= PlusSign ) )
                    // InternalSiddhiParser.g:8805:5: (lv_one_or_more_6_0= PlusSign )
                    {
                    // InternalSiddhiParser.g:8805:5: (lv_one_or_more_6_0= PlusSign )
                    // InternalSiddhiParser.g:8806:6: lv_one_or_more_6_0= PlusSign
                    {
                    lv_one_or_more_6_0=(Token)match(input,PlusSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_one_or_more_6_0, grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_morePlusSignKeyword_1_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      						}
                      						setWithLastConsumed(current, "one_or_more", lv_one_or_more_6_0, "+");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, ruleSequenceCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceCollectionStatefulSource"


    // $ANTLR start "entryRuleAnonymousStream"
    // InternalSiddhiParser.g:8823:1: entryRuleAnonymousStream returns [EObject current=null] : iv_ruleAnonymousStream= ruleAnonymousStream EOF ;
    public final EObject entryRuleAnonymousStream() throws RecognitionException {
        EObject current = null;
        int entryRuleAnonymousStream_StartIndex = input.index();
        EObject iv_ruleAnonymousStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return current; }
            // InternalSiddhiParser.g:8823:56: (iv_ruleAnonymousStream= ruleAnonymousStream EOF )
            // InternalSiddhiParser.g:8824:2: iv_ruleAnonymousStream= ruleAnonymousStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnonymousStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnonymousStream=ruleAnonymousStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnonymousStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, entryRuleAnonymousStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAnonymousStream"


    // $ANTLR start "ruleAnonymousStream"
    // InternalSiddhiParser.g:8830:1: ruleAnonymousStream returns [EObject current=null] : ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) ) ;
    public final EObject ruleAnonymousStream() throws RecognitionException {
        EObject current = null;
        int ruleAnonymousStream_StartIndex = input.index();
        EObject this_AnonymousStream_1 = null;

        EObject this_FROM_3 = null;

        EObject lv_qi_4_0 = null;

        EObject lv_qs_5_0 = null;

        EObject lv_out_rate_6_0 = null;

        EObject this_RETURN_7 = null;

        EObject lv_op_event_type_8_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return current; }
            // InternalSiddhiParser.g:8836:2: ( ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) ) )
            // InternalSiddhiParser.g:8837:2: ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) )
            {
            // InternalSiddhiParser.g:8837:2: ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==LeftParenthesis) ) {
                alt104=1;
            }
            else if ( (LA104_0==From) ) {
                alt104=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // InternalSiddhiParser.g:8838:3: ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:8838:3: ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:8839:4: ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getOPEN_PARParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getAnonymousStreamParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    this_AnonymousStream_1=ruleAnonymousStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_AnonymousStream_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getCLOSE_PARParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:8863:3: (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? )
                    {
                    // InternalSiddhiParser.g:8863:3: (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? )
                    // InternalSiddhiParser.g:8864:4: this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAnonymousStreamRule());
                      				}
                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getFROMParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    this_FROM_3=ruleFROM(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FROM_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:8875:4: ( (lv_qi_4_0= ruleQueryInput ) )
                    // InternalSiddhiParser.g:8876:5: (lv_qi_4_0= ruleQueryInput )
                    {
                    // InternalSiddhiParser.g:8876:5: (lv_qi_4_0= ruleQueryInput )
                    // InternalSiddhiParser.g:8877:6: lv_qi_4_0= ruleQueryInput
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getQiQueryInputParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_qi_4_0=ruleQueryInput();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                      						}
                      						set(
                      							current,
                      							"qi",
                      							lv_qi_4_0,
                      							"org.xtext.example.siddhi.Siddhi.QueryInput");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8894:4: ( (lv_qs_5_0= ruleQuerySection ) )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==Select) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalSiddhiParser.g:8895:5: (lv_qs_5_0= ruleQuerySection )
                            {
                            // InternalSiddhiParser.g:8895:5: (lv_qs_5_0= ruleQuerySection )
                            // InternalSiddhiParser.g:8896:6: lv_qs_5_0= ruleQuerySection
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getQsQuerySectionParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_77);
                            lv_qs_5_0=ruleQuerySection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                              						}
                              						set(
                              							current,
                              							"qs",
                              							lv_qs_5_0,
                              							"org.xtext.example.siddhi.Siddhi.QuerySection");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:8913:4: ( (lv_out_rate_6_0= ruleOutputRate ) )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==Output) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            // InternalSiddhiParser.g:8914:5: (lv_out_rate_6_0= ruleOutputRate )
                            {
                            // InternalSiddhiParser.g:8914:5: (lv_out_rate_6_0= ruleOutputRate )
                            // InternalSiddhiParser.g:8915:6: lv_out_rate_6_0= ruleOutputRate
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getOut_rateOutputRateParserRuleCall_1_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_out_rate_6_0=ruleOutputRate();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                              						}
                              						set(
                              							current,
                              							"out_rate",
                              							lv_out_rate_6_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputRate");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAnonymousStreamRule());
                      				}
                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getRETURNParserRuleCall_1_4());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    this_RETURN_7=ruleRETURN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RETURN_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:8943:4: ( (lv_op_event_type_8_0= ruleOutputEventType ) )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( ((LA103_0>=Current && LA103_0<=Expired)||LA103_0==Events||LA103_0==All) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // InternalSiddhiParser.g:8944:5: (lv_op_event_type_8_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:8944:5: (lv_op_event_type_8_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:8945:6: lv_op_event_type_8_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getOp_event_typeOutputEventTypeParserRuleCall_1_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_op_event_type_8_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                              						}
                              						set(
                              							current,
                              							"op_event_type",
                              							lv_op_event_type_8_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, ruleAnonymousStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAnonymousStream"


    // $ANTLR start "entryRuleOutputRate"
    // InternalSiddhiParser.g:8967:1: entryRuleOutputRate returns [EObject current=null] : iv_ruleOutputRate= ruleOutputRate EOF ;
    public final EObject entryRuleOutputRate() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputRate_StartIndex = input.index();
        EObject iv_ruleOutputRate = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return current; }
            // InternalSiddhiParser.g:8967:51: (iv_ruleOutputRate= ruleOutputRate EOF )
            // InternalSiddhiParser.g:8968:2: iv_ruleOutputRate= ruleOutputRate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputRateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputRate=ruleOutputRate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputRate; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, entryRuleOutputRate_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputRate"


    // $ANTLR start "ruleOutputRate"
    // InternalSiddhiParser.g:8974:1: ruleOutputRate returns [EObject current=null] : ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) ) ;
    public final EObject ruleOutputRate() throws RecognitionException {
        EObject current = null;
        int ruleOutputRate_StartIndex = input.index();
        EObject this_OUTPUT_1 = null;

        EObject lv_op_rate_type_2_0 = null;

        EObject lv_every_3_0 = null;

        EObject lv_tv_4_0 = null;

        EObject this_EVENTS_6 = null;

        EObject this_OUTPUT_8 = null;

        EObject this_SNAPSHOT_9 = null;

        EObject lv_every_10_0 = null;

        EObject lv_tv_11_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return current; }
            // InternalSiddhiParser.g:8980:2: ( ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) ) )
            // InternalSiddhiParser.g:8981:2: ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) )
            {
            // InternalSiddhiParser.g:8981:2: ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==Output) ) {
                int LA107_1 = input.LA(2);

                if ( (LA107_1==Every||LA107_1==First||LA107_1==Last||LA107_1==All) ) {
                    alt107=1;
                }
                else if ( (LA107_1==Snapshot) ) {
                    alt107=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 107, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // InternalSiddhiParser.g:8982:3: ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) )
                    {
                    // InternalSiddhiParser.g:8982:3: ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) )
                    // InternalSiddhiParser.g:8983:4: () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) )
                    {
                    // InternalSiddhiParser.g:8983:4: ()
                    // InternalSiddhiParser.g:8984:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateAccess().getOutputRateAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_79);
                    this_OUTPUT_1=ruleOUTPUT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTPUT_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:9001:4: ( (lv_op_rate_type_2_0= ruleOutputRateType ) )?
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==First||LA105_0==Last||LA105_0==All) ) {
                        alt105=1;
                    }
                    switch (alt105) {
                        case 1 :
                            // InternalSiddhiParser.g:9002:5: (lv_op_rate_type_2_0= ruleOutputRateType )
                            {
                            // InternalSiddhiParser.g:9002:5: (lv_op_rate_type_2_0= ruleOutputRateType )
                            // InternalSiddhiParser.g:9003:6: lv_op_rate_type_2_0= ruleOutputRateType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getOutputRateAccess().getOp_rate_typeOutputRateTypeParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_30);
                            lv_op_rate_type_2_0=ruleOutputRateType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                              						}
                              						set(
                              							current,
                              							"op_rate_type",
                              							lv_op_rate_type_2_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputRateType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:9020:4: ( (lv_every_3_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:9021:5: (lv_every_3_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:9021:5: (lv_every_3_0= ruleEVERY )
                    // InternalSiddhiParser.g:9022:6: lv_every_3_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_every_3_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                      						}
                      						set(
                      							current,
                      							"every",
                      							lv_every_3_0,
                      							"org.xtext.example.siddhi.Siddhi.EVERY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9039:4: ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) )
                    int alt106=2;
                    alt106 = dfa106.predict(input);
                    switch (alt106) {
                        case 1 :
                            // InternalSiddhiParser.g:9040:5: ( (lv_tv_4_0= ruleTimeValue ) )
                            {
                            // InternalSiddhiParser.g:9040:5: ( (lv_tv_4_0= ruleTimeValue ) )
                            // InternalSiddhiParser.g:9041:6: (lv_tv_4_0= ruleTimeValue )
                            {
                            // InternalSiddhiParser.g:9041:6: (lv_tv_4_0= ruleTimeValue )
                            // InternalSiddhiParser.g:9042:7: lv_tv_4_0= ruleTimeValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_tv_4_0=ruleTimeValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getOutputRateRule());
                              							}
                              							set(
                              								current,
                              								"tv",
                              								lv_tv_4_0,
                              								"org.xtext.example.siddhi.Siddhi.TimeValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSiddhiParser.g:9060:5: ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] )
                            {
                            // InternalSiddhiParser.g:9060:5: ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] )
                            // InternalSiddhiParser.g:9061:6: ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getOutputRateAccess().getINT_LITERALParserRuleCall_0_4_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            ruleINT_LITERAL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getOutputRateRule());
                              						}
                              						newCompositeNode(grammarAccess.getOutputRateAccess().getEVENTSParserRuleCall_0_4_1_1());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            this_EVENTS_6=ruleEVENTS(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVENTS_6;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:9083:3: ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) )
                    {
                    // InternalSiddhiParser.g:9083:3: ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) )
                    // InternalSiddhiParser.g:9084:4: () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) )
                    {
                    // InternalSiddhiParser.g:9084:4: ()
                    // InternalSiddhiParser.g:9085:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateAccess().getOutputRateAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    this_OUTPUT_8=ruleOUTPUT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTPUT_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateAccess().getSNAPSHOTParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    this_SNAPSHOT_9=ruleSNAPSHOT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SNAPSHOT_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:9113:4: ( (lv_every_10_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:9114:5: (lv_every_10_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:9114:5: (lv_every_10_0= ruleEVERY )
                    // InternalSiddhiParser.g:9115:6: lv_every_10_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_every_10_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                      						}
                      						set(
                      							current,
                      							"every",
                      							lv_every_10_0,
                      							"org.xtext.example.siddhi.Siddhi.EVERY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9132:4: ( (lv_tv_11_0= ruleTimeValue ) )
                    // InternalSiddhiParser.g:9133:5: (lv_tv_11_0= ruleTimeValue )
                    {
                    // InternalSiddhiParser.g:9133:5: (lv_tv_11_0= ruleTimeValue )
                    // InternalSiddhiParser.g:9134:6: lv_tv_11_0= ruleTimeValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tv_11_0=ruleTimeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                      						}
                      						set(
                      							current,
                      							"tv",
                      							lv_tv_11_0,
                      							"org.xtext.example.siddhi.Siddhi.TimeValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, ruleOutputRate_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputRate"


    // $ANTLR start "entryRuleOutputRateType"
    // InternalSiddhiParser.g:9156:1: entryRuleOutputRateType returns [EObject current=null] : iv_ruleOutputRateType= ruleOutputRateType EOF ;
    public final EObject entryRuleOutputRateType() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputRateType_StartIndex = input.index();
        EObject iv_ruleOutputRateType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return current; }
            // InternalSiddhiParser.g:9156:55: (iv_ruleOutputRateType= ruleOutputRateType EOF )
            // InternalSiddhiParser.g:9157:2: iv_ruleOutputRateType= ruleOutputRateType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputRateTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputRateType=ruleOutputRateType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputRateType; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, entryRuleOutputRateType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputRateType"


    // $ANTLR start "ruleOutputRateType"
    // InternalSiddhiParser.g:9163:1: ruleOutputRateType returns [EObject current=null] : ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) ) ;
    public final EObject ruleOutputRateType() throws RecognitionException {
        EObject current = null;
        int ruleOutputRateType_StartIndex = input.index();
        EObject this_ALL_1 = null;

        EObject this_LAST_3 = null;

        EObject this_FIRST_5 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return current; }
            // InternalSiddhiParser.g:9169:2: ( ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) ) )
            // InternalSiddhiParser.g:9170:2: ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) )
            {
            // InternalSiddhiParser.g:9170:2: ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) )
            int alt108=3;
            switch ( input.LA(1) ) {
            case All:
                {
                alt108=1;
                }
                break;
            case Last:
                {
                alt108=2;
                }
                break;
            case First:
                {
                alt108=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }

            switch (alt108) {
                case 1 :
                    // InternalSiddhiParser.g:9171:3: ( () this_ALL_1= ruleALL[$current] )
                    {
                    // InternalSiddhiParser.g:9171:3: ( () this_ALL_1= ruleALL[$current] )
                    // InternalSiddhiParser.g:9172:4: () this_ALL_1= ruleALL[$current]
                    {
                    // InternalSiddhiParser.g:9172:4: ()
                    // InternalSiddhiParser.g:9173:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateTypeAccess().getALLParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ALL_1=ruleALL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ALL_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:9192:3: ( () this_LAST_3= ruleLAST[$current] )
                    {
                    // InternalSiddhiParser.g:9192:3: ( () this_LAST_3= ruleLAST[$current] )
                    // InternalSiddhiParser.g:9193:4: () this_LAST_3= ruleLAST[$current]
                    {
                    // InternalSiddhiParser.g:9193:4: ()
                    // InternalSiddhiParser.g:9194:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateTypeAccess().getLASTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LAST_3=ruleLAST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LAST_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:9213:3: ( () this_FIRST_5= ruleFIRST[$current] )
                    {
                    // InternalSiddhiParser.g:9213:3: ( () this_FIRST_5= ruleFIRST[$current] )
                    // InternalSiddhiParser.g:9214:4: () this_FIRST_5= ruleFIRST[$current]
                    {
                    // InternalSiddhiParser.g:9214:4: ()
                    // InternalSiddhiParser.g:9215:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateTypeAccess().getFIRSTParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FIRST_5=ruleFIRST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FIRST_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, ruleOutputRateType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputRateType"


    // $ANTLR start "entryRuleQueryOutput"
    // InternalSiddhiParser.g:9237:1: entryRuleQueryOutput returns [EObject current=null] : iv_ruleQueryOutput= ruleQueryOutput EOF ;
    public final EObject entryRuleQueryOutput() throws RecognitionException {
        EObject current = null;
        int entryRuleQueryOutput_StartIndex = input.index();
        EObject iv_ruleQueryOutput = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return current; }
            // InternalSiddhiParser.g:9237:52: (iv_ruleQueryOutput= ruleQueryOutput EOF )
            // InternalSiddhiParser.g:9238:2: iv_ruleQueryOutput= ruleQueryOutput EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryOutputRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQueryOutput=ruleQueryOutput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryOutput; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, entryRuleQueryOutput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryOutput"


    // $ANTLR start "ruleQueryOutput"
    // InternalSiddhiParser.g:9244:1: ruleQueryOutput returns [EObject current=null] : ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleSource1 ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleSource1 ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleSource1 ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) ) ;
    public final EObject ruleQueryOutput() throws RecognitionException {
        EObject current = null;
        int ruleQueryOutput_StartIndex = input.index();
        EObject this_INSERT_0 = null;

        EObject lv_outEventType_1_0 = null;

        EObject this_INTO_2 = null;

        EObject lv_tar_3_0 = null;

        EObject this_DELETE_4 = null;

        EObject lv_tar_5_0 = null;

        EObject this_FOR_6 = null;

        EObject lv_outEventType_7_0 = null;

        EObject lv_on_8_0 = null;

        EObject lv_expr_9_0 = null;

        EObject this_UPDATE_10 = null;

        EObject lv_or_11_0 = null;

        EObject this_INSERT_12 = null;

        EObject this_INTO_13 = null;

        EObject lv_tar_14_0 = null;

        EObject this_FOR_15 = null;

        EObject lv_outEventType_16_0 = null;

        EObject lv_setClause_17_0 = null;

        EObject lv_on_18_0 = null;

        EObject lv_expr_19_0 = null;

        EObject this_RETURN_20 = null;

        EObject lv_outEventType_21_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return current; }
            // InternalSiddhiParser.g:9250:2: ( ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleSource1 ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleSource1 ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleSource1 ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) ) )
            // InternalSiddhiParser.g:9251:2: ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleSource1 ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleSource1 ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleSource1 ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) )
            {
            // InternalSiddhiParser.g:9251:2: ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleSource1 ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleSource1 ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleSource1 ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) )
            int alt115=4;
            switch ( input.LA(1) ) {
            case Insert:
                {
                alt115=1;
                }
                break;
            case Delete:
                {
                alt115=2;
                }
                break;
            case Update:
                {
                alt115=3;
                }
                break;
            case Return:
                {
                alt115=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }

            switch (alt115) {
                case 1 :
                    // InternalSiddhiParser.g:9252:3: (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleSource1 ) ) )
                    {
                    // InternalSiddhiParser.g:9252:3: (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleSource1 ) ) )
                    // InternalSiddhiParser.g:9253:4: this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleSource1 ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_81);
                    this_INSERT_0=ruleINSERT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INSERT_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:9264:4: ( (lv_outEventType_1_0= ruleOutputEventType ) )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( ((LA109_0>=Current && LA109_0<=Expired)||LA109_0==Events||LA109_0==All) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalSiddhiParser.g:9265:5: (lv_outEventType_1_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:9265:5: (lv_outEventType_1_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:9266:6: lv_outEventType_1_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_81);
                            lv_outEventType_1_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              						}
                              						set(
                              							current,
                              							"outEventType",
                              							lv_outEventType_1_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_INTO_2=ruleINTO(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INTO_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:9294:4: ( (lv_tar_3_0= ruleSource1 ) )
                    // InternalSiddhiParser.g:9295:5: (lv_tar_3_0= ruleSource1 )
                    {
                    // InternalSiddhiParser.g:9295:5: (lv_tar_3_0= ruleSource1 )
                    // InternalSiddhiParser.g:9296:6: lv_tar_3_0= ruleSource1
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tar_3_0=ruleSource1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"tar",
                      							lv_tar_3_0,
                      							"org.xtext.example.siddhi.Siddhi.Source1");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:9315:3: (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleSource1 ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) )
                    {
                    // InternalSiddhiParser.g:9315:3: (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleSource1 ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) )
                    // InternalSiddhiParser.g:9316:4: this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleSource1 ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getDELETEParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_DELETE_4=ruleDELETE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DELETE_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:9327:4: ( (lv_tar_5_0= ruleSource1 ) )
                    // InternalSiddhiParser.g:9328:5: (lv_tar_5_0= ruleSource1 )
                    {
                    // InternalSiddhiParser.g:9328:5: (lv_tar_5_0= ruleSource1 )
                    // InternalSiddhiParser.g:9329:6: lv_tar_5_0= ruleSource1
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_tar_5_0=ruleSource1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"tar",
                      							lv_tar_5_0,
                      							"org.xtext.example.siddhi.Siddhi.Source1");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9346:4: (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==For) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalSiddhiParser.g:9347:5: this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) )
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_1_2_0());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            this_FOR_6=ruleFOR(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_FOR_6;
                              					afterParserOrEnumRuleCall();
                              				
                            }
                            // InternalSiddhiParser.g:9358:5: ( (lv_outEventType_7_0= ruleOutputEventType ) )
                            // InternalSiddhiParser.g:9359:6: (lv_outEventType_7_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:9359:6: (lv_outEventType_7_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:9360:7: lv_outEventType_7_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_1_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_83);
                            lv_outEventType_7_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              							}
                              							set(
                              								current,
                              								"outEventType",
                              								lv_outEventType_7_0,
                              								"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:9378:4: ( (lv_on_8_0= ruleON ) )
                    // InternalSiddhiParser.g:9379:5: (lv_on_8_0= ruleON )
                    {
                    // InternalSiddhiParser.g:9379:5: (lv_on_8_0= ruleON )
                    // InternalSiddhiParser.g:9380:6: lv_on_8_0= ruleON
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_on_8_0=ruleON();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"on",
                      							lv_on_8_0,
                      							"org.xtext.example.siddhi.Siddhi.ON");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9397:4: ( (lv_expr_9_0= ruleExpression ) )
                    // InternalSiddhiParser.g:9398:5: (lv_expr_9_0= ruleExpression )
                    {
                    // InternalSiddhiParser.g:9398:5: (lv_expr_9_0= ruleExpression )
                    // InternalSiddhiParser.g:9399:6: lv_expr_9_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expr_9_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_9_0,
                      							"org.xtext.example.siddhi.Siddhi.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:9418:3: (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleSource1 ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )
                    {
                    // InternalSiddhiParser.g:9418:3: (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleSource1 ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )
                    // InternalSiddhiParser.g:9419:4: this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleSource1 ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getUPDATEParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    this_UPDATE_10=ruleUPDATE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_UPDATE_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:9430:4: ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==Or) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalSiddhiParser.g:9431:5: ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current]
                            {
                            // InternalSiddhiParser.g:9431:5: ( (lv_or_11_0= ruleOR ) )
                            // InternalSiddhiParser.g:9432:6: (lv_or_11_0= ruleOR )
                            {
                            // InternalSiddhiParser.g:9432:6: (lv_or_11_0= ruleOR )
                            // InternalSiddhiParser.g:9433:7: lv_or_11_0= ruleOR
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getQueryOutputAccess().getOrORParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_85);
                            lv_or_11_0=ruleOR();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              							}
                              							set(
                              								current,
                              								"or",
                              								lv_or_11_0,
                              								"org.xtext.example.siddhi.Siddhi.OR");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_2_1_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_81);
                            this_INSERT_12=ruleINSERT(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_INSERT_12;
                              					afterParserOrEnumRuleCall();
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_2_1_2());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_9);
                            this_INTO_13=ruleINTO(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_INTO_13;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalSiddhiParser.g:9473:4: ( (lv_tar_14_0= ruleSource1 ) )
                    // InternalSiddhiParser.g:9474:5: (lv_tar_14_0= ruleSource1 )
                    {
                    // InternalSiddhiParser.g:9474:5: (lv_tar_14_0= ruleSource1 )
                    // InternalSiddhiParser.g:9475:6: lv_tar_14_0= ruleSource1
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_tar_14_0=ruleSource1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"tar",
                      							lv_tar_14_0,
                      							"org.xtext.example.siddhi.Siddhi.Source1");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9492:4: (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )?
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==For) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            // InternalSiddhiParser.g:9493:5: this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) )
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_2_3_0());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            this_FOR_15=ruleFOR(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_FOR_15;
                              					afterParserOrEnumRuleCall();
                              				
                            }
                            // InternalSiddhiParser.g:9504:5: ( (lv_outEventType_16_0= ruleOutputEventType ) )
                            // InternalSiddhiParser.g:9505:6: (lv_outEventType_16_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:9505:6: (lv_outEventType_16_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:9506:7: lv_outEventType_16_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_87);
                            lv_outEventType_16_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              							}
                              							set(
                              								current,
                              								"outEventType",
                              								lv_outEventType_16_0,
                              								"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:9524:4: ( (lv_setClause_17_0= ruleSetClause ) )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==Set) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalSiddhiParser.g:9525:5: (lv_setClause_17_0= ruleSetClause )
                            {
                            // InternalSiddhiParser.g:9525:5: (lv_setClause_17_0= ruleSetClause )
                            // InternalSiddhiParser.g:9526:6: lv_setClause_17_0= ruleSetClause
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getQueryOutputAccess().getSetClauseSetClauseParserRuleCall_2_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_83);
                            lv_setClause_17_0=ruleSetClause();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              						}
                              						set(
                              							current,
                              							"setClause",
                              							lv_setClause_17_0,
                              							"org.xtext.example.siddhi.Siddhi.SetClause");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:9543:4: ( (lv_on_18_0= ruleON ) )
                    // InternalSiddhiParser.g:9544:5: (lv_on_18_0= ruleON )
                    {
                    // InternalSiddhiParser.g:9544:5: (lv_on_18_0= ruleON )
                    // InternalSiddhiParser.g:9545:6: lv_on_18_0= ruleON
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_2_5_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_on_18_0=ruleON();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"on",
                      							lv_on_18_0,
                      							"org.xtext.example.siddhi.Siddhi.ON");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9562:4: ( (lv_expr_19_0= ruleExpression ) )
                    // InternalSiddhiParser.g:9563:5: (lv_expr_19_0= ruleExpression )
                    {
                    // InternalSiddhiParser.g:9563:5: (lv_expr_19_0= ruleExpression )
                    // InternalSiddhiParser.g:9564:6: lv_expr_19_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_2_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expr_19_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_19_0,
                      							"org.xtext.example.siddhi.Siddhi.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:9583:3: (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? )
                    {
                    // InternalSiddhiParser.g:9583:3: (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? )
                    // InternalSiddhiParser.g:9584:4: this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getRETURNParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    this_RETURN_20=ruleRETURN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RETURN_20;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:9595:4: ( (lv_outEventType_21_0= ruleOutputEventType ) )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( ((LA114_0>=Current && LA114_0<=Expired)||LA114_0==Events||LA114_0==All) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalSiddhiParser.g:9596:5: (lv_outEventType_21_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:9596:5: (lv_outEventType_21_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:9597:6: lv_outEventType_21_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_3_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_outEventType_21_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              						}
                              						set(
                              							current,
                              							"outEventType",
                              							lv_outEventType_21_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, ruleQueryOutput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQueryOutput"


    // $ANTLR start "entryRuleSetClause"
    // InternalSiddhiParser.g:9619:1: entryRuleSetClause returns [EObject current=null] : iv_ruleSetClause= ruleSetClause EOF ;
    public final EObject entryRuleSetClause() throws RecognitionException {
        EObject current = null;
        int entryRuleSetClause_StartIndex = input.index();
        EObject iv_ruleSetClause = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return current; }
            // InternalSiddhiParser.g:9619:50: (iv_ruleSetClause= ruleSetClause EOF )
            // InternalSiddhiParser.g:9620:2: iv_ruleSetClause= ruleSetClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetClauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSetClause=ruleSetClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetClause; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, entryRuleSetClause_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSetClause"


    // $ANTLR start "ruleSetClause"
    // InternalSiddhiParser.g:9626:1: ruleSetClause returns [EObject current=null] : (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* ) ;
    public final EObject ruleSetClause() throws RecognitionException {
        EObject current = null;
        int ruleSetClause_StartIndex = input.index();
        Token otherlv_2=null;
        EObject this_SET_0 = null;

        EObject lv_setAssignment_1_0 = null;

        EObject lv_setAssignment_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return current; }
            // InternalSiddhiParser.g:9632:2: ( (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* ) )
            // InternalSiddhiParser.g:9633:2: (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* )
            {
            // InternalSiddhiParser.g:9633:2: (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* )
            // InternalSiddhiParser.g:9634:3: this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSetClauseRule());
              			}
              			newCompositeNode(grammarAccess.getSetClauseAccess().getSETParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_SET_0=ruleSET(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SET_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:9645:3: ( (lv_setAssignment_1_0= ruleSetAssignment ) )
            // InternalSiddhiParser.g:9646:4: (lv_setAssignment_1_0= ruleSetAssignment )
            {
            // InternalSiddhiParser.g:9646:4: (lv_setAssignment_1_0= ruleSetAssignment )
            // InternalSiddhiParser.g:9647:5: lv_setAssignment_1_0= ruleSetAssignment
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_setAssignment_1_0=ruleSetAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetClauseRule());
              					}
              					add(
              						current,
              						"setAssignment",
              						lv_setAssignment_1_0,
              						"org.xtext.example.siddhi.Siddhi.SetAssignment");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:9664:3: (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==Comma) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalSiddhiParser.g:9665:4: otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) )
            	    {
            	    otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSetClauseAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:9669:4: ( (lv_setAssignment_3_0= ruleSetAssignment ) )
            	    // InternalSiddhiParser.g:9670:5: (lv_setAssignment_3_0= ruleSetAssignment )
            	    {
            	    // InternalSiddhiParser.g:9670:5: (lv_setAssignment_3_0= ruleSetAssignment )
            	    // InternalSiddhiParser.g:9671:6: lv_setAssignment_3_0= ruleSetAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_setAssignment_3_0=ruleSetAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSetClauseRule());
            	      						}
            	      						add(
            	      							current,
            	      							"setAssignment",
            	      							lv_setAssignment_3_0,
            	      							"org.xtext.example.siddhi.Siddhi.SetAssignment");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, ruleSetClause_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSetClause"


    // $ANTLR start "entryRuleSetAssignment"
    // InternalSiddhiParser.g:9693:1: entryRuleSetAssignment returns [EObject current=null] : iv_ruleSetAssignment= ruleSetAssignment EOF ;
    public final EObject entryRuleSetAssignment() throws RecognitionException {
        EObject current = null;
        int entryRuleSetAssignment_StartIndex = input.index();
        EObject iv_ruleSetAssignment = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return current; }
            // InternalSiddhiParser.g:9693:54: (iv_ruleSetAssignment= ruleSetAssignment EOF )
            // InternalSiddhiParser.g:9694:2: iv_ruleSetAssignment= ruleSetAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSetAssignment=ruleSetAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, entryRuleSetAssignment_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSetAssignment"


    // $ANTLR start "ruleSetAssignment"
    // InternalSiddhiParser.g:9700:1: ruleSetAssignment returns [EObject current=null] : (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleSetAssignment() throws RecognitionException {
        EObject current = null;
        int ruleSetAssignment_StartIndex = input.index();
        Token otherlv_1=null;
        EObject this_AttributeReference_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return current; }
            // InternalSiddhiParser.g:9706:2: ( (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSiddhiParser.g:9707:2: (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSiddhiParser.g:9707:2: (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSiddhiParser.g:9708:3: this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSetAssignmentAccess().getAttributeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_39);
            this_AttributeReference_0=ruleAttributeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AttributeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSetAssignmentAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalSiddhiParser.g:9720:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSiddhiParser.g:9721:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSiddhiParser.g:9721:4: (lv_expression_2_0= ruleExpression )
            // InternalSiddhiParser.g:9722:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetAssignmentAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, ruleSetAssignment_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSetAssignment"


    // $ANTLR start "entryRuleOutputEventType"
    // InternalSiddhiParser.g:9743:1: entryRuleOutputEventType returns [EObject current=null] : iv_ruleOutputEventType= ruleOutputEventType EOF ;
    public final EObject entryRuleOutputEventType() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputEventType_StartIndex = input.index();
        EObject iv_ruleOutputEventType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return current; }
            // InternalSiddhiParser.g:9743:56: (iv_ruleOutputEventType= ruleOutputEventType EOF )
            // InternalSiddhiParser.g:9744:2: iv_ruleOutputEventType= ruleOutputEventType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputEventTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputEventType=ruleOutputEventType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputEventType; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, entryRuleOutputEventType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputEventType"


    // $ANTLR start "ruleOutputEventType"
    // InternalSiddhiParser.g:9750:1: ruleOutputEventType returns [EObject current=null] : ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) ) ;
    public final EObject ruleOutputEventType() throws RecognitionException {
        EObject current = null;
        int ruleOutputEventType_StartIndex = input.index();
        EObject this_ALL_1 = null;

        EObject this_EVENTS_2 = null;

        EObject this_ALL_4 = null;

        EObject this_RAW_5 = null;

        EObject this_EVENTS_6 = null;

        EObject this_EXPIRED_8 = null;

        EObject this_EVENTS_9 = null;

        EObject this_EXPIRED_11 = null;

        EObject this_RAW_12 = null;

        EObject this_EVENTS_13 = null;

        EObject this_CURRENT_15 = null;

        EObject this_EVENTS_16 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return current; }
            // InternalSiddhiParser.g:9756:2: ( ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) ) )
            // InternalSiddhiParser.g:9757:2: ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) )
            {
            // InternalSiddhiParser.g:9757:2: ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) )
            int alt118=5;
            switch ( input.LA(1) ) {
            case All:
                {
                int LA118_1 = input.LA(2);

                if ( (LA118_1==Events) ) {
                    alt118=1;
                }
                else if ( (LA118_1==Raw) ) {
                    alt118=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 118, 1, input);

                    throw nvae;
                }
                }
                break;
            case Expired:
                {
                int LA118_2 = input.LA(2);

                if ( (LA118_2==Events) ) {
                    alt118=3;
                }
                else if ( (LA118_2==Raw) ) {
                    alt118=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 118, 2, input);

                    throw nvae;
                }
                }
                break;
            case Current:
            case Events:
                {
                alt118=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }

            switch (alt118) {
                case 1 :
                    // InternalSiddhiParser.g:9758:3: ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:9758:3: ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:9759:4: () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:9759:4: ()
                    // InternalSiddhiParser.g:9760:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    this_ALL_1=ruleALL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ALL_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_2=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:9790:3: ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:9790:3: ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:9791:4: () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:9791:4: ()
                    // InternalSiddhiParser.g:9792:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    this_ALL_4=ruleALL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ALL_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    this_RAW_5=ruleRAW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RAW_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_1_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_6=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:9833:3: ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:9833:3: ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:9834:4: () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:9834:4: ()
                    // InternalSiddhiParser.g:9835:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    this_EXPIRED_8=ruleEXPIRED(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EXPIRED_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_9=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:9865:3: ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:9865:3: ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:9866:4: () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:9866:4: ()
                    // InternalSiddhiParser.g:9867:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_3_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    this_EXPIRED_11=ruleEXPIRED(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EXPIRED_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_3_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    this_RAW_12=ruleRAW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RAW_12;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_3_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_13=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:9908:3: ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:9908:3: ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:9909:4: () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:9909:4: ()
                    // InternalSiddhiParser.g:9910:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:9916:4: (this_CURRENT_15= ruleCURRENT[$current] )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==Current) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalSiddhiParser.g:9917:5: this_CURRENT_15= ruleCURRENT[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getOutputEventTypeRule());
                              					}
                              					newCompositeNode(grammarAccess.getOutputEventTypeAccess().getCURRENTParserRuleCall_4_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            this_CURRENT_15=ruleCURRENT(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_CURRENT_15;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_4_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_16=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_16;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, ruleOutputEventType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputEventType"


    // $ANTLR start "entryRuleBasicSourceStreamHandlers"
    // InternalSiddhiParser.g:9945:1: entryRuleBasicSourceStreamHandlers returns [EObject current=null] : iv_ruleBasicSourceStreamHandlers= ruleBasicSourceStreamHandlers EOF ;
    public final EObject entryRuleBasicSourceStreamHandlers() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSourceStreamHandlers_StartIndex = input.index();
        EObject iv_ruleBasicSourceStreamHandlers = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return current; }
            // InternalSiddhiParser.g:9945:66: (iv_ruleBasicSourceStreamHandlers= ruleBasicSourceStreamHandlers EOF )
            // InternalSiddhiParser.g:9946:2: iv_ruleBasicSourceStreamHandlers= ruleBasicSourceStreamHandlers EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceStreamHandlersRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSourceStreamHandlers=ruleBasicSourceStreamHandlers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSourceStreamHandlers; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, entryRuleBasicSourceStreamHandlers_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSourceStreamHandlers"


    // $ANTLR start "ruleBasicSourceStreamHandlers"
    // InternalSiddhiParser.g:9952:1: ruleBasicSourceStreamHandlers returns [EObject current=null] : ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+ ;
    public final EObject ruleBasicSourceStreamHandlers() throws RecognitionException {
        EObject current = null;
        int ruleBasicSourceStreamHandlers_StartIndex = input.index();
        EObject lv_basicSsHandler_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return current; }
            // InternalSiddhiParser.g:9958:2: ( ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+ )
            // InternalSiddhiParser.g:9959:2: ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+
            {
            // InternalSiddhiParser.g:9959:2: ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+
            int cnt119=0;
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==NumberSign||LA119_0==LeftSquareBracket) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSiddhiParser.g:9960:3: (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler )
            	    {
            	    // InternalSiddhiParser.g:9960:3: (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler )
            	    // InternalSiddhiParser.g:9961:4: lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerBasicSourceStreamHandlerParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_basicSsHandler_0_0=ruleBasicSourceStreamHandler();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlersRule());
            	      				}
            	      				add(
            	      					current,
            	      					"basicSsHandler",
            	      					lv_basicSsHandler_0_0,
            	      					"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandler");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt119 >= 1 ) break loop119;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(119, input);
                        throw eee;
                }
                cnt119++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, ruleBasicSourceStreamHandlers_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSourceStreamHandlers"


    // $ANTLR start "entryRuleBasicSourceStreamHandlers1"
    // InternalSiddhiParser.g:9981:1: entryRuleBasicSourceStreamHandlers1 returns [EObject current=null] : iv_ruleBasicSourceStreamHandlers1= ruleBasicSourceStreamHandlers1 EOF ;
    public final EObject entryRuleBasicSourceStreamHandlers1() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSourceStreamHandlers1_StartIndex = input.index();
        EObject iv_ruleBasicSourceStreamHandlers1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return current; }
            // InternalSiddhiParser.g:9981:67: (iv_ruleBasicSourceStreamHandlers1= ruleBasicSourceStreamHandlers1 EOF )
            // InternalSiddhiParser.g:9982:2: iv_ruleBasicSourceStreamHandlers1= ruleBasicSourceStreamHandlers1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSourceStreamHandlers1=ruleBasicSourceStreamHandlers1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSourceStreamHandlers1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, entryRuleBasicSourceStreamHandlers1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSourceStreamHandlers1"


    // $ANTLR start "ruleBasicSourceStreamHandlers1"
    // InternalSiddhiParser.g:9988:1: ruleBasicSourceStreamHandlers1 returns [EObject current=null] : ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? ) ;
    public final EObject ruleBasicSourceStreamHandlers1() throws RecognitionException {
        EObject current = null;
        int ruleBasicSourceStreamHandlers1_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_exp_3_0 = null;

        EObject lv_fo_6_0 = null;

        EObject this_WINDOW_8 = null;

        EObject lv_func_op_10_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return current; }
            // InternalSiddhiParser.g:9994:2: ( ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? ) )
            // InternalSiddhiParser.g:9995:2: ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? )
            {
            // InternalSiddhiParser.g:9995:2: ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? )
            // InternalSiddhiParser.g:9996:3: () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )?
            {
            // InternalSiddhiParser.g:9996:3: ()
            // InternalSiddhiParser.g:9997:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBasicSourceStreamHandlers1Access().getBasicSourceStreamHandlers1Action_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:10003:3: ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )?
            int alt121=3;
            alt121 = dfa121.predict(input);
            switch (alt121) {
                case 1 :
                    // InternalSiddhiParser.g:10004:4: ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
                    {
                    // InternalSiddhiParser.g:10004:4: ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
                    // InternalSiddhiParser.g:10005:5: ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
                    {
                    // InternalSiddhiParser.g:10018:5: ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
                    // InternalSiddhiParser.g:10019:6: (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS
                    {
                    // InternalSiddhiParser.g:10019:6: (otherlv_1= NumberSign )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==NumberSign) ) {
                        alt120=1;
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalSiddhiParser.g:10020:7: otherlv_1= NumberSign
                            {
                            otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_1, grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_0_0_0());
                              						
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getOPEN_SQARE_BRACKETSParserRuleCall_1_0_0_1());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    ruleOPEN_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }
                    // InternalSiddhiParser.g:10032:6: ( (lv_exp_3_0= ruleExpression ) )
                    // InternalSiddhiParser.g:10033:7: (lv_exp_3_0= ruleExpression )
                    {
                    // InternalSiddhiParser.g:10033:7: (lv_exp_3_0= ruleExpression )
                    // InternalSiddhiParser.g:10034:8: lv_exp_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getExpExpressionParserRuleCall_1_0_0_2_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_exp_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      								}
                      								set(
                      									current,
                      									"exp",
                      									lv_exp_3_0,
                      									"org.xtext.example.siddhi.Siddhi.Expression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getCLOSE_SQARE_BRACKETSParserRuleCall_1_0_0_3());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    ruleCLOSE_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10061:4: ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) )
                    {
                    // InternalSiddhiParser.g:10061:4: ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) )
                    // InternalSiddhiParser.g:10062:5: ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) )
                    {
                    // InternalSiddhiParser.g:10071:5: (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) )
                    // InternalSiddhiParser.g:10072:6: otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) )
                    {
                    otherlv_5=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_5, grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_1_0_0());
                      					
                    }
                    // InternalSiddhiParser.g:10076:6: ( (lv_fo_6_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:10077:7: (lv_fo_6_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:10077:7: (lv_fo_6_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:10078:8: lv_fo_6_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getFoFunctionOperationParserRuleCall_1_1_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_fo_6_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      								}
                      								set(
                      									current,
                      									"fo",
                      									lv_fo_6_0,
                      									"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:10098:3: ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==NumberSign) ) {
                int LA122_1 = input.LA(2);

                if ( (LA122_1==Window) && (synpred93_InternalSiddhiParser())) {
                    alt122=1;
                }
            }
            switch (alt122) {
                case 1 :
                    // InternalSiddhiParser.g:10099:4: ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) )
                    {
                    // InternalSiddhiParser.g:10110:4: (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) )
                    // InternalSiddhiParser.g:10111:5: otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) )
                    {
                    otherlv_7=(Token)match(input,NumberSign,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_2_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      					}
                      					newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getWINDOWParserRuleCall_2_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    this_WINDOW_8=ruleWINDOW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_WINDOW_8;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_9=(Token)match(input,FullStop,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getBasicSourceStreamHandlers1Access().getFullStopKeyword_2_0_2());
                      				
                    }
                    // InternalSiddhiParser.g:10130:5: ( (lv_func_op_10_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:10131:6: (lv_func_op_10_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:10131:6: (lv_func_op_10_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:10132:7: lv_func_op_10_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getFunc_opFunctionOperationParserRuleCall_2_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_func_op_10_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      							}
                      							set(
                      								current,
                      								"func_op",
                      								lv_func_op_10_0,
                      								"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, ruleBasicSourceStreamHandlers1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSourceStreamHandlers1"


    // $ANTLR start "entryRuleBasicSourceStreamHandler"
    // InternalSiddhiParser.g:10155:1: entryRuleBasicSourceStreamHandler returns [EObject current=null] : iv_ruleBasicSourceStreamHandler= ruleBasicSourceStreamHandler EOF ;
    public final EObject entryRuleBasicSourceStreamHandler() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSourceStreamHandler_StartIndex = input.index();
        EObject iv_ruleBasicSourceStreamHandler = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return current; }
            // InternalSiddhiParser.g:10155:65: (iv_ruleBasicSourceStreamHandler= ruleBasicSourceStreamHandler EOF )
            // InternalSiddhiParser.g:10156:2: iv_ruleBasicSourceStreamHandler= ruleBasicSourceStreamHandler EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceStreamHandlerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSourceStreamHandler=ruleBasicSourceStreamHandler();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSourceStreamHandler; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, entryRuleBasicSourceStreamHandler_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSourceStreamHandler"


    // $ANTLR start "ruleBasicSourceStreamHandler"
    // InternalSiddhiParser.g:10162:1: ruleBasicSourceStreamHandler returns [EObject current=null] : ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) ) ;
    public final EObject ruleBasicSourceStreamHandler() throws RecognitionException {
        EObject current = null;
        int ruleBasicSourceStreamHandler_StartIndex = input.index();
        EObject lv_fil_0_0 = null;

        EObject lv_sf_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return current; }
            // InternalSiddhiParser.g:10168:2: ( ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) ) )
            // InternalSiddhiParser.g:10169:2: ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) )
            {
            // InternalSiddhiParser.g:10169:2: ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==NumberSign) ) {
                int LA123_1 = input.LA(2);

                if ( (LA123_1==LeftSquareBracket) ) {
                    alt123=1;
                }
                else if ( (LA123_1==RULE_ID) ) {
                    alt123=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 123, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA123_0==LeftSquareBracket) ) {
                alt123=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalSiddhiParser.g:10170:3: ( (lv_fil_0_0= ruleFilter ) )
                    {
                    // InternalSiddhiParser.g:10170:3: ( (lv_fil_0_0= ruleFilter ) )
                    // InternalSiddhiParser.g:10171:4: (lv_fil_0_0= ruleFilter )
                    {
                    // InternalSiddhiParser.g:10171:4: (lv_fil_0_0= ruleFilter )
                    // InternalSiddhiParser.g:10172:5: lv_fil_0_0= ruleFilter
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicSourceStreamHandlerAccess().getFilFilterParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_fil_0_0=ruleFilter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlerRule());
                      					}
                      					set(
                      						current,
                      						"fil",
                      						lv_fil_0_0,
                      						"org.xtext.example.siddhi.Siddhi.Filter");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10190:3: ( (lv_sf_1_0= ruleStreamFunction ) )
                    {
                    // InternalSiddhiParser.g:10190:3: ( (lv_sf_1_0= ruleStreamFunction ) )
                    // InternalSiddhiParser.g:10191:4: (lv_sf_1_0= ruleStreamFunction )
                    {
                    // InternalSiddhiParser.g:10191:4: (lv_sf_1_0= ruleStreamFunction )
                    // InternalSiddhiParser.g:10192:5: lv_sf_1_0= ruleStreamFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicSourceStreamHandlerAccess().getSfStreamFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sf_1_0=ruleStreamFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlerRule());
                      					}
                      					set(
                      						current,
                      						"sf",
                      						lv_sf_1_0,
                      						"org.xtext.example.siddhi.Siddhi.StreamFunction");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, ruleBasicSourceStreamHandler_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSourceStreamHandler"


    // $ANTLR start "entryRuleFilter"
    // InternalSiddhiParser.g:10213:1: entryRuleFilter returns [EObject current=null] : iv_ruleFilter= ruleFilter EOF ;
    public final EObject entryRuleFilter() throws RecognitionException {
        EObject current = null;
        int entryRuleFilter_StartIndex = input.index();
        EObject iv_ruleFilter = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return current; }
            // InternalSiddhiParser.g:10213:47: (iv_ruleFilter= ruleFilter EOF )
            // InternalSiddhiParser.g:10214:2: iv_ruleFilter= ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFilter=ruleFilter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, entryRuleFilter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalSiddhiParser.g:10220:1: ruleFilter returns [EObject current=null] : ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ;
    public final EObject ruleFilter() throws RecognitionException {
        EObject current = null;
        int ruleFilter_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return current; }
            // InternalSiddhiParser.g:10226:2: ( ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
            // InternalSiddhiParser.g:10227:2: ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
            {
            // InternalSiddhiParser.g:10227:2: ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
            // InternalSiddhiParser.g:10228:3: (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS
            {
            // InternalSiddhiParser.g:10228:3: (otherlv_0= NumberSign )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==NumberSign) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSiddhiParser.g:10229:4: otherlv_0= NumberSign
                    {
                    otherlv_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFilterAccess().getNumberSignKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFilterAccess().getOPEN_SQARE_BRACKETSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_43);
            ruleOPEN_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:10241:3: ( (lv_exp_2_0= ruleExpression ) )
            // InternalSiddhiParser.g:10242:4: (lv_exp_2_0= ruleExpression )
            {
            // InternalSiddhiParser.g:10242:4: (lv_exp_2_0= ruleExpression )
            // InternalSiddhiParser.g:10243:5: lv_exp_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterAccess().getExpExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_exp_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFilterAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, ruleFilter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleStreamFunction"
    // InternalSiddhiParser.g:10271:1: entryRuleStreamFunction returns [EObject current=null] : iv_ruleStreamFunction= ruleStreamFunction EOF ;
    public final EObject entryRuleStreamFunction() throws RecognitionException {
        EObject current = null;
        int entryRuleStreamFunction_StartIndex = input.index();
        EObject iv_ruleStreamFunction = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return current; }
            // InternalSiddhiParser.g:10271:55: (iv_ruleStreamFunction= ruleStreamFunction EOF )
            // InternalSiddhiParser.g:10272:2: iv_ruleStreamFunction= ruleStreamFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStreamFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStreamFunction=ruleStreamFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStreamFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, entryRuleStreamFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStreamFunction"


    // $ANTLR start "ruleStreamFunction"
    // InternalSiddhiParser.g:10278:1: ruleStreamFunction returns [EObject current=null] : (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) ) ;
    public final EObject ruleStreamFunction() throws RecognitionException {
        EObject current = null;
        int ruleStreamFunction_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_fo_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return current; }
            // InternalSiddhiParser.g:10284:2: ( (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) ) )
            // InternalSiddhiParser.g:10285:2: (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) )
            {
            // InternalSiddhiParser.g:10285:2: (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) )
            // InternalSiddhiParser.g:10286:3: otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) )
            {
            otherlv_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStreamFunctionAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSiddhiParser.g:10290:3: ( (lv_fo_1_0= ruleFunctionOperation ) )
            // InternalSiddhiParser.g:10291:4: (lv_fo_1_0= ruleFunctionOperation )
            {
            // InternalSiddhiParser.g:10291:4: (lv_fo_1_0= ruleFunctionOperation )
            // InternalSiddhiParser.g:10292:5: lv_fo_1_0= ruleFunctionOperation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStreamFunctionAccess().getFoFunctionOperationParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_fo_1_0=ruleFunctionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStreamFunctionRule());
              					}
              					set(
              						current,
              						"fo",
              						lv_fo_1_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionOperation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, ruleStreamFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStreamFunction"


    // $ANTLR start "entryRuleExpression"
    // InternalSiddhiParser.g:10313:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleExpression_StartIndex = input.index();
        EObject iv_ruleExpression = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return current; }
            // InternalSiddhiParser.g:10313:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSiddhiParser.g:10314:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, entryRuleExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSiddhiParser.g:10320:1: ruleExpression returns [EObject current=null] : this_MathOperation_0= ruleMathOperation ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;
        int ruleExpression_StartIndex = input.index();
        EObject this_MathOperation_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return current; }
            // InternalSiddhiParser.g:10326:2: (this_MathOperation_0= ruleMathOperation )
            // InternalSiddhiParser.g:10327:2: this_MathOperation_0= ruleMathOperation
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getMathOperationParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MathOperation_0=ruleMathOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_MathOperation_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, ruleExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleFunctionOperation"
    // InternalSiddhiParser.g:10338:1: entryRuleFunctionOperation returns [EObject current=null] : iv_ruleFunctionOperation= ruleFunctionOperation EOF ;
    public final EObject entryRuleFunctionOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionOperation_StartIndex = input.index();
        EObject iv_ruleFunctionOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return current; }
            // InternalSiddhiParser.g:10338:58: (iv_ruleFunctionOperation= ruleFunctionOperation EOF )
            // InternalSiddhiParser.g:10339:2: iv_ruleFunctionOperation= ruleFunctionOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionOperation=ruleFunctionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, entryRuleFunctionOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOperation"


    // $ANTLR start "ruleFunctionOperation"
    // InternalSiddhiParser.g:10345:1: ruleFunctionOperation returns [EObject current=null] : ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR ) ;
    public final EObject ruleFunctionOperation() throws RecognitionException {
        EObject current = null;
        int ruleFunctionOperation_StartIndex = input.index();
        Token otherlv_2=null;
        EObject lv_funcNamespace_1_0 = null;

        EObject lv_funcId_3_0 = null;

        EObject lv_attrList_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return current; }
            // InternalSiddhiParser.g:10351:2: ( ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:10352:2: ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR )
            {
            // InternalSiddhiParser.g:10352:2: ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR )
            // InternalSiddhiParser.g:10353:3: () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR
            {
            // InternalSiddhiParser.g:10353:3: ()
            // InternalSiddhiParser.g:10354:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionOperationAccess().getFunctionOperationAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:10360:3: ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==RULE_ID) ) {
                int LA125_1 = input.LA(2);

                if ( (LA125_1==Colon) ) {
                    alt125=1;
                }
            }
            switch (alt125) {
                case 1 :
                    // InternalSiddhiParser.g:10361:4: ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon
                    {
                    // InternalSiddhiParser.g:10361:4: ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) )
                    // InternalSiddhiParser.g:10362:5: (lv_funcNamespace_1_0= ruleFunctionNamespace )
                    {
                    // InternalSiddhiParser.g:10362:5: (lv_funcNamespace_1_0= ruleFunctionNamespace )
                    // InternalSiddhiParser.g:10363:6: lv_funcNamespace_1_0= ruleFunctionNamespace
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionOperationAccess().getFuncNamespaceFunctionNamespaceParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_funcNamespace_1_0=ruleFunctionNamespace();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionOperationRule());
                      						}
                      						set(
                      							current,
                      							"funcNamespace",
                      							lv_funcNamespace_1_0,
                      							"org.xtext.example.siddhi.Siddhi.FunctionNamespace");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFunctionOperationAccess().getColonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:10385:3: ( (lv_funcId_3_0= ruleFunctionId ) )
            // InternalSiddhiParser.g:10386:4: (lv_funcId_3_0= ruleFunctionId )
            {
            // InternalSiddhiParser.g:10386:4: (lv_funcId_3_0= ruleFunctionId )
            // InternalSiddhiParser.g:10387:5: lv_funcId_3_0= ruleFunctionId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionOperationAccess().getFuncIdFunctionIdParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_funcId_3_0=ruleFunctionId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionOperationRule());
              					}
              					set(
              						current,
              						"funcId",
              						lv_funcId_3_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionOperationAccess().getOPEN_PARParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_91);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:10411:3: ( (lv_attrList_5_0= ruleAttributeList ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==False||LA126_0==True||LA126_0==Not||LA126_0==NumberSign||LA126_0==LeftParenthesis||(LA126_0>=Asterisk && LA126_0<=PlusSign)||(LA126_0>=HyphenMinus && LA126_0<=FullStop)||(LA126_0>=RULE_ID && LA126_0<=RULE_INT)||LA126_0==RULE_STRING) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSiddhiParser.g:10412:4: (lv_attrList_5_0= ruleAttributeList )
                    {
                    // InternalSiddhiParser.g:10412:4: (lv_attrList_5_0= ruleAttributeList )
                    // InternalSiddhiParser.g:10413:5: lv_attrList_5_0= ruleAttributeList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOperationAccess().getAttrListAttributeListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_attrList_5_0=ruleAttributeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOperationRule());
                      					}
                      					set(
                      						current,
                      						"attrList",
                      						lv_attrList_5_0,
                      						"org.xtext.example.siddhi.Siddhi.AttributeList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionOperationAccess().getCLOSE_PARParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, ruleFunctionOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOperation"


    // $ANTLR start "entryRuleFunctionNamespace"
    // InternalSiddhiParser.g:10441:1: entryRuleFunctionNamespace returns [EObject current=null] : iv_ruleFunctionNamespace= ruleFunctionNamespace EOF ;
    public final EObject entryRuleFunctionNamespace() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionNamespace_StartIndex = input.index();
        EObject iv_ruleFunctionNamespace = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return current; }
            // InternalSiddhiParser.g:10441:58: (iv_ruleFunctionNamespace= ruleFunctionNamespace EOF )
            // InternalSiddhiParser.g:10442:2: iv_ruleFunctionNamespace= ruleFunctionNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNamespaceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionNamespace=ruleFunctionNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionNamespace; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, entryRuleFunctionNamespace_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionNamespace"


    // $ANTLR start "ruleFunctionNamespace"
    // InternalSiddhiParser.g:10448:1: ruleFunctionNamespace returns [EObject current=null] : ( (lv_na_0_0= ruleIdNew ) ) ;
    public final EObject ruleFunctionNamespace() throws RecognitionException {
        EObject current = null;
        int ruleFunctionNamespace_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_na_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return current; }
            // InternalSiddhiParser.g:10454:2: ( ( (lv_na_0_0= ruleIdNew ) ) )
            // InternalSiddhiParser.g:10455:2: ( (lv_na_0_0= ruleIdNew ) )
            {
            // InternalSiddhiParser.g:10455:2: ( (lv_na_0_0= ruleIdNew ) )
            // InternalSiddhiParser.g:10456:3: (lv_na_0_0= ruleIdNew )
            {
            // InternalSiddhiParser.g:10456:3: (lv_na_0_0= ruleIdNew )
            // InternalSiddhiParser.g:10457:4: lv_na_0_0= ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionNamespaceAccess().getNaIdNewParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_na_0_0=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionNamespaceRule());
              				}
              				set(
              					current,
              					"na",
              					lv_na_0_0,
              					"org.xtext.example.siddhi.Siddhi.IdNew");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, ruleFunctionNamespace_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionNamespace"


    // $ANTLR start "entryRuleFunctionId"
    // InternalSiddhiParser.g:10477:1: entryRuleFunctionId returns [EObject current=null] : iv_ruleFunctionId= ruleFunctionId EOF ;
    public final EObject entryRuleFunctionId() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionId_StartIndex = input.index();
        EObject iv_ruleFunctionId = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return current; }
            // InternalSiddhiParser.g:10477:51: (iv_ruleFunctionId= ruleFunctionId EOF )
            // InternalSiddhiParser.g:10478:2: iv_ruleFunctionId= ruleFunctionId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionIdRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionId=ruleFunctionId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionId; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, entryRuleFunctionId_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionId"


    // $ANTLR start "ruleFunctionId"
    // InternalSiddhiParser.g:10484:1: ruleFunctionId returns [EObject current=null] : ( (lv_na_0_0= ruleName ) ) ;
    public final EObject ruleFunctionId() throws RecognitionException {
        EObject current = null;
        int ruleFunctionId_StartIndex = input.index();
        EObject lv_na_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return current; }
            // InternalSiddhiParser.g:10490:2: ( ( (lv_na_0_0= ruleName ) ) )
            // InternalSiddhiParser.g:10491:2: ( (lv_na_0_0= ruleName ) )
            {
            // InternalSiddhiParser.g:10491:2: ( (lv_na_0_0= ruleName ) )
            // InternalSiddhiParser.g:10492:3: (lv_na_0_0= ruleName )
            {
            // InternalSiddhiParser.g:10492:3: (lv_na_0_0= ruleName )
            // InternalSiddhiParser.g:10493:4: lv_na_0_0= ruleName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionIdAccess().getNaNameParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_na_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionIdRule());
              				}
              				set(
              					current,
              					"na",
              					lv_na_0_0,
              					"org.xtext.example.siddhi.Siddhi.Name");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, ruleFunctionId_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionId"


    // $ANTLR start "entryRuleAttributeList"
    // InternalSiddhiParser.g:10513:1: entryRuleAttributeList returns [EObject current=null] : iv_ruleAttributeList= ruleAttributeList EOF ;
    public final EObject entryRuleAttributeList() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeList_StartIndex = input.index();
        EObject iv_ruleAttributeList = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return current; }
            // InternalSiddhiParser.g:10513:54: (iv_ruleAttributeList= ruleAttributeList EOF )
            // InternalSiddhiParser.g:10514:2: iv_ruleAttributeList= ruleAttributeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeListRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeList=ruleAttributeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeList; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, entryRuleAttributeList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeList"


    // $ANTLR start "ruleAttributeList"
    // InternalSiddhiParser.g:10520:1: ruleAttributeList returns [EObject current=null] : ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) ) ;
    public final EObject ruleAttributeList() throws RecognitionException {
        EObject current = null;
        int ruleAttributeList_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_attr_1_0 = null;

        EObject lv_attr_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return current; }
            // InternalSiddhiParser.g:10526:2: ( ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) ) )
            // InternalSiddhiParser.g:10527:2: ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) )
            {
            // InternalSiddhiParser.g:10527:2: ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==False||LA128_0==True||LA128_0==Not||LA128_0==NumberSign||LA128_0==LeftParenthesis||LA128_0==PlusSign||(LA128_0>=HyphenMinus && LA128_0<=FullStop)||(LA128_0>=RULE_ID && LA128_0<=RULE_INT)||LA128_0==RULE_STRING) ) {
                alt128=1;
            }
            else if ( (LA128_0==Asterisk) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalSiddhiParser.g:10528:3: ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) )
                    {
                    // InternalSiddhiParser.g:10528:3: ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) )
                    // InternalSiddhiParser.g:10529:4: () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* )
                    {
                    // InternalSiddhiParser.g:10529:4: ()
                    // InternalSiddhiParser.g:10530:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeListAccess().getAttributeListAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:10536:4: ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* )
                    // InternalSiddhiParser.g:10537:5: ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )*
                    {
                    // InternalSiddhiParser.g:10537:5: ( (lv_attr_1_0= ruleAttribute ) )
                    // InternalSiddhiParser.g:10538:6: (lv_attr_1_0= ruleAttribute )
                    {
                    // InternalSiddhiParser.g:10538:6: (lv_attr_1_0= ruleAttribute )
                    // InternalSiddhiParser.g:10539:7: lv_attr_1_0= ruleAttribute
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_attr_1_0=ruleAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAttributeListRule());
                      							}
                      							add(
                      								current,
                      								"attr",
                      								lv_attr_1_0,
                      								"org.xtext.example.siddhi.Siddhi.Attribute");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:10556:5: (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )*
                    loop127:
                    do {
                        int alt127=2;
                        int LA127_0 = input.LA(1);

                        if ( (LA127_0==Comma) ) {
                            alt127=1;
                        }


                        switch (alt127) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:10557:6: otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) )
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getAttributeListAccess().getCommaKeyword_0_1_1_0());
                    	      					
                    	    }
                    	    // InternalSiddhiParser.g:10561:6: ( (lv_attr_3_0= ruleAttribute ) )
                    	    // InternalSiddhiParser.g:10562:7: (lv_attr_3_0= ruleAttribute )
                    	    {
                    	    // InternalSiddhiParser.g:10562:7: (lv_attr_3_0= ruleAttribute )
                    	    // InternalSiddhiParser.g:10563:8: lv_attr_3_0= ruleAttribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_32);
                    	    lv_attr_3_0=ruleAttribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getAttributeListRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"attr",
                    	      									lv_attr_3_0,
                    	      									"org.xtext.example.siddhi.Siddhi.Attribute");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop127;
                        }
                    } while (true);


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10584:3: ( () otherlv_5= Asterisk )
                    {
                    // InternalSiddhiParser.g:10584:3: ( () otherlv_5= Asterisk )
                    // InternalSiddhiParser.g:10585:4: () otherlv_5= Asterisk
                    {
                    // InternalSiddhiParser.g:10585:4: ()
                    // InternalSiddhiParser.g:10586:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeListAccess().getAttributeListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,Asterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAttributeListAccess().getAsteriskKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, ruleAttributeList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeList"


    // $ANTLR start "entryRuleAttribute"
    // InternalSiddhiParser.g:10601:1: entryRuleAttribute returns [EObject current=null] : iv_ruleAttribute= ruleAttribute EOF ;
    public final EObject entryRuleAttribute() throws RecognitionException {
        EObject current = null;
        int entryRuleAttribute_StartIndex = input.index();
        EObject iv_ruleAttribute = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return current; }
            // InternalSiddhiParser.g:10601:50: (iv_ruleAttribute= ruleAttribute EOF )
            // InternalSiddhiParser.g:10602:2: iv_ruleAttribute= ruleAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttribute=ruleAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttribute; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, entryRuleAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttribute"


    // $ANTLR start "ruleAttribute"
    // InternalSiddhiParser.g:10608:1: ruleAttribute returns [EObject current=null] : ( (lv_mathOp_0_0= ruleMathOperation ) ) ;
    public final EObject ruleAttribute() throws RecognitionException {
        EObject current = null;
        int ruleAttribute_StartIndex = input.index();
        EObject lv_mathOp_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return current; }
            // InternalSiddhiParser.g:10614:2: ( ( (lv_mathOp_0_0= ruleMathOperation ) ) )
            // InternalSiddhiParser.g:10615:2: ( (lv_mathOp_0_0= ruleMathOperation ) )
            {
            // InternalSiddhiParser.g:10615:2: ( (lv_mathOp_0_0= ruleMathOperation ) )
            // InternalSiddhiParser.g:10616:3: (lv_mathOp_0_0= ruleMathOperation )
            {
            // InternalSiddhiParser.g:10616:3: (lv_mathOp_0_0= ruleMathOperation )
            // InternalSiddhiParser.g:10617:4: lv_mathOp_0_0= ruleMathOperation
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAttributeAccess().getMathOpMathOperationParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_mathOp_0_0=ruleMathOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getAttributeRule());
              				}
              				set(
              					current,
              					"mathOp",
              					lv_mathOp_0_0,
              					"org.xtext.example.siddhi.Siddhi.MathOperation");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, ruleAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttribute"


    // $ANTLR start "entryRuleGroupByQuerySelection"
    // InternalSiddhiParser.g:10637:1: entryRuleGroupByQuerySelection returns [EObject current=null] : iv_ruleGroupByQuerySelection= ruleGroupByQuerySelection EOF ;
    public final EObject entryRuleGroupByQuerySelection() throws RecognitionException {
        EObject current = null;
        int entryRuleGroupByQuerySelection_StartIndex = input.index();
        EObject iv_ruleGroupByQuerySelection = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return current; }
            // InternalSiddhiParser.g:10637:62: (iv_ruleGroupByQuerySelection= ruleGroupByQuerySelection EOF )
            // InternalSiddhiParser.g:10638:2: iv_ruleGroupByQuerySelection= ruleGroupByQuerySelection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupByQuerySelectionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGroupByQuerySelection=ruleGroupByQuerySelection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroupByQuerySelection; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, entryRuleGroupByQuerySelection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleGroupByQuerySelection"


    // $ANTLR start "ruleGroupByQuerySelection"
    // InternalSiddhiParser.g:10644:1: ruleGroupByQuerySelection returns [EObject current=null] : ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? ) ;
    public final EObject ruleGroupByQuerySelection() throws RecognitionException {
        EObject current = null;
        int ruleGroupByQuerySelection_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_SELECT_1 = null;

        EObject lv_out_att_3_0 = null;

        EObject lv_out_att_5_0 = null;

        EObject lv_grp_by_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return current; }
            // InternalSiddhiParser.g:10650:2: ( ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? ) )
            // InternalSiddhiParser.g:10651:2: ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? )
            {
            // InternalSiddhiParser.g:10651:2: ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? )
            // InternalSiddhiParser.g:10652:3: () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )?
            {
            // InternalSiddhiParser.g:10652:3: ()
            // InternalSiddhiParser.g:10653:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGroupByQuerySelectionAccess().getGroupByQuerySelectionAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:10659:3: (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) )
            // InternalSiddhiParser.g:10660:4: this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) )
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getGroupByQuerySelectionRule());
              				}
              				newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getSELECTParserRuleCall_1_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_92);
            this_SELECT_1=ruleSELECT(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_SELECT_1;
              				afterParserOrEnumRuleCall();
              			
            }
            // InternalSiddhiParser.g:10671:4: (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==Asterisk) ) {
                alt130=1;
            }
            else if ( (LA130_0==False||LA130_0==True||LA130_0==Not||LA130_0==NumberSign||LA130_0==LeftParenthesis||LA130_0==PlusSign||(LA130_0>=HyphenMinus && LA130_0<=FullStop)||(LA130_0>=RULE_ID && LA130_0<=RULE_INT)||LA130_0==RULE_STRING) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalSiddhiParser.g:10672:5: otherlv_2= Asterisk
                    {
                    otherlv_2=(Token)match(input,Asterisk,FollowSets000.FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getGroupByQuerySelectionAccess().getAsteriskKeyword_1_1_0());
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10677:5: ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* )
                    {
                    // InternalSiddhiParser.g:10677:5: ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* )
                    // InternalSiddhiParser.g:10678:6: ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )*
                    {
                    // InternalSiddhiParser.g:10678:6: ( (lv_out_att_3_0= ruleOutputAttribute ) )
                    // InternalSiddhiParser.g:10679:7: (lv_out_att_3_0= ruleOutputAttribute )
                    {
                    // InternalSiddhiParser.g:10679:7: (lv_out_att_3_0= ruleOutputAttribute )
                    // InternalSiddhiParser.g:10680:8: lv_out_att_3_0= ruleOutputAttribute
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_out_att_3_0=ruleOutputAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getGroupByQuerySelectionRule());
                      								}
                      								add(
                      									current,
                      									"out_att",
                      									lv_out_att_3_0,
                      									"org.xtext.example.siddhi.Siddhi.OutputAttribute");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:10697:6: (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )*
                    loop129:
                    do {
                        int alt129=2;
                        int LA129_0 = input.LA(1);

                        if ( (LA129_0==Comma) ) {
                            alt129=1;
                        }


                        switch (alt129) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:10698:7: otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_4, grammarAccess.getGroupByQuerySelectionAccess().getCommaKeyword_1_1_1_1_0());
                    	      						
                    	    }
                    	    // InternalSiddhiParser.g:10702:7: ( (lv_out_att_5_0= ruleOutputAttribute ) )
                    	    // InternalSiddhiParser.g:10703:8: (lv_out_att_5_0= ruleOutputAttribute )
                    	    {
                    	    // InternalSiddhiParser.g:10703:8: (lv_out_att_5_0= ruleOutputAttribute )
                    	    // InternalSiddhiParser.g:10704:9: lv_out_att_5_0= ruleOutputAttribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_94);
                    	    lv_out_att_5_0=ruleOutputAttribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getGroupByQuerySelectionRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"out_att",
                    	      										lv_out_att_5_0,
                    	      										"org.xtext.example.siddhi.Siddhi.OutputAttribute");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop129;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            // InternalSiddhiParser.g:10725:3: ( (lv_grp_by_6_0= ruleGroupBy ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==Group) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSiddhiParser.g:10726:4: (lv_grp_by_6_0= ruleGroupBy )
                    {
                    // InternalSiddhiParser.g:10726:4: (lv_grp_by_6_0= ruleGroupBy )
                    // InternalSiddhiParser.g:10727:5: lv_grp_by_6_0= ruleGroupBy
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getGrp_byGroupByParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_grp_by_6_0=ruleGroupBy();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGroupByQuerySelectionRule());
                      					}
                      					set(
                      						current,
                      						"grp_by",
                      						lv_grp_by_6_0,
                      						"org.xtext.example.siddhi.Siddhi.GroupBy");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, ruleGroupByQuerySelection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleGroupByQuerySelection"


    // $ANTLR start "entryRuleQuerySection"
    // InternalSiddhiParser.g:10748:1: entryRuleQuerySection returns [EObject current=null] : iv_ruleQuerySection= ruleQuerySection EOF ;
    public final EObject entryRuleQuerySection() throws RecognitionException {
        EObject current = null;
        int entryRuleQuerySection_StartIndex = input.index();
        EObject iv_ruleQuerySection = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return current; }
            // InternalSiddhiParser.g:10748:53: (iv_ruleQuerySection= ruleQuerySection EOF )
            // InternalSiddhiParser.g:10749:2: iv_ruleQuerySection= ruleQuerySection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuerySectionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuerySection=ruleQuerySection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuerySection; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, entryRuleQuerySection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQuerySection"


    // $ANTLR start "ruleQuerySection"
    // InternalSiddhiParser.g:10755:1: ruleQuerySection returns [EObject current=null] : ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? ) ;
    public final EObject ruleQuerySection() throws RecognitionException {
        EObject current = null;
        int ruleQuerySection_StartIndex = input.index();
        EObject lv_grpByQuerySel_1_0 = null;

        EObject lv_having_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return current; }
            // InternalSiddhiParser.g:10761:2: ( ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? ) )
            // InternalSiddhiParser.g:10762:2: ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? )
            {
            // InternalSiddhiParser.g:10762:2: ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? )
            // InternalSiddhiParser.g:10763:3: () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )?
            {
            // InternalSiddhiParser.g:10763:3: ()
            // InternalSiddhiParser.g:10764:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQuerySectionAccess().getQuerySectionAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:10770:3: ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) )
            // InternalSiddhiParser.g:10771:4: (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection )
            {
            // InternalSiddhiParser.g:10771:4: (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection )
            // InternalSiddhiParser.g:10772:5: lv_grpByQuerySel_1_0= ruleGroupByQuerySelection
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuerySectionAccess().getGrpByQuerySelGroupByQuerySelectionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_grpByQuerySel_1_0=ruleGroupByQuerySelection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuerySectionRule());
              					}
              					set(
              						current,
              						"grpByQuerySel",
              						lv_grpByQuerySel_1_0,
              						"org.xtext.example.siddhi.Siddhi.GroupByQuerySelection");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:10789:3: ( (lv_having_2_0= ruleHavingExpr ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Having) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSiddhiParser.g:10790:4: (lv_having_2_0= ruleHavingExpr )
                    {
                    // InternalSiddhiParser.g:10790:4: (lv_having_2_0= ruleHavingExpr )
                    // InternalSiddhiParser.g:10791:5: lv_having_2_0= ruleHavingExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQuerySectionAccess().getHavingHavingExprParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_having_2_0=ruleHavingExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQuerySectionRule());
                      					}
                      					set(
                      						current,
                      						"having",
                      						lv_having_2_0,
                      						"org.xtext.example.siddhi.Siddhi.HavingExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, ruleQuerySection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQuerySection"


    // $ANTLR start "entryRuleOutputAttribute"
    // InternalSiddhiParser.g:10812:1: entryRuleOutputAttribute returns [EObject current=null] : iv_ruleOutputAttribute= ruleOutputAttribute EOF ;
    public final EObject entryRuleOutputAttribute() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputAttribute_StartIndex = input.index();
        EObject iv_ruleOutputAttribute = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return current; }
            // InternalSiddhiParser.g:10812:56: (iv_ruleOutputAttribute= ruleOutputAttribute EOF )
            // InternalSiddhiParser.g:10813:2: iv_ruleOutputAttribute= ruleOutputAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputAttribute=ruleOutputAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputAttribute; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, entryRuleOutputAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputAttribute"


    // $ANTLR start "ruleOutputAttribute"
    // InternalSiddhiParser.g:10819:1: ruleOutputAttribute returns [EObject current=null] : ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) ) ;
    public final EObject ruleOutputAttribute() throws RecognitionException {
        EObject current = null;
        int ruleOutputAttribute_StartIndex = input.index();
        EObject lv_outAttr_1_0 = null;

        EObject lv_attr_ref_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return current; }
            // InternalSiddhiParser.g:10825:2: ( ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) ) )
            // InternalSiddhiParser.g:10826:2: ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) )
            {
            // InternalSiddhiParser.g:10826:2: ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) )
            int alt133=2;
            alt133 = dfa133.predict(input);
            switch (alt133) {
                case 1 :
                    // InternalSiddhiParser.g:10827:3: ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) )
                    {
                    // InternalSiddhiParser.g:10827:3: ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) )
                    // InternalSiddhiParser.g:10828:4: () ( (lv_outAttr_1_0= ruleOutAttr ) )
                    {
                    // InternalSiddhiParser.g:10828:4: ()
                    // InternalSiddhiParser.g:10829:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:10835:4: ( (lv_outAttr_1_0= ruleOutAttr ) )
                    // InternalSiddhiParser.g:10836:5: (lv_outAttr_1_0= ruleOutAttr )
                    {
                    // InternalSiddhiParser.g:10836:5: (lv_outAttr_1_0= ruleOutAttr )
                    // InternalSiddhiParser.g:10837:6: lv_outAttr_1_0= ruleOutAttr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputAttributeAccess().getOutAttrOutAttrParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_outAttr_1_0=ruleOutAttr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputAttributeRule());
                      						}
                      						set(
                      							current,
                      							"outAttr",
                      							lv_outAttr_1_0,
                      							"org.xtext.example.siddhi.Siddhi.OutAttr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10856:3: ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) )
                    {
                    // InternalSiddhiParser.g:10856:3: ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) )
                    // InternalSiddhiParser.g:10857:4: () ( (lv_attr_ref_3_0= ruleAttributeReference ) )
                    {
                    // InternalSiddhiParser.g:10857:4: ()
                    // InternalSiddhiParser.g:10858:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:10864:4: ( (lv_attr_ref_3_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:10865:5: (lv_attr_ref_3_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:10865:5: (lv_attr_ref_3_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:10866:6: lv_attr_ref_3_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputAttributeAccess().getAttr_refAttributeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_attr_ref_3_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputAttributeRule());
                      						}
                      						set(
                      							current,
                      							"attr_ref",
                      							lv_attr_ref_3_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, ruleOutputAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputAttribute"


    // $ANTLR start "entryRuleOutAttr"
    // InternalSiddhiParser.g:10888:1: entryRuleOutAttr returns [EObject current=null] : iv_ruleOutAttr= ruleOutAttr EOF ;
    public final EObject entryRuleOutAttr() throws RecognitionException {
        EObject current = null;
        int entryRuleOutAttr_StartIndex = input.index();
        EObject iv_ruleOutAttr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return current; }
            // InternalSiddhiParser.g:10888:48: (iv_ruleOutAttr= ruleOutAttr EOF )
            // InternalSiddhiParser.g:10889:2: iv_ruleOutAttr= ruleOutAttr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutAttrRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutAttr=ruleOutAttr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutAttr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, entryRuleOutAttr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutAttr"


    // $ANTLR start "ruleOutAttr"
    // InternalSiddhiParser.g:10895:1: ruleOutAttr returns [EObject current=null] : ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) ) ;
    public final EObject ruleOutAttr() throws RecognitionException {
        EObject current = null;
        int ruleOutAttr_StartIndex = input.index();
        EObject lv_attr_0_0 = null;

        EObject lv_a_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return current; }
            // InternalSiddhiParser.g:10901:2: ( ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) ) )
            // InternalSiddhiParser.g:10902:2: ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) )
            {
            // InternalSiddhiParser.g:10902:2: ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) )
            // InternalSiddhiParser.g:10903:3: ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) )
            {
            // InternalSiddhiParser.g:10903:3: ( (lv_attr_0_0= ruleAttribute ) )
            // InternalSiddhiParser.g:10904:4: (lv_attr_0_0= ruleAttribute )
            {
            // InternalSiddhiParser.g:10904:4: (lv_attr_0_0= ruleAttribute )
            // InternalSiddhiParser.g:10905:5: lv_attr_0_0= ruleAttribute
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutAttrAccess().getAttrAttributeParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_96);
            lv_attr_0_0=ruleAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutAttrRule());
              					}
              					set(
              						current,
              						"attr",
              						lv_attr_0_0,
              						"org.xtext.example.siddhi.Siddhi.Attribute");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:10922:3: ( (lv_a_1_0= ruleAS ) )
            // InternalSiddhiParser.g:10923:4: (lv_a_1_0= ruleAS )
            {
            // InternalSiddhiParser.g:10923:4: (lv_a_1_0= ruleAS )
            // InternalSiddhiParser.g:10924:5: lv_a_1_0= ruleAS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutAttrAccess().getAASParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_a_1_0=ruleAS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutAttrRule());
              					}
              					set(
              						current,
              						"a",
              						lv_a_1_0,
              						"org.xtext.example.siddhi.Siddhi.AS");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:10941:3: ( (lv_name_2_0= ruleIdNew ) )
            // InternalSiddhiParser.g:10942:4: (lv_name_2_0= ruleIdNew )
            {
            // InternalSiddhiParser.g:10942:4: (lv_name_2_0= ruleIdNew )
            // InternalSiddhiParser.g:10943:5: lv_name_2_0= ruleIdNew
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutAttrAccess().getNameIdNewParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_2_0=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutAttrRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.example.siddhi.Siddhi.IdNew");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, ruleOutAttr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutAttr"


    // $ANTLR start "entryRuleGroupBy"
    // InternalSiddhiParser.g:10964:1: entryRuleGroupBy returns [EObject current=null] : iv_ruleGroupBy= ruleGroupBy EOF ;
    public final EObject entryRuleGroupBy() throws RecognitionException {
        EObject current = null;
        int entryRuleGroupBy_StartIndex = input.index();
        EObject iv_ruleGroupBy = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return current; }
            // InternalSiddhiParser.g:10964:48: (iv_ruleGroupBy= ruleGroupBy EOF )
            // InternalSiddhiParser.g:10965:2: iv_ruleGroupBy= ruleGroupBy EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupByRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGroupBy=ruleGroupBy();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroupBy; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, entryRuleGroupBy_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleGroupBy"


    // $ANTLR start "ruleGroupBy"
    // InternalSiddhiParser.g:10971:1: ruleGroupBy returns [EObject current=null] : (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* ) ;
    public final EObject ruleGroupBy() throws RecognitionException {
        EObject current = null;
        int ruleGroupBy_StartIndex = input.index();
        Token otherlv_3=null;
        EObject this_GROUP_0 = null;

        EObject this_BY_1 = null;

        EObject lv_attr_ref_2_0 = null;

        EObject lv_attr_ref_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return current; }
            // InternalSiddhiParser.g:10977:2: ( (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* ) )
            // InternalSiddhiParser.g:10978:2: (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* )
            {
            // InternalSiddhiParser.g:10978:2: (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* )
            // InternalSiddhiParser.g:10979:3: this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getGroupByRule());
              			}
              			newCompositeNode(grammarAccess.getGroupByAccess().getGROUPParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_97);
            this_GROUP_0=ruleGROUP(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_GROUP_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getGroupByRule());
              			}
              			newCompositeNode(grammarAccess.getGroupByAccess().getBYParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_BY_1=ruleBY(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BY_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11001:3: ( (lv_attr_ref_2_0= ruleAttributeReference ) )
            // InternalSiddhiParser.g:11002:4: (lv_attr_ref_2_0= ruleAttributeReference )
            {
            // InternalSiddhiParser.g:11002:4: (lv_attr_ref_2_0= ruleAttributeReference )
            // InternalSiddhiParser.g:11003:5: lv_attr_ref_2_0= ruleAttributeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_attr_ref_2_0=ruleAttributeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGroupByRule());
              					}
              					add(
              						current,
              						"attr_ref",
              						lv_attr_ref_2_0,
              						"org.xtext.example.siddhi.Siddhi.AttributeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:11020:3: (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==Comma) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalSiddhiParser.g:11021:4: otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) )
            	    {
            	    otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getGroupByAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:11025:4: ( (lv_attr_ref_4_0= ruleAttributeReference ) )
            	    // InternalSiddhiParser.g:11026:5: (lv_attr_ref_4_0= ruleAttributeReference )
            	    {
            	    // InternalSiddhiParser.g:11026:5: (lv_attr_ref_4_0= ruleAttributeReference )
            	    // InternalSiddhiParser.g:11027:6: lv_attr_ref_4_0= ruleAttributeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_attr_ref_4_0=ruleAttributeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getGroupByRule());
            	      						}
            	      						add(
            	      							current,
            	      							"attr_ref",
            	      							lv_attr_ref_4_0,
            	      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, ruleGroupBy_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleGroupBy"


    // $ANTLR start "entryRuleHavingExpr"
    // InternalSiddhiParser.g:11049:1: entryRuleHavingExpr returns [EObject current=null] : iv_ruleHavingExpr= ruleHavingExpr EOF ;
    public final EObject entryRuleHavingExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleHavingExpr_StartIndex = input.index();
        EObject iv_ruleHavingExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return current; }
            // InternalSiddhiParser.g:11049:51: (iv_ruleHavingExpr= ruleHavingExpr EOF )
            // InternalSiddhiParser.g:11050:2: iv_ruleHavingExpr= ruleHavingExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHavingExprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHavingExpr=ruleHavingExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHavingExpr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, entryRuleHavingExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleHavingExpr"


    // $ANTLR start "ruleHavingExpr"
    // InternalSiddhiParser.g:11056:1: ruleHavingExpr returns [EObject current=null] : (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) ) ;
    public final EObject ruleHavingExpr() throws RecognitionException {
        EObject current = null;
        int ruleHavingExpr_StartIndex = input.index();
        EObject this_HAVING_0 = null;

        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return current; }
            // InternalSiddhiParser.g:11062:2: ( (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) ) )
            // InternalSiddhiParser.g:11063:2: (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) )
            {
            // InternalSiddhiParser.g:11063:2: (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) )
            // InternalSiddhiParser.g:11064:3: this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getHavingExprRule());
              			}
              			newCompositeNode(grammarAccess.getHavingExprAccess().getHAVINGParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_43);
            this_HAVING_0=ruleHAVING(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_HAVING_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11075:3: ( (lv_expr_1_0= ruleExpression ) )
            // InternalSiddhiParser.g:11076:4: (lv_expr_1_0= ruleExpression )
            {
            // InternalSiddhiParser.g:11076:4: (lv_expr_1_0= ruleExpression )
            // InternalSiddhiParser.g:11077:5: lv_expr_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHavingExprAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expr_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHavingExprRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, ruleHavingExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHavingExpr"


    // $ANTLR start "entryRuleMathOperation"
    // InternalSiddhiParser.g:11098:1: entryRuleMathOperation returns [EObject current=null] : iv_ruleMathOperation= ruleMathOperation EOF ;
    public final EObject entryRuleMathOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathOperation_StartIndex = input.index();
        EObject iv_ruleMathOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return current; }
            // InternalSiddhiParser.g:11098:54: (iv_ruleMathOperation= ruleMathOperation EOF )
            // InternalSiddhiParser.g:11099:2: iv_ruleMathOperation= ruleMathOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathOperation=ruleMathOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, entryRuleMathOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathOperation"


    // $ANTLR start "ruleMathOperation"
    // InternalSiddhiParser.g:11105:1: ruleMathOperation returns [EObject current=null] : ( (lv_mlo_0_0= ruleMathLogicalOperation ) ) ;
    public final EObject ruleMathOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathOperation_StartIndex = input.index();
        EObject lv_mlo_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return current; }
            // InternalSiddhiParser.g:11111:2: ( ( (lv_mlo_0_0= ruleMathLogicalOperation ) ) )
            // InternalSiddhiParser.g:11112:2: ( (lv_mlo_0_0= ruleMathLogicalOperation ) )
            {
            // InternalSiddhiParser.g:11112:2: ( (lv_mlo_0_0= ruleMathLogicalOperation ) )
            // InternalSiddhiParser.g:11113:3: (lv_mlo_0_0= ruleMathLogicalOperation )
            {
            // InternalSiddhiParser.g:11113:3: (lv_mlo_0_0= ruleMathLogicalOperation )
            // InternalSiddhiParser.g:11114:4: lv_mlo_0_0= ruleMathLogicalOperation
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMathOperationAccess().getMloMathLogicalOperationParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_mlo_0_0=ruleMathLogicalOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getMathOperationRule());
              				}
              				set(
              					current,
              					"mlo",
              					lv_mlo_0_0,
              					"org.xtext.example.siddhi.Siddhi.MathLogicalOperation");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, ruleMathOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathOperation"


    // $ANTLR start "entryRuleMathLogicalOperation"
    // InternalSiddhiParser.g:11134:1: entryRuleMathLogicalOperation returns [EObject current=null] : iv_ruleMathLogicalOperation= ruleMathLogicalOperation EOF ;
    public final EObject entryRuleMathLogicalOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathLogicalOperation_StartIndex = input.index();
        EObject iv_ruleMathLogicalOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return current; }
            // InternalSiddhiParser.g:11134:61: (iv_ruleMathLogicalOperation= ruleMathLogicalOperation EOF )
            // InternalSiddhiParser.g:11135:2: iv_ruleMathLogicalOperation= ruleMathLogicalOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathLogicalOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathLogicalOperation=ruleMathLogicalOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathLogicalOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, entryRuleMathLogicalOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathLogicalOperation"


    // $ANTLR start "ruleMathLogicalOperation"
    // InternalSiddhiParser.g:11141:1: ruleMathLogicalOperation returns [EObject current=null] : (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* ) ;
    public final EObject ruleMathLogicalOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathLogicalOperation_StartIndex = input.index();
        EObject this_MathInOperation_0 = null;

        EObject lv_and_2_0 = null;

        EObject lv_or_3_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return current; }
            // InternalSiddhiParser.g:11147:2: ( (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11148:2: (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11148:2: (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* )
            // InternalSiddhiParser.g:11149:3: this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getMathInOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_98);
            this_MathInOperation_0=ruleMathInOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathInOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11157:3: ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==Or) ) {
                    int LA136_2 = input.LA(2);

                    if ( (synpred94_InternalSiddhiParser()) ) {
                        alt136=1;
                    }


                }
                else if ( (LA136_0==And) ) {
                    int LA136_3 = input.LA(2);

                    if ( (synpred94_InternalSiddhiParser()) ) {
                        alt136=1;
                    }


                }


                switch (alt136) {
            	case 1 :
            	    // InternalSiddhiParser.g:11158:4: ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11181:4: ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) )
            	    // InternalSiddhiParser.g:11182:5: () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11182:5: ()
            	    // InternalSiddhiParser.g:11183:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathLogicalOperationAccess().getMathLogicalOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11189:5: ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) )
            	    int alt135=2;
            	    int LA135_0 = input.LA(1);

            	    if ( (LA135_0==And) ) {
            	        alt135=1;
            	    }
            	    else if ( (LA135_0==Or) ) {
            	        alt135=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 135, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt135) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11190:6: ( (lv_and_2_0= ruleAND ) )
            	            {
            	            // InternalSiddhiParser.g:11190:6: ( (lv_and_2_0= ruleAND ) )
            	            // InternalSiddhiParser.g:11191:7: (lv_and_2_0= ruleAND )
            	            {
            	            // InternalSiddhiParser.g:11191:7: (lv_and_2_0= ruleAND )
            	            // InternalSiddhiParser.g:11192:8: lv_and_2_0= ruleAND
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getAndANDParserRuleCall_1_0_1_0_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_43);
            	            lv_and_2_0=ruleAND();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getMathLogicalOperationRule());
            	              								}
            	              								set(
            	              									current,
            	              									"and",
            	              									lv_and_2_0,
            	              									"org.xtext.example.siddhi.Siddhi.AND");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11210:6: ( (lv_or_3_0= ruleOR ) )
            	            {
            	            // InternalSiddhiParser.g:11210:6: ( (lv_or_3_0= ruleOR ) )
            	            // InternalSiddhiParser.g:11211:7: (lv_or_3_0= ruleOR )
            	            {
            	            // InternalSiddhiParser.g:11211:7: (lv_or_3_0= ruleOR )
            	            // InternalSiddhiParser.g:11212:8: lv_or_3_0= ruleOR
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getOrORParserRuleCall_1_0_1_1_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_43);
            	            lv_or_3_0=ruleOR();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getMathLogicalOperationRule());
            	              								}
            	              								set(
            	              									current,
            	              									"or",
            	              									lv_or_3_0,
            	              									"org.xtext.example.siddhi.Siddhi.OR");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11230:5: ( (lv_right_4_0= ruleMathInOperation ) )
            	    // InternalSiddhiParser.g:11231:6: (lv_right_4_0= ruleMathInOperation )
            	    {
            	    // InternalSiddhiParser.g:11231:6: (lv_right_4_0= ruleMathInOperation )
            	    // InternalSiddhiParser.g:11232:7: lv_right_4_0= ruleMathInOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getRightMathInOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_right_4_0=ruleMathInOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathLogicalOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_4_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathInOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, ruleMathLogicalOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathLogicalOperation"


    // $ANTLR start "entryRuleMathInOperation"
    // InternalSiddhiParser.g:11255:1: entryRuleMathInOperation returns [EObject current=null] : iv_ruleMathInOperation= ruleMathInOperation EOF ;
    public final EObject entryRuleMathInOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathInOperation_StartIndex = input.index();
        EObject iv_ruleMathInOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return current; }
            // InternalSiddhiParser.g:11255:56: (iv_ruleMathInOperation= ruleMathInOperation EOF )
            // InternalSiddhiParser.g:11256:2: iv_ruleMathInOperation= ruleMathInOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathInOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathInOperation=ruleMathInOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathInOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, entryRuleMathInOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathInOperation"


    // $ANTLR start "ruleMathInOperation"
    // InternalSiddhiParser.g:11262:1: ruleMathInOperation returns [EObject current=null] : (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) ) )* ) ;
    public final EObject ruleMathInOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathInOperation_StartIndex = input.index();
        EObject this_MathGtLtOperation_0 = null;

        EObject lv_in_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return current; }
            // InternalSiddhiParser.g:11268:2: ( (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) ) )* ) )
            // InternalSiddhiParser.g:11269:2: (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) ) )* )
            {
            // InternalSiddhiParser.g:11269:2: (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) ) )* )
            // InternalSiddhiParser.g:11270:3: this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathInOperationAccess().getMathGtLtOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_99);
            this_MathGtLtOperation_0=ruleMathGtLtOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathGtLtOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11278:3: ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==In) ) {
                    int LA137_2 = input.LA(2);

                    if ( (synpred95_InternalSiddhiParser()) ) {
                        alt137=1;
                    }


                }


                switch (alt137) {
            	case 1 :
            	    // InternalSiddhiParser.g:11279:4: ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) )
            	    {
            	    // InternalSiddhiParser.g:11294:4: ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) ) )
            	    // InternalSiddhiParser.g:11295:5: () ( (lv_in_2_0= ruleIN ) ) ( (lv_right_3_0= ruleName ) )
            	    {
            	    // InternalSiddhiParser.g:11295:5: ()
            	    // InternalSiddhiParser.g:11296:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathInOperationAccess().getMathInOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11302:5: ( (lv_in_2_0= ruleIN ) )
            	    // InternalSiddhiParser.g:11303:6: (lv_in_2_0= ruleIN )
            	    {
            	    // InternalSiddhiParser.g:11303:6: (lv_in_2_0= ruleIN )
            	    // InternalSiddhiParser.g:11304:7: lv_in_2_0= ruleIN
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathInOperationAccess().getInINParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_in_2_0=ruleIN();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathInOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"in",
            	      								lv_in_2_0,
            	      								"org.xtext.example.siddhi.Siddhi.IN");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:11321:5: ( (lv_right_3_0= ruleName ) )
            	    // InternalSiddhiParser.g:11322:6: (lv_right_3_0= ruleName )
            	    {
            	    // InternalSiddhiParser.g:11322:6: (lv_right_3_0= ruleName )
            	    // InternalSiddhiParser.g:11323:7: lv_right_3_0= ruleName
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathInOperationAccess().getRightNameParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_right_3_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathInOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.Name");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, ruleMathInOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathInOperation"


    // $ANTLR start "entryRuleMathGtLtOperation"
    // InternalSiddhiParser.g:11346:1: entryRuleMathGtLtOperation returns [EObject current=null] : iv_ruleMathGtLtOperation= ruleMathGtLtOperation EOF ;
    public final EObject entryRuleMathGtLtOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathGtLtOperation_StartIndex = input.index();
        EObject iv_ruleMathGtLtOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return current; }
            // InternalSiddhiParser.g:11346:58: (iv_ruleMathGtLtOperation= ruleMathGtLtOperation EOF )
            // InternalSiddhiParser.g:11347:2: iv_ruleMathGtLtOperation= ruleMathGtLtOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathGtLtOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathGtLtOperation=ruleMathGtLtOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathGtLtOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, entryRuleMathGtLtOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathGtLtOperation"


    // $ANTLR start "ruleMathGtLtOperation"
    // InternalSiddhiParser.g:11353:1: ruleMathGtLtOperation returns [EObject current=null] : (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) ) )* ) ;
    public final EObject ruleMathGtLtOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathGtLtOperation_StartIndex = input.index();
        Token lv_symbol_2_1=null;
        Token lv_symbol_2_2=null;
        Token lv_symbol_2_3=null;
        Token lv_symbol_2_4=null;
        EObject this_MathEqualOperation_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return current; }
            // InternalSiddhiParser.g:11359:2: ( (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11360:2: (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11360:2: (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) ) )* )
            // InternalSiddhiParser.g:11361:3: this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathGtLtOperationAccess().getMathEqualOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_100);
            this_MathEqualOperation_0=ruleMathEqualOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathEqualOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11369:3: ( ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) ) )*
            loop139:
            do {
                int alt139=2;
                switch ( input.LA(1) ) {
                case GreaterThanSignEqualsSign:
                    {
                    int LA139_2 = input.LA(2);

                    if ( (synpred96_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;
                case LessThanSignEqualsSign:
                    {
                    int LA139_3 = input.LA(2);

                    if ( (synpred96_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;
                case GreaterThanSign:
                    {
                    int LA139_4 = input.LA(2);

                    if ( (synpred96_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;
                case LessThanSign:
                    {
                    int LA139_5 = input.LA(2);

                    if ( (synpred96_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;

                }

                switch (alt139) {
            	case 1 :
            	    // InternalSiddhiParser.g:11370:4: ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11393:4: ( () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) ) )
            	    // InternalSiddhiParser.g:11394:5: () ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) ) ( (lv_right_3_0= ruleMathGtLtOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11394:5: ()
            	    // InternalSiddhiParser.g:11395:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathGtLtOperationAccess().getMathGtLtOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11401:5: ( ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) ) )
            	    // InternalSiddhiParser.g:11402:6: ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) )
            	    {
            	    // InternalSiddhiParser.g:11402:6: ( (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign ) )
            	    // InternalSiddhiParser.g:11403:7: (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign )
            	    {
            	    // InternalSiddhiParser.g:11403:7: (lv_symbol_2_1= GreaterThanSignEqualsSign | lv_symbol_2_2= LessThanSignEqualsSign | lv_symbol_2_3= GreaterThanSign | lv_symbol_2_4= LessThanSign )
            	    int alt138=4;
            	    switch ( input.LA(1) ) {
            	    case GreaterThanSignEqualsSign:
            	        {
            	        alt138=1;
            	        }
            	        break;
            	    case LessThanSignEqualsSign:
            	        {
            	        alt138=2;
            	        }
            	        break;
            	    case GreaterThanSign:
            	        {
            	        alt138=3;
            	        }
            	        break;
            	    case LessThanSign:
            	        {
            	        alt138=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 138, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt138) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11404:8: lv_symbol_2_1= GreaterThanSignEqualsSign
            	            {
            	            lv_symbol_2_1=(Token)match(input,GreaterThanSignEqualsSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_symbol_2_1, grammarAccess.getMathGtLtOperationAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "symbol", lv_symbol_2_1, null);
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11415:8: lv_symbol_2_2= LessThanSignEqualsSign
            	            {
            	            lv_symbol_2_2=(Token)match(input,LessThanSignEqualsSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_symbol_2_2, grammarAccess.getMathGtLtOperationAccess().getSymbolLessThanSignEqualsSignKeyword_1_0_1_0_1());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "symbol", lv_symbol_2_2, null);
            	              							
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalSiddhiParser.g:11426:8: lv_symbol_2_3= GreaterThanSign
            	            {
            	            lv_symbol_2_3=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_symbol_2_3, grammarAccess.getMathGtLtOperationAccess().getSymbolGreaterThanSignKeyword_1_0_1_0_2());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "symbol", lv_symbol_2_3, null);
            	              							
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalSiddhiParser.g:11437:8: lv_symbol_2_4= LessThanSign
            	            {
            	            lv_symbol_2_4=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_symbol_2_4, grammarAccess.getMathGtLtOperationAccess().getSymbolLessThanSignKeyword_1_0_1_0_3());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "symbol", lv_symbol_2_4, null);
            	              							
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalSiddhiParser.g:11450:5: ( (lv_right_3_0= ruleMathGtLtOperation ) )
            	    // InternalSiddhiParser.g:11451:6: (lv_right_3_0= ruleMathGtLtOperation )
            	    {
            	    // InternalSiddhiParser.g:11451:6: (lv_right_3_0= ruleMathGtLtOperation )
            	    // InternalSiddhiParser.g:11452:7: lv_right_3_0= ruleMathGtLtOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathGtLtOperationAccess().getRightMathGtLtOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_100);
            	    lv_right_3_0=ruleMathGtLtOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathGtLtOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathGtLtOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, ruleMathGtLtOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathGtLtOperation"


    // $ANTLR start "entryRuleMathEqualOperation"
    // InternalSiddhiParser.g:11475:1: entryRuleMathEqualOperation returns [EObject current=null] : iv_ruleMathEqualOperation= ruleMathEqualOperation EOF ;
    public final EObject entryRuleMathEqualOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathEqualOperation_StartIndex = input.index();
        EObject iv_ruleMathEqualOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return current; }
            // InternalSiddhiParser.g:11475:59: (iv_ruleMathEqualOperation= ruleMathEqualOperation EOF )
            // InternalSiddhiParser.g:11476:2: iv_ruleMathEqualOperation= ruleMathEqualOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathEqualOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathEqualOperation=ruleMathEqualOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathEqualOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, entryRuleMathEqualOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathEqualOperation"


    // $ANTLR start "ruleMathEqualOperation"
    // InternalSiddhiParser.g:11482:1: ruleMathEqualOperation returns [EObject current=null] : (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* ) ;
    public final EObject ruleMathEqualOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathEqualOperation_StartIndex = input.index();
        Token lv_eq_2_0=null;
        Token lv_not_eq_3_0=null;
        EObject this_MathAddsubOperation_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return current; }
            // InternalSiddhiParser.g:11488:2: ( (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11489:2: (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11489:2: (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* )
            // InternalSiddhiParser.g:11490:3: this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathEqualOperationAccess().getMathAddsubOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_101);
            this_MathAddsubOperation_0=ruleMathAddsubOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathAddsubOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11498:3: ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==EqualsSignEqualsSign) ) {
                    int LA141_2 = input.LA(2);

                    if ( (synpred97_InternalSiddhiParser()) ) {
                        alt141=1;
                    }


                }
                else if ( (LA141_0==ExclamationMarkEqualsSign) ) {
                    int LA141_3 = input.LA(2);

                    if ( (synpred97_InternalSiddhiParser()) ) {
                        alt141=1;
                    }


                }


                switch (alt141) {
            	case 1 :
            	    // InternalSiddhiParser.g:11499:4: ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11522:4: ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) )
            	    // InternalSiddhiParser.g:11523:5: () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11523:5: ()
            	    // InternalSiddhiParser.g:11524:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathEqualOperationAccess().getMathEqualOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11530:5: ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) )
            	    int alt140=2;
            	    int LA140_0 = input.LA(1);

            	    if ( (LA140_0==EqualsSignEqualsSign) ) {
            	        alt140=1;
            	    }
            	    else if ( (LA140_0==ExclamationMarkEqualsSign) ) {
            	        alt140=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 140, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt140) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11531:6: ( (lv_eq_2_0= EqualsSignEqualsSign ) )
            	            {
            	            // InternalSiddhiParser.g:11531:6: ( (lv_eq_2_0= EqualsSignEqualsSign ) )
            	            // InternalSiddhiParser.g:11532:7: (lv_eq_2_0= EqualsSignEqualsSign )
            	            {
            	            // InternalSiddhiParser.g:11532:7: (lv_eq_2_0= EqualsSignEqualsSign )
            	            // InternalSiddhiParser.g:11533:8: lv_eq_2_0= EqualsSignEqualsSign
            	            {
            	            lv_eq_2_0=(Token)match(input,EqualsSignEqualsSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_eq_2_0, grammarAccess.getMathEqualOperationAccess().getEqEqualsSignEqualsSignKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathEqualOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "eq", lv_eq_2_0, "==");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11546:6: ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) )
            	            {
            	            // InternalSiddhiParser.g:11546:6: ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) )
            	            // InternalSiddhiParser.g:11547:7: (lv_not_eq_3_0= ExclamationMarkEqualsSign )
            	            {
            	            // InternalSiddhiParser.g:11547:7: (lv_not_eq_3_0= ExclamationMarkEqualsSign )
            	            // InternalSiddhiParser.g:11548:8: lv_not_eq_3_0= ExclamationMarkEqualsSign
            	            {
            	            lv_not_eq_3_0=(Token)match(input,ExclamationMarkEqualsSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_not_eq_3_0, grammarAccess.getMathEqualOperationAccess().getNot_eqExclamationMarkEqualsSignKeyword_1_0_1_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathEqualOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "not_eq", lv_not_eq_3_0, "!=");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11561:5: ( (lv_right_4_0= ruleMathAddsubOperation ) )
            	    // InternalSiddhiParser.g:11562:6: (lv_right_4_0= ruleMathAddsubOperation )
            	    {
            	    // InternalSiddhiParser.g:11562:6: (lv_right_4_0= ruleMathAddsubOperation )
            	    // InternalSiddhiParser.g:11563:7: lv_right_4_0= ruleMathAddsubOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathEqualOperationAccess().getRightMathAddsubOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_101);
            	    lv_right_4_0=ruleMathAddsubOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathEqualOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_4_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathAddsubOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, ruleMathEqualOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathEqualOperation"


    // $ANTLR start "entryRuleMathAddsubOperation"
    // InternalSiddhiParser.g:11586:1: entryRuleMathAddsubOperation returns [EObject current=null] : iv_ruleMathAddsubOperation= ruleMathAddsubOperation EOF ;
    public final EObject entryRuleMathAddsubOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathAddsubOperation_StartIndex = input.index();
        EObject iv_ruleMathAddsubOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return current; }
            // InternalSiddhiParser.g:11586:60: (iv_ruleMathAddsubOperation= ruleMathAddsubOperation EOF )
            // InternalSiddhiParser.g:11587:2: iv_ruleMathAddsubOperation= ruleMathAddsubOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathAddsubOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathAddsubOperation=ruleMathAddsubOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathAddsubOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, entryRuleMathAddsubOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathAddsubOperation"


    // $ANTLR start "ruleMathAddsubOperation"
    // InternalSiddhiParser.g:11593:1: ruleMathAddsubOperation returns [EObject current=null] : (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* ) ;
    public final EObject ruleMathAddsubOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathAddsubOperation_StartIndex = input.index();
        Token lv_add_2_0=null;
        Token lv_substract_3_0=null;
        EObject this_MathDivmulOperation_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return current; }
            // InternalSiddhiParser.g:11599:2: ( (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11600:2: (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11600:2: (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* )
            // InternalSiddhiParser.g:11601:3: this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathAddsubOperationAccess().getMathDivmulOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_102);
            this_MathDivmulOperation_0=ruleMathDivmulOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathDivmulOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11609:3: ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==PlusSign) ) {
                    int LA143_2 = input.LA(2);

                    if ( (synpred98_InternalSiddhiParser()) ) {
                        alt143=1;
                    }


                }
                else if ( (LA143_0==HyphenMinus) ) {
                    int LA143_3 = input.LA(2);

                    if ( (synpred98_InternalSiddhiParser()) ) {
                        alt143=1;
                    }


                }


                switch (alt143) {
            	case 1 :
            	    // InternalSiddhiParser.g:11610:4: ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11633:4: ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) )
            	    // InternalSiddhiParser.g:11634:5: () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11634:5: ()
            	    // InternalSiddhiParser.g:11635:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathAddsubOperationAccess().getMathAddsubOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11641:5: ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) )
            	    int alt142=2;
            	    int LA142_0 = input.LA(1);

            	    if ( (LA142_0==PlusSign) ) {
            	        alt142=1;
            	    }
            	    else if ( (LA142_0==HyphenMinus) ) {
            	        alt142=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 142, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt142) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11642:6: ( (lv_add_2_0= PlusSign ) )
            	            {
            	            // InternalSiddhiParser.g:11642:6: ( (lv_add_2_0= PlusSign ) )
            	            // InternalSiddhiParser.g:11643:7: (lv_add_2_0= PlusSign )
            	            {
            	            // InternalSiddhiParser.g:11643:7: (lv_add_2_0= PlusSign )
            	            // InternalSiddhiParser.g:11644:8: lv_add_2_0= PlusSign
            	            {
            	            lv_add_2_0=(Token)match(input,PlusSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_add_2_0, grammarAccess.getMathAddsubOperationAccess().getAddPlusSignKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathAddsubOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "add", lv_add_2_0, "+");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11657:6: ( (lv_substract_3_0= HyphenMinus ) )
            	            {
            	            // InternalSiddhiParser.g:11657:6: ( (lv_substract_3_0= HyphenMinus ) )
            	            // InternalSiddhiParser.g:11658:7: (lv_substract_3_0= HyphenMinus )
            	            {
            	            // InternalSiddhiParser.g:11658:7: (lv_substract_3_0= HyphenMinus )
            	            // InternalSiddhiParser.g:11659:8: lv_substract_3_0= HyphenMinus
            	            {
            	            lv_substract_3_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_substract_3_0, grammarAccess.getMathAddsubOperationAccess().getSubstractHyphenMinusKeyword_1_0_1_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathAddsubOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "substract", lv_substract_3_0, "-");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11672:5: ( (lv_right_4_0= ruleMathDivmulOperation ) )
            	    // InternalSiddhiParser.g:11673:6: (lv_right_4_0= ruleMathDivmulOperation )
            	    {
            	    // InternalSiddhiParser.g:11673:6: (lv_right_4_0= ruleMathDivmulOperation )
            	    // InternalSiddhiParser.g:11674:7: lv_right_4_0= ruleMathDivmulOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathAddsubOperationAccess().getRightMathDivmulOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_102);
            	    lv_right_4_0=ruleMathDivmulOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathAddsubOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_4_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathDivmulOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, ruleMathAddsubOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathAddsubOperation"


    // $ANTLR start "entryRuleMathDivmulOperation"
    // InternalSiddhiParser.g:11697:1: entryRuleMathDivmulOperation returns [EObject current=null] : iv_ruleMathDivmulOperation= ruleMathDivmulOperation EOF ;
    public final EObject entryRuleMathDivmulOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathDivmulOperation_StartIndex = input.index();
        EObject iv_ruleMathDivmulOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return current; }
            // InternalSiddhiParser.g:11697:60: (iv_ruleMathDivmulOperation= ruleMathDivmulOperation EOF )
            // InternalSiddhiParser.g:11698:2: iv_ruleMathDivmulOperation= ruleMathDivmulOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathDivmulOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathDivmulOperation=ruleMathDivmulOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathDivmulOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, entryRuleMathDivmulOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathDivmulOperation"


    // $ANTLR start "ruleMathDivmulOperation"
    // InternalSiddhiParser.g:11704:1: ruleMathDivmulOperation returns [EObject current=null] : (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* ) ;
    public final EObject ruleMathDivmulOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathDivmulOperation_StartIndex = input.index();
        Token lv_multiply_2_0=null;
        Token lv_devide_3_0=null;
        Token lv_mod_4_0=null;
        EObject this_MathOtherOperations_0 = null;

        EObject lv_right_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return current; }
            // InternalSiddhiParser.g:11710:2: ( (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* ) )
            // InternalSiddhiParser.g:11711:2: (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* )
            {
            // InternalSiddhiParser.g:11711:2: (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* )
            // InternalSiddhiParser.g:11712:3: this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathDivmulOperationAccess().getMathOtherOperationsParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_103);
            this_MathOtherOperations_0=ruleMathOtherOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathOtherOperations_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11720:3: ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )*
            loop145:
            do {
                int alt145=2;
                switch ( input.LA(1) ) {
                case Asterisk:
                    {
                    int LA145_2 = input.LA(2);

                    if ( (synpred99_InternalSiddhiParser()) ) {
                        alt145=1;
                    }


                    }
                    break;
                case Solidus:
                    {
                    int LA145_3 = input.LA(2);

                    if ( (synpred99_InternalSiddhiParser()) ) {
                        alt145=1;
                    }


                    }
                    break;
                case PercentSign:
                    {
                    int LA145_4 = input.LA(2);

                    if ( (synpred99_InternalSiddhiParser()) ) {
                        alt145=1;
                    }


                    }
                    break;

                }

                switch (alt145) {
            	case 1 :
            	    // InternalSiddhiParser.g:11721:4: ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) )
            	    {
            	    // InternalSiddhiParser.g:11750:4: ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) )
            	    // InternalSiddhiParser.g:11751:5: () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) )
            	    {
            	    // InternalSiddhiParser.g:11751:5: ()
            	    // InternalSiddhiParser.g:11752:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathDivmulOperationAccess().getMathDivmulOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11758:5: ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) )
            	    int alt144=3;
            	    switch ( input.LA(1) ) {
            	    case Asterisk:
            	        {
            	        alt144=1;
            	        }
            	        break;
            	    case Solidus:
            	        {
            	        alt144=2;
            	        }
            	        break;
            	    case PercentSign:
            	        {
            	        alt144=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 144, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt144) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11759:6: ( (lv_multiply_2_0= Asterisk ) )
            	            {
            	            // InternalSiddhiParser.g:11759:6: ( (lv_multiply_2_0= Asterisk ) )
            	            // InternalSiddhiParser.g:11760:7: (lv_multiply_2_0= Asterisk )
            	            {
            	            // InternalSiddhiParser.g:11760:7: (lv_multiply_2_0= Asterisk )
            	            // InternalSiddhiParser.g:11761:8: lv_multiply_2_0= Asterisk
            	            {
            	            lv_multiply_2_0=(Token)match(input,Asterisk,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_multiply_2_0, grammarAccess.getMathDivmulOperationAccess().getMultiplyAsteriskKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathDivmulOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "multiply", lv_multiply_2_0, "*");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11774:6: ( (lv_devide_3_0= Solidus ) )
            	            {
            	            // InternalSiddhiParser.g:11774:6: ( (lv_devide_3_0= Solidus ) )
            	            // InternalSiddhiParser.g:11775:7: (lv_devide_3_0= Solidus )
            	            {
            	            // InternalSiddhiParser.g:11775:7: (lv_devide_3_0= Solidus )
            	            // InternalSiddhiParser.g:11776:8: lv_devide_3_0= Solidus
            	            {
            	            lv_devide_3_0=(Token)match(input,Solidus,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_devide_3_0, grammarAccess.getMathDivmulOperationAccess().getDevideSolidusKeyword_1_0_1_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathDivmulOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "devide", lv_devide_3_0, "/");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalSiddhiParser.g:11789:6: ( (lv_mod_4_0= PercentSign ) )
            	            {
            	            // InternalSiddhiParser.g:11789:6: ( (lv_mod_4_0= PercentSign ) )
            	            // InternalSiddhiParser.g:11790:7: (lv_mod_4_0= PercentSign )
            	            {
            	            // InternalSiddhiParser.g:11790:7: (lv_mod_4_0= PercentSign )
            	            // InternalSiddhiParser.g:11791:8: lv_mod_4_0= PercentSign
            	            {
            	            lv_mod_4_0=(Token)match(input,PercentSign,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_mod_4_0, grammarAccess.getMathDivmulOperationAccess().getModPercentSignKeyword_1_0_1_2_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathDivmulOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "mod", lv_mod_4_0, "%");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11804:5: ( (lv_right_5_0= ruleMathOtherOperations ) )
            	    // InternalSiddhiParser.g:11805:6: (lv_right_5_0= ruleMathOtherOperations )
            	    {
            	    // InternalSiddhiParser.g:11805:6: (lv_right_5_0= ruleMathOtherOperations )
            	    // InternalSiddhiParser.g:11806:7: lv_right_5_0= ruleMathOtherOperations
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathDivmulOperationAccess().getRightMathOtherOperationsParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_103);
            	    lv_right_5_0=ruleMathOtherOperations();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathDivmulOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_5_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathOtherOperations");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, ruleMathDivmulOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathDivmulOperation"


    // $ANTLR start "entryRuleMathOtherOperations"
    // InternalSiddhiParser.g:11829:1: entryRuleMathOtherOperations returns [EObject current=null] : iv_ruleMathOtherOperations= ruleMathOtherOperations EOF ;
    public final EObject entryRuleMathOtherOperations() throws RecognitionException {
        EObject current = null;
        int entryRuleMathOtherOperations_StartIndex = input.index();
        EObject iv_ruleMathOtherOperations = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return current; }
            // InternalSiddhiParser.g:11829:60: (iv_ruleMathOtherOperations= ruleMathOtherOperations EOF )
            // InternalSiddhiParser.g:11830:2: iv_ruleMathOtherOperations= ruleMathOtherOperations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathOtherOperationsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathOtherOperations=ruleMathOtherOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathOtherOperations; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, entryRuleMathOtherOperations_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathOtherOperations"


    // $ANTLR start "ruleMathOtherOperations"
    // InternalSiddhiParser.g:11836:1: ruleMathOtherOperations returns [EObject current=null] : ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 ) ) ) ;
    public final EObject ruleMathOtherOperations() throws RecognitionException {
        EObject current = null;
        int ruleMathOtherOperations_StartIndex = input.index();
        EObject lv_not_1_0 = null;

        EObject lv_op_2_0 = null;

        EObject lv_op_4_0 = null;

        EObject this_NullCheck_6 = null;

        EObject lv_mathOtherOperations1_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return current; }
            // InternalSiddhiParser.g:11842:2: ( ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 ) ) ) )
            // InternalSiddhiParser.g:11843:2: ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 ) ) )
            {
            // InternalSiddhiParser.g:11843:2: ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 ) ) )
            int alt146=4;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // InternalSiddhiParser.g:11844:3: ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) )
                    {
                    // InternalSiddhiParser.g:11844:3: ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) )
                    // InternalSiddhiParser.g:11845:4: ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) )
                    {
                    // InternalSiddhiParser.g:11860:4: ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) )
                    // InternalSiddhiParser.g:11861:5: () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) )
                    {
                    // InternalSiddhiParser.g:11861:5: ()
                    // InternalSiddhiParser.g:11862:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getMathOtherOperationsAccess().getNotOperationAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:11868:5: ( (lv_not_1_0= ruleNOT ) )
                    // InternalSiddhiParser.g:11869:6: (lv_not_1_0= ruleNOT )
                    {
                    // InternalSiddhiParser.g:11869:6: (lv_not_1_0= ruleNOT )
                    // InternalSiddhiParser.g:11870:7: lv_not_1_0= ruleNOT
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getNotNOTParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_not_1_0=ruleNOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      							}
                      							set(
                      								current,
                      								"not",
                      								lv_not_1_0,
                      								"org.xtext.example.siddhi.Siddhi.NOT");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:11887:5: ( (lv_op_2_0= ruleMathOperation ) )
                    // InternalSiddhiParser.g:11888:6: (lv_op_2_0= ruleMathOperation )
                    {
                    // InternalSiddhiParser.g:11888:6: (lv_op_2_0= ruleMathOperation )
                    // InternalSiddhiParser.g:11889:7: lv_op_2_0= ruleMathOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_op_2_0=ruleMathOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      							}
                      							set(
                      								current,
                      								"op",
                      								lv_op_2_0,
                      								"org.xtext.example.siddhi.Siddhi.MathOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:11909:3: ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:11909:3: ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:11910:4: ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getOPEN_PARParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:11917:4: ( (lv_op_4_0= ruleMathOperation ) )
                    // InternalSiddhiParser.g:11918:5: (lv_op_4_0= ruleMathOperation )
                    {
                    // InternalSiddhiParser.g:11918:5: (lv_op_4_0= ruleMathOperation )
                    // InternalSiddhiParser.g:11919:6: lv_op_4_0= ruleMathOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_op_4_0=ruleMathOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_4_0,
                      							"org.xtext.example.siddhi.Siddhi.MathOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getCLOSE_PARParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:11945:3: ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck )
                    {
                    // InternalSiddhiParser.g:11945:3: ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck )
                    // InternalSiddhiParser.g:11946:4: ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getNullCheckParserRuleCall_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullCheck_6=ruleNullCheck();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_NullCheck_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:11957:3: ( (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 ) )
                    {
                    // InternalSiddhiParser.g:11957:3: ( (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 ) )
                    // InternalSiddhiParser.g:11958:4: (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 )
                    {
                    // InternalSiddhiParser.g:11958:4: (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 )
                    // InternalSiddhiParser.g:11959:5: lv_mathOtherOperations1_7_0= ruleMathOtherOperations1
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getMathOtherOperations1MathOtherOperations1ParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_mathOtherOperations1_7_0=ruleMathOtherOperations1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      					}
                      					set(
                      						current,
                      						"mathOtherOperations1",
                      						lv_mathOtherOperations1_7_0,
                      						"org.xtext.example.siddhi.Siddhi.MathOtherOperations1");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, ruleMathOtherOperations_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathOtherOperations"


    // $ANTLR start "entryRuleNullCheck"
    // InternalSiddhiParser.g:11980:1: entryRuleNullCheck returns [EObject current=null] : iv_ruleNullCheck= ruleNullCheck EOF ;
    public final EObject entryRuleNullCheck() throws RecognitionException {
        EObject current = null;
        int entryRuleNullCheck_StartIndex = input.index();
        EObject iv_ruleNullCheck = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return current; }
            // InternalSiddhiParser.g:11980:50: (iv_ruleNullCheck= ruleNullCheck EOF )
            // InternalSiddhiParser.g:11981:2: iv_ruleNullCheck= ruleNullCheck EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCheckRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullCheck=ruleNullCheck();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCheck; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, entryRuleNullCheck_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCheck"


    // $ANTLR start "ruleNullCheck"
    // InternalSiddhiParser.g:11987:1: ruleNullCheck returns [EObject current=null] : ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] ) ;
    public final EObject ruleNullCheck() throws RecognitionException {
        EObject current = null;
        int ruleNullCheck_StartIndex = input.index();
        EObject lv_stream_ref_0_0 = null;

        EObject lv_attr_ref_1_0 = null;

        EObject lv_fo_2_0 = null;

        EObject this_IS_3 = null;

        EObject this_NULL_4 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return current; }
            // InternalSiddhiParser.g:11993:2: ( ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] ) )
            // InternalSiddhiParser.g:11994:2: ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] )
            {
            // InternalSiddhiParser.g:11994:2: ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] )
            // InternalSiddhiParser.g:11995:3: ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current]
            {
            // InternalSiddhiParser.g:11995:3: ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) ) )
            int alt147=3;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    // InternalSiddhiParser.g:11996:4: ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) )
                    {
                    // InternalSiddhiParser.g:11996:4: ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) )
                    // InternalSiddhiParser.g:11997:5: ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference )
                    {
                    // InternalSiddhiParser.g:12001:5: (lv_stream_ref_0_0= ruleStreamReference )
                    // InternalSiddhiParser.g:12002:6: lv_stream_ref_0_0= ruleStreamReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNullCheckAccess().getStream_refStreamReferenceParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_stream_ref_0_0=ruleStreamReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNullCheckRule());
                      						}
                      						set(
                      							current,
                      							"stream_ref",
                      							lv_stream_ref_0_0,
                      							"org.xtext.example.siddhi.Siddhi.StreamReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12020:4: ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) )
                    {
                    // InternalSiddhiParser.g:12020:4: ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:12021:5: ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:12025:5: (lv_attr_ref_1_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:12026:6: lv_attr_ref_1_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNullCheckAccess().getAttr_refAttributeReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_attr_ref_1_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNullCheckRule());
                      						}
                      						set(
                      							current,
                      							"attr_ref",
                      							lv_attr_ref_1_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:12044:4: ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) )
                    {
                    // InternalSiddhiParser.g:12044:4: ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:12045:5: ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:12049:5: (lv_fo_2_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:12050:6: lv_fo_2_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNullCheckAccess().getFoFunctionOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_fo_2_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNullCheckRule());
                      						}
                      						set(
                      							current,
                      							"fo",
                      							lv_fo_2_0,
                      							"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNullCheckRule());
              			}
              			newCompositeNode(grammarAccess.getNullCheckAccess().getISParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_105);
            this_IS_3=ruleIS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_IS_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNullCheckRule());
              			}
              			newCompositeNode(grammarAccess.getNullCheckAccess().getNULLParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_NULL_4=ruleNULL(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NULL_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, ruleNullCheck_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNullCheck"


    // $ANTLR start "entryRuleStreamReference"
    // InternalSiddhiParser.g:12094:1: entryRuleStreamReference returns [EObject current=null] : iv_ruleStreamReference= ruleStreamReference EOF ;
    public final EObject entryRuleStreamReference() throws RecognitionException {
        EObject current = null;
        int entryRuleStreamReference_StartIndex = input.index();
        EObject iv_ruleStreamReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return current; }
            // InternalSiddhiParser.g:12094:56: (iv_ruleStreamReference= ruleStreamReference EOF )
            // InternalSiddhiParser.g:12095:2: iv_ruleStreamReference= ruleStreamReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStreamReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStreamReference=ruleStreamReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStreamReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, entryRuleStreamReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStreamReference"


    // $ANTLR start "ruleStreamReference"
    // InternalSiddhiParser.g:12101:1: ruleStreamReference returns [EObject current=null] : ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ) ;
    public final EObject ruleStreamReference() throws RecognitionException {
        EObject current = null;
        int ruleStreamReference_StartIndex = input.index();
        Token lv_hash_0_0=null;
        EObject lv_na_1_0 = null;

        EObject lv_aatr_index_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return current; }
            // InternalSiddhiParser.g:12107:2: ( ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ) )
            // InternalSiddhiParser.g:12108:2: ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )
            {
            // InternalSiddhiParser.g:12108:2: ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )
            // InternalSiddhiParser.g:12109:3: ( (lv_hash_0_0= NumberSign ) )? ( (lv_na_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
            {
            // InternalSiddhiParser.g:12109:3: ( (lv_hash_0_0= NumberSign ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==NumberSign) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSiddhiParser.g:12110:4: (lv_hash_0_0= NumberSign )
                    {
                    // InternalSiddhiParser.g:12110:4: (lv_hash_0_0= NumberSign )
                    // InternalSiddhiParser.g:12111:5: lv_hash_0_0= NumberSign
                    {
                    lv_hash_0_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hash_0_0, grammarAccess.getStreamReferenceAccess().getHashNumberSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStreamReferenceRule());
                      					}
                      					setWithLastConsumed(current, "hash", lv_hash_0_0, "#");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:12123:3: ( (lv_na_1_0= ruleName ) )
            // InternalSiddhiParser.g:12124:4: (lv_na_1_0= ruleName )
            {
            // InternalSiddhiParser.g:12124:4: (lv_na_1_0= ruleName )
            // InternalSiddhiParser.g:12125:5: lv_na_1_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStreamReferenceAccess().getNaNameParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_na_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStreamReferenceRule());
              					}
              					set(
              						current,
              						"na",
              						lv_na_1_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:12142:3: ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==LeftSquareBracket) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSiddhiParser.g:12143:4: ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getStreamReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    ruleOPEN_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:12150:4: ( (lv_aatr_index_3_0= ruleAttributeIndex ) )
                    // InternalSiddhiParser.g:12151:5: (lv_aatr_index_3_0= ruleAttributeIndex )
                    {
                    // InternalSiddhiParser.g:12151:5: (lv_aatr_index_3_0= ruleAttributeIndex )
                    // InternalSiddhiParser.g:12152:6: lv_aatr_index_3_0= ruleAttributeIndex
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStreamReferenceAccess().getAatr_indexAttributeIndexParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_aatr_index_3_0=ruleAttributeIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStreamReferenceRule());
                      						}
                      						set(
                      							current,
                      							"aatr_index",
                      							lv_aatr_index_3_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeIndex");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getStreamReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, ruleStreamReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStreamReference"


    // $ANTLR start "entryRuleMathOtherOperations1"
    // InternalSiddhiParser.g:12181:1: entryRuleMathOtherOperations1 returns [EObject current=null] : iv_ruleMathOtherOperations1= ruleMathOtherOperations1 EOF ;
    public final EObject entryRuleMathOtherOperations1() throws RecognitionException {
        EObject current = null;
        int entryRuleMathOtherOperations1_StartIndex = input.index();
        EObject iv_ruleMathOtherOperations1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return current; }
            // InternalSiddhiParser.g:12181:61: (iv_ruleMathOtherOperations1= ruleMathOtherOperations1 EOF )
            // InternalSiddhiParser.g:12182:2: iv_ruleMathOtherOperations1= ruleMathOtherOperations1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathOtherOperations1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathOtherOperations1=ruleMathOtherOperations1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathOtherOperations1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, entryRuleMathOtherOperations1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathOtherOperations1"


    // $ANTLR start "ruleMathOtherOperations1"
    // InternalSiddhiParser.g:12188:1: ruleMathOtherOperations1 returns [EObject current=null] : ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) ) ;
    public final EObject ruleMathOtherOperations1() throws RecognitionException {
        EObject current = null;
        int ruleMathOtherOperations1_StartIndex = input.index();
        EObject lv_const_val_0_0 = null;

        EObject lv_fo_1_0 = null;

        EObject lv_attrRef_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return current; }
            // InternalSiddhiParser.g:12194:2: ( ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) ) )
            // InternalSiddhiParser.g:12195:2: ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) )
            {
            // InternalSiddhiParser.g:12195:2: ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) )
            int alt150=3;
            switch ( input.LA(1) ) {
            case False:
            case True:
            case PlusSign:
            case HyphenMinus:
            case FullStop:
            case RULE_INT:
            case RULE_STRING:
                {
                alt150=1;
                }
                break;
            case RULE_ID:
                {
                int LA150_2 = input.LA(2);

                if ( (LA150_2==LeftParenthesis||LA150_2==Colon) ) {
                    alt150=2;
                }
                else if ( (LA150_2==EOF||(LA150_2>=Define && LA150_2<=Delete)||LA150_2==Insert||(LA150_2>=Output && LA150_2<=Return)||LA150_2==Select||LA150_2==Update||LA150_2==Within||LA150_2==From||LA150_2==And||LA150_2==End||LA150_2==ExclamationMarkEqualsSign||(LA150_2>=LessThanSignEqualsSign && LA150_2<=As)||LA150_2==In||(LA150_2>=Of && LA150_2<=PercentSign)||(LA150_2>=RightParenthesis && LA150_2<=Solidus)||(LA150_2>=Semicolon && LA150_2<=LessThanSign)||LA150_2==GreaterThanSign||(LA150_2>=CommercialAt && LA150_2<=RightSquareBracket)||LA150_2==RULE_STRING) ) {
                    alt150=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 150, 2, input);

                    throw nvae;
                }
                }
                break;
            case NumberSign:
                {
                alt150=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }

            switch (alt150) {
                case 1 :
                    // InternalSiddhiParser.g:12196:3: ( (lv_const_val_0_0= ruleConstantValue ) )
                    {
                    // InternalSiddhiParser.g:12196:3: ( (lv_const_val_0_0= ruleConstantValue ) )
                    // InternalSiddhiParser.g:12197:4: (lv_const_val_0_0= ruleConstantValue )
                    {
                    // InternalSiddhiParser.g:12197:4: (lv_const_val_0_0= ruleConstantValue )
                    // InternalSiddhiParser.g:12198:5: lv_const_val_0_0= ruleConstantValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMathOtherOperations1Access().getConst_valConstantValueParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_const_val_0_0=ruleConstantValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMathOtherOperations1Rule());
                      					}
                      					set(
                      						current,
                      						"const_val",
                      						lv_const_val_0_0,
                      						"org.xtext.example.siddhi.Siddhi.ConstantValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12216:3: ( (lv_fo_1_0= ruleFunctionOperation ) )
                    {
                    // InternalSiddhiParser.g:12216:3: ( (lv_fo_1_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:12217:4: (lv_fo_1_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:12217:4: (lv_fo_1_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:12218:5: lv_fo_1_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMathOtherOperations1Access().getFoFunctionOperationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_fo_1_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMathOtherOperations1Rule());
                      					}
                      					set(
                      						current,
                      						"fo",
                      						lv_fo_1_0,
                      						"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:12236:3: ( (lv_attrRef_2_0= ruleAttributeReference ) )
                    {
                    // InternalSiddhiParser.g:12236:3: ( (lv_attrRef_2_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:12237:4: (lv_attrRef_2_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:12237:4: (lv_attrRef_2_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:12238:5: lv_attrRef_2_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMathOtherOperations1Access().getAttrRefAttributeReferenceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_attrRef_2_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMathOtherOperations1Rule());
                      					}
                      					set(
                      						current,
                      						"attrRef",
                      						lv_attrRef_2_0,
                      						"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, ruleMathOtherOperations1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathOtherOperations1"


    // $ANTLR start "entryRuleAttributeReference"
    // InternalSiddhiParser.g:12259:1: entryRuleAttributeReference returns [EObject current=null] : iv_ruleAttributeReference= ruleAttributeReference EOF ;
    public final EObject entryRuleAttributeReference() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeReference_StartIndex = input.index();
        EObject iv_ruleAttributeReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return current; }
            // InternalSiddhiParser.g:12259:59: (iv_ruleAttributeReference= ruleAttributeReference EOF )
            // InternalSiddhiParser.g:12260:2: iv_ruleAttributeReference= ruleAttributeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeReference=ruleAttributeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, entryRuleAttributeReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeReference"


    // $ANTLR start "ruleAttributeReference"
    // InternalSiddhiParser.g:12266:1: ruleAttributeReference returns [EObject current=null] : ( ( () ( (lv_hash1_1_0= NumberSign ) )? ( (lv_name1_2_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_attr_name_12_0= ruleAttributeNameReference ) ) ) | ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) ) ;
    public final EObject ruleAttributeReference() throws RecognitionException {
        EObject current = null;
        int ruleAttributeReference_StartIndex = input.index();
        Token lv_hash1_1_0=null;
        Token lv_hash2_6_0=null;
        Token otherlv_11=null;
        EObject lv_name1_2_0 = null;

        EObject lv_attribute_index1_4_0 = null;

        EObject lv_name2_7_0 = null;

        EObject lv_attribute_index2_9_0 = null;

        EObject lv_attr_name_12_0 = null;

        EObject lv_featuresOrAttrRef_13_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return current; }
            // InternalSiddhiParser.g:12272:2: ( ( ( () ( (lv_hash1_1_0= NumberSign ) )? ( (lv_name1_2_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_attr_name_12_0= ruleAttributeNameReference ) ) ) | ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) ) )
            // InternalSiddhiParser.g:12273:2: ( ( () ( (lv_hash1_1_0= NumberSign ) )? ( (lv_name1_2_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_attr_name_12_0= ruleAttributeNameReference ) ) ) | ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) )
            {
            // InternalSiddhiParser.g:12273:2: ( ( () ( (lv_hash1_1_0= NumberSign ) )? ( (lv_name1_2_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_attr_name_12_0= ruleAttributeNameReference ) ) ) | ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==NumberSign) ) {
                alt155=1;
            }
            else if ( (LA155_0==RULE_ID) ) {
                int LA155_2 = input.LA(2);

                if ( (LA155_2==NumberSign||LA155_2==FullStop||LA155_2==LeftSquareBracket) ) {
                    alt155=1;
                }
                else if ( (LA155_2==EOF||LA155_2==Aggregate||(LA155_2>=Define && LA155_2<=Delete)||(LA155_2>=Having && LA155_2<=Insert)||(LA155_2>=Output && LA155_2<=Return)||LA155_2==Select||LA155_2==Update||LA155_2==Within||LA155_2==Every||LA155_2==Group||LA155_2==From||LA155_2==And||LA155_2==End||LA155_2==ExclamationMarkEqualsSign||(LA155_2>=LessThanSignEqualsSign && LA155_2<=As)||(LA155_2>=In && LA155_2<=Or)||LA155_2==PercentSign||(LA155_2>=RightParenthesis && LA155_2<=HyphenMinus)||LA155_2==Solidus||(LA155_2>=Semicolon && LA155_2<=GreaterThanSign)||LA155_2==CommercialAt||LA155_2==RightSquareBracket||LA155_2==RULE_STRING) ) {
                    alt155=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 155, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // InternalSiddhiParser.g:12274:3: ( () ( (lv_hash1_1_0= NumberSign ) )? ( (lv_name1_2_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_attr_name_12_0= ruleAttributeNameReference ) ) )
                    {
                    // InternalSiddhiParser.g:12274:3: ( () ( (lv_hash1_1_0= NumberSign ) )? ( (lv_name1_2_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_attr_name_12_0= ruleAttributeNameReference ) ) )
                    // InternalSiddhiParser.g:12275:4: () ( (lv_hash1_1_0= NumberSign ) )? ( (lv_name1_2_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_attr_name_12_0= ruleAttributeNameReference ) )
                    {
                    // InternalSiddhiParser.g:12275:4: ()
                    // InternalSiddhiParser.g:12276:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeReferenceAccess().getAttributeReferenceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12282:4: ( (lv_hash1_1_0= NumberSign ) )?
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==NumberSign) ) {
                        alt151=1;
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalSiddhiParser.g:12283:5: (lv_hash1_1_0= NumberSign )
                            {
                            // InternalSiddhiParser.g:12283:5: (lv_hash1_1_0= NumberSign )
                            // InternalSiddhiParser.g:12284:6: lv_hash1_1_0= NumberSign
                            {
                            lv_hash1_1_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_hash1_1_0, grammarAccess.getAttributeReferenceAccess().getHash1NumberSignKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAttributeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "hash1", lv_hash1_1_0, "#");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:12296:4: ( (lv_name1_2_0= ruleSourceOrEventReference ) )
                    // InternalSiddhiParser.g:12297:5: (lv_name1_2_0= ruleSourceOrEventReference )
                    {
                    // InternalSiddhiParser.g:12297:5: (lv_name1_2_0= ruleSourceOrEventReference )
                    // InternalSiddhiParser.g:12298:6: lv_name1_2_0= ruleSourceOrEventReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getName1SourceOrEventReferenceParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_name1_2_0=ruleSourceOrEventReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"name1",
                      							lv_name1_2_0,
                      							"org.xtext.example.siddhi.Siddhi.SourceOrEventReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:12315:4: ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( (LA152_0==LeftSquareBracket) ) {
                        alt152=1;
                    }
                    switch (alt152) {
                        case 1 :
                            // InternalSiddhiParser.g:12316:5: ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index1_4_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_0_3_0());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_107);
                            ruleOPEN_SQARE_BRACKETS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }
                            // InternalSiddhiParser.g:12323:5: ( (lv_attribute_index1_4_0= ruleAttributeIndex ) )
                            // InternalSiddhiParser.g:12324:6: (lv_attribute_index1_4_0= ruleAttributeIndex )
                            {
                            // InternalSiddhiParser.g:12324:6: (lv_attribute_index1_4_0= ruleAttributeIndex )
                            // InternalSiddhiParser.g:12325:7: lv_attribute_index1_4_0= ruleAttributeIndex
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAttributeReferenceAccess().getAttribute_index1AttributeIndexParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_22);
                            lv_attribute_index1_4_0=ruleAttributeIndex();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                              							}
                              							set(
                              								current,
                              								"attribute_index1",
                              								lv_attribute_index1_4_0,
                              								"org.xtext.example.siddhi.Siddhi.AttributeIndex");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_0_3_2());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_109);
                            ruleCLOSE_SQARE_BRACKETS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalSiddhiParser.g:12350:4: ( ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )?
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( (LA154_0==NumberSign) ) {
                        alt154=1;
                    }
                    switch (alt154) {
                        case 1 :
                            // InternalSiddhiParser.g:12351:5: ( (lv_hash2_6_0= NumberSign ) ) ( (lv_name2_7_0= ruleSourceOrEventReference ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
                            {
                            // InternalSiddhiParser.g:12351:5: ( (lv_hash2_6_0= NumberSign ) )
                            // InternalSiddhiParser.g:12352:6: (lv_hash2_6_0= NumberSign )
                            {
                            // InternalSiddhiParser.g:12352:6: (lv_hash2_6_0= NumberSign )
                            // InternalSiddhiParser.g:12353:7: lv_hash2_6_0= NumberSign
                            {
                            lv_hash2_6_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_hash2_6_0, grammarAccess.getAttributeReferenceAccess().getHash2NumberSignKeyword_0_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAttributeReferenceRule());
                              							}
                              							setWithLastConsumed(current, "hash2", lv_hash2_6_0, "#");
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:12365:5: ( (lv_name2_7_0= ruleSourceOrEventReference ) )
                            // InternalSiddhiParser.g:12366:6: (lv_name2_7_0= ruleSourceOrEventReference )
                            {
                            // InternalSiddhiParser.g:12366:6: (lv_name2_7_0= ruleSourceOrEventReference )
                            // InternalSiddhiParser.g:12367:7: lv_name2_7_0= ruleSourceOrEventReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAttributeReferenceAccess().getName2SourceOrEventReferenceParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_110);
                            lv_name2_7_0=ruleSourceOrEventReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                              							}
                              							set(
                              								current,
                              								"name2",
                              								lv_name2_7_0,
                              								"org.xtext.example.siddhi.Siddhi.SourceOrEventReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:12384:5: ( ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
                            int alt153=2;
                            int LA153_0 = input.LA(1);

                            if ( (LA153_0==LeftSquareBracket) ) {
                                alt153=1;
                            }
                            switch (alt153) {
                                case 1 :
                                    // InternalSiddhiParser.g:12385:6: ruleOPEN_SQARE_BRACKETS ( (lv_attribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS
                                    {
                                    if ( state.backtracking==0 ) {

                                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_0_4_2_0());
                                      					
                                    }
                                    pushFollow(FollowSets000.FOLLOW_107);
                                    ruleOPEN_SQARE_BRACKETS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						afterParserOrEnumRuleCall();
                                      					
                                    }
                                    // InternalSiddhiParser.g:12392:6: ( (lv_attribute_index2_9_0= ruleAttributeIndex ) )
                                    // InternalSiddhiParser.g:12393:7: (lv_attribute_index2_9_0= ruleAttributeIndex )
                                    {
                                    // InternalSiddhiParser.g:12393:7: (lv_attribute_index2_9_0= ruleAttributeIndex )
                                    // InternalSiddhiParser.g:12394:8: lv_attribute_index2_9_0= ruleAttributeIndex
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getAttributeReferenceAccess().getAttribute_index2AttributeIndexParserRuleCall_0_4_2_1_0());
                                      							
                                    }
                                    pushFollow(FollowSets000.FOLLOW_22);
                                    lv_attribute_index2_9_0=ruleAttributeIndex();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                                      								}
                                      								set(
                                      									current,
                                      									"attribute_index2",
                                      									lv_attribute_index2_9_0,
                                      									"org.xtext.example.siddhi.Siddhi.AttributeIndex");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }

                                    if ( state.backtracking==0 ) {

                                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_0_4_2_2());
                                      					
                                    }
                                    pushFollow(FollowSets000.FOLLOW_90);
                                    ruleCLOSE_SQARE_BRACKETS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						afterParserOrEnumRuleCall();
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,FullStop,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getAttributeReferenceAccess().getFullStopKeyword_0_5());
                      			
                    }
                    // InternalSiddhiParser.g:12424:4: ( (lv_attr_name_12_0= ruleAttributeNameReference ) )
                    // InternalSiddhiParser.g:12425:5: (lv_attr_name_12_0= ruleAttributeNameReference )
                    {
                    // InternalSiddhiParser.g:12425:5: (lv_attr_name_12_0= ruleAttributeNameReference )
                    // InternalSiddhiParser.g:12426:6: lv_attr_name_12_0= ruleAttributeNameReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getAttr_nameAttributeNameReferenceParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_attr_name_12_0=ruleAttributeNameReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"attr_name",
                      							lv_attr_name_12_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeNameReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12445:3: ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) )
                    {
                    // InternalSiddhiParser.g:12445:3: ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) )
                    // InternalSiddhiParser.g:12446:4: (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference )
                    {
                    // InternalSiddhiParser.g:12446:4: (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference )
                    // InternalSiddhiParser.g:12447:5: lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAttributeReferenceAccess().getFeaturesOrAttrRefFeaturesOrOutAttrReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_featuresOrAttrRef_13_0=ruleFeaturesOrOutAttrReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                      					}
                      					set(
                      						current,
                      						"featuresOrAttrRef",
                      						lv_featuresOrAttrRef_13_0,
                      						"org.xtext.example.siddhi.Siddhi.FeaturesOrOutAttrReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, ruleAttributeReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeReference"


    // $ANTLR start "entryRuleAttributeNameReference"
    // InternalSiddhiParser.g:12468:1: entryRuleAttributeNameReference returns [EObject current=null] : iv_ruleAttributeNameReference= ruleAttributeNameReference EOF ;
    public final EObject entryRuleAttributeNameReference() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeNameReference_StartIndex = input.index();
        EObject iv_ruleAttributeNameReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return current; }
            // InternalSiddhiParser.g:12468:63: (iv_ruleAttributeNameReference= ruleAttributeNameReference EOF )
            // InternalSiddhiParser.g:12469:2: iv_ruleAttributeNameReference= ruleAttributeNameReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeNameReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeNameReference=ruleAttributeNameReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeNameReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, entryRuleAttributeNameReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeNameReference"


    // $ANTLR start "ruleAttributeNameReference"
    // InternalSiddhiParser.g:12475:1: ruleAttributeNameReference returns [EObject current=null] : ( ( ruleIdNew ) ) ;
    public final EObject ruleAttributeNameReference() throws RecognitionException {
        EObject current = null;
        int ruleAttributeNameReference_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return current; }
            // InternalSiddhiParser.g:12481:2: ( ( ( ruleIdNew ) ) )
            // InternalSiddhiParser.g:12482:2: ( ( ruleIdNew ) )
            {
            // InternalSiddhiParser.g:12482:2: ( ( ruleIdNew ) )
            // InternalSiddhiParser.g:12483:3: ( ruleIdNew )
            {
            // InternalSiddhiParser.g:12483:3: ( ruleIdNew )
            // InternalSiddhiParser.g:12484:4: ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAttributeNameReferenceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAttributeNameReferenceAccess().getAttrName1FeaturesCrossReference_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, ruleAttributeNameReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeNameReference"


    // $ANTLR start "entryRuleAttributeIndex"
    // InternalSiddhiParser.g:12501:1: entryRuleAttributeIndex returns [EObject current=null] : iv_ruleAttributeIndex= ruleAttributeIndex EOF ;
    public final EObject entryRuleAttributeIndex() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeIndex_StartIndex = input.index();
        EObject iv_ruleAttributeIndex = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return current; }
            // InternalSiddhiParser.g:12501:55: (iv_ruleAttributeIndex= ruleAttributeIndex EOF )
            // InternalSiddhiParser.g:12502:2: iv_ruleAttributeIndex= ruleAttributeIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeIndexRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeIndex=ruleAttributeIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeIndex; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, entryRuleAttributeIndex_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeIndex"


    // $ANTLR start "ruleAttributeIndex"
    // InternalSiddhiParser.g:12508:1: ruleAttributeIndex returns [EObject current=null] : ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) ) ;
    public final EObject ruleAttributeIndex() throws RecognitionException {
        EObject current = null;
        int ruleAttributeIndex_StartIndex = input.index();
        Token otherlv_4=null;
        EObject this_LAST_3 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return current; }
            // InternalSiddhiParser.g:12514:2: ( ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) ) )
            // InternalSiddhiParser.g:12515:2: ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) )
            {
            // InternalSiddhiParser.g:12515:2: ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_INT) ) {
                alt157=1;
            }
            else if ( (LA157_0==Last) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalSiddhiParser.g:12516:3: ( () ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:12516:3: ( () ruleINT_LITERAL )
                    // InternalSiddhiParser.g:12517:4: () ruleINT_LITERAL
                    {
                    // InternalSiddhiParser.g:12517:4: ()
                    // InternalSiddhiParser.g:12518:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12533:3: ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? )
                    {
                    // InternalSiddhiParser.g:12533:3: ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? )
                    // InternalSiddhiParser.g:12534:4: () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )?
                    {
                    // InternalSiddhiParser.g:12534:4: ()
                    // InternalSiddhiParser.g:12535:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeIndexRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeIndexAccess().getLASTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    this_LAST_3=ruleLAST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LAST_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:12552:4: (otherlv_4= HyphenMinus ruleINT_LITERAL )?
                    int alt156=2;
                    int LA156_0 = input.LA(1);

                    if ( (LA156_0==HyphenMinus) ) {
                        alt156=1;
                    }
                    switch (alt156) {
                        case 1 :
                            // InternalSiddhiParser.g:12553:5: otherlv_4= HyphenMinus ruleINT_LITERAL
                            {
                            otherlv_4=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getAttributeIndexAccess().getHyphenMinusKeyword_1_2_0());
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_1_2_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            ruleINT_LITERAL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, ruleAttributeIndex_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeIndex"


    // $ANTLR start "entryRuleStandardStatefulSource"
    // InternalSiddhiParser.g:12570:1: entryRuleStandardStatefulSource returns [EObject current=null] : iv_ruleStandardStatefulSource= ruleStandardStatefulSource EOF ;
    public final EObject entryRuleStandardStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleStandardStatefulSource_StartIndex = input.index();
        EObject iv_ruleStandardStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return current; }
            // InternalSiddhiParser.g:12570:63: (iv_ruleStandardStatefulSource= ruleStandardStatefulSource EOF )
            // InternalSiddhiParser.g:12571:2: iv_ruleStandardStatefulSource= ruleStandardStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStandardStatefulSource=ruleStandardStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, entryRuleStandardStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardStatefulSource"


    // $ANTLR start "ruleStandardStatefulSource"
    // InternalSiddhiParser.g:12577:1: ruleStandardStatefulSource returns [EObject current=null] : ( () ( ( (lv_name_1_0= ruleIdNew ) ) otherlv_2= EqualsSign )? ( (lv_bs_3_0= ruleBasicSource ) ) ) ;
    public final EObject ruleStandardStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleStandardStatefulSource_StartIndex = input.index();
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_bs_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return current; }
            // InternalSiddhiParser.g:12583:2: ( ( () ( ( (lv_name_1_0= ruleIdNew ) ) otherlv_2= EqualsSign )? ( (lv_bs_3_0= ruleBasicSource ) ) ) )
            // InternalSiddhiParser.g:12584:2: ( () ( ( (lv_name_1_0= ruleIdNew ) ) otherlv_2= EqualsSign )? ( (lv_bs_3_0= ruleBasicSource ) ) )
            {
            // InternalSiddhiParser.g:12584:2: ( () ( ( (lv_name_1_0= ruleIdNew ) ) otherlv_2= EqualsSign )? ( (lv_bs_3_0= ruleBasicSource ) ) )
            // InternalSiddhiParser.g:12585:3: () ( ( (lv_name_1_0= ruleIdNew ) ) otherlv_2= EqualsSign )? ( (lv_bs_3_0= ruleBasicSource ) )
            {
            // InternalSiddhiParser.g:12585:3: ()
            // InternalSiddhiParser.g:12586:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStandardStatefulSourceAccess().getStandardStatefulSourceAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:12592:3: ( ( (lv_name_1_0= ruleIdNew ) ) otherlv_2= EqualsSign )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==RULE_ID) ) {
                int LA158_1 = input.LA(2);

                if ( (LA158_1==EqualsSign) ) {
                    alt158=1;
                }
            }
            switch (alt158) {
                case 1 :
                    // InternalSiddhiParser.g:12593:4: ( (lv_name_1_0= ruleIdNew ) ) otherlv_2= EqualsSign
                    {
                    // InternalSiddhiParser.g:12593:4: ( (lv_name_1_0= ruleIdNew ) )
                    // InternalSiddhiParser.g:12594:5: (lv_name_1_0= ruleIdNew )
                    {
                    // InternalSiddhiParser.g:12594:5: (lv_name_1_0= ruleIdNew )
                    // InternalSiddhiParser.g:12595:6: lv_name_1_0= ruleIdNew
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStandardStatefulSourceAccess().getNameIdNewParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_name_1_0=ruleIdNew();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStandardStatefulSourceRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.xtext.example.siddhi.Siddhi.IdNew");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getStandardStatefulSourceAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:12617:3: ( (lv_bs_3_0= ruleBasicSource ) )
            // InternalSiddhiParser.g:12618:4: (lv_bs_3_0= ruleBasicSource )
            {
            // InternalSiddhiParser.g:12618:4: (lv_bs_3_0= ruleBasicSource )
            // InternalSiddhiParser.g:12619:5: lv_bs_3_0= ruleBasicSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStandardStatefulSourceAccess().getBsBasicSourceParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_bs_3_0=ruleBasicSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStandardStatefulSourceRule());
              					}
              					set(
              						current,
              						"bs",
              						lv_bs_3_0,
              						"org.xtext.example.siddhi.Siddhi.BasicSource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, ruleStandardStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStandardStatefulSource"


    // $ANTLR start "entryRuleSourceOrEventReference"
    // InternalSiddhiParser.g:12640:1: entryRuleSourceOrEventReference returns [EObject current=null] : iv_ruleSourceOrEventReference= ruleSourceOrEventReference EOF ;
    public final EObject entryRuleSourceOrEventReference() throws RecognitionException {
        EObject current = null;
        int entryRuleSourceOrEventReference_StartIndex = input.index();
        EObject iv_ruleSourceOrEventReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return current; }
            // InternalSiddhiParser.g:12640:63: (iv_ruleSourceOrEventReference= ruleSourceOrEventReference EOF )
            // InternalSiddhiParser.g:12641:2: iv_ruleSourceOrEventReference= ruleSourceOrEventReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSourceOrEventReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSourceOrEventReference=ruleSourceOrEventReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSourceOrEventReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, entryRuleSourceOrEventReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSourceOrEventReference"


    // $ANTLR start "ruleSourceOrEventReference"
    // InternalSiddhiParser.g:12647:1: ruleSourceOrEventReference returns [EObject current=null] : ( ( ruleIdNew ) ) ;
    public final EObject ruleSourceOrEventReference() throws RecognitionException {
        EObject current = null;
        int ruleSourceOrEventReference_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return current; }
            // InternalSiddhiParser.g:12653:2: ( ( ( ruleIdNew ) ) )
            // InternalSiddhiParser.g:12654:2: ( ( ruleIdNew ) )
            {
            // InternalSiddhiParser.g:12654:2: ( ( ruleIdNew ) )
            // InternalSiddhiParser.g:12655:3: ( ruleIdNew )
            {
            // InternalSiddhiParser.g:12655:3: ( ruleIdNew )
            // InternalSiddhiParser.g:12656:4: ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSourceOrEventReferenceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSourceOrEventReferenceAccess().getNaSource1OrStandardStatefulSourceCrossReference_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, ruleSourceOrEventReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSourceOrEventReference"


    // $ANTLR start "entryRuleBasicSource"
    // InternalSiddhiParser.g:12673:1: entryRuleBasicSource returns [EObject current=null] : iv_ruleBasicSource= ruleBasicSource EOF ;
    public final EObject entryRuleBasicSource() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSource_StartIndex = input.index();
        EObject iv_ruleBasicSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return current; }
            // InternalSiddhiParser.g:12673:52: (iv_ruleBasicSource= ruleBasicSource EOF )
            // InternalSiddhiParser.g:12674:2: iv_ruleBasicSource= ruleBasicSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSource=ruleBasicSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, entryRuleBasicSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSource"


    // $ANTLR start "ruleBasicSource"
    // InternalSiddhiParser.g:12680:1: ruleBasicSource returns [EObject current=null] : ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? ) ;
    public final EObject ruleBasicSource() throws RecognitionException {
        EObject current = null;
        int ruleBasicSource_StartIndex = input.index();
        EObject lv_src_0_0 = null;

        EObject lv_basic_ss_handlers_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return current; }
            // InternalSiddhiParser.g:12686:2: ( ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? ) )
            // InternalSiddhiParser.g:12687:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            {
            // InternalSiddhiParser.g:12687:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            // InternalSiddhiParser.g:12688:3: ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )?
            {
            // InternalSiddhiParser.g:12688:3: ( (lv_src_0_0= ruleSource ) )
            // InternalSiddhiParser.g:12689:4: (lv_src_0_0= ruleSource )
            {
            // InternalSiddhiParser.g:12689:4: (lv_src_0_0= ruleSource )
            // InternalSiddhiParser.g:12690:5: lv_src_0_0= ruleSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBasicSourceAccess().getSrcSourceParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_60);
            lv_src_0_0=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBasicSourceRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_0_0,
              						"org.xtext.example.siddhi.Siddhi.Source");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:12707:3: ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==NumberSign||LA159_0==LeftSquareBracket) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalSiddhiParser.g:12708:4: (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers )
                    {
                    // InternalSiddhiParser.g:12708:4: (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers )
                    // InternalSiddhiParser.g:12709:5: lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicSourceAccess().getBasic_ss_handlersBasicSourceStreamHandlersParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basic_ss_handlers_1_0=ruleBasicSourceStreamHandlers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicSourceRule());
                      					}
                      					set(
                      						current,
                      						"basic_ss_handlers",
                      						lv_basic_ss_handlers_1_0,
                      						"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandlers");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, ruleBasicSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSource"


    // $ANTLR start "entryRuleFeaturesOrOutAttrReference"
    // InternalSiddhiParser.g:12730:1: entryRuleFeaturesOrOutAttrReference returns [EObject current=null] : iv_ruleFeaturesOrOutAttrReference= ruleFeaturesOrOutAttrReference EOF ;
    public final EObject entryRuleFeaturesOrOutAttrReference() throws RecognitionException {
        EObject current = null;
        int entryRuleFeaturesOrOutAttrReference_StartIndex = input.index();
        EObject iv_ruleFeaturesOrOutAttrReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return current; }
            // InternalSiddhiParser.g:12730:67: (iv_ruleFeaturesOrOutAttrReference= ruleFeaturesOrOutAttrReference EOF )
            // InternalSiddhiParser.g:12731:2: iv_ruleFeaturesOrOutAttrReference= ruleFeaturesOrOutAttrReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeaturesOrOutAttrReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFeaturesOrOutAttrReference=ruleFeaturesOrOutAttrReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeaturesOrOutAttrReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, entryRuleFeaturesOrOutAttrReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFeaturesOrOutAttrReference"


    // $ANTLR start "ruleFeaturesOrOutAttrReference"
    // InternalSiddhiParser.g:12737:1: ruleFeaturesOrOutAttrReference returns [EObject current=null] : ( ( ruleIdNew ) ) ;
    public final EObject ruleFeaturesOrOutAttrReference() throws RecognitionException {
        EObject current = null;
        int ruleFeaturesOrOutAttrReference_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return current; }
            // InternalSiddhiParser.g:12743:2: ( ( ( ruleIdNew ) ) )
            // InternalSiddhiParser.g:12744:2: ( ( ruleIdNew ) )
            {
            // InternalSiddhiParser.g:12744:2: ( ( ruleIdNew ) )
            // InternalSiddhiParser.g:12745:3: ( ruleIdNew )
            {
            // InternalSiddhiParser.g:12745:3: ( ruleIdNew )
            // InternalSiddhiParser.g:12746:4: ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeaturesOrOutAttrReferenceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefFeaturesOrOutAttrCrossReference_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, ruleFeaturesOrOutAttrReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFeaturesOrOutAttrReference"


    // $ANTLR start "entryRuleConstantValue"
    // InternalSiddhiParser.g:12763:1: entryRuleConstantValue returns [EObject current=null] : iv_ruleConstantValue= ruleConstantValue EOF ;
    public final EObject entryRuleConstantValue() throws RecognitionException {
        EObject current = null;
        int entryRuleConstantValue_StartIndex = input.index();
        EObject iv_ruleConstantValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return current; }
            // InternalSiddhiParser.g:12763:54: (iv_ruleConstantValue= ruleConstantValue EOF )
            // InternalSiddhiParser.g:12764:2: iv_ruleConstantValue= ruleConstantValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConstantValue=ruleConstantValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, entryRuleConstantValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantValue"


    // $ANTLR start "ruleConstantValue"
    // InternalSiddhiParser.g:12770:1: ruleConstantValue returns [EObject current=null] : ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) ) ;
    public final EObject ruleConstantValue() throws RecognitionException {
        EObject current = null;
        int ruleConstantValue_StartIndex = input.index();
        EObject lv_bv_1_0 = null;

        EObject lv_sdv_3_0 = null;

        EObject lv_sfv_5_0 = null;

        EObject lv_slv_7_0 = null;

        AntlrDatatypeRuleToken lv_siv_9_0 = null;

        EObject lv_tv_11_0 = null;

        EObject lv_sv_13_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return current; }
            // InternalSiddhiParser.g:12776:2: ( ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) ) )
            // InternalSiddhiParser.g:12777:2: ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) )
            {
            // InternalSiddhiParser.g:12777:2: ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) )
            int alt160=7;
            alt160 = dfa160.predict(input);
            switch (alt160) {
                case 1 :
                    // InternalSiddhiParser.g:12778:3: ( () ( (lv_bv_1_0= ruleBoolValue ) ) )
                    {
                    // InternalSiddhiParser.g:12778:3: ( () ( (lv_bv_1_0= ruleBoolValue ) ) )
                    // InternalSiddhiParser.g:12779:4: () ( (lv_bv_1_0= ruleBoolValue ) )
                    {
                    // InternalSiddhiParser.g:12779:4: ()
                    // InternalSiddhiParser.g:12780:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12786:4: ( (lv_bv_1_0= ruleBoolValue ) )
                    // InternalSiddhiParser.g:12787:5: (lv_bv_1_0= ruleBoolValue )
                    {
                    // InternalSiddhiParser.g:12787:5: (lv_bv_1_0= ruleBoolValue )
                    // InternalSiddhiParser.g:12788:6: lv_bv_1_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getBvBoolValueParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_bv_1_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"bv",
                      							lv_bv_1_0,
                      							"org.xtext.example.siddhi.Siddhi.BoolValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12807:3: ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) )
                    {
                    // InternalSiddhiParser.g:12807:3: ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) )
                    // InternalSiddhiParser.g:12808:4: () ( (lv_sdv_3_0= ruleSignedDoubleValue ) )
                    {
                    // InternalSiddhiParser.g:12808:4: ()
                    // InternalSiddhiParser.g:12809:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12815:4: ( (lv_sdv_3_0= ruleSignedDoubleValue ) )
                    // InternalSiddhiParser.g:12816:5: (lv_sdv_3_0= ruleSignedDoubleValue )
                    {
                    // InternalSiddhiParser.g:12816:5: (lv_sdv_3_0= ruleSignedDoubleValue )
                    // InternalSiddhiParser.g:12817:6: lv_sdv_3_0= ruleSignedDoubleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSdvSignedDoubleValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sdv_3_0=ruleSignedDoubleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"sdv",
                      							lv_sdv_3_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedDoubleValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:12836:3: ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) )
                    {
                    // InternalSiddhiParser.g:12836:3: ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) )
                    // InternalSiddhiParser.g:12837:4: () ( (lv_sfv_5_0= ruleSignedFloatValue ) )
                    {
                    // InternalSiddhiParser.g:12837:4: ()
                    // InternalSiddhiParser.g:12838:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12844:4: ( (lv_sfv_5_0= ruleSignedFloatValue ) )
                    // InternalSiddhiParser.g:12845:5: (lv_sfv_5_0= ruleSignedFloatValue )
                    {
                    // InternalSiddhiParser.g:12845:5: (lv_sfv_5_0= ruleSignedFloatValue )
                    // InternalSiddhiParser.g:12846:6: lv_sfv_5_0= ruleSignedFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSfvSignedFloatValueParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sfv_5_0=ruleSignedFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"sfv",
                      							lv_sfv_5_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedFloatValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:12865:3: ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) )
                    {
                    // InternalSiddhiParser.g:12865:3: ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) )
                    // InternalSiddhiParser.g:12866:4: () ( (lv_slv_7_0= ruleSignedLongValue ) )
                    {
                    // InternalSiddhiParser.g:12866:4: ()
                    // InternalSiddhiParser.g:12867:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12873:4: ( (lv_slv_7_0= ruleSignedLongValue ) )
                    // InternalSiddhiParser.g:12874:5: (lv_slv_7_0= ruleSignedLongValue )
                    {
                    // InternalSiddhiParser.g:12874:5: (lv_slv_7_0= ruleSignedLongValue )
                    // InternalSiddhiParser.g:12875:6: lv_slv_7_0= ruleSignedLongValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSlvSignedLongValueParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_slv_7_0=ruleSignedLongValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"slv",
                      							lv_slv_7_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedLongValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:12894:3: ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) )
                    {
                    // InternalSiddhiParser.g:12894:3: ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) )
                    // InternalSiddhiParser.g:12895:4: () ( (lv_siv_9_0= ruleSignedIntValue ) )
                    {
                    // InternalSiddhiParser.g:12895:4: ()
                    // InternalSiddhiParser.g:12896:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12902:4: ( (lv_siv_9_0= ruleSignedIntValue ) )
                    // InternalSiddhiParser.g:12903:5: (lv_siv_9_0= ruleSignedIntValue )
                    {
                    // InternalSiddhiParser.g:12903:5: (lv_siv_9_0= ruleSignedIntValue )
                    // InternalSiddhiParser.g:12904:6: lv_siv_9_0= ruleSignedIntValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSivSignedIntValueParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_siv_9_0=ruleSignedIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"siv",
                      							lv_siv_9_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedIntValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:12923:3: ( () ( (lv_tv_11_0= ruleTimeValue ) ) )
                    {
                    // InternalSiddhiParser.g:12923:3: ( () ( (lv_tv_11_0= ruleTimeValue ) ) )
                    // InternalSiddhiParser.g:12924:4: () ( (lv_tv_11_0= ruleTimeValue ) )
                    {
                    // InternalSiddhiParser.g:12924:4: ()
                    // InternalSiddhiParser.g:12925:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12931:4: ( (lv_tv_11_0= ruleTimeValue ) )
                    // InternalSiddhiParser.g:12932:5: (lv_tv_11_0= ruleTimeValue )
                    {
                    // InternalSiddhiParser.g:12932:5: (lv_tv_11_0= ruleTimeValue )
                    // InternalSiddhiParser.g:12933:6: lv_tv_11_0= ruleTimeValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getTvTimeValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tv_11_0=ruleTimeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"tv",
                      							lv_tv_11_0,
                      							"org.xtext.example.siddhi.Siddhi.TimeValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:12952:3: ( () ( (lv_sv_13_0= ruleStringValue ) ) )
                    {
                    // InternalSiddhiParser.g:12952:3: ( () ( (lv_sv_13_0= ruleStringValue ) ) )
                    // InternalSiddhiParser.g:12953:4: () ( (lv_sv_13_0= ruleStringValue ) )
                    {
                    // InternalSiddhiParser.g:12953:4: ()
                    // InternalSiddhiParser.g:12954:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12960:4: ( (lv_sv_13_0= ruleStringValue ) )
                    // InternalSiddhiParser.g:12961:5: (lv_sv_13_0= ruleStringValue )
                    {
                    // InternalSiddhiParser.g:12961:5: (lv_sv_13_0= ruleStringValue )
                    // InternalSiddhiParser.g:12962:6: lv_sv_13_0= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSvStringValueParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sv_13_0=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"sv",
                      							lv_sv_13_0,
                      							"org.xtext.example.siddhi.Siddhi.StringValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, ruleConstantValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstantValue"


    // $ANTLR start "entryRuleName"
    // InternalSiddhiParser.g:12984:1: entryRuleName returns [EObject current=null] : iv_ruleName= ruleName EOF ;
    public final EObject entryRuleName() throws RecognitionException {
        EObject current = null;
        int entryRuleName_StartIndex = input.index();
        EObject iv_ruleName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return current; }
            // InternalSiddhiParser.g:12984:45: (iv_ruleName= ruleName EOF )
            // InternalSiddhiParser.g:12985:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, entryRuleName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalSiddhiParser.g:12991:1: ruleName returns [EObject current=null] : ( (lv_name_0_0= ruleIdNew ) ) ;
    public final EObject ruleName() throws RecognitionException {
        EObject current = null;
        int ruleName_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return current; }
            // InternalSiddhiParser.g:12997:2: ( ( (lv_name_0_0= ruleIdNew ) ) )
            // InternalSiddhiParser.g:12998:2: ( (lv_name_0_0= ruleIdNew ) )
            {
            // InternalSiddhiParser.g:12998:2: ( (lv_name_0_0= ruleIdNew ) )
            // InternalSiddhiParser.g:12999:3: (lv_name_0_0= ruleIdNew )
            {
            // InternalSiddhiParser.g:12999:3: (lv_name_0_0= ruleIdNew )
            // InternalSiddhiParser.g:13000:4: lv_name_0_0= ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getNameAccess().getNameIdNewParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getNameRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.xtext.example.siddhi.Siddhi.IdNew");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, ruleName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleSource"
    // InternalSiddhiParser.g:13020:1: entryRuleSource returns [EObject current=null] : iv_ruleSource= ruleSource EOF ;
    public final EObject entryRuleSource() throws RecognitionException {
        EObject current = null;
        int entryRuleSource_StartIndex = input.index();
        EObject iv_ruleSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return current; }
            // InternalSiddhiParser.g:13020:47: (iv_ruleSource= ruleSource EOF )
            // InternalSiddhiParser.g:13021:2: iv_ruleSource= ruleSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSource=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, entryRuleSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSource"


    // $ANTLR start "ruleSource"
    // InternalSiddhiParser.g:13027:1: ruleSource returns [EObject current=null] : ( ( ruleIdNew ) ) ;
    public final EObject ruleSource() throws RecognitionException {
        EObject current = null;
        int ruleSource_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return current; }
            // InternalSiddhiParser.g:13033:2: ( ( ( ruleIdNew ) ) )
            // InternalSiddhiParser.g:13034:2: ( ( ruleIdNew ) )
            {
            // InternalSiddhiParser.g:13034:2: ( ( ruleIdNew ) )
            // InternalSiddhiParser.g:13035:3: ( ruleIdNew )
            {
            // InternalSiddhiParser.g:13035:3: ( ruleIdNew )
            // InternalSiddhiParser.g:13036:4: ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSourceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSourceAccess().getStrIdSource1CrossReference_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, ruleSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSource"


    // $ANTLR start "entryRuleSource1"
    // InternalSiddhiParser.g:13053:1: entryRuleSource1 returns [EObject current=null] : iv_ruleSource1= ruleSource1 EOF ;
    public final EObject entryRuleSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleSource1_StartIndex = input.index();
        EObject iv_ruleSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return current; }
            // InternalSiddhiParser.g:13053:48: (iv_ruleSource1= ruleSource1 EOF )
            // InternalSiddhiParser.g:13054:2: iv_ruleSource1= ruleSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSource1=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, entryRuleSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSource1"


    // $ANTLR start "ruleSource1"
    // InternalSiddhiParser.g:13060:1: ruleSource1 returns [EObject current=null] : ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) ) ;
    public final EObject ruleSource1() throws RecognitionException {
        EObject current = null;
        int ruleSource1_StartIndex = input.index();
        Token lv_inner_0_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return current; }
            // InternalSiddhiParser.g:13066:2: ( ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) ) )
            // InternalSiddhiParser.g:13067:2: ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) )
            {
            // InternalSiddhiParser.g:13067:2: ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) )
            // InternalSiddhiParser.g:13068:3: ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) )
            {
            // InternalSiddhiParser.g:13068:3: ( (lv_inner_0_0= NumberSign ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==NumberSign) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSiddhiParser.g:13069:4: (lv_inner_0_0= NumberSign )
                    {
                    // InternalSiddhiParser.g:13069:4: (lv_inner_0_0= NumberSign )
                    // InternalSiddhiParser.g:13070:5: lv_inner_0_0= NumberSign
                    {
                    lv_inner_0_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_inner_0_0, grammarAccess.getSource1Access().getInnerNumberSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSource1Rule());
                      					}
                      					setWithLastConsumed(current, "inner", lv_inner_0_0, "#");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:13082:3: ( (lv_name_1_0= ruleIdNew ) )
            // InternalSiddhiParser.g:13083:4: (lv_name_1_0= ruleIdNew )
            {
            // InternalSiddhiParser.g:13083:4: (lv_name_1_0= ruleIdNew )
            // InternalSiddhiParser.g:13084:5: lv_name_1_0= ruleIdNew
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSource1Access().getNameIdNewParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSource1Rule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.siddhi.Siddhi.IdNew");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, ruleSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSource1"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSiddhiParser.g:13105:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;
        int entryRuleBoolValue_StartIndex = input.index();
        EObject iv_ruleBoolValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return current; }
            // InternalSiddhiParser.g:13105:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSiddhiParser.g:13106:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, entryRuleBoolValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSiddhiParser.g:13112:1: ruleBoolValue returns [EObject current=null] : (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;
        int ruleBoolValue_StartIndex = input.index();
        EObject this_TRUE_0 = null;

        EObject this_FALSE_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return current; }
            // InternalSiddhiParser.g:13118:2: ( (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] ) )
            // InternalSiddhiParser.g:13119:2: (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] )
            {
            // InternalSiddhiParser.g:13119:2: (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==True) ) {
                alt162=1;
            }
            else if ( (LA162_0==False) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }
            switch (alt162) {
                case 1 :
                    // InternalSiddhiParser.g:13120:3: this_TRUE_0= ruleTRUE[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getBoolValueRule());
                      			}
                      			newCompositeNode(grammarAccess.getBoolValueAccess().getTRUEParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TRUE_0=ruleTRUE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TRUE_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13132:3: this_FALSE_1= ruleFALSE[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getBoolValueRule());
                      			}
                      			newCompositeNode(grammarAccess.getBoolValueAccess().getFALSEParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FALSE_1=ruleFALSE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FALSE_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, ruleBoolValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleSignedDoubleValue"
    // InternalSiddhiParser.g:13147:1: entryRuleSignedDoubleValue returns [EObject current=null] : iv_ruleSignedDoubleValue= ruleSignedDoubleValue EOF ;
    public final EObject entryRuleSignedDoubleValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedDoubleValue_StartIndex = input.index();
        EObject iv_ruleSignedDoubleValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return current; }
            // InternalSiddhiParser.g:13147:58: (iv_ruleSignedDoubleValue= ruleSignedDoubleValue EOF )
            // InternalSiddhiParser.g:13148:2: iv_ruleSignedDoubleValue= ruleSignedDoubleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedDoubleValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedDoubleValue=ruleSignedDoubleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedDoubleValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, entryRuleSignedDoubleValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedDoubleValue"


    // $ANTLR start "ruleSignedDoubleValue"
    // InternalSiddhiParser.g:13154:1: ruleSignedDoubleValue returns [EObject current=null] : ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL ) ;
    public final EObject ruleSignedDoubleValue() throws RecognitionException {
        EObject current = null;
        int ruleSignedDoubleValue_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject this_DOUBLE_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return current; }
            // InternalSiddhiParser.g:13160:2: ( ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL ) )
            // InternalSiddhiParser.g:13161:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL )
            {
            // InternalSiddhiParser.g:13161:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL )
            // InternalSiddhiParser.g:13162:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL
            {
            // InternalSiddhiParser.g:13162:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )?
            int alt163=3;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==HyphenMinus) ) {
                alt163=1;
            }
            else if ( (LA163_0==PlusSign) ) {
                alt163=2;
            }
            switch (alt163) {
                case 1 :
                    // InternalSiddhiParser.g:13163:4: otherlv_0= HyphenMinus
                    {
                    otherlv_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSignedDoubleValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13168:4: otherlv_1= PlusSign
                    {
                    otherlv_1=(Token)match(input,PlusSign,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSignedDoubleValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedDoubleValueAccess().getDOUBLE_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_DOUBLE_LITERAL_2=ruleDOUBLE_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DOUBLE_LITERAL_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, ruleSignedDoubleValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedDoubleValue"


    // $ANTLR start "entryRuleSignedFloatValue"
    // InternalSiddhiParser.g:13185:1: entryRuleSignedFloatValue returns [EObject current=null] : iv_ruleSignedFloatValue= ruleSignedFloatValue EOF ;
    public final EObject entryRuleSignedFloatValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedFloatValue_StartIndex = input.index();
        EObject iv_ruleSignedFloatValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return current; }
            // InternalSiddhiParser.g:13185:57: (iv_ruleSignedFloatValue= ruleSignedFloatValue EOF )
            // InternalSiddhiParser.g:13186:2: iv_ruleSignedFloatValue= ruleSignedFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedFloatValue=ruleSignedFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, entryRuleSignedFloatValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedFloatValue"


    // $ANTLR start "ruleSignedFloatValue"
    // InternalSiddhiParser.g:13192:1: ruleSignedFloatValue returns [EObject current=null] : ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL ) ;
    public final EObject ruleSignedFloatValue() throws RecognitionException {
        EObject current = null;
        int ruleSignedFloatValue_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject this_FLOAT_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return current; }
            // InternalSiddhiParser.g:13198:2: ( ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL ) )
            // InternalSiddhiParser.g:13199:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL )
            {
            // InternalSiddhiParser.g:13199:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL )
            // InternalSiddhiParser.g:13200:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL
            {
            // InternalSiddhiParser.g:13200:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )?
            int alt164=3;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==HyphenMinus) ) {
                alt164=1;
            }
            else if ( (LA164_0==PlusSign) ) {
                alt164=2;
            }
            switch (alt164) {
                case 1 :
                    // InternalSiddhiParser.g:13201:4: otherlv_0= HyphenMinus
                    {
                    otherlv_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSignedFloatValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13206:4: otherlv_1= PlusSign
                    {
                    otherlv_1=(Token)match(input,PlusSign,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSignedFloatValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedFloatValueAccess().getFLOAT_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_FLOAT_LITERAL_2=ruleFLOAT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FLOAT_LITERAL_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, ruleSignedFloatValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedFloatValue"


    // $ANTLR start "entryRuleSignedLongValue"
    // InternalSiddhiParser.g:13223:1: entryRuleSignedLongValue returns [EObject current=null] : iv_ruleSignedLongValue= ruleSignedLongValue EOF ;
    public final EObject entryRuleSignedLongValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedLongValue_StartIndex = input.index();
        EObject iv_ruleSignedLongValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return current; }
            // InternalSiddhiParser.g:13223:56: (iv_ruleSignedLongValue= ruleSignedLongValue EOF )
            // InternalSiddhiParser.g:13224:2: iv_ruleSignedLongValue= ruleSignedLongValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedLongValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedLongValue=ruleSignedLongValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedLongValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, entryRuleSignedLongValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedLongValue"


    // $ANTLR start "ruleSignedLongValue"
    // InternalSiddhiParser.g:13230:1: ruleSignedLongValue returns [EObject current=null] : ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL ) ;
    public final EObject ruleSignedLongValue() throws RecognitionException {
        EObject current = null;
        int ruleSignedLongValue_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject this_LONG_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return current; }
            // InternalSiddhiParser.g:13236:2: ( ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL ) )
            // InternalSiddhiParser.g:13237:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL )
            {
            // InternalSiddhiParser.g:13237:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL )
            // InternalSiddhiParser.g:13238:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL
            {
            // InternalSiddhiParser.g:13238:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )?
            int alt165=3;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==HyphenMinus) ) {
                alt165=1;
            }
            else if ( (LA165_0==PlusSign) ) {
                alt165=2;
            }
            switch (alt165) {
                case 1 :
                    // InternalSiddhiParser.g:13239:4: otherlv_0= HyphenMinus
                    {
                    otherlv_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSignedLongValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13244:4: otherlv_1= PlusSign
                    {
                    otherlv_1=(Token)match(input,PlusSign,FollowSets000.FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSignedLongValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedLongValueAccess().getLONG_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LONG_LITERAL_2=ruleLONG_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LONG_LITERAL_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, ruleSignedLongValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedLongValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSiddhiParser.g:13261:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;
        int entryRuleStringValue_StartIndex = input.index();
        EObject iv_ruleStringValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return current; }
            // InternalSiddhiParser.g:13261:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSiddhiParser.g:13262:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, entryRuleStringValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSiddhiParser.g:13268:1: ruleStringValue returns [EObject current=null] : ( (lv_sl_0_0= ruleSTRING_LITERAL ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;
        int ruleStringValue_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_sl_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return current; }
            // InternalSiddhiParser.g:13274:2: ( ( (lv_sl_0_0= ruleSTRING_LITERAL ) ) )
            // InternalSiddhiParser.g:13275:2: ( (lv_sl_0_0= ruleSTRING_LITERAL ) )
            {
            // InternalSiddhiParser.g:13275:2: ( (lv_sl_0_0= ruleSTRING_LITERAL ) )
            // InternalSiddhiParser.g:13276:3: (lv_sl_0_0= ruleSTRING_LITERAL )
            {
            // InternalSiddhiParser.g:13276:3: (lv_sl_0_0= ruleSTRING_LITERAL )
            // InternalSiddhiParser.g:13277:4: lv_sl_0_0= ruleSTRING_LITERAL
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getStringValueAccess().getSlSTRING_LITERALParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_sl_0_0=ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getStringValueRule());
              				}
              				set(
              					current,
              					"sl",
              					lv_sl_0_0,
              					"org.xtext.example.siddhi.Siddhi.STRING_LITERAL");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, ruleStringValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleTimeValue"
    // InternalSiddhiParser.g:13297:1: entryRuleTimeValue returns [EObject current=null] : iv_ruleTimeValue= ruleTimeValue EOF ;
    public final EObject entryRuleTimeValue() throws RecognitionException {
        EObject current = null;
        int entryRuleTimeValue_StartIndex = input.index();
        EObject iv_ruleTimeValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return current; }
            // InternalSiddhiParser.g:13297:50: (iv_ruleTimeValue= ruleTimeValue EOF )
            // InternalSiddhiParser.g:13298:2: iv_ruleTimeValue= ruleTimeValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTimeValue=ruleTimeValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimeValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, entryRuleTimeValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeValue"


    // $ANTLR start "ruleTimeValue"
    // InternalSiddhiParser.g:13304:1: ruleTimeValue returns [EObject current=null] : ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) ) ;
    public final EObject ruleTimeValue() throws RecognitionException {
        EObject current = null;
        int ruleTimeValue_StartIndex = input.index();
        EObject lv_yv_0_0 = null;

        EObject lv_mv_1_0 = null;

        EObject lv_wv_2_0 = null;

        EObject lv_dv_3_0 = null;

        EObject lv_hv_4_0 = null;

        EObject lv_minv_5_0 = null;

        EObject lv_secv_6_0 = null;

        EObject lv_msecv_7_0 = null;

        EObject lv_mv_8_0 = null;

        EObject lv_wv_9_0 = null;

        EObject lv_dv_10_0 = null;

        EObject lv_hv_11_0 = null;

        EObject lv_minv_12_0 = null;

        EObject lv_secv_13_0 = null;

        EObject lv_msecv_14_0 = null;

        EObject lv_wv_15_0 = null;

        EObject lv_dv_16_0 = null;

        EObject lv_hv_17_0 = null;

        EObject lv_minv_18_0 = null;

        EObject lv_secv_19_0 = null;

        EObject lv_msecv_20_0 = null;

        EObject lv_dv_21_0 = null;

        EObject lv_hv_22_0 = null;

        EObject lv_minv_23_0 = null;

        EObject lv_secv_24_0 = null;

        EObject lv_msecv_25_0 = null;

        EObject lv_hv_26_0 = null;

        EObject lv_minv_27_0 = null;

        EObject lv_secv_28_0 = null;

        EObject lv_msecv_29_0 = null;

        EObject lv_minv_30_0 = null;

        EObject lv_secv_31_0 = null;

        EObject lv_msecv_32_0 = null;

        EObject lv_sv_33_0 = null;

        EObject lv_msecv_34_0 = null;

        EObject lv_msecv_35_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return current; }
            // InternalSiddhiParser.g:13310:2: ( ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) ) )
            // InternalSiddhiParser.g:13311:2: ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) )
            {
            // InternalSiddhiParser.g:13311:2: ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) )
            int alt194=8;
            alt194 = dfa194.predict(input);
            switch (alt194) {
                case 1 :
                    // InternalSiddhiParser.g:13312:3: ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13312:3: ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13313:4: ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13313:4: ( (lv_yv_0_0= ruleYearValue ) )
                    // InternalSiddhiParser.g:13314:5: (lv_yv_0_0= ruleYearValue )
                    {
                    // InternalSiddhiParser.g:13314:5: (lv_yv_0_0= ruleYearValue )
                    // InternalSiddhiParser.g:13315:6: lv_yv_0_0= ruleYearValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getYvYearValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_yv_0_0=ruleYearValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"yv",
                      							lv_yv_0_0,
                      							"org.xtext.example.siddhi.Siddhi.YearValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13332:4: ( (lv_mv_1_0= ruleMonthValue ) )?
                    int alt166=2;
                    alt166 = dfa166.predict(input);
                    switch (alt166) {
                        case 1 :
                            // InternalSiddhiParser.g:13333:5: (lv_mv_1_0= ruleMonthValue )
                            {
                            // InternalSiddhiParser.g:13333:5: (lv_mv_1_0= ruleMonthValue )
                            // InternalSiddhiParser.g:13334:6: lv_mv_1_0= ruleMonthValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_mv_1_0=ruleMonthValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"mv",
                              							lv_mv_1_0,
                              							"org.xtext.example.siddhi.Siddhi.MonthValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13351:4: ( (lv_wv_2_0= ruleWeekValue ) )?
                    int alt167=2;
                    alt167 = dfa167.predict(input);
                    switch (alt167) {
                        case 1 :
                            // InternalSiddhiParser.g:13352:5: (lv_wv_2_0= ruleWeekValue )
                            {
                            // InternalSiddhiParser.g:13352:5: (lv_wv_2_0= ruleWeekValue )
                            // InternalSiddhiParser.g:13353:6: lv_wv_2_0= ruleWeekValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_wv_2_0=ruleWeekValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"wv",
                              							lv_wv_2_0,
                              							"org.xtext.example.siddhi.Siddhi.WeekValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13370:4: ( (lv_dv_3_0= ruleDayValue ) )?
                    int alt168=2;
                    alt168 = dfa168.predict(input);
                    switch (alt168) {
                        case 1 :
                            // InternalSiddhiParser.g:13371:5: (lv_dv_3_0= ruleDayValue )
                            {
                            // InternalSiddhiParser.g:13371:5: (lv_dv_3_0= ruleDayValue )
                            // InternalSiddhiParser.g:13372:6: lv_dv_3_0= ruleDayValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_dv_3_0=ruleDayValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"dv",
                              							lv_dv_3_0,
                              							"org.xtext.example.siddhi.Siddhi.DayValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13389:4: ( (lv_hv_4_0= ruleHourValue ) )?
                    int alt169=2;
                    alt169 = dfa169.predict(input);
                    switch (alt169) {
                        case 1 :
                            // InternalSiddhiParser.g:13390:5: (lv_hv_4_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:13390:5: (lv_hv_4_0= ruleHourValue )
                            // InternalSiddhiParser.g:13391:6: lv_hv_4_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_hv_4_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_4_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13408:4: ( (lv_minv_5_0= ruleMinuteValue ) )?
                    int alt170=2;
                    alt170 = dfa170.predict(input);
                    switch (alt170) {
                        case 1 :
                            // InternalSiddhiParser.g:13409:5: (lv_minv_5_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:13409:5: (lv_minv_5_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:13410:6: lv_minv_5_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_0_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_minv_5_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_5_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13427:4: ( (lv_secv_6_0= ruleSecondValue ) )?
                    int alt171=2;
                    alt171 = dfa171.predict(input);
                    switch (alt171) {
                        case 1 :
                            // InternalSiddhiParser.g:13428:5: (lv_secv_6_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13428:5: (lv_secv_6_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13429:6: lv_secv_6_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_0_6_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_secv_6_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_6_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13446:4: ( (lv_msecv_7_0= ruleMillisecondValue ) )?
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==RULE_INT) ) {
                        alt172=1;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalSiddhiParser.g:13447:5: (lv_msecv_7_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13447:5: (lv_msecv_7_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13448:6: lv_msecv_7_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_0_7_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_7_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_7_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13467:3: ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13467:3: ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13468:4: ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13468:4: ( (lv_mv_8_0= ruleMonthValue ) )
                    // InternalSiddhiParser.g:13469:5: (lv_mv_8_0= ruleMonthValue )
                    {
                    // InternalSiddhiParser.g:13469:5: (lv_mv_8_0= ruleMonthValue )
                    // InternalSiddhiParser.g:13470:6: lv_mv_8_0= ruleMonthValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_mv_8_0=ruleMonthValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"mv",
                      							lv_mv_8_0,
                      							"org.xtext.example.siddhi.Siddhi.MonthValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13487:4: ( (lv_wv_9_0= ruleWeekValue ) )?
                    int alt173=2;
                    alt173 = dfa173.predict(input);
                    switch (alt173) {
                        case 1 :
                            // InternalSiddhiParser.g:13488:5: (lv_wv_9_0= ruleWeekValue )
                            {
                            // InternalSiddhiParser.g:13488:5: (lv_wv_9_0= ruleWeekValue )
                            // InternalSiddhiParser.g:13489:6: lv_wv_9_0= ruleWeekValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_wv_9_0=ruleWeekValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"wv",
                              							lv_wv_9_0,
                              							"org.xtext.example.siddhi.Siddhi.WeekValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13506:4: ( (lv_dv_10_0= ruleDayValue ) )?
                    int alt174=2;
                    alt174 = dfa174.predict(input);
                    switch (alt174) {
                        case 1 :
                            // InternalSiddhiParser.g:13507:5: (lv_dv_10_0= ruleDayValue )
                            {
                            // InternalSiddhiParser.g:13507:5: (lv_dv_10_0= ruleDayValue )
                            // InternalSiddhiParser.g:13508:6: lv_dv_10_0= ruleDayValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_dv_10_0=ruleDayValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"dv",
                              							lv_dv_10_0,
                              							"org.xtext.example.siddhi.Siddhi.DayValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13525:4: ( (lv_hv_11_0= ruleHourValue ) )?
                    int alt175=2;
                    alt175 = dfa175.predict(input);
                    switch (alt175) {
                        case 1 :
                            // InternalSiddhiParser.g:13526:5: (lv_hv_11_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:13526:5: (lv_hv_11_0= ruleHourValue )
                            // InternalSiddhiParser.g:13527:6: lv_hv_11_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_1_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_hv_11_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_11_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13544:4: ( (lv_minv_12_0= ruleMinuteValue ) )?
                    int alt176=2;
                    alt176 = dfa176.predict(input);
                    switch (alt176) {
                        case 1 :
                            // InternalSiddhiParser.g:13545:5: (lv_minv_12_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:13545:5: (lv_minv_12_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:13546:6: lv_minv_12_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_1_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_minv_12_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_12_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13563:4: ( (lv_secv_13_0= ruleSecondValue ) )?
                    int alt177=2;
                    alt177 = dfa177.predict(input);
                    switch (alt177) {
                        case 1 :
                            // InternalSiddhiParser.g:13564:5: (lv_secv_13_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13564:5: (lv_secv_13_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13565:6: lv_secv_13_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_1_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_secv_13_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_13_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13582:4: ( (lv_msecv_14_0= ruleMillisecondValue ) )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==RULE_INT) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalSiddhiParser.g:13583:5: (lv_msecv_14_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13583:5: (lv_msecv_14_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13584:6: lv_msecv_14_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_1_6_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_14_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_14_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:13603:3: ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13603:3: ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13604:4: ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13604:4: ( (lv_wv_15_0= ruleWeekValue ) )
                    // InternalSiddhiParser.g:13605:5: (lv_wv_15_0= ruleWeekValue )
                    {
                    // InternalSiddhiParser.g:13605:5: (lv_wv_15_0= ruleWeekValue )
                    // InternalSiddhiParser.g:13606:6: lv_wv_15_0= ruleWeekValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_wv_15_0=ruleWeekValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"wv",
                      							lv_wv_15_0,
                      							"org.xtext.example.siddhi.Siddhi.WeekValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13623:4: ( (lv_dv_16_0= ruleDayValue ) )?
                    int alt179=2;
                    alt179 = dfa179.predict(input);
                    switch (alt179) {
                        case 1 :
                            // InternalSiddhiParser.g:13624:5: (lv_dv_16_0= ruleDayValue )
                            {
                            // InternalSiddhiParser.g:13624:5: (lv_dv_16_0= ruleDayValue )
                            // InternalSiddhiParser.g:13625:6: lv_dv_16_0= ruleDayValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_2_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_dv_16_0=ruleDayValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"dv",
                              							lv_dv_16_0,
                              							"org.xtext.example.siddhi.Siddhi.DayValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13642:4: ( (lv_hv_17_0= ruleHourValue ) )?
                    int alt180=2;
                    alt180 = dfa180.predict(input);
                    switch (alt180) {
                        case 1 :
                            // InternalSiddhiParser.g:13643:5: (lv_hv_17_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:13643:5: (lv_hv_17_0= ruleHourValue )
                            // InternalSiddhiParser.g:13644:6: lv_hv_17_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_hv_17_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_17_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13661:4: ( (lv_minv_18_0= ruleMinuteValue ) )?
                    int alt181=2;
                    alt181 = dfa181.predict(input);
                    switch (alt181) {
                        case 1 :
                            // InternalSiddhiParser.g:13662:5: (lv_minv_18_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:13662:5: (lv_minv_18_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:13663:6: lv_minv_18_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_2_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_minv_18_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_18_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13680:4: ( (lv_secv_19_0= ruleSecondValue ) )?
                    int alt182=2;
                    alt182 = dfa182.predict(input);
                    switch (alt182) {
                        case 1 :
                            // InternalSiddhiParser.g:13681:5: (lv_secv_19_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13681:5: (lv_secv_19_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13682:6: lv_secv_19_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_2_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_secv_19_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_19_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13699:4: ( (lv_msecv_20_0= ruleMillisecondValue ) )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==RULE_INT) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // InternalSiddhiParser.g:13700:5: (lv_msecv_20_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13700:5: (lv_msecv_20_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13701:6: lv_msecv_20_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_2_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_20_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_20_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:13720:3: ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13720:3: ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13721:4: ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13721:4: ( (lv_dv_21_0= ruleDayValue ) )
                    // InternalSiddhiParser.g:13722:5: (lv_dv_21_0= ruleDayValue )
                    {
                    // InternalSiddhiParser.g:13722:5: (lv_dv_21_0= ruleDayValue )
                    // InternalSiddhiParser.g:13723:6: lv_dv_21_0= ruleDayValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_dv_21_0=ruleDayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"dv",
                      							lv_dv_21_0,
                      							"org.xtext.example.siddhi.Siddhi.DayValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13740:4: ( (lv_hv_22_0= ruleHourValue ) )?
                    int alt184=2;
                    alt184 = dfa184.predict(input);
                    switch (alt184) {
                        case 1 :
                            // InternalSiddhiParser.g:13741:5: (lv_hv_22_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:13741:5: (lv_hv_22_0= ruleHourValue )
                            // InternalSiddhiParser.g:13742:6: lv_hv_22_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_3_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_hv_22_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_22_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13759:4: ( (lv_minv_23_0= ruleMinuteValue ) )?
                    int alt185=2;
                    alt185 = dfa185.predict(input);
                    switch (alt185) {
                        case 1 :
                            // InternalSiddhiParser.g:13760:5: (lv_minv_23_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:13760:5: (lv_minv_23_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:13761:6: lv_minv_23_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_minv_23_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_23_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13778:4: ( (lv_secv_24_0= ruleSecondValue ) )?
                    int alt186=2;
                    alt186 = dfa186.predict(input);
                    switch (alt186) {
                        case 1 :
                            // InternalSiddhiParser.g:13779:5: (lv_secv_24_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13779:5: (lv_secv_24_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13780:6: lv_secv_24_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_3_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_secv_24_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_24_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13797:4: ( (lv_msecv_25_0= ruleMillisecondValue ) )?
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==RULE_INT) ) {
                        alt187=1;
                    }
                    switch (alt187) {
                        case 1 :
                            // InternalSiddhiParser.g:13798:5: (lv_msecv_25_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13798:5: (lv_msecv_25_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13799:6: lv_msecv_25_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_3_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_25_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_25_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:13818:3: ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13818:3: ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13819:4: ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13819:4: ( (lv_hv_26_0= ruleHourValue ) )
                    // InternalSiddhiParser.g:13820:5: (lv_hv_26_0= ruleHourValue )
                    {
                    // InternalSiddhiParser.g:13820:5: (lv_hv_26_0= ruleHourValue )
                    // InternalSiddhiParser.g:13821:6: lv_hv_26_0= ruleHourValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_hv_26_0=ruleHourValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"hv",
                      							lv_hv_26_0,
                      							"org.xtext.example.siddhi.Siddhi.HourValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13838:4: ( (lv_minv_27_0= ruleMinuteValue ) )?
                    int alt188=2;
                    alt188 = dfa188.predict(input);
                    switch (alt188) {
                        case 1 :
                            // InternalSiddhiParser.g:13839:5: (lv_minv_27_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:13839:5: (lv_minv_27_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:13840:6: lv_minv_27_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_4_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_minv_27_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_27_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13857:4: ( (lv_secv_28_0= ruleSecondValue ) )?
                    int alt189=2;
                    alt189 = dfa189.predict(input);
                    switch (alt189) {
                        case 1 :
                            // InternalSiddhiParser.g:13858:5: (lv_secv_28_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13858:5: (lv_secv_28_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13859:6: lv_secv_28_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_4_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_secv_28_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_28_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13876:4: ( (lv_msecv_29_0= ruleMillisecondValue ) )?
                    int alt190=2;
                    int LA190_0 = input.LA(1);

                    if ( (LA190_0==RULE_INT) ) {
                        alt190=1;
                    }
                    switch (alt190) {
                        case 1 :
                            // InternalSiddhiParser.g:13877:5: (lv_msecv_29_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13877:5: (lv_msecv_29_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13878:6: lv_msecv_29_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_4_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_29_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_29_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:13897:3: ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13897:3: ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13898:4: ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13898:4: ( (lv_minv_30_0= ruleMinuteValue ) )
                    // InternalSiddhiParser.g:13899:5: (lv_minv_30_0= ruleMinuteValue )
                    {
                    // InternalSiddhiParser.g:13899:5: (lv_minv_30_0= ruleMinuteValue )
                    // InternalSiddhiParser.g:13900:6: lv_minv_30_0= ruleMinuteValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_minv_30_0=ruleMinuteValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"minv",
                      							lv_minv_30_0,
                      							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13917:4: ( (lv_secv_31_0= ruleSecondValue ) )?
                    int alt191=2;
                    alt191 = dfa191.predict(input);
                    switch (alt191) {
                        case 1 :
                            // InternalSiddhiParser.g:13918:5: (lv_secv_31_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13918:5: (lv_secv_31_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13919:6: lv_secv_31_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_5_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_114);
                            lv_secv_31_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_31_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13936:4: ( (lv_msecv_32_0= ruleMillisecondValue ) )?
                    int alt192=2;
                    int LA192_0 = input.LA(1);

                    if ( (LA192_0==RULE_INT) ) {
                        alt192=1;
                    }
                    switch (alt192) {
                        case 1 :
                            // InternalSiddhiParser.g:13937:5: (lv_msecv_32_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13937:5: (lv_msecv_32_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13938:6: lv_msecv_32_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_5_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_32_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_32_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:13957:3: ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13957:3: ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13958:4: ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13958:4: ( (lv_sv_33_0= ruleSecondValue ) )
                    // InternalSiddhiParser.g:13959:5: (lv_sv_33_0= ruleSecondValue )
                    {
                    // InternalSiddhiParser.g:13959:5: (lv_sv_33_0= ruleSecondValue )
                    // InternalSiddhiParser.g:13960:6: lv_sv_33_0= ruleSecondValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getSvSecondValueParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_sv_33_0=ruleSecondValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"sv",
                      							lv_sv_33_0,
                      							"org.xtext.example.siddhi.Siddhi.SecondValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13977:4: ( (lv_msecv_34_0= ruleMillisecondValue ) )?
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==RULE_INT) ) {
                        alt193=1;
                    }
                    switch (alt193) {
                        case 1 :
                            // InternalSiddhiParser.g:13978:5: (lv_msecv_34_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13978:5: (lv_msecv_34_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13979:6: lv_msecv_34_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_6_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_34_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_34_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalSiddhiParser.g:13998:3: ( (lv_msecv_35_0= ruleMillisecondValue ) )
                    {
                    // InternalSiddhiParser.g:13998:3: ( (lv_msecv_35_0= ruleMillisecondValue ) )
                    // InternalSiddhiParser.g:13999:4: (lv_msecv_35_0= ruleMillisecondValue )
                    {
                    // InternalSiddhiParser.g:13999:4: (lv_msecv_35_0= ruleMillisecondValue )
                    // InternalSiddhiParser.g:14000:5: lv_msecv_35_0= ruleMillisecondValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_msecv_35_0=ruleMillisecondValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      					}
                      					set(
                      						current,
                      						"msecv",
                      						lv_msecv_35_0,
                      						"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, ruleTimeValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTimeValue"


    // $ANTLR start "entryRuleYearValue"
    // InternalSiddhiParser.g:14021:1: entryRuleYearValue returns [EObject current=null] : iv_ruleYearValue= ruleYearValue EOF ;
    public final EObject entryRuleYearValue() throws RecognitionException {
        EObject current = null;
        int entryRuleYearValue_StartIndex = input.index();
        EObject iv_ruleYearValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return current; }
            // InternalSiddhiParser.g:14021:50: (iv_ruleYearValue= ruleYearValue EOF )
            // InternalSiddhiParser.g:14022:2: iv_ruleYearValue= ruleYearValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYearValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleYearValue=ruleYearValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleYearValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, entryRuleYearValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleYearValue"


    // $ANTLR start "ruleYearValue"
    // InternalSiddhiParser.g:14028:1: ruleYearValue returns [EObject current=null] : ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] ) ;
    public final EObject ruleYearValue() throws RecognitionException {
        EObject current = null;
        int ruleYearValue_StartIndex = input.index();
        EObject this_YEARS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return current; }
            // InternalSiddhiParser.g:14034:2: ( ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] ) )
            // InternalSiddhiParser.g:14035:2: ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] )
            {
            // InternalSiddhiParser.g:14035:2: ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] )
            // InternalSiddhiParser.g:14036:3: ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getYearValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_31);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getYearValueRule());
              			}
              			newCompositeNode(grammarAccess.getYearValueAccess().getYEARSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_YEARS_1=ruleYEARS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_YEARS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, ruleYearValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleYearValue"


    // $ANTLR start "entryRuleMonthValue"
    // InternalSiddhiParser.g:14058:1: entryRuleMonthValue returns [EObject current=null] : iv_ruleMonthValue= ruleMonthValue EOF ;
    public final EObject entryRuleMonthValue() throws RecognitionException {
        EObject current = null;
        int entryRuleMonthValue_StartIndex = input.index();
        EObject iv_ruleMonthValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return current; }
            // InternalSiddhiParser.g:14058:51: (iv_ruleMonthValue= ruleMonthValue EOF )
            // InternalSiddhiParser.g:14059:2: iv_ruleMonthValue= ruleMonthValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMonthValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMonthValue=ruleMonthValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMonthValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, entryRuleMonthValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMonthValue"


    // $ANTLR start "ruleMonthValue"
    // InternalSiddhiParser.g:14065:1: ruleMonthValue returns [EObject current=null] : ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] ) ;
    public final EObject ruleMonthValue() throws RecognitionException {
        EObject current = null;
        int ruleMonthValue_StartIndex = input.index();
        EObject this_MONTHS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return current; }
            // InternalSiddhiParser.g:14071:2: ( ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] ) )
            // InternalSiddhiParser.g:14072:2: ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] )
            {
            // InternalSiddhiParser.g:14072:2: ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] )
            // InternalSiddhiParser.g:14073:3: ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMonthValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_115);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMonthValueRule());
              			}
              			newCompositeNode(grammarAccess.getMonthValueAccess().getMONTHSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MONTHS_1=ruleMONTHS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MONTHS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, ruleMonthValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMonthValue"


    // $ANTLR start "entryRuleWeekValue"
    // InternalSiddhiParser.g:14095:1: entryRuleWeekValue returns [EObject current=null] : iv_ruleWeekValue= ruleWeekValue EOF ;
    public final EObject entryRuleWeekValue() throws RecognitionException {
        EObject current = null;
        int entryRuleWeekValue_StartIndex = input.index();
        EObject iv_ruleWeekValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return current; }
            // InternalSiddhiParser.g:14095:50: (iv_ruleWeekValue= ruleWeekValue EOF )
            // InternalSiddhiParser.g:14096:2: iv_ruleWeekValue= ruleWeekValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWeekValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWeekValue=ruleWeekValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWeekValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, entryRuleWeekValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWeekValue"


    // $ANTLR start "ruleWeekValue"
    // InternalSiddhiParser.g:14102:1: ruleWeekValue returns [EObject current=null] : ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] ) ;
    public final EObject ruleWeekValue() throws RecognitionException {
        EObject current = null;
        int ruleWeekValue_StartIndex = input.index();
        EObject this_WEEKS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return current; }
            // InternalSiddhiParser.g:14108:2: ( ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] ) )
            // InternalSiddhiParser.g:14109:2: ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] )
            {
            // InternalSiddhiParser.g:14109:2: ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] )
            // InternalSiddhiParser.g:14110:3: ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWeekValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_116);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getWeekValueRule());
              			}
              			newCompositeNode(grammarAccess.getWeekValueAccess().getWEEKSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_WEEKS_1=ruleWEEKS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WEEKS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, ruleWeekValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWeekValue"


    // $ANTLR start "entryRuleDayValue"
    // InternalSiddhiParser.g:14132:1: entryRuleDayValue returns [EObject current=null] : iv_ruleDayValue= ruleDayValue EOF ;
    public final EObject entryRuleDayValue() throws RecognitionException {
        EObject current = null;
        int entryRuleDayValue_StartIndex = input.index();
        EObject iv_ruleDayValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return current; }
            // InternalSiddhiParser.g:14132:49: (iv_ruleDayValue= ruleDayValue EOF )
            // InternalSiddhiParser.g:14133:2: iv_ruleDayValue= ruleDayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDayValue=ruleDayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, entryRuleDayValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDayValue"


    // $ANTLR start "ruleDayValue"
    // InternalSiddhiParser.g:14139:1: ruleDayValue returns [EObject current=null] : ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] ) ;
    public final EObject ruleDayValue() throws RecognitionException {
        EObject current = null;
        int ruleDayValue_StartIndex = input.index();
        EObject this_DAYS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return current; }
            // InternalSiddhiParser.g:14145:2: ( ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] ) )
            // InternalSiddhiParser.g:14146:2: ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] )
            {
            // InternalSiddhiParser.g:14146:2: ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] )
            // InternalSiddhiParser.g:14147:3: ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDayValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_117);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDayValueRule());
              			}
              			newCompositeNode(grammarAccess.getDayValueAccess().getDAYSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_DAYS_1=ruleDAYS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DAYS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, ruleDayValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDayValue"


    // $ANTLR start "entryRuleHourValue"
    // InternalSiddhiParser.g:14169:1: entryRuleHourValue returns [EObject current=null] : iv_ruleHourValue= ruleHourValue EOF ;
    public final EObject entryRuleHourValue() throws RecognitionException {
        EObject current = null;
        int entryRuleHourValue_StartIndex = input.index();
        EObject iv_ruleHourValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return current; }
            // InternalSiddhiParser.g:14169:50: (iv_ruleHourValue= ruleHourValue EOF )
            // InternalSiddhiParser.g:14170:2: iv_ruleHourValue= ruleHourValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHourValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHourValue=ruleHourValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHourValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, entryRuleHourValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleHourValue"


    // $ANTLR start "ruleHourValue"
    // InternalSiddhiParser.g:14176:1: ruleHourValue returns [EObject current=null] : ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] ) ;
    public final EObject ruleHourValue() throws RecognitionException {
        EObject current = null;
        int ruleHourValue_StartIndex = input.index();
        EObject this_HOURS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return current; }
            // InternalSiddhiParser.g:14182:2: ( ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] ) )
            // InternalSiddhiParser.g:14183:2: ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] )
            {
            // InternalSiddhiParser.g:14183:2: ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] )
            // InternalSiddhiParser.g:14184:3: ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getHourValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_118);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getHourValueRule());
              			}
              			newCompositeNode(grammarAccess.getHourValueAccess().getHOURSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_HOURS_1=ruleHOURS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_HOURS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, ruleHourValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHourValue"


    // $ANTLR start "entryRuleMinuteValue"
    // InternalSiddhiParser.g:14206:1: entryRuleMinuteValue returns [EObject current=null] : iv_ruleMinuteValue= ruleMinuteValue EOF ;
    public final EObject entryRuleMinuteValue() throws RecognitionException {
        EObject current = null;
        int entryRuleMinuteValue_StartIndex = input.index();
        EObject iv_ruleMinuteValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return current; }
            // InternalSiddhiParser.g:14206:52: (iv_ruleMinuteValue= ruleMinuteValue EOF )
            // InternalSiddhiParser.g:14207:2: iv_ruleMinuteValue= ruleMinuteValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMinuteValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMinuteValue=ruleMinuteValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMinuteValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, entryRuleMinuteValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMinuteValue"


    // $ANTLR start "ruleMinuteValue"
    // InternalSiddhiParser.g:14213:1: ruleMinuteValue returns [EObject current=null] : ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] ) ;
    public final EObject ruleMinuteValue() throws RecognitionException {
        EObject current = null;
        int ruleMinuteValue_StartIndex = input.index();
        EObject this_MINUTES_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return current; }
            // InternalSiddhiParser.g:14219:2: ( ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] ) )
            // InternalSiddhiParser.g:14220:2: ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] )
            {
            // InternalSiddhiParser.g:14220:2: ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] )
            // InternalSiddhiParser.g:14221:3: ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMinuteValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_119);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMinuteValueRule());
              			}
              			newCompositeNode(grammarAccess.getMinuteValueAccess().getMINUTESParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MINUTES_1=ruleMINUTES(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MINUTES_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, ruleMinuteValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMinuteValue"


    // $ANTLR start "entryRuleSecondValue"
    // InternalSiddhiParser.g:14243:1: entryRuleSecondValue returns [EObject current=null] : iv_ruleSecondValue= ruleSecondValue EOF ;
    public final EObject entryRuleSecondValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSecondValue_StartIndex = input.index();
        EObject iv_ruleSecondValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return current; }
            // InternalSiddhiParser.g:14243:52: (iv_ruleSecondValue= ruleSecondValue EOF )
            // InternalSiddhiParser.g:14244:2: iv_ruleSecondValue= ruleSecondValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSecondValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSecondValue=ruleSecondValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSecondValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, entryRuleSecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSecondValue"


    // $ANTLR start "ruleSecondValue"
    // InternalSiddhiParser.g:14250:1: ruleSecondValue returns [EObject current=null] : ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] ) ;
    public final EObject ruleSecondValue() throws RecognitionException {
        EObject current = null;
        int ruleSecondValue_StartIndex = input.index();
        EObject this_SECONDS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return current; }
            // InternalSiddhiParser.g:14256:2: ( ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] ) )
            // InternalSiddhiParser.g:14257:2: ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] )
            {
            // InternalSiddhiParser.g:14257:2: ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] )
            // InternalSiddhiParser.g:14258:3: ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSecondValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_120);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSecondValueRule());
              			}
              			newCompositeNode(grammarAccess.getSecondValueAccess().getSECONDSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_SECONDS_1=ruleSECONDS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SECONDS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, ruleSecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSecondValue"


    // $ANTLR start "entryRuleMillisecondValue"
    // InternalSiddhiParser.g:14280:1: entryRuleMillisecondValue returns [EObject current=null] : iv_ruleMillisecondValue= ruleMillisecondValue EOF ;
    public final EObject entryRuleMillisecondValue() throws RecognitionException {
        EObject current = null;
        int entryRuleMillisecondValue_StartIndex = input.index();
        EObject iv_ruleMillisecondValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return current; }
            // InternalSiddhiParser.g:14280:57: (iv_ruleMillisecondValue= ruleMillisecondValue EOF )
            // InternalSiddhiParser.g:14281:2: iv_ruleMillisecondValue= ruleMillisecondValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMillisecondValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMillisecondValue=ruleMillisecondValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMillisecondValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, entryRuleMillisecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMillisecondValue"


    // $ANTLR start "ruleMillisecondValue"
    // InternalSiddhiParser.g:14287:1: ruleMillisecondValue returns [EObject current=null] : ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] ) ;
    public final EObject ruleMillisecondValue() throws RecognitionException {
        EObject current = null;
        int ruleMillisecondValue_StartIndex = input.index();
        EObject this_MILLISECONDS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return current; }
            // InternalSiddhiParser.g:14293:2: ( ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] ) )
            // InternalSiddhiParser.g:14294:2: ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] )
            {
            // InternalSiddhiParser.g:14294:2: ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] )
            // InternalSiddhiParser.g:14295:3: ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMillisecondValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_121);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMillisecondValueRule());
              			}
              			newCompositeNode(grammarAccess.getMillisecondValueAccess().getMILLISECONDSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MILLISECONDS_1=ruleMILLISECONDS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MILLISECONDS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, ruleMillisecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMillisecondValue"


    // $ANTLR start "entryRuleSignedIntValue"
    // InternalSiddhiParser.g:14317:1: entryRuleSignedIntValue returns [String current=null] : iv_ruleSignedIntValue= ruleSignedIntValue EOF ;
    public final String entryRuleSignedIntValue() throws RecognitionException {
        String current = null;
        int entryRuleSignedIntValue_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSignedIntValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return current; }
            // InternalSiddhiParser.g:14317:54: (iv_ruleSignedIntValue= ruleSignedIntValue EOF )
            // InternalSiddhiParser.g:14318:2: iv_ruleSignedIntValue= ruleSignedIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedIntValue=ruleSignedIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedIntValue.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, entryRuleSignedIntValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedIntValue"


    // $ANTLR start "ruleSignedIntValue"
    // InternalSiddhiParser.g:14324:1: ruleSignedIntValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL ) ;
    public final AntlrDatatypeRuleToken ruleSignedIntValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSignedIntValue_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_INT_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return current; }
            // InternalSiddhiParser.g:14330:2: ( ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL ) )
            // InternalSiddhiParser.g:14331:2: ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL )
            {
            // InternalSiddhiParser.g:14331:2: ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL )
            // InternalSiddhiParser.g:14332:3: (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL
            {
            // InternalSiddhiParser.g:14332:3: (kw= HyphenMinus | kw= PlusSign )?
            int alt195=3;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==HyphenMinus) ) {
                alt195=1;
            }
            else if ( (LA195_0==PlusSign) ) {
                alt195=2;
            }
            switch (alt195) {
                case 1 :
                    // InternalSiddhiParser.g:14333:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSignedIntValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:14339:4: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSignedIntValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedIntValueAccess().getINT_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_INT_LITERAL_2=ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_LITERAL_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, ruleSignedIntValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedIntValue"


    // $ANTLR start "entryRuleSTRING_LITERAL"
    // InternalSiddhiParser.g:14359:1: entryRuleSTRING_LITERAL returns [String current=null] : iv_ruleSTRING_LITERAL= ruleSTRING_LITERAL EOF ;
    public final String entryRuleSTRING_LITERAL() throws RecognitionException {
        String current = null;
        int entryRuleSTRING_LITERAL_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSTRING_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return current; }
            // InternalSiddhiParser.g:14359:54: (iv_ruleSTRING_LITERAL= ruleSTRING_LITERAL EOF )
            // InternalSiddhiParser.g:14360:2: iv_ruleSTRING_LITERAL= ruleSTRING_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSTRING_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSTRING_LITERAL=ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSTRING_LITERAL.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, entryRuleSTRING_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_LITERAL"


    // $ANTLR start "ruleSTRING_LITERAL"
    // InternalSiddhiParser.g:14366:1: ruleSTRING_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleSTRING_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSTRING_LITERAL_StartIndex = input.index();
        Token this_STRING_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return current; }
            // InternalSiddhiParser.g:14372:2: (this_STRING_0= RULE_STRING )
            // InternalSiddhiParser.g:14373:2: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_0, grammarAccess.getSTRING_LITERALAccess().getSTRINGTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, ruleSTRING_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_LITERAL"


    // $ANTLR start "entryRuleINT_LITERAL"
    // InternalSiddhiParser.g:14383:1: entryRuleINT_LITERAL returns [String current=null] : iv_ruleINT_LITERAL= ruleINT_LITERAL EOF ;
    public final String entryRuleINT_LITERAL() throws RecognitionException {
        String current = null;
        int entryRuleINT_LITERAL_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleINT_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return current; }
            // InternalSiddhiParser.g:14383:51: (iv_ruleINT_LITERAL= ruleINT_LITERAL EOF )
            // InternalSiddhiParser.g:14384:2: iv_ruleINT_LITERAL= ruleINT_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINT_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleINT_LITERAL=ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINT_LITERAL.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, entryRuleINT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleINT_LITERAL"


    // $ANTLR start "ruleINT_LITERAL"
    // InternalSiddhiParser.g:14390:1: ruleINT_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DIGIT_0= ruleDIGIT )+ ;
    public final AntlrDatatypeRuleToken ruleINT_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleINT_LITERAL_StartIndex = input.index();
        AntlrDatatypeRuleToken this_DIGIT_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return current; }
            // InternalSiddhiParser.g:14396:2: ( (this_DIGIT_0= ruleDIGIT )+ )
            // InternalSiddhiParser.g:14397:2: (this_DIGIT_0= ruleDIGIT )+
            {
            // InternalSiddhiParser.g:14397:2: (this_DIGIT_0= ruleDIGIT )+
            int cnt196=0;
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==RULE_INT) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // InternalSiddhiParser.g:14398:3: this_DIGIT_0= ruleDIGIT
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getINT_LITERALAccess().getDIGITParserRuleCall());
            	      		
            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    this_DIGIT_0=ruleDIGIT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_DIGIT_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt196 >= 1 ) break loop196;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(196, input);
                        throw eee;
                }
                cnt196++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, ruleINT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINT_LITERAL"


    // $ANTLR start "entryRuleDOUBLE_LITERAL"
    // InternalSiddhiParser.g:14412:1: entryRuleDOUBLE_LITERAL returns [EObject current=null] : iv_ruleDOUBLE_LITERAL= ruleDOUBLE_LITERAL EOF ;
    public final EObject entryRuleDOUBLE_LITERAL() throws RecognitionException {
        EObject current = null;
        int entryRuleDOUBLE_LITERAL_StartIndex = input.index();
        EObject iv_ruleDOUBLE_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return current; }
            // InternalSiddhiParser.g:14412:55: (iv_ruleDOUBLE_LITERAL= ruleDOUBLE_LITERAL EOF )
            // InternalSiddhiParser.g:14413:2: iv_ruleDOUBLE_LITERAL= ruleDOUBLE_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDOUBLE_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDOUBLE_LITERAL=ruleDOUBLE_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDOUBLE_LITERAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, entryRuleDOUBLE_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDOUBLE_LITERAL"


    // $ANTLR start "ruleDOUBLE_LITERAL"
    // InternalSiddhiParser.g:14419:1: ruleDOUBLE_LITERAL returns [EObject current=null] : ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) ) ;
    public final EObject ruleDOUBLE_LITERAL() throws RecognitionException {
        EObject current = null;
        int ruleDOUBLE_LITERAL_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_20=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_e_4_0 = null;

        EObject lv_d_8_0 = null;

        EObject lv_e_13_0 = null;

        EObject lv_d_17_0 = null;

        EObject lv_e_22_0 = null;

        EObject lv_d_26_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return current; }
            // InternalSiddhiParser.g:14425:2: ( ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) ) )
            // InternalSiddhiParser.g:14426:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) )
            {
            // InternalSiddhiParser.g:14426:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) )
            int alt215=3;
            alt215 = dfa215.predict(input);
            switch (alt215) {
                case 1 :
                    // InternalSiddhiParser.g:14427:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) )
                    {
                    // InternalSiddhiParser.g:14427:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) )
                    // InternalSiddhiParser.g:14428:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) )
                    {
                    // InternalSiddhiParser.g:14462:4: ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) )
                    // InternalSiddhiParser.g:14463:5: () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) )
                    {
                    // InternalSiddhiParser.g:14463:5: ()
                    // InternalSiddhiParser.g:14464:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:14470:5: ( ruleDIGIT )+
                    int cnt197=0;
                    loop197:
                    do {
                        int alt197=2;
                        int LA197_0 = input.LA(1);

                        if ( (LA197_0==RULE_INT) ) {
                            alt197=1;
                        }


                        switch (alt197) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14471:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_1());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt197 >= 1 ) break loop197;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(197, input);
                                throw eee;
                        }
                        cnt197++;
                    } while (true);

                    // InternalSiddhiParser.g:14479:5: (otherlv_2= FullStop ( ruleDIGIT )* )?
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( (LA199_0==FullStop) ) {
                        alt199=1;
                    }
                    switch (alt199) {
                        case 1 :
                            // InternalSiddhiParser.g:14480:6: otherlv_2= FullStop ( ruleDIGIT )*
                            {
                            otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_0_0_2_0());
                              					
                            }
                            // InternalSiddhiParser.g:14484:6: ( ruleDIGIT )*
                            loop198:
                            do {
                                int alt198=2;
                                int LA198_0 = input.LA(1);

                                if ( (LA198_0==RULE_INT) ) {
                                    alt198=1;
                                }


                                switch (alt198) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14485:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_2_1());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_122);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop198;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14494:5: ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )?
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==E) ) {
                        alt202=1;
                    }
                    switch (alt202) {
                        case 1 :
                            // InternalSiddhiParser.g:14495:6: ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:14495:6: ( (lv_e_4_0= ruleE ) )
                            // InternalSiddhiParser.g:14496:7: (lv_e_4_0= ruleE )
                            {
                            // InternalSiddhiParser.g:14496:7: (lv_e_4_0= ruleE )
                            // InternalSiddhiParser.g:14497:8: lv_e_4_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_0_0_3_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_e_4_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              								}
                              								set(
                              									current,
                              									"e",
                              									lv_e_4_0,
                              									"org.xtext.example.siddhi.Siddhi.E");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSiddhiParser.g:14514:6: (otherlv_5= HyphenMinus | otherlv_6= PlusSign )?
                            int alt200=3;
                            int LA200_0 = input.LA(1);

                            if ( (LA200_0==HyphenMinus) ) {
                                alt200=1;
                            }
                            else if ( (LA200_0==PlusSign) ) {
                                alt200=2;
                            }
                            switch (alt200) {
                                case 1 :
                                    // InternalSiddhiParser.g:14515:7: otherlv_5= HyphenMinus
                                    {
                                    otherlv_5=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:14520:7: otherlv_6= PlusSign
                                    {
                                    otherlv_6=(Token)match(input,PlusSign,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_6, grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_0_0_3_1_1());
                                      						
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:14525:6: ( ruleDIGIT )+
                            int cnt201=0;
                            loop201:
                            do {
                                int alt201=2;
                                int LA201_0 = input.LA(1);

                                if ( (LA201_0==RULE_INT) ) {
                                    alt201=1;
                                }


                                switch (alt201) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14526:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_3_2());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_122);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt201 >= 1 ) break loop201;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(201, input);
                                        throw eee;
                                }
                                cnt201++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14535:5: ( (lv_d_8_0= ruleD ) )
                    // InternalSiddhiParser.g:14536:6: (lv_d_8_0= ruleD )
                    {
                    // InternalSiddhiParser.g:14536:6: (lv_d_8_0= ruleD )
                    // InternalSiddhiParser.g:14537:7: lv_d_8_0= ruleD
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_0_0_4_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_d_8_0=ruleD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                      							}
                      							set(
                      								current,
                      								"d",
                      								lv_d_8_0,
                      								"org.xtext.example.siddhi.Siddhi.D");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:14557:3: ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? )
                    {
                    // InternalSiddhiParser.g:14557:3: ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? )
                    // InternalSiddhiParser.g:14558:4: () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )?
                    {
                    // InternalSiddhiParser.g:14558:4: ()
                    // InternalSiddhiParser.g:14559:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:14565:4: ( ruleDIGIT )+
                    int cnt203=0;
                    loop203:
                    do {
                        int alt203=2;
                        int LA203_0 = input.LA(1);

                        if ( (LA203_0==RULE_INT) ) {
                            alt203=1;
                        }


                        switch (alt203) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14566:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_123);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt203 >= 1 ) break loop203;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(203, input);
                                throw eee;
                        }
                        cnt203++;
                    } while (true);

                    // InternalSiddhiParser.g:14574:4: (otherlv_11= FullStop ( ruleDIGIT )* )?
                    int alt205=2;
                    int LA205_0 = input.LA(1);

                    if ( (LA205_0==FullStop) ) {
                        alt205=1;
                    }
                    switch (alt205) {
                        case 1 :
                            // InternalSiddhiParser.g:14575:5: otherlv_11= FullStop ( ruleDIGIT )*
                            {
                            otherlv_11=(Token)match(input,FullStop,FollowSets000.FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            // InternalSiddhiParser.g:14579:5: ( ruleDIGIT )*
                            loop204:
                            do {
                                int alt204=2;
                                int LA204_0 = input.LA(1);

                                if ( (LA204_0==RULE_INT) ) {
                                    alt204=1;
                                }


                                switch (alt204) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14580:6: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_2_1());
                            	      					
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_124);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop204;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14589:4: ( (lv_e_13_0= ruleE ) )
                    // InternalSiddhiParser.g:14590:5: (lv_e_13_0= ruleE )
                    {
                    // InternalSiddhiParser.g:14590:5: (lv_e_13_0= ruleE )
                    // InternalSiddhiParser.g:14591:6: lv_e_13_0= ruleE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_113);
                    lv_e_13_0=ruleE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                      						}
                      						set(
                      							current,
                      							"e",
                      							lv_e_13_0,
                      							"org.xtext.example.siddhi.Siddhi.E");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:14608:4: (otherlv_14= HyphenMinus | otherlv_15= PlusSign )?
                    int alt206=3;
                    int LA206_0 = input.LA(1);

                    if ( (LA206_0==HyphenMinus) ) {
                        alt206=1;
                    }
                    else if ( (LA206_0==PlusSign) ) {
                        alt206=2;
                    }
                    switch (alt206) {
                        case 1 :
                            // InternalSiddhiParser.g:14609:5: otherlv_14= HyphenMinus
                            {
                            otherlv_14=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_14, grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_1_4_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalSiddhiParser.g:14614:5: otherlv_15= PlusSign
                            {
                            otherlv_15=(Token)match(input,PlusSign,FollowSets000.FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14619:4: ( ruleDIGIT )+
                    int cnt207=0;
                    loop207:
                    do {
                        int alt207=2;
                        int LA207_0 = input.LA(1);

                        if ( (LA207_0==RULE_INT) ) {
                            alt207=1;
                        }


                        switch (alt207) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14620:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_5());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt207 >= 1 ) break loop207;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(207, input);
                                throw eee;
                        }
                        cnt207++;
                    } while (true);

                    // InternalSiddhiParser.g:14628:4: ( (lv_d_17_0= ruleD ) )?
                    int alt208=2;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==D) ) {
                        alt208=1;
                    }
                    switch (alt208) {
                        case 1 :
                            // InternalSiddhiParser.g:14629:5: (lv_d_17_0= ruleD )
                            {
                            // InternalSiddhiParser.g:14629:5: (lv_d_17_0= ruleD )
                            // InternalSiddhiParser.g:14630:6: lv_d_17_0= ruleD
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_1_6_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_d_17_0=ruleD();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              						}
                              						set(
                              							current,
                              							"d",
                              							lv_d_17_0,
                              							"org.xtext.example.siddhi.Siddhi.D");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:14649:3: ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) )
                    {
                    // InternalSiddhiParser.g:14649:3: ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) )
                    // InternalSiddhiParser.g:14650:4: ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? )
                    {
                    // InternalSiddhiParser.g:14682:4: ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? )
                    // InternalSiddhiParser.g:14683:5: () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )?
                    {
                    // InternalSiddhiParser.g:14683:5: ()
                    // InternalSiddhiParser.g:14684:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_2_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:14690:5: ( ruleDIGIT )*
                    loop209:
                    do {
                        int alt209=2;
                        int LA209_0 = input.LA(1);

                        if ( (LA209_0==RULE_INT) ) {
                            alt209=1;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14691:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_1());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_126);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop209;
                        }
                    } while (true);

                    otherlv_20=(Token)match(input,FullStop,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_20, grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_2_0_2());
                      				
                    }
                    // InternalSiddhiParser.g:14703:5: ( ruleDIGIT )+
                    int cnt210=0;
                    loop210:
                    do {
                        int alt210=2;
                        int LA210_0 = input.LA(1);

                        if ( (LA210_0==RULE_INT) ) {
                            alt210=1;
                        }


                        switch (alt210) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14704:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_3());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt210 >= 1 ) break loop210;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(210, input);
                                throw eee;
                        }
                        cnt210++;
                    } while (true);

                    // InternalSiddhiParser.g:14712:5: ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )?
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==E) ) {
                        alt213=1;
                    }
                    switch (alt213) {
                        case 1 :
                            // InternalSiddhiParser.g:14713:6: ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:14713:6: ( (lv_e_22_0= ruleE ) )
                            // InternalSiddhiParser.g:14714:7: (lv_e_22_0= ruleE )
                            {
                            // InternalSiddhiParser.g:14714:7: (lv_e_22_0= ruleE )
                            // InternalSiddhiParser.g:14715:8: lv_e_22_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_2_0_4_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_e_22_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              								}
                              								set(
                              									current,
                              									"e",
                              									lv_e_22_0,
                              									"org.xtext.example.siddhi.Siddhi.E");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSiddhiParser.g:14732:6: (otherlv_23= HyphenMinus | otherlv_24= PlusSign )?
                            int alt211=3;
                            int LA211_0 = input.LA(1);

                            if ( (LA211_0==HyphenMinus) ) {
                                alt211=1;
                            }
                            else if ( (LA211_0==PlusSign) ) {
                                alt211=2;
                            }
                            switch (alt211) {
                                case 1 :
                                    // InternalSiddhiParser.g:14733:7: otherlv_23= HyphenMinus
                                    {
                                    otherlv_23=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_23, grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_2_0_4_1_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:14738:7: otherlv_24= PlusSign
                                    {
                                    otherlv_24=(Token)match(input,PlusSign,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_24, grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_2_0_4_1_1());
                                      						
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:14743:6: ( ruleDIGIT )+
                            int cnt212=0;
                            loop212:
                            do {
                                int alt212=2;
                                int LA212_0 = input.LA(1);

                                if ( (LA212_0==RULE_INT) ) {
                                    alt212=1;
                                }


                                switch (alt212) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14744:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_4_2());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_125);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt212 >= 1 ) break loop212;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(212, input);
                                        throw eee;
                                }
                                cnt212++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14753:5: ( (lv_d_26_0= ruleD ) )?
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==D) ) {
                        alt214=1;
                    }
                    switch (alt214) {
                        case 1 :
                            // InternalSiddhiParser.g:14754:6: (lv_d_26_0= ruleD )
                            {
                            // InternalSiddhiParser.g:14754:6: (lv_d_26_0= ruleD )
                            // InternalSiddhiParser.g:14755:7: lv_d_26_0= ruleD
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_2_0_5_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_d_26_0=ruleD();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              							}
                              							set(
                              								current,
                              								"d",
                              								lv_d_26_0,
                              								"org.xtext.example.siddhi.Siddhi.D");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, ruleDOUBLE_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDOUBLE_LITERAL"


    // $ANTLR start "entryRuleFLOAT_LITERAL"
    // InternalSiddhiParser.g:14778:1: entryRuleFLOAT_LITERAL returns [EObject current=null] : iv_ruleFLOAT_LITERAL= ruleFLOAT_LITERAL EOF ;
    public final EObject entryRuleFLOAT_LITERAL() throws RecognitionException {
        EObject current = null;
        int entryRuleFLOAT_LITERAL_StartIndex = input.index();
        EObject iv_ruleFLOAT_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return current; }
            // InternalSiddhiParser.g:14778:54: (iv_ruleFLOAT_LITERAL= ruleFLOAT_LITERAL EOF )
            // InternalSiddhiParser.g:14779:2: iv_ruleFLOAT_LITERAL= ruleFLOAT_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFLOAT_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFLOAT_LITERAL=ruleFLOAT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFLOAT_LITERAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, entryRuleFLOAT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFLOAT_LITERAL"


    // $ANTLR start "ruleFLOAT_LITERAL"
    // InternalSiddhiParser.g:14785:1: ruleFLOAT_LITERAL returns [EObject current=null] : ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) ) ;
    public final EObject ruleFLOAT_LITERAL() throws RecognitionException {
        EObject current = null;
        int ruleFLOAT_LITERAL_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_e_4_0 = null;

        EObject lv_f_8_0 = null;

        EObject lv_e_13_0 = null;

        EObject lv_f_17_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return current; }
            // InternalSiddhiParser.g:14791:2: ( ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) ) )
            // InternalSiddhiParser.g:14792:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) )
            {
            // InternalSiddhiParser.g:14792:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) )
            int alt227=2;
            alt227 = dfa227.predict(input);
            switch (alt227) {
                case 1 :
                    // InternalSiddhiParser.g:14793:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) )
                    {
                    // InternalSiddhiParser.g:14793:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) )
                    // InternalSiddhiParser.g:14794:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) )
                    {
                    // InternalSiddhiParser.g:14828:4: ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) )
                    // InternalSiddhiParser.g:14829:5: () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) )
                    {
                    // InternalSiddhiParser.g:14829:5: ()
                    // InternalSiddhiParser.g:14830:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:14836:5: ( ruleDIGIT )+
                    int cnt216=0;
                    loop216:
                    do {
                        int alt216=2;
                        int LA216_0 = input.LA(1);

                        if ( (LA216_0==RULE_INT) ) {
                            alt216=1;
                        }


                        switch (alt216) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14837:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_1());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_127);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt216 >= 1 ) break loop216;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(216, input);
                                throw eee;
                        }
                        cnt216++;
                    } while (true);

                    // InternalSiddhiParser.g:14845:5: (otherlv_2= FullStop ( ruleDIGIT )* )?
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( (LA218_0==FullStop) ) {
                        alt218=1;
                    }
                    switch (alt218) {
                        case 1 :
                            // InternalSiddhiParser.g:14846:6: otherlv_2= FullStop ( ruleDIGIT )*
                            {
                            otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_0_0_2_0());
                              					
                            }
                            // InternalSiddhiParser.g:14850:6: ( ruleDIGIT )*
                            loop217:
                            do {
                                int alt217=2;
                                int LA217_0 = input.LA(1);

                                if ( (LA217_0==RULE_INT) ) {
                                    alt217=1;
                                }


                                switch (alt217) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14851:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_2_1());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_127);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop217;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14860:5: ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )?
                    int alt221=2;
                    int LA221_0 = input.LA(1);

                    if ( (LA221_0==E) ) {
                        alt221=1;
                    }
                    switch (alt221) {
                        case 1 :
                            // InternalSiddhiParser.g:14861:6: ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:14861:6: ( (lv_e_4_0= ruleE ) )
                            // InternalSiddhiParser.g:14862:7: (lv_e_4_0= ruleE )
                            {
                            // InternalSiddhiParser.g:14862:7: (lv_e_4_0= ruleE )
                            // InternalSiddhiParser.g:14863:8: lv_e_4_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_0_0_3_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_e_4_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                              								}
                              								set(
                              									current,
                              									"e",
                              									lv_e_4_0,
                              									"org.xtext.example.siddhi.Siddhi.E");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSiddhiParser.g:14880:6: (otherlv_5= HyphenMinus | otherlv_6= PlusSign )?
                            int alt219=3;
                            int LA219_0 = input.LA(1);

                            if ( (LA219_0==HyphenMinus) ) {
                                alt219=1;
                            }
                            else if ( (LA219_0==PlusSign) ) {
                                alt219=2;
                            }
                            switch (alt219) {
                                case 1 :
                                    // InternalSiddhiParser.g:14881:7: otherlv_5= HyphenMinus
                                    {
                                    otherlv_5=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:14886:7: otherlv_6= PlusSign
                                    {
                                    otherlv_6=(Token)match(input,PlusSign,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_6, grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_0_0_3_1_1());
                                      						
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:14891:6: ( ruleDIGIT )+
                            int cnt220=0;
                            loop220:
                            do {
                                int alt220=2;
                                int LA220_0 = input.LA(1);

                                if ( (LA220_0==RULE_INT) ) {
                                    alt220=1;
                                }


                                switch (alt220) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14892:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_3_2());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_127);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt220 >= 1 ) break loop220;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(220, input);
                                        throw eee;
                                }
                                cnt220++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14901:5: ( (lv_f_8_0= ruleF ) )
                    // InternalSiddhiParser.g:14902:6: (lv_f_8_0= ruleF )
                    {
                    // InternalSiddhiParser.g:14902:6: (lv_f_8_0= ruleF )
                    // InternalSiddhiParser.g:14903:7: lv_f_8_0= ruleF
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_0_0_4_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_f_8_0=ruleF();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                      							}
                      							set(
                      								current,
                      								"f",
                      								lv_f_8_0,
                      								"org.xtext.example.siddhi.Siddhi.F");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:14923:3: ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) )
                    {
                    // InternalSiddhiParser.g:14923:3: ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) )
                    // InternalSiddhiParser.g:14924:4: () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) )
                    {
                    // InternalSiddhiParser.g:14924:4: ()
                    // InternalSiddhiParser.g:14925:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:14931:4: ( ruleDIGIT )*
                    loop222:
                    do {
                        int alt222=2;
                        int LA222_0 = input.LA(1);

                        if ( (LA222_0==RULE_INT) ) {
                            alt222=1;
                        }


                        switch (alt222) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14932:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_126);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop222;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,FullStop,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_1_2());
                      			
                    }
                    // InternalSiddhiParser.g:14944:4: ( ruleDIGIT )+
                    int cnt223=0;
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==RULE_INT) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14945:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_3());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_127);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt223 >= 1 ) break loop223;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(223, input);
                                throw eee;
                        }
                        cnt223++;
                    } while (true);

                    // InternalSiddhiParser.g:14953:4: ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )?
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==E) ) {
                        alt226=1;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalSiddhiParser.g:14954:5: ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:14954:5: ( (lv_e_13_0= ruleE ) )
                            // InternalSiddhiParser.g:14955:6: (lv_e_13_0= ruleE )
                            {
                            // InternalSiddhiParser.g:14955:6: (lv_e_13_0= ruleE )
                            // InternalSiddhiParser.g:14956:7: lv_e_13_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_1_4_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_e_13_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                              							}
                              							set(
                              								current,
                              								"e",
                              								lv_e_13_0,
                              								"org.xtext.example.siddhi.Siddhi.E");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:14973:5: (otherlv_14= HyphenMinus | otherlv_15= PlusSign )?
                            int alt224=3;
                            int LA224_0 = input.LA(1);

                            if ( (LA224_0==HyphenMinus) ) {
                                alt224=1;
                            }
                            else if ( (LA224_0==PlusSign) ) {
                                alt224=2;
                            }
                            switch (alt224) {
                                case 1 :
                                    // InternalSiddhiParser.g:14974:6: otherlv_14= HyphenMinus
                                    {
                                    otherlv_14=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_14, grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_1_4_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:14979:6: otherlv_15= PlusSign
                                    {
                                    otherlv_15=(Token)match(input,PlusSign,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_15, grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_1_4_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:14984:5: ( ruleDIGIT )+
                            int cnt225=0;
                            loop225:
                            do {
                                int alt225=2;
                                int LA225_0 = input.LA(1);

                                if ( (LA225_0==RULE_INT) ) {
                                    alt225=1;
                                }


                                switch (alt225) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14985:6: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_4_2());
                            	      					
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_127);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt225 >= 1 ) break loop225;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(225, input);
                                        throw eee;
                                }
                                cnt225++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14994:4: ( (lv_f_17_0= ruleF ) )
                    // InternalSiddhiParser.g:14995:5: (lv_f_17_0= ruleF )
                    {
                    // InternalSiddhiParser.g:14995:5: (lv_f_17_0= ruleF )
                    // InternalSiddhiParser.g:14996:6: lv_f_17_0= ruleF
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_f_17_0=ruleF();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                      						}
                      						set(
                      							current,
                      							"f",
                      							lv_f_17_0,
                      							"org.xtext.example.siddhi.Siddhi.F");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, ruleFLOAT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFLOAT_LITERAL"


    // $ANTLR start "entryRuleLONG_LITERAL"
    // InternalSiddhiParser.g:15018:1: entryRuleLONG_LITERAL returns [EObject current=null] : iv_ruleLONG_LITERAL= ruleLONG_LITERAL EOF ;
    public final EObject entryRuleLONG_LITERAL() throws RecognitionException {
        EObject current = null;
        int entryRuleLONG_LITERAL_StartIndex = input.index();
        EObject iv_ruleLONG_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return current; }
            // InternalSiddhiParser.g:15018:53: (iv_ruleLONG_LITERAL= ruleLONG_LITERAL EOF )
            // InternalSiddhiParser.g:15019:2: iv_ruleLONG_LITERAL= ruleLONG_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLONG_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLONG_LITERAL=ruleLONG_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLONG_LITERAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, entryRuleLONG_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLONG_LITERAL"


    // $ANTLR start "ruleLONG_LITERAL"
    // InternalSiddhiParser.g:15025:1: ruleLONG_LITERAL returns [EObject current=null] : ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) ) ;
    public final EObject ruleLONG_LITERAL() throws RecognitionException {
        EObject current = null;
        int ruleLONG_LITERAL_StartIndex = input.index();
        EObject lv_l_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return current; }
            // InternalSiddhiParser.g:15031:2: ( ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) ) )
            // InternalSiddhiParser.g:15032:2: ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) )
            {
            // InternalSiddhiParser.g:15032:2: ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) )
            // InternalSiddhiParser.g:15033:3: ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) )
            {
            // InternalSiddhiParser.g:15033:3: ( ruleDIGIT )+
            int cnt228=0;
            loop228:
            do {
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( (LA228_0==RULE_INT) ) {
                    alt228=1;
                }


                switch (alt228) {
            	case 1 :
            	    // InternalSiddhiParser.g:15034:4: ruleDIGIT
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getLONG_LITERALAccess().getDIGITParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_128);
            	    ruleDIGIT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt228 >= 1 ) break loop228;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(228, input);
                        throw eee;
                }
                cnt228++;
            } while (true);

            // InternalSiddhiParser.g:15042:3: ( (lv_l_1_0= ruleL ) )
            // InternalSiddhiParser.g:15043:4: (lv_l_1_0= ruleL )
            {
            // InternalSiddhiParser.g:15043:4: (lv_l_1_0= ruleL )
            // InternalSiddhiParser.g:15044:5: lv_l_1_0= ruleL
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLONG_LITERALAccess().getLLParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_l_1_0=ruleL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLONG_LITERALRule());
              					}
              					set(
              						current,
              						"l",
              						lv_l_1_0,
              						"org.xtext.example.siddhi.Siddhi.L");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, ruleLONG_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLONG_LITERAL"


    // $ANTLR start "ruleDIGIT"
    // InternalSiddhiParser.g:15066:1: ruleDIGIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleDIGIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleDIGIT_StartIndex = input.index();
        Token this_INT_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return current; }
            // InternalSiddhiParser.g:15072:2: (this_INT_0= RULE_INT )
            // InternalSiddhiParser.g:15073:2: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_INT_0, grammarAccess.getDIGITAccess().getINTTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, ruleDIGIT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDIGIT"


    // $ANTLR start "entryRuleAS"
    // InternalSiddhiParser.g:15083:1: entryRuleAS returns [EObject current=null] : iv_ruleAS= ruleAS EOF ;
    public final EObject entryRuleAS() throws RecognitionException {
        EObject current = null;
        int entryRuleAS_StartIndex = input.index();
        EObject iv_ruleAS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return current; }
            // InternalSiddhiParser.g:15083:43: (iv_ruleAS= ruleAS EOF )
            // InternalSiddhiParser.g:15084:2: iv_ruleAS= ruleAS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getASRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAS=ruleAS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAS; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, entryRuleAS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAS"


    // $ANTLR start "ruleAS"
    // InternalSiddhiParser.g:15090:1: ruleAS returns [EObject current=null] : ( (lv_a_0_0= As ) ) ;
    public final EObject ruleAS() throws RecognitionException {
        EObject current = null;
        int ruleAS_StartIndex = input.index();
        Token lv_a_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return current; }
            // InternalSiddhiParser.g:15096:2: ( ( (lv_a_0_0= As ) ) )
            // InternalSiddhiParser.g:15097:2: ( (lv_a_0_0= As ) )
            {
            // InternalSiddhiParser.g:15097:2: ( (lv_a_0_0= As ) )
            // InternalSiddhiParser.g:15098:3: (lv_a_0_0= As )
            {
            // InternalSiddhiParser.g:15098:3: (lv_a_0_0= As )
            // InternalSiddhiParser.g:15099:4: lv_a_0_0= As
            {
            lv_a_0_0=(Token)match(input,As,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_a_0_0, grammarAccess.getASAccess().getAAsKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getASRule());
              				}
              				setWithLastConsumed(current, "a", lv_a_0_0, "as");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, ruleAS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAS"


    // $ANTLR start "entryRuleON"
    // InternalSiddhiParser.g:15114:1: entryRuleON returns [EObject current=null] : iv_ruleON= ruleON EOF ;
    public final EObject entryRuleON() throws RecognitionException {
        EObject current = null;
        int entryRuleON_StartIndex = input.index();
        EObject iv_ruleON = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return current; }
            // InternalSiddhiParser.g:15114:43: (iv_ruleON= ruleON EOF )
            // InternalSiddhiParser.g:15115:2: iv_ruleON= ruleON EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleON=ruleON();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleON; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, entryRuleON_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleON"


    // $ANTLR start "ruleON"
    // InternalSiddhiParser.g:15121:1: ruleON returns [EObject current=null] : ( (lv_on_0_0= On ) ) ;
    public final EObject ruleON() throws RecognitionException {
        EObject current = null;
        int ruleON_StartIndex = input.index();
        Token lv_on_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return current; }
            // InternalSiddhiParser.g:15127:2: ( ( (lv_on_0_0= On ) ) )
            // InternalSiddhiParser.g:15128:2: ( (lv_on_0_0= On ) )
            {
            // InternalSiddhiParser.g:15128:2: ( (lv_on_0_0= On ) )
            // InternalSiddhiParser.g:15129:3: (lv_on_0_0= On )
            {
            // InternalSiddhiParser.g:15129:3: (lv_on_0_0= On )
            // InternalSiddhiParser.g:15130:4: lv_on_0_0= On
            {
            lv_on_0_0=(Token)match(input,On,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_on_0_0, grammarAccess.getONAccess().getOnOnKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getONRule());
              				}
              				setWithLastConsumed(current, "on", lv_on_0_0, "on");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, ruleON_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleON"


    // $ANTLR start "entryRuleUNIDIRECTIONAL"
    // InternalSiddhiParser.g:15145:1: entryRuleUNIDIRECTIONAL returns [EObject current=null] : iv_ruleUNIDIRECTIONAL= ruleUNIDIRECTIONAL EOF ;
    public final EObject entryRuleUNIDIRECTIONAL() throws RecognitionException {
        EObject current = null;
        int entryRuleUNIDIRECTIONAL_StartIndex = input.index();
        EObject iv_ruleUNIDIRECTIONAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return current; }
            // InternalSiddhiParser.g:15145:55: (iv_ruleUNIDIRECTIONAL= ruleUNIDIRECTIONAL EOF )
            // InternalSiddhiParser.g:15146:2: iv_ruleUNIDIRECTIONAL= ruleUNIDIRECTIONAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUNIDIRECTIONALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUNIDIRECTIONAL=ruleUNIDIRECTIONAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUNIDIRECTIONAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, entryRuleUNIDIRECTIONAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUNIDIRECTIONAL"


    // $ANTLR start "ruleUNIDIRECTIONAL"
    // InternalSiddhiParser.g:15152:1: ruleUNIDIRECTIONAL returns [EObject current=null] : ( (lv_unidirectional_0_0= Unidirectional ) ) ;
    public final EObject ruleUNIDIRECTIONAL() throws RecognitionException {
        EObject current = null;
        int ruleUNIDIRECTIONAL_StartIndex = input.index();
        Token lv_unidirectional_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return current; }
            // InternalSiddhiParser.g:15158:2: ( ( (lv_unidirectional_0_0= Unidirectional ) ) )
            // InternalSiddhiParser.g:15159:2: ( (lv_unidirectional_0_0= Unidirectional ) )
            {
            // InternalSiddhiParser.g:15159:2: ( (lv_unidirectional_0_0= Unidirectional ) )
            // InternalSiddhiParser.g:15160:3: (lv_unidirectional_0_0= Unidirectional )
            {
            // InternalSiddhiParser.g:15160:3: (lv_unidirectional_0_0= Unidirectional )
            // InternalSiddhiParser.g:15161:4: lv_unidirectional_0_0= Unidirectional
            {
            lv_unidirectional_0_0=(Token)match(input,Unidirectional,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_unidirectional_0_0, grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalUnidirectionalKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUNIDIRECTIONALRule());
              				}
              				setWithLastConsumed(current, "unidirectional", lv_unidirectional_0_0, "unidirectional");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, ruleUNIDIRECTIONAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUNIDIRECTIONAL"


    // $ANTLR start "entryRuleNOT"
    // InternalSiddhiParser.g:15176:1: entryRuleNOT returns [EObject current=null] : iv_ruleNOT= ruleNOT EOF ;
    public final EObject entryRuleNOT() throws RecognitionException {
        EObject current = null;
        int entryRuleNOT_StartIndex = input.index();
        EObject iv_ruleNOT = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return current; }
            // InternalSiddhiParser.g:15176:44: (iv_ruleNOT= ruleNOT EOF )
            // InternalSiddhiParser.g:15177:2: iv_ruleNOT= ruleNOT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNOTRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNOT=ruleNOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNOT; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, entryRuleNOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNOT"


    // $ANTLR start "ruleNOT"
    // InternalSiddhiParser.g:15183:1: ruleNOT returns [EObject current=null] : ( (lv_not1_0_0= Not ) ) ;
    public final EObject ruleNOT() throws RecognitionException {
        EObject current = null;
        int ruleNOT_StartIndex = input.index();
        Token lv_not1_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return current; }
            // InternalSiddhiParser.g:15189:2: ( ( (lv_not1_0_0= Not ) ) )
            // InternalSiddhiParser.g:15190:2: ( (lv_not1_0_0= Not ) )
            {
            // InternalSiddhiParser.g:15190:2: ( (lv_not1_0_0= Not ) )
            // InternalSiddhiParser.g:15191:3: (lv_not1_0_0= Not )
            {
            // InternalSiddhiParser.g:15191:3: (lv_not1_0_0= Not )
            // InternalSiddhiParser.g:15192:4: lv_not1_0_0= Not
            {
            lv_not1_0_0=(Token)match(input,Not,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_not1_0_0, grammarAccess.getNOTAccess().getNot1NotKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNOTRule());
              				}
              				setWithLastConsumed(current, "not1", lv_not1_0_0, "not");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, ruleNOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNOT"


    // $ANTLR start "entryRuleEVERY"
    // InternalSiddhiParser.g:15207:1: entryRuleEVERY returns [EObject current=null] : iv_ruleEVERY= ruleEVERY EOF ;
    public final EObject entryRuleEVERY() throws RecognitionException {
        EObject current = null;
        int entryRuleEVERY_StartIndex = input.index();
        EObject iv_ruleEVERY = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return current; }
            // InternalSiddhiParser.g:15207:46: (iv_ruleEVERY= ruleEVERY EOF )
            // InternalSiddhiParser.g:15208:2: iv_ruleEVERY= ruleEVERY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEVERYRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEVERY=ruleEVERY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEVERY; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, entryRuleEVERY_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEVERY"


    // $ANTLR start "ruleEVERY"
    // InternalSiddhiParser.g:15214:1: ruleEVERY returns [EObject current=null] : ( (lv_every_0_0= Every ) ) ;
    public final EObject ruleEVERY() throws RecognitionException {
        EObject current = null;
        int ruleEVERY_StartIndex = input.index();
        Token lv_every_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return current; }
            // InternalSiddhiParser.g:15220:2: ( ( (lv_every_0_0= Every ) ) )
            // InternalSiddhiParser.g:15221:2: ( (lv_every_0_0= Every ) )
            {
            // InternalSiddhiParser.g:15221:2: ( (lv_every_0_0= Every ) )
            // InternalSiddhiParser.g:15222:3: (lv_every_0_0= Every )
            {
            // InternalSiddhiParser.g:15222:3: (lv_every_0_0= Every )
            // InternalSiddhiParser.g:15223:4: lv_every_0_0= Every
            {
            lv_every_0_0=(Token)match(input,Every,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_every_0_0, grammarAccess.getEVERYAccess().getEveryEveryKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEVERYRule());
              				}
              				setWithLastConsumed(current, "every", lv_every_0_0, "every");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, ruleEVERY_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEVERY"


    // $ANTLR start "entryRuleAND"
    // InternalSiddhiParser.g:15238:1: entryRuleAND returns [EObject current=null] : iv_ruleAND= ruleAND EOF ;
    public final EObject entryRuleAND() throws RecognitionException {
        EObject current = null;
        int entryRuleAND_StartIndex = input.index();
        EObject iv_ruleAND = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return current; }
            // InternalSiddhiParser.g:15238:44: (iv_ruleAND= ruleAND EOF )
            // InternalSiddhiParser.g:15239:2: iv_ruleAND= ruleAND EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getANDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAND=ruleAND();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAND; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, entryRuleAND_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAND"


    // $ANTLR start "ruleAND"
    // InternalSiddhiParser.g:15245:1: ruleAND returns [EObject current=null] : ( (lv_and_0_0= And ) ) ;
    public final EObject ruleAND() throws RecognitionException {
        EObject current = null;
        int ruleAND_StartIndex = input.index();
        Token lv_and_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return current; }
            // InternalSiddhiParser.g:15251:2: ( ( (lv_and_0_0= And ) ) )
            // InternalSiddhiParser.g:15252:2: ( (lv_and_0_0= And ) )
            {
            // InternalSiddhiParser.g:15252:2: ( (lv_and_0_0= And ) )
            // InternalSiddhiParser.g:15253:3: (lv_and_0_0= And )
            {
            // InternalSiddhiParser.g:15253:3: (lv_and_0_0= And )
            // InternalSiddhiParser.g:15254:4: lv_and_0_0= And
            {
            lv_and_0_0=(Token)match(input,And,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_and_0_0, grammarAccess.getANDAccess().getAndAndKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getANDRule());
              				}
              				setWithLastConsumed(current, "and", lv_and_0_0, "and");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, ruleAND_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAND"


    // $ANTLR start "entryRuleOR"
    // InternalSiddhiParser.g:15269:1: entryRuleOR returns [EObject current=null] : iv_ruleOR= ruleOR EOF ;
    public final EObject entryRuleOR() throws RecognitionException {
        EObject current = null;
        int entryRuleOR_StartIndex = input.index();
        EObject iv_ruleOR = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return current; }
            // InternalSiddhiParser.g:15269:43: (iv_ruleOR= ruleOR EOF )
            // InternalSiddhiParser.g:15270:2: iv_ruleOR= ruleOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOR=ruleOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOR; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, entryRuleOR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOR"


    // $ANTLR start "ruleOR"
    // InternalSiddhiParser.g:15276:1: ruleOR returns [EObject current=null] : ( (lv_or_0_0= Or ) ) ;
    public final EObject ruleOR() throws RecognitionException {
        EObject current = null;
        int ruleOR_StartIndex = input.index();
        Token lv_or_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return current; }
            // InternalSiddhiParser.g:15282:2: ( ( (lv_or_0_0= Or ) ) )
            // InternalSiddhiParser.g:15283:2: ( (lv_or_0_0= Or ) )
            {
            // InternalSiddhiParser.g:15283:2: ( (lv_or_0_0= Or ) )
            // InternalSiddhiParser.g:15284:3: (lv_or_0_0= Or )
            {
            // InternalSiddhiParser.g:15284:3: (lv_or_0_0= Or )
            // InternalSiddhiParser.g:15285:4: lv_or_0_0= Or
            {
            lv_or_0_0=(Token)match(input,Or,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_or_0_0, grammarAccess.getORAccess().getOrOrKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getORRule());
              				}
              				addWithLastConsumed(current, "or", lv_or_0_0, "or");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, ruleOR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOR"


    // $ANTLR start "entryRuleIN"
    // InternalSiddhiParser.g:15300:1: entryRuleIN returns [EObject current=null] : iv_ruleIN= ruleIN EOF ;
    public final EObject entryRuleIN() throws RecognitionException {
        EObject current = null;
        int entryRuleIN_StartIndex = input.index();
        EObject iv_ruleIN = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return current; }
            // InternalSiddhiParser.g:15300:43: (iv_ruleIN= ruleIN EOF )
            // InternalSiddhiParser.g:15301:2: iv_ruleIN= ruleIN EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIN=ruleIN();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIN; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, entryRuleIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleIN"


    // $ANTLR start "ruleIN"
    // InternalSiddhiParser.g:15307:1: ruleIN returns [EObject current=null] : ( (lv_in_0_0= In ) ) ;
    public final EObject ruleIN() throws RecognitionException {
        EObject current = null;
        int ruleIN_StartIndex = input.index();
        Token lv_in_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return current; }
            // InternalSiddhiParser.g:15313:2: ( ( (lv_in_0_0= In ) ) )
            // InternalSiddhiParser.g:15314:2: ( (lv_in_0_0= In ) )
            {
            // InternalSiddhiParser.g:15314:2: ( (lv_in_0_0= In ) )
            // InternalSiddhiParser.g:15315:3: (lv_in_0_0= In )
            {
            // InternalSiddhiParser.g:15315:3: (lv_in_0_0= In )
            // InternalSiddhiParser.g:15316:4: lv_in_0_0= In
            {
            lv_in_0_0=(Token)match(input,In,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_in_0_0, grammarAccess.getINAccess().getInInKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINRule());
              				}
              				setWithLastConsumed(current, "in", lv_in_0_0, "in");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, ruleIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIN"


    // $ANTLR start "entryRuleOF"
    // InternalSiddhiParser.g:15331:1: entryRuleOF returns [EObject current=null] : iv_ruleOF= ruleOF EOF ;
    public final EObject entryRuleOF() throws RecognitionException {
        EObject current = null;
        int entryRuleOF_StartIndex = input.index();
        EObject iv_ruleOF = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return current; }
            // InternalSiddhiParser.g:15331:43: (iv_ruleOF= ruleOF EOF )
            // InternalSiddhiParser.g:15332:2: iv_ruleOF= ruleOF EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOFRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOF=ruleOF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOF; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, entryRuleOF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOF"


    // $ANTLR start "ruleOF"
    // InternalSiddhiParser.g:15338:1: ruleOF returns [EObject current=null] : ( (lv_of_0_0= Of ) ) ;
    public final EObject ruleOF() throws RecognitionException {
        EObject current = null;
        int ruleOF_StartIndex = input.index();
        Token lv_of_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return current; }
            // InternalSiddhiParser.g:15344:2: ( ( (lv_of_0_0= Of ) ) )
            // InternalSiddhiParser.g:15345:2: ( (lv_of_0_0= Of ) )
            {
            // InternalSiddhiParser.g:15345:2: ( (lv_of_0_0= Of ) )
            // InternalSiddhiParser.g:15346:3: (lv_of_0_0= Of )
            {
            // InternalSiddhiParser.g:15346:3: (lv_of_0_0= Of )
            // InternalSiddhiParser.g:15347:4: lv_of_0_0= Of
            {
            lv_of_0_0=(Token)match(input,Of,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_of_0_0, grammarAccess.getOFAccess().getOfOfKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOFRule());
              				}
              				setWithLastConsumed(current, "of", lv_of_0_0, "of");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, ruleOF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOF"


    // $ANTLR start "entryRuleE"
    // InternalSiddhiParser.g:15362:1: entryRuleE returns [EObject current=null] : iv_ruleE= ruleE EOF ;
    public final EObject entryRuleE() throws RecognitionException {
        EObject current = null;
        int entryRuleE_StartIndex = input.index();
        EObject iv_ruleE = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return current; }
            // InternalSiddhiParser.g:15362:42: (iv_ruleE= ruleE EOF )
            // InternalSiddhiParser.g:15363:2: iv_ruleE= ruleE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleE=ruleE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleE; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, entryRuleE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleE"


    // $ANTLR start "ruleE"
    // InternalSiddhiParser.g:15369:1: ruleE returns [EObject current=null] : ( (lv_e_0_0= E ) ) ;
    public final EObject ruleE() throws RecognitionException {
        EObject current = null;
        int ruleE_StartIndex = input.index();
        Token lv_e_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return current; }
            // InternalSiddhiParser.g:15375:2: ( ( (lv_e_0_0= E ) ) )
            // InternalSiddhiParser.g:15376:2: ( (lv_e_0_0= E ) )
            {
            // InternalSiddhiParser.g:15376:2: ( (lv_e_0_0= E ) )
            // InternalSiddhiParser.g:15377:3: (lv_e_0_0= E )
            {
            // InternalSiddhiParser.g:15377:3: (lv_e_0_0= E )
            // InternalSiddhiParser.g:15378:4: lv_e_0_0= E
            {
            lv_e_0_0=(Token)match(input,E,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_e_0_0, grammarAccess.getEAccess().getEEKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getERule());
              				}
              				setWithLastConsumed(current, "e", lv_e_0_0, "e");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, ruleE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleE"


    // $ANTLR start "entryRuleD"
    // InternalSiddhiParser.g:15393:1: entryRuleD returns [EObject current=null] : iv_ruleD= ruleD EOF ;
    public final EObject entryRuleD() throws RecognitionException {
        EObject current = null;
        int entryRuleD_StartIndex = input.index();
        EObject iv_ruleD = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return current; }
            // InternalSiddhiParser.g:15393:42: (iv_ruleD= ruleD EOF )
            // InternalSiddhiParser.g:15394:2: iv_ruleD= ruleD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleD=ruleD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleD; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, entryRuleD_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleD"


    // $ANTLR start "ruleD"
    // InternalSiddhiParser.g:15400:1: ruleD returns [EObject current=null] : ( (lv_d_0_0= D ) ) ;
    public final EObject ruleD() throws RecognitionException {
        EObject current = null;
        int ruleD_StartIndex = input.index();
        Token lv_d_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return current; }
            // InternalSiddhiParser.g:15406:2: ( ( (lv_d_0_0= D ) ) )
            // InternalSiddhiParser.g:15407:2: ( (lv_d_0_0= D ) )
            {
            // InternalSiddhiParser.g:15407:2: ( (lv_d_0_0= D ) )
            // InternalSiddhiParser.g:15408:3: (lv_d_0_0= D )
            {
            // InternalSiddhiParser.g:15408:3: (lv_d_0_0= D )
            // InternalSiddhiParser.g:15409:4: lv_d_0_0= D
            {
            lv_d_0_0=(Token)match(input,D,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_d_0_0, grammarAccess.getDAccess().getDDKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDRule());
              				}
              				setWithLastConsumed(current, "d", lv_d_0_0, "d");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, ruleD_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleD"


    // $ANTLR start "entryRuleF"
    // InternalSiddhiParser.g:15424:1: entryRuleF returns [EObject current=null] : iv_ruleF= ruleF EOF ;
    public final EObject entryRuleF() throws RecognitionException {
        EObject current = null;
        int entryRuleF_StartIndex = input.index();
        EObject iv_ruleF = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return current; }
            // InternalSiddhiParser.g:15424:42: (iv_ruleF= ruleF EOF )
            // InternalSiddhiParser.g:15425:2: iv_ruleF= ruleF EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleF=ruleF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleF; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, entryRuleF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleF"


    // $ANTLR start "ruleF"
    // InternalSiddhiParser.g:15431:1: ruleF returns [EObject current=null] : ( (lv_f_0_0= F ) ) ;
    public final EObject ruleF() throws RecognitionException {
        EObject current = null;
        int ruleF_StartIndex = input.index();
        Token lv_f_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return current; }
            // InternalSiddhiParser.g:15437:2: ( ( (lv_f_0_0= F ) ) )
            // InternalSiddhiParser.g:15438:2: ( (lv_f_0_0= F ) )
            {
            // InternalSiddhiParser.g:15438:2: ( (lv_f_0_0= F ) )
            // InternalSiddhiParser.g:15439:3: (lv_f_0_0= F )
            {
            // InternalSiddhiParser.g:15439:3: (lv_f_0_0= F )
            // InternalSiddhiParser.g:15440:4: lv_f_0_0= F
            {
            lv_f_0_0=(Token)match(input,F,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_f_0_0, grammarAccess.getFAccess().getFFKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFRule());
              				}
              				setWithLastConsumed(current, "f", lv_f_0_0, "f");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, ruleF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleF"


    // $ANTLR start "entryRuleL"
    // InternalSiddhiParser.g:15455:1: entryRuleL returns [EObject current=null] : iv_ruleL= ruleL EOF ;
    public final EObject entryRuleL() throws RecognitionException {
        EObject current = null;
        int entryRuleL_StartIndex = input.index();
        EObject iv_ruleL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return current; }
            // InternalSiddhiParser.g:15455:42: (iv_ruleL= ruleL EOF )
            // InternalSiddhiParser.g:15456:2: iv_ruleL= ruleL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleL=ruleL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, entryRuleL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleL"


    // $ANTLR start "ruleL"
    // InternalSiddhiParser.g:15462:1: ruleL returns [EObject current=null] : ( (lv_l_0_0= L ) ) ;
    public final EObject ruleL() throws RecognitionException {
        EObject current = null;
        int ruleL_StartIndex = input.index();
        Token lv_l_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return current; }
            // InternalSiddhiParser.g:15468:2: ( ( (lv_l_0_0= L ) ) )
            // InternalSiddhiParser.g:15469:2: ( (lv_l_0_0= L ) )
            {
            // InternalSiddhiParser.g:15469:2: ( (lv_l_0_0= L ) )
            // InternalSiddhiParser.g:15470:3: (lv_l_0_0= L )
            {
            // InternalSiddhiParser.g:15470:3: (lv_l_0_0= L )
            // InternalSiddhiParser.g:15471:4: lv_l_0_0= L
            {
            lv_l_0_0=(Token)match(input,L,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_l_0_0, grammarAccess.getLAccess().getLLKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLRule());
              				}
              				setWithLastConsumed(current, "l", lv_l_0_0, "l");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, ruleL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleL"


    // $ANTLR start "entryRuleAPP"
    // InternalSiddhiParser.g:15486:1: entryRuleAPP returns [EObject current=null] : iv_ruleAPP= ruleAPP EOF ;
    public final EObject entryRuleAPP() throws RecognitionException {
        EObject current = null;
        int entryRuleAPP_StartIndex = input.index();
        EObject iv_ruleAPP = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return current; }
            // InternalSiddhiParser.g:15486:44: (iv_ruleAPP= ruleAPP EOF )
            // InternalSiddhiParser.g:15487:2: iv_ruleAPP= ruleAPP EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAPPRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAPP=ruleAPP();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAPP; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, entryRuleAPP_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAPP"


    // $ANTLR start "ruleAPP"
    // InternalSiddhiParser.g:15493:1: ruleAPP returns [EObject current=null] : ( (lv_ap_0_0= App ) ) ;
    public final EObject ruleAPP() throws RecognitionException {
        EObject current = null;
        int ruleAPP_StartIndex = input.index();
        Token lv_ap_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return current; }
            // InternalSiddhiParser.g:15499:2: ( ( (lv_ap_0_0= App ) ) )
            // InternalSiddhiParser.g:15500:2: ( (lv_ap_0_0= App ) )
            {
            // InternalSiddhiParser.g:15500:2: ( (lv_ap_0_0= App ) )
            // InternalSiddhiParser.g:15501:3: (lv_ap_0_0= App )
            {
            // InternalSiddhiParser.g:15501:3: (lv_ap_0_0= App )
            // InternalSiddhiParser.g:15502:4: lv_ap_0_0= App
            {
            lv_ap_0_0=(Token)match(input,App,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_ap_0_0, grammarAccess.getAPPAccess().getApAppKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAPPRule());
              				}
              				setWithLastConsumed(current, "ap", lv_ap_0_0, "app");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, ruleAPP_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAPP"


    // $ANTLR start "ruleSTREAM"
    // InternalSiddhiParser.g:15518:1: ruleSTREAM[EObject in_current] returns [EObject current=in_current] : ( (lv_str_0_0= Stream ) ) ;
    public final EObject ruleSTREAM(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSTREAM_StartIndex = input.index();
        Token lv_str_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return current; }
            // InternalSiddhiParser.g:15524:2: ( ( (lv_str_0_0= Stream ) ) )
            // InternalSiddhiParser.g:15525:2: ( (lv_str_0_0= Stream ) )
            {
            // InternalSiddhiParser.g:15525:2: ( (lv_str_0_0= Stream ) )
            // InternalSiddhiParser.g:15526:3: (lv_str_0_0= Stream )
            {
            // InternalSiddhiParser.g:15526:3: (lv_str_0_0= Stream )
            // InternalSiddhiParser.g:15527:4: lv_str_0_0= Stream
            {
            lv_str_0_0=(Token)match(input,Stream,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_str_0_0, grammarAccess.getSTREAMAccess().getStrStreamKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSTREAMRule());
              				}
              				setWithLastConsumed(current, "str", lv_str_0_0, "stream");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, ruleSTREAM_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSTREAM"


    // $ANTLR start "ruleDEFINE"
    // InternalSiddhiParser.g:15543:1: ruleDEFINE[EObject in_current] returns [EObject current=in_current] : ( (lv_define_0_0= Define ) ) ;
    public final EObject ruleDEFINE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDEFINE_StartIndex = input.index();
        Token lv_define_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return current; }
            // InternalSiddhiParser.g:15549:2: ( ( (lv_define_0_0= Define ) ) )
            // InternalSiddhiParser.g:15550:2: ( (lv_define_0_0= Define ) )
            {
            // InternalSiddhiParser.g:15550:2: ( (lv_define_0_0= Define ) )
            // InternalSiddhiParser.g:15551:3: (lv_define_0_0= Define )
            {
            // InternalSiddhiParser.g:15551:3: (lv_define_0_0= Define )
            // InternalSiddhiParser.g:15552:4: lv_define_0_0= Define
            {
            lv_define_0_0=(Token)match(input,Define,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_define_0_0, grammarAccess.getDEFINEAccess().getDefineDefineKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDEFINERule());
              				}
              				setWithLastConsumed(current, "define", lv_define_0_0, "define");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, ruleDEFINE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDEFINE"


    // $ANTLR start "ruleTABLE"
    // InternalSiddhiParser.g:15568:1: ruleTABLE[EObject in_current] returns [EObject current=in_current] : ( (lv_table_0_0= Table ) ) ;
    public final EObject ruleTABLE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleTABLE_StartIndex = input.index();
        Token lv_table_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return current; }
            // InternalSiddhiParser.g:15574:2: ( ( (lv_table_0_0= Table ) ) )
            // InternalSiddhiParser.g:15575:2: ( (lv_table_0_0= Table ) )
            {
            // InternalSiddhiParser.g:15575:2: ( (lv_table_0_0= Table ) )
            // InternalSiddhiParser.g:15576:3: (lv_table_0_0= Table )
            {
            // InternalSiddhiParser.g:15576:3: (lv_table_0_0= Table )
            // InternalSiddhiParser.g:15577:4: lv_table_0_0= Table
            {
            lv_table_0_0=(Token)match(input,Table,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_table_0_0, grammarAccess.getTABLEAccess().getTableTableKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTABLERule());
              				}
              				setWithLastConsumed(current, "table", lv_table_0_0, "table");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, ruleTABLE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTABLE"


    // $ANTLR start "ruleWINDOW"
    // InternalSiddhiParser.g:15593:1: ruleWINDOW[EObject in_current] returns [EObject current=in_current] : ( (lv_window_0_0= Window ) ) ;
    public final EObject ruleWINDOW(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWINDOW_StartIndex = input.index();
        Token lv_window_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return current; }
            // InternalSiddhiParser.g:15599:2: ( ( (lv_window_0_0= Window ) ) )
            // InternalSiddhiParser.g:15600:2: ( (lv_window_0_0= Window ) )
            {
            // InternalSiddhiParser.g:15600:2: ( (lv_window_0_0= Window ) )
            // InternalSiddhiParser.g:15601:3: (lv_window_0_0= Window )
            {
            // InternalSiddhiParser.g:15601:3: (lv_window_0_0= Window )
            // InternalSiddhiParser.g:15602:4: lv_window_0_0= Window
            {
            lv_window_0_0=(Token)match(input,Window,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_window_0_0, grammarAccess.getWINDOWAccess().getWindowWindowKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getWINDOWRule());
              				}
              				setWithLastConsumed(current, "window", lv_window_0_0, "window");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, ruleWINDOW_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWINDOW"


    // $ANTLR start "ruleOUTPUT"
    // InternalSiddhiParser.g:15618:1: ruleOUTPUT[EObject in_current] returns [EObject current=in_current] : ( (lv_output_0_0= Output ) ) ;
    public final EObject ruleOUTPUT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleOUTPUT_StartIndex = input.index();
        Token lv_output_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return current; }
            // InternalSiddhiParser.g:15624:2: ( ( (lv_output_0_0= Output ) ) )
            // InternalSiddhiParser.g:15625:2: ( (lv_output_0_0= Output ) )
            {
            // InternalSiddhiParser.g:15625:2: ( (lv_output_0_0= Output ) )
            // InternalSiddhiParser.g:15626:3: (lv_output_0_0= Output )
            {
            // InternalSiddhiParser.g:15626:3: (lv_output_0_0= Output )
            // InternalSiddhiParser.g:15627:4: lv_output_0_0= Output
            {
            lv_output_0_0=(Token)match(input,Output,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_output_0_0, grammarAccess.getOUTPUTAccess().getOutputOutputKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOUTPUTRule());
              				}
              				setWithLastConsumed(current, "output", lv_output_0_0, "output");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 310, ruleOUTPUT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOUTPUT"


    // $ANTLR start "ruleSTRINGS"
    // InternalSiddhiParser.g:15643:1: ruleSTRINGS[EObject in_current] returns [EObject current=in_current] : ( (lv_string_0_0= String ) ) ;
    public final EObject ruleSTRINGS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSTRINGS_StartIndex = input.index();
        Token lv_string_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return current; }
            // InternalSiddhiParser.g:15649:2: ( ( (lv_string_0_0= String ) ) )
            // InternalSiddhiParser.g:15650:2: ( (lv_string_0_0= String ) )
            {
            // InternalSiddhiParser.g:15650:2: ( (lv_string_0_0= String ) )
            // InternalSiddhiParser.g:15651:3: (lv_string_0_0= String )
            {
            // InternalSiddhiParser.g:15651:3: (lv_string_0_0= String )
            // InternalSiddhiParser.g:15652:4: lv_string_0_0= String
            {
            lv_string_0_0=(Token)match(input,String,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_string_0_0, grammarAccess.getSTRINGSAccess().getStringStringKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSTRINGSRule());
              				}
              				setWithLastConsumed(current, "string", lv_string_0_0, "string");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 311, ruleSTRINGS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSTRINGS"


    // $ANTLR start "ruleINTS"
    // InternalSiddhiParser.g:15668:1: ruleINTS[EObject in_current] returns [EObject current=in_current] : ( (lv_int_0_0= Int ) ) ;
    public final EObject ruleINTS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINTS_StartIndex = input.index();
        Token lv_int_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return current; }
            // InternalSiddhiParser.g:15674:2: ( ( (lv_int_0_0= Int ) ) )
            // InternalSiddhiParser.g:15675:2: ( (lv_int_0_0= Int ) )
            {
            // InternalSiddhiParser.g:15675:2: ( (lv_int_0_0= Int ) )
            // InternalSiddhiParser.g:15676:3: (lv_int_0_0= Int )
            {
            // InternalSiddhiParser.g:15676:3: (lv_int_0_0= Int )
            // InternalSiddhiParser.g:15677:4: lv_int_0_0= Int
            {
            lv_int_0_0=(Token)match(input,Int,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_int_0_0, grammarAccess.getINTSAccess().getIntIntKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINTSRule());
              				}
              				setWithLastConsumed(current, "int", lv_int_0_0, "int");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 312, ruleINTS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINTS"


    // $ANTLR start "ruleLONG"
    // InternalSiddhiParser.g:15693:1: ruleLONG[EObject in_current] returns [EObject current=in_current] : ( (lv_long_0_0= Long ) ) ;
    public final EObject ruleLONG(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleLONG_StartIndex = input.index();
        Token lv_long_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return current; }
            // InternalSiddhiParser.g:15699:2: ( ( (lv_long_0_0= Long ) ) )
            // InternalSiddhiParser.g:15700:2: ( (lv_long_0_0= Long ) )
            {
            // InternalSiddhiParser.g:15700:2: ( (lv_long_0_0= Long ) )
            // InternalSiddhiParser.g:15701:3: (lv_long_0_0= Long )
            {
            // InternalSiddhiParser.g:15701:3: (lv_long_0_0= Long )
            // InternalSiddhiParser.g:15702:4: lv_long_0_0= Long
            {
            lv_long_0_0=(Token)match(input,Long,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_long_0_0, grammarAccess.getLONGAccess().getLongLongKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLONGRule());
              				}
              				setWithLastConsumed(current, "long", lv_long_0_0, "long");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 313, ruleLONG_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLONG"


    // $ANTLR start "ruleDOUBLE"
    // InternalSiddhiParser.g:15718:1: ruleDOUBLE[EObject in_current] returns [EObject current=in_current] : ( (lv_double_0_0= Double ) ) ;
    public final EObject ruleDOUBLE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDOUBLE_StartIndex = input.index();
        Token lv_double_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return current; }
            // InternalSiddhiParser.g:15724:2: ( ( (lv_double_0_0= Double ) ) )
            // InternalSiddhiParser.g:15725:2: ( (lv_double_0_0= Double ) )
            {
            // InternalSiddhiParser.g:15725:2: ( (lv_double_0_0= Double ) )
            // InternalSiddhiParser.g:15726:3: (lv_double_0_0= Double )
            {
            // InternalSiddhiParser.g:15726:3: (lv_double_0_0= Double )
            // InternalSiddhiParser.g:15727:4: lv_double_0_0= Double
            {
            lv_double_0_0=(Token)match(input,Double,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_double_0_0, grammarAccess.getDOUBLEAccess().getDoubleDoubleKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDOUBLERule());
              				}
              				setWithLastConsumed(current, "double", lv_double_0_0, "double");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 314, ruleDOUBLE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDOUBLE"


    // $ANTLR start "ruleFLOAT"
    // InternalSiddhiParser.g:15743:1: ruleFLOAT[EObject in_current] returns [EObject current=in_current] : ( (lv_float_0_0= Float ) ) ;
    public final EObject ruleFLOAT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFLOAT_StartIndex = input.index();
        Token lv_float_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return current; }
            // InternalSiddhiParser.g:15749:2: ( ( (lv_float_0_0= Float ) ) )
            // InternalSiddhiParser.g:15750:2: ( (lv_float_0_0= Float ) )
            {
            // InternalSiddhiParser.g:15750:2: ( (lv_float_0_0= Float ) )
            // InternalSiddhiParser.g:15751:3: (lv_float_0_0= Float )
            {
            // InternalSiddhiParser.g:15751:3: (lv_float_0_0= Float )
            // InternalSiddhiParser.g:15752:4: lv_float_0_0= Float
            {
            lv_float_0_0=(Token)match(input,Float,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_float_0_0, grammarAccess.getFLOATAccess().getFloatFloatKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFLOATRule());
              				}
              				setWithLastConsumed(current, "float", lv_float_0_0, "float");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 315, ruleFLOAT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFLOAT"


    // $ANTLR start "ruleBOOL"
    // InternalSiddhiParser.g:15768:1: ruleBOOL[EObject in_current] returns [EObject current=in_current] : ( (lv_bool_0_0= Bool ) ) ;
    public final EObject ruleBOOL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleBOOL_StartIndex = input.index();
        Token lv_bool_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return current; }
            // InternalSiddhiParser.g:15774:2: ( ( (lv_bool_0_0= Bool ) ) )
            // InternalSiddhiParser.g:15775:2: ( (lv_bool_0_0= Bool ) )
            {
            // InternalSiddhiParser.g:15775:2: ( (lv_bool_0_0= Bool ) )
            // InternalSiddhiParser.g:15776:3: (lv_bool_0_0= Bool )
            {
            // InternalSiddhiParser.g:15776:3: (lv_bool_0_0= Bool )
            // InternalSiddhiParser.g:15777:4: lv_bool_0_0= Bool
            {
            lv_bool_0_0=(Token)match(input,Bool,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_bool_0_0, grammarAccess.getBOOLAccess().getBoolBoolKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBOOLRule());
              				}
              				setWithLastConsumed(current, "bool", lv_bool_0_0, "bool");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 316, ruleBOOL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBOOL"


    // $ANTLR start "ruleOBJECT"
    // InternalSiddhiParser.g:15793:1: ruleOBJECT[EObject in_current] returns [EObject current=in_current] : ( (lv_object_0_0= Object ) ) ;
    public final EObject ruleOBJECT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleOBJECT_StartIndex = input.index();
        Token lv_object_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return current; }
            // InternalSiddhiParser.g:15799:2: ( ( (lv_object_0_0= Object ) ) )
            // InternalSiddhiParser.g:15800:2: ( (lv_object_0_0= Object ) )
            {
            // InternalSiddhiParser.g:15800:2: ( (lv_object_0_0= Object ) )
            // InternalSiddhiParser.g:15801:3: (lv_object_0_0= Object )
            {
            // InternalSiddhiParser.g:15801:3: (lv_object_0_0= Object )
            // InternalSiddhiParser.g:15802:4: lv_object_0_0= Object
            {
            lv_object_0_0=(Token)match(input,Object,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_object_0_0, grammarAccess.getOBJECTAccess().getObjectObjectKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOBJECTRule());
              				}
              				setWithLastConsumed(current, "object", lv_object_0_0, "object");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 317, ruleOBJECT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOBJECT"


    // $ANTLR start "ruleALL"
    // InternalSiddhiParser.g:15818:1: ruleALL[EObject in_current] returns [EObject current=in_current] : ( (lv_all_0_0= All ) ) ;
    public final EObject ruleALL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleALL_StartIndex = input.index();
        Token lv_all_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 318) ) { return current; }
            // InternalSiddhiParser.g:15824:2: ( ( (lv_all_0_0= All ) ) )
            // InternalSiddhiParser.g:15825:2: ( (lv_all_0_0= All ) )
            {
            // InternalSiddhiParser.g:15825:2: ( (lv_all_0_0= All ) )
            // InternalSiddhiParser.g:15826:3: (lv_all_0_0= All )
            {
            // InternalSiddhiParser.g:15826:3: (lv_all_0_0= All )
            // InternalSiddhiParser.g:15827:4: lv_all_0_0= All
            {
            lv_all_0_0=(Token)match(input,All,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_all_0_0, grammarAccess.getALLAccess().getAllAllKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getALLRule());
              				}
              				setWithLastConsumed(current, "all", lv_all_0_0, "all");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 318, ruleALL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleALL"


    // $ANTLR start "ruleEVENTS"
    // InternalSiddhiParser.g:15843:1: ruleEVENTS[EObject in_current] returns [EObject current=in_current] : ( (lv_events_0_0= Events ) ) ;
    public final EObject ruleEVENTS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleEVENTS_StartIndex = input.index();
        Token lv_events_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 319) ) { return current; }
            // InternalSiddhiParser.g:15849:2: ( ( (lv_events_0_0= Events ) ) )
            // InternalSiddhiParser.g:15850:2: ( (lv_events_0_0= Events ) )
            {
            // InternalSiddhiParser.g:15850:2: ( (lv_events_0_0= Events ) )
            // InternalSiddhiParser.g:15851:3: (lv_events_0_0= Events )
            {
            // InternalSiddhiParser.g:15851:3: (lv_events_0_0= Events )
            // InternalSiddhiParser.g:15852:4: lv_events_0_0= Events
            {
            lv_events_0_0=(Token)match(input,Events,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_events_0_0, grammarAccess.getEVENTSAccess().getEventsEventsKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEVENTSRule());
              				}
              				setWithLastConsumed(current, "events", lv_events_0_0, "events");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 319, ruleEVENTS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEVENTS"


    // $ANTLR start "ruleRAW"
    // InternalSiddhiParser.g:15868:1: ruleRAW[EObject in_current] returns [EObject current=in_current] : ( (lv_raw_0_0= Raw ) ) ;
    public final EObject ruleRAW(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleRAW_StartIndex = input.index();
        Token lv_raw_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 320) ) { return current; }
            // InternalSiddhiParser.g:15874:2: ( ( (lv_raw_0_0= Raw ) ) )
            // InternalSiddhiParser.g:15875:2: ( (lv_raw_0_0= Raw ) )
            {
            // InternalSiddhiParser.g:15875:2: ( (lv_raw_0_0= Raw ) )
            // InternalSiddhiParser.g:15876:3: (lv_raw_0_0= Raw )
            {
            // InternalSiddhiParser.g:15876:3: (lv_raw_0_0= Raw )
            // InternalSiddhiParser.g:15877:4: lv_raw_0_0= Raw
            {
            lv_raw_0_0=(Token)match(input,Raw,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_raw_0_0, grammarAccess.getRAWAccess().getRawRawKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRAWRule());
              				}
              				setWithLastConsumed(current, "raw", lv_raw_0_0, "raw");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 320, ruleRAW_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRAW"


    // $ANTLR start "ruleEXPIRED"
    // InternalSiddhiParser.g:15893:1: ruleEXPIRED[EObject in_current] returns [EObject current=in_current] : ( (lv_expired_0_0= Expired ) ) ;
    public final EObject ruleEXPIRED(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleEXPIRED_StartIndex = input.index();
        Token lv_expired_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 321) ) { return current; }
            // InternalSiddhiParser.g:15899:2: ( ( (lv_expired_0_0= Expired ) ) )
            // InternalSiddhiParser.g:15900:2: ( (lv_expired_0_0= Expired ) )
            {
            // InternalSiddhiParser.g:15900:2: ( (lv_expired_0_0= Expired ) )
            // InternalSiddhiParser.g:15901:3: (lv_expired_0_0= Expired )
            {
            // InternalSiddhiParser.g:15901:3: (lv_expired_0_0= Expired )
            // InternalSiddhiParser.g:15902:4: lv_expired_0_0= Expired
            {
            lv_expired_0_0=(Token)match(input,Expired,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_expired_0_0, grammarAccess.getEXPIREDAccess().getExpiredExpiredKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEXPIREDRule());
              				}
              				setWithLastConsumed(current, "expired", lv_expired_0_0, "expired");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 321, ruleEXPIRED_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEXPIRED"


    // $ANTLR start "ruleCURRENT"
    // InternalSiddhiParser.g:15918:1: ruleCURRENT[EObject in_current] returns [EObject current=in_current] : ( (lv_currt_0_0= Current ) ) ;
    public final EObject ruleCURRENT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleCURRENT_StartIndex = input.index();
        Token lv_currt_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 322) ) { return current; }
            // InternalSiddhiParser.g:15924:2: ( ( (lv_currt_0_0= Current ) ) )
            // InternalSiddhiParser.g:15925:2: ( (lv_currt_0_0= Current ) )
            {
            // InternalSiddhiParser.g:15925:2: ( (lv_currt_0_0= Current ) )
            // InternalSiddhiParser.g:15926:3: (lv_currt_0_0= Current )
            {
            // InternalSiddhiParser.g:15926:3: (lv_currt_0_0= Current )
            // InternalSiddhiParser.g:15927:4: lv_currt_0_0= Current
            {
            lv_currt_0_0=(Token)match(input,Current,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_currt_0_0, grammarAccess.getCURRENTAccess().getCurrtCurrentKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCURRENTRule());
              				}
              				setWithLastConsumed(current, "currt", lv_currt_0_0, "current");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 322, ruleCURRENT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCURRENT"


    // $ANTLR start "ruleLAST"
    // InternalSiddhiParser.g:15943:1: ruleLAST[EObject in_current] returns [EObject current=in_current] : ( (lv_last_0_0= Last ) ) ;
    public final EObject ruleLAST(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleLAST_StartIndex = input.index();
        Token lv_last_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 323) ) { return current; }
            // InternalSiddhiParser.g:15949:2: ( ( (lv_last_0_0= Last ) ) )
            // InternalSiddhiParser.g:15950:2: ( (lv_last_0_0= Last ) )
            {
            // InternalSiddhiParser.g:15950:2: ( (lv_last_0_0= Last ) )
            // InternalSiddhiParser.g:15951:3: (lv_last_0_0= Last )
            {
            // InternalSiddhiParser.g:15951:3: (lv_last_0_0= Last )
            // InternalSiddhiParser.g:15952:4: lv_last_0_0= Last
            {
            lv_last_0_0=(Token)match(input,Last,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_last_0_0, grammarAccess.getLASTAccess().getLastLastKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLASTRule());
              				}
              				setWithLastConsumed(current, "last", lv_last_0_0, "last");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 323, ruleLAST_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLAST"


    // $ANTLR start "ruleIS"
    // InternalSiddhiParser.g:15968:1: ruleIS[EObject in_current] returns [EObject current=in_current] : ( (lv_is_0_0= Is ) ) ;
    public final EObject ruleIS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleIS_StartIndex = input.index();
        Token lv_is_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 324) ) { return current; }
            // InternalSiddhiParser.g:15974:2: ( ( (lv_is_0_0= Is ) ) )
            // InternalSiddhiParser.g:15975:2: ( (lv_is_0_0= Is ) )
            {
            // InternalSiddhiParser.g:15975:2: ( (lv_is_0_0= Is ) )
            // InternalSiddhiParser.g:15976:3: (lv_is_0_0= Is )
            {
            // InternalSiddhiParser.g:15976:3: (lv_is_0_0= Is )
            // InternalSiddhiParser.g:15977:4: lv_is_0_0= Is
            {
            lv_is_0_0=(Token)match(input,Is,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_is_0_0, grammarAccess.getISAccess().getIsIsKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getISRule());
              				}
              				setWithLastConsumed(current, "is", lv_is_0_0, "is");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 324, ruleIS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIS"


    // $ANTLR start "ruleNULL"
    // InternalSiddhiParser.g:15993:1: ruleNULL[EObject in_current] returns [EObject current=in_current] : ( (lv_null_0_0= Null ) ) ;
    public final EObject ruleNULL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleNULL_StartIndex = input.index();
        Token lv_null_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 325) ) { return current; }
            // InternalSiddhiParser.g:15999:2: ( ( (lv_null_0_0= Null ) ) )
            // InternalSiddhiParser.g:16000:2: ( (lv_null_0_0= Null ) )
            {
            // InternalSiddhiParser.g:16000:2: ( (lv_null_0_0= Null ) )
            // InternalSiddhiParser.g:16001:3: (lv_null_0_0= Null )
            {
            // InternalSiddhiParser.g:16001:3: (lv_null_0_0= Null )
            // InternalSiddhiParser.g:16002:4: lv_null_0_0= Null
            {
            lv_null_0_0=(Token)match(input,Null,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_null_0_0, grammarAccess.getNULLAccess().getNullNullKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNULLRule());
              				}
              				setWithLastConsumed(current, "null", lv_null_0_0, "null");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 325, ruleNULL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNULL"


    // $ANTLR start "ruleTRIGGER"
    // InternalSiddhiParser.g:16018:1: ruleTRIGGER[EObject in_current] returns [EObject current=in_current] : ( (lv_trigger_0_0= Trigger ) ) ;
    public final EObject ruleTRIGGER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleTRIGGER_StartIndex = input.index();
        Token lv_trigger_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 326) ) { return current; }
            // InternalSiddhiParser.g:16024:2: ( ( (lv_trigger_0_0= Trigger ) ) )
            // InternalSiddhiParser.g:16025:2: ( (lv_trigger_0_0= Trigger ) )
            {
            // InternalSiddhiParser.g:16025:2: ( (lv_trigger_0_0= Trigger ) )
            // InternalSiddhiParser.g:16026:3: (lv_trigger_0_0= Trigger )
            {
            // InternalSiddhiParser.g:16026:3: (lv_trigger_0_0= Trigger )
            // InternalSiddhiParser.g:16027:4: lv_trigger_0_0= Trigger
            {
            lv_trigger_0_0=(Token)match(input,Trigger,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_trigger_0_0, grammarAccess.getTRIGGERAccess().getTriggerTriggerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTRIGGERRule());
              				}
              				setWithLastConsumed(current, "trigger", lv_trigger_0_0, "trigger");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 326, ruleTRIGGER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTRIGGER"


    // $ANTLR start "ruleAT"
    // InternalSiddhiParser.g:16043:1: ruleAT[EObject in_current] returns [EObject current=in_current] : ( (lv_at_0_0= At ) ) ;
    public final EObject ruleAT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleAT_StartIndex = input.index();
        Token lv_at_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 327) ) { return current; }
            // InternalSiddhiParser.g:16049:2: ( ( (lv_at_0_0= At ) ) )
            // InternalSiddhiParser.g:16050:2: ( (lv_at_0_0= At ) )
            {
            // InternalSiddhiParser.g:16050:2: ( (lv_at_0_0= At ) )
            // InternalSiddhiParser.g:16051:3: (lv_at_0_0= At )
            {
            // InternalSiddhiParser.g:16051:3: (lv_at_0_0= At )
            // InternalSiddhiParser.g:16052:4: lv_at_0_0= At
            {
            lv_at_0_0=(Token)match(input,At,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_at_0_0, grammarAccess.getATAccess().getAtAtKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getATRule());
              				}
              				setWithLastConsumed(current, "at", lv_at_0_0, "at");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 327, ruleAT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAT"


    // $ANTLR start "ruleFUNCTION"
    // InternalSiddhiParser.g:16068:1: ruleFUNCTION[EObject in_current] returns [EObject current=in_current] : ( (lv_function_0_0= Function ) ) ;
    public final EObject ruleFUNCTION(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFUNCTION_StartIndex = input.index();
        Token lv_function_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 328) ) { return current; }
            // InternalSiddhiParser.g:16074:2: ( ( (lv_function_0_0= Function ) ) )
            // InternalSiddhiParser.g:16075:2: ( (lv_function_0_0= Function ) )
            {
            // InternalSiddhiParser.g:16075:2: ( (lv_function_0_0= Function ) )
            // InternalSiddhiParser.g:16076:3: (lv_function_0_0= Function )
            {
            // InternalSiddhiParser.g:16076:3: (lv_function_0_0= Function )
            // InternalSiddhiParser.g:16077:4: lv_function_0_0= Function
            {
            lv_function_0_0=(Token)match(input,Function,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_function_0_0, grammarAccess.getFUNCTIONAccess().getFunctionFunctionKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFUNCTIONRule());
              				}
              				setWithLastConsumed(current, "function", lv_function_0_0, "function");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 328, ruleFUNCTION_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFUNCTION"


    // $ANTLR start "ruleRETURN"
    // InternalSiddhiParser.g:16093:1: ruleRETURN[EObject in_current] returns [EObject current=in_current] : ( (lv_return_0_0= Return ) ) ;
    public final EObject ruleRETURN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleRETURN_StartIndex = input.index();
        Token lv_return_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 329) ) { return current; }
            // InternalSiddhiParser.g:16099:2: ( ( (lv_return_0_0= Return ) ) )
            // InternalSiddhiParser.g:16100:2: ( (lv_return_0_0= Return ) )
            {
            // InternalSiddhiParser.g:16100:2: ( (lv_return_0_0= Return ) )
            // InternalSiddhiParser.g:16101:3: (lv_return_0_0= Return )
            {
            // InternalSiddhiParser.g:16101:3: (lv_return_0_0= Return )
            // InternalSiddhiParser.g:16102:4: lv_return_0_0= Return
            {
            lv_return_0_0=(Token)match(input,Return,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_return_0_0, grammarAccess.getRETURNAccess().getReturnReturnKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRETURNRule());
              				}
              				setWithLastConsumed(current, "return", lv_return_0_0, "return");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 329, ruleRETURN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRETURN"


    // $ANTLR start "ruleFROM"
    // InternalSiddhiParser.g:16118:1: ruleFROM[EObject in_current] returns [EObject current=in_current] : ( (lv_from_0_0= From ) ) ;
    public final EObject ruleFROM(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFROM_StartIndex = input.index();
        Token lv_from_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 330) ) { return current; }
            // InternalSiddhiParser.g:16124:2: ( ( (lv_from_0_0= From ) ) )
            // InternalSiddhiParser.g:16125:2: ( (lv_from_0_0= From ) )
            {
            // InternalSiddhiParser.g:16125:2: ( (lv_from_0_0= From ) )
            // InternalSiddhiParser.g:16126:3: (lv_from_0_0= From )
            {
            // InternalSiddhiParser.g:16126:3: (lv_from_0_0= From )
            // InternalSiddhiParser.g:16127:4: lv_from_0_0= From
            {
            lv_from_0_0=(Token)match(input,From,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_from_0_0, grammarAccess.getFROMAccess().getFromFromKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFROMRule());
              				}
              				setWithLastConsumed(current, "from", lv_from_0_0, "from");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 330, ruleFROM_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFROM"


    // $ANTLR start "ruleWITHIN"
    // InternalSiddhiParser.g:16143:1: ruleWITHIN[EObject in_current] returns [EObject current=in_current] : ( (lv_within_0_0= Within ) ) ;
    public final EObject ruleWITHIN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWITHIN_StartIndex = input.index();
        Token lv_within_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 331) ) { return current; }
            // InternalSiddhiParser.g:16149:2: ( ( (lv_within_0_0= Within ) ) )
            // InternalSiddhiParser.g:16150:2: ( (lv_within_0_0= Within ) )
            {
            // InternalSiddhiParser.g:16150:2: ( (lv_within_0_0= Within ) )
            // InternalSiddhiParser.g:16151:3: (lv_within_0_0= Within )
            {
            // InternalSiddhiParser.g:16151:3: (lv_within_0_0= Within )
            // InternalSiddhiParser.g:16152:4: lv_within_0_0= Within
            {
            lv_within_0_0=(Token)match(input,Within,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_within_0_0, grammarAccess.getWITHINAccess().getWithinWithinKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getWITHINRule());
              				}
              				setWithLastConsumed(current, "within", lv_within_0_0, "within");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 331, ruleWITHIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWITHIN"


    // $ANTLR start "ruleLEFT"
    // InternalSiddhiParser.g:16168:1: ruleLEFT[EObject in_current] returns [EObject current=in_current] : ( (lv_left_0_0= Left ) ) ;
    public final EObject ruleLEFT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleLEFT_StartIndex = input.index();
        Token lv_left_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 332) ) { return current; }
            // InternalSiddhiParser.g:16174:2: ( ( (lv_left_0_0= Left ) ) )
            // InternalSiddhiParser.g:16175:2: ( (lv_left_0_0= Left ) )
            {
            // InternalSiddhiParser.g:16175:2: ( (lv_left_0_0= Left ) )
            // InternalSiddhiParser.g:16176:3: (lv_left_0_0= Left )
            {
            // InternalSiddhiParser.g:16176:3: (lv_left_0_0= Left )
            // InternalSiddhiParser.g:16177:4: lv_left_0_0= Left
            {
            lv_left_0_0=(Token)match(input,Left,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_left_0_0, grammarAccess.getLEFTAccess().getLeftLeftKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLEFTRule());
              				}
              				setWithLastConsumed(current, "left", lv_left_0_0, "left");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 332, ruleLEFT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLEFT"


    // $ANTLR start "ruleRIGHT"
    // InternalSiddhiParser.g:16193:1: ruleRIGHT[EObject in_current] returns [EObject current=in_current] : ( (lv_right_0_0= Right ) ) ;
    public final EObject ruleRIGHT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleRIGHT_StartIndex = input.index();
        Token lv_right_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 333) ) { return current; }
            // InternalSiddhiParser.g:16199:2: ( ( (lv_right_0_0= Right ) ) )
            // InternalSiddhiParser.g:16200:2: ( (lv_right_0_0= Right ) )
            {
            // InternalSiddhiParser.g:16200:2: ( (lv_right_0_0= Right ) )
            // InternalSiddhiParser.g:16201:3: (lv_right_0_0= Right )
            {
            // InternalSiddhiParser.g:16201:3: (lv_right_0_0= Right )
            // InternalSiddhiParser.g:16202:4: lv_right_0_0= Right
            {
            lv_right_0_0=(Token)match(input,Right,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_right_0_0, grammarAccess.getRIGHTAccess().getRightRightKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRIGHTRule());
              				}
              				setWithLastConsumed(current, "right", lv_right_0_0, "right");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 333, ruleRIGHT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRIGHT"


    // $ANTLR start "ruleFULL"
    // InternalSiddhiParser.g:16218:1: ruleFULL[EObject in_current] returns [EObject current=in_current] : ( (lv_full_0_0= Full ) ) ;
    public final EObject ruleFULL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFULL_StartIndex = input.index();
        Token lv_full_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 334) ) { return current; }
            // InternalSiddhiParser.g:16224:2: ( ( (lv_full_0_0= Full ) ) )
            // InternalSiddhiParser.g:16225:2: ( (lv_full_0_0= Full ) )
            {
            // InternalSiddhiParser.g:16225:2: ( (lv_full_0_0= Full ) )
            // InternalSiddhiParser.g:16226:3: (lv_full_0_0= Full )
            {
            // InternalSiddhiParser.g:16226:3: (lv_full_0_0= Full )
            // InternalSiddhiParser.g:16227:4: lv_full_0_0= Full
            {
            lv_full_0_0=(Token)match(input,Full,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_full_0_0, grammarAccess.getFULLAccess().getFullFullKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFULLRule());
              				}
              				setWithLastConsumed(current, "full", lv_full_0_0, "full");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 334, ruleFULL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFULL"


    // $ANTLR start "ruleJOIN"
    // InternalSiddhiParser.g:16243:1: ruleJOIN[EObject in_current] returns [EObject current=in_current] : ( (lv_join_0_0= Join ) ) ;
    public final EObject ruleJOIN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleJOIN_StartIndex = input.index();
        Token lv_join_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 335) ) { return current; }
            // InternalSiddhiParser.g:16249:2: ( ( (lv_join_0_0= Join ) ) )
            // InternalSiddhiParser.g:16250:2: ( (lv_join_0_0= Join ) )
            {
            // InternalSiddhiParser.g:16250:2: ( (lv_join_0_0= Join ) )
            // InternalSiddhiParser.g:16251:3: (lv_join_0_0= Join )
            {
            // InternalSiddhiParser.g:16251:3: (lv_join_0_0= Join )
            // InternalSiddhiParser.g:16252:4: lv_join_0_0= Join
            {
            lv_join_0_0=(Token)match(input,Join,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_join_0_0, grammarAccess.getJOINAccess().getJoinJoinKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getJOINRule());
              				}
              				setWithLastConsumed(current, "join", lv_join_0_0, "join");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 335, ruleJOIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleJOIN"


    // $ANTLR start "ruleINNER"
    // InternalSiddhiParser.g:16268:1: ruleINNER[EObject in_current] returns [EObject current=in_current] : ( (lv_inner_0_0= Inner ) ) ;
    public final EObject ruleINNER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINNER_StartIndex = input.index();
        Token lv_inner_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 336) ) { return current; }
            // InternalSiddhiParser.g:16274:2: ( ( (lv_inner_0_0= Inner ) ) )
            // InternalSiddhiParser.g:16275:2: ( (lv_inner_0_0= Inner ) )
            {
            // InternalSiddhiParser.g:16275:2: ( (lv_inner_0_0= Inner ) )
            // InternalSiddhiParser.g:16276:3: (lv_inner_0_0= Inner )
            {
            // InternalSiddhiParser.g:16276:3: (lv_inner_0_0= Inner )
            // InternalSiddhiParser.g:16277:4: lv_inner_0_0= Inner
            {
            lv_inner_0_0=(Token)match(input,Inner,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_inner_0_0, grammarAccess.getINNERAccess().getInnerInnerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINNERRule());
              				}
              				setWithLastConsumed(current, "inner", lv_inner_0_0, "inner");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 336, ruleINNER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINNER"


    // $ANTLR start "ruleOUTER"
    // InternalSiddhiParser.g:16293:1: ruleOUTER[EObject in_current] returns [EObject current=in_current] : ( (lv_outer_0_0= Outer ) ) ;
    public final EObject ruleOUTER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleOUTER_StartIndex = input.index();
        Token lv_outer_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 337) ) { return current; }
            // InternalSiddhiParser.g:16299:2: ( ( (lv_outer_0_0= Outer ) ) )
            // InternalSiddhiParser.g:16300:2: ( (lv_outer_0_0= Outer ) )
            {
            // InternalSiddhiParser.g:16300:2: ( (lv_outer_0_0= Outer ) )
            // InternalSiddhiParser.g:16301:3: (lv_outer_0_0= Outer )
            {
            // InternalSiddhiParser.g:16301:3: (lv_outer_0_0= Outer )
            // InternalSiddhiParser.g:16302:4: lv_outer_0_0= Outer
            {
            lv_outer_0_0=(Token)match(input,Outer,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_outer_0_0, grammarAccess.getOUTERAccess().getOuterOuterKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOUTERRule());
              				}
              				setWithLastConsumed(current, "outer", lv_outer_0_0, "outer");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 337, ruleOUTER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOUTER"


    // $ANTLR start "ruleSELECT"
    // InternalSiddhiParser.g:16318:1: ruleSELECT[EObject in_current] returns [EObject current=in_current] : ( (lv_select_0_0= Select ) ) ;
    public final EObject ruleSELECT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSELECT_StartIndex = input.index();
        Token lv_select_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 338) ) { return current; }
            // InternalSiddhiParser.g:16324:2: ( ( (lv_select_0_0= Select ) ) )
            // InternalSiddhiParser.g:16325:2: ( (lv_select_0_0= Select ) )
            {
            // InternalSiddhiParser.g:16325:2: ( (lv_select_0_0= Select ) )
            // InternalSiddhiParser.g:16326:3: (lv_select_0_0= Select )
            {
            // InternalSiddhiParser.g:16326:3: (lv_select_0_0= Select )
            // InternalSiddhiParser.g:16327:4: lv_select_0_0= Select
            {
            lv_select_0_0=(Token)match(input,Select,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_select_0_0, grammarAccess.getSELECTAccess().getSelectSelectKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSELECTRule());
              				}
              				setWithLastConsumed(current, "select", lv_select_0_0, "select");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 338, ruleSELECT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSELECT"


    // $ANTLR start "ruleGROUP"
    // InternalSiddhiParser.g:16343:1: ruleGROUP[EObject in_current] returns [EObject current=in_current] : ( (lv_group_0_0= Group ) ) ;
    public final EObject ruleGROUP(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleGROUP_StartIndex = input.index();
        Token lv_group_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 339) ) { return current; }
            // InternalSiddhiParser.g:16349:2: ( ( (lv_group_0_0= Group ) ) )
            // InternalSiddhiParser.g:16350:2: ( (lv_group_0_0= Group ) )
            {
            // InternalSiddhiParser.g:16350:2: ( (lv_group_0_0= Group ) )
            // InternalSiddhiParser.g:16351:3: (lv_group_0_0= Group )
            {
            // InternalSiddhiParser.g:16351:3: (lv_group_0_0= Group )
            // InternalSiddhiParser.g:16352:4: lv_group_0_0= Group
            {
            lv_group_0_0=(Token)match(input,Group,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_group_0_0, grammarAccess.getGROUPAccess().getGroupGroupKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getGROUPRule());
              				}
              				setWithLastConsumed(current, "group", lv_group_0_0, "group");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 339, ruleGROUP_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleGROUP"


    // $ANTLR start "ruleBY"
    // InternalSiddhiParser.g:16368:1: ruleBY[EObject in_current] returns [EObject current=in_current] : ( (lv_by_0_0= By ) ) ;
    public final EObject ruleBY(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleBY_StartIndex = input.index();
        Token lv_by_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 340) ) { return current; }
            // InternalSiddhiParser.g:16374:2: ( ( (lv_by_0_0= By ) ) )
            // InternalSiddhiParser.g:16375:2: ( (lv_by_0_0= By ) )
            {
            // InternalSiddhiParser.g:16375:2: ( (lv_by_0_0= By ) )
            // InternalSiddhiParser.g:16376:3: (lv_by_0_0= By )
            {
            // InternalSiddhiParser.g:16376:3: (lv_by_0_0= By )
            // InternalSiddhiParser.g:16377:4: lv_by_0_0= By
            {
            lv_by_0_0=(Token)match(input,By,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_by_0_0, grammarAccess.getBYAccess().getByByKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBYRule());
              				}
              				setWithLastConsumed(current, "by", lv_by_0_0, "by");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 340, ruleBY_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBY"


    // $ANTLR start "ruleHAVING"
    // InternalSiddhiParser.g:16393:1: ruleHAVING[EObject in_current] returns [EObject current=in_current] : ( (lv_having_0_0= Having ) ) ;
    public final EObject ruleHAVING(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleHAVING_StartIndex = input.index();
        Token lv_having_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 341) ) { return current; }
            // InternalSiddhiParser.g:16399:2: ( ( (lv_having_0_0= Having ) ) )
            // InternalSiddhiParser.g:16400:2: ( (lv_having_0_0= Having ) )
            {
            // InternalSiddhiParser.g:16400:2: ( (lv_having_0_0= Having ) )
            // InternalSiddhiParser.g:16401:3: (lv_having_0_0= Having )
            {
            // InternalSiddhiParser.g:16401:3: (lv_having_0_0= Having )
            // InternalSiddhiParser.g:16402:4: lv_having_0_0= Having
            {
            lv_having_0_0=(Token)match(input,Having,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_having_0_0, grammarAccess.getHAVINGAccess().getHavingHavingKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getHAVINGRule());
              				}
              				setWithLastConsumed(current, "having", lv_having_0_0, "having");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 341, ruleHAVING_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHAVING"


    // $ANTLR start "ruleSNAPSHOT"
    // InternalSiddhiParser.g:16418:1: ruleSNAPSHOT[EObject in_current] returns [EObject current=in_current] : ( (lv_snapshot_0_0= Snapshot ) ) ;
    public final EObject ruleSNAPSHOT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSNAPSHOT_StartIndex = input.index();
        Token lv_snapshot_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 342) ) { return current; }
            // InternalSiddhiParser.g:16424:2: ( ( (lv_snapshot_0_0= Snapshot ) ) )
            // InternalSiddhiParser.g:16425:2: ( (lv_snapshot_0_0= Snapshot ) )
            {
            // InternalSiddhiParser.g:16425:2: ( (lv_snapshot_0_0= Snapshot ) )
            // InternalSiddhiParser.g:16426:3: (lv_snapshot_0_0= Snapshot )
            {
            // InternalSiddhiParser.g:16426:3: (lv_snapshot_0_0= Snapshot )
            // InternalSiddhiParser.g:16427:4: lv_snapshot_0_0= Snapshot
            {
            lv_snapshot_0_0=(Token)match(input,Snapshot,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_snapshot_0_0, grammarAccess.getSNAPSHOTAccess().getSnapshotSnapshotKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSNAPSHOTRule());
              				}
              				setWithLastConsumed(current, "snapshot", lv_snapshot_0_0, "snapshot");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 342, ruleSNAPSHOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSNAPSHOT"


    // $ANTLR start "ruleFIRST"
    // InternalSiddhiParser.g:16443:1: ruleFIRST[EObject in_current] returns [EObject current=in_current] : ( (lv_first_0_0= First ) ) ;
    public final EObject ruleFIRST(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFIRST_StartIndex = input.index();
        Token lv_first_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 343) ) { return current; }
            // InternalSiddhiParser.g:16449:2: ( ( (lv_first_0_0= First ) ) )
            // InternalSiddhiParser.g:16450:2: ( (lv_first_0_0= First ) )
            {
            // InternalSiddhiParser.g:16450:2: ( (lv_first_0_0= First ) )
            // InternalSiddhiParser.g:16451:3: (lv_first_0_0= First )
            {
            // InternalSiddhiParser.g:16451:3: (lv_first_0_0= First )
            // InternalSiddhiParser.g:16452:4: lv_first_0_0= First
            {
            lv_first_0_0=(Token)match(input,First,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_first_0_0, grammarAccess.getFIRSTAccess().getFirstFirstKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFIRSTRule());
              				}
              				setWithLastConsumed(current, "first", lv_first_0_0, "first");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 343, ruleFIRST_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFIRST"


    // $ANTLR start "ruleINSERT"
    // InternalSiddhiParser.g:16468:1: ruleINSERT[EObject in_current] returns [EObject current=in_current] : ( (lv_insert_0_0= Insert ) ) ;
    public final EObject ruleINSERT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINSERT_StartIndex = input.index();
        Token lv_insert_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 344) ) { return current; }
            // InternalSiddhiParser.g:16474:2: ( ( (lv_insert_0_0= Insert ) ) )
            // InternalSiddhiParser.g:16475:2: ( (lv_insert_0_0= Insert ) )
            {
            // InternalSiddhiParser.g:16475:2: ( (lv_insert_0_0= Insert ) )
            // InternalSiddhiParser.g:16476:3: (lv_insert_0_0= Insert )
            {
            // InternalSiddhiParser.g:16476:3: (lv_insert_0_0= Insert )
            // InternalSiddhiParser.g:16477:4: lv_insert_0_0= Insert
            {
            lv_insert_0_0=(Token)match(input,Insert,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_insert_0_0, grammarAccess.getINSERTAccess().getInsertInsertKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINSERTRule());
              				}
              				setWithLastConsumed(current, "insert", lv_insert_0_0, "insert");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 344, ruleINSERT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINSERT"


    // $ANTLR start "ruleINTO"
    // InternalSiddhiParser.g:16493:1: ruleINTO[EObject in_current] returns [EObject current=in_current] : ( (lv_into_0_0= Into ) ) ;
    public final EObject ruleINTO(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINTO_StartIndex = input.index();
        Token lv_into_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 345) ) { return current; }
            // InternalSiddhiParser.g:16499:2: ( ( (lv_into_0_0= Into ) ) )
            // InternalSiddhiParser.g:16500:2: ( (lv_into_0_0= Into ) )
            {
            // InternalSiddhiParser.g:16500:2: ( (lv_into_0_0= Into ) )
            // InternalSiddhiParser.g:16501:3: (lv_into_0_0= Into )
            {
            // InternalSiddhiParser.g:16501:3: (lv_into_0_0= Into )
            // InternalSiddhiParser.g:16502:4: lv_into_0_0= Into
            {
            lv_into_0_0=(Token)match(input,Into,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_into_0_0, grammarAccess.getINTOAccess().getIntoIntoKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINTORule());
              				}
              				setWithLastConsumed(current, "into", lv_into_0_0, "into");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 345, ruleINTO_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINTO"


    // $ANTLR start "ruleBEGIN"
    // InternalSiddhiParser.g:16518:1: ruleBEGIN[EObject in_current] returns [EObject current=in_current] : ( (lv_begin_0_0= Begin ) ) ;
    public final EObject ruleBEGIN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleBEGIN_StartIndex = input.index();
        Token lv_begin_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 346) ) { return current; }
            // InternalSiddhiParser.g:16524:2: ( ( (lv_begin_0_0= Begin ) ) )
            // InternalSiddhiParser.g:16525:2: ( (lv_begin_0_0= Begin ) )
            {
            // InternalSiddhiParser.g:16525:2: ( (lv_begin_0_0= Begin ) )
            // InternalSiddhiParser.g:16526:3: (lv_begin_0_0= Begin )
            {
            // InternalSiddhiParser.g:16526:3: (lv_begin_0_0= Begin )
            // InternalSiddhiParser.g:16527:4: lv_begin_0_0= Begin
            {
            lv_begin_0_0=(Token)match(input,Begin,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_begin_0_0, grammarAccess.getBEGINAccess().getBeginBeginKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBEGINRule());
              				}
              				setWithLastConsumed(current, "begin", lv_begin_0_0, "begin");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 346, ruleBEGIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBEGIN"


    // $ANTLR start "ruleDELETE"
    // InternalSiddhiParser.g:16543:1: ruleDELETE[EObject in_current] returns [EObject current=in_current] : ( (lv_delete_0_0= Delete ) ) ;
    public final EObject ruleDELETE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDELETE_StartIndex = input.index();
        Token lv_delete_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 347) ) { return current; }
            // InternalSiddhiParser.g:16549:2: ( ( (lv_delete_0_0= Delete ) ) )
            // InternalSiddhiParser.g:16550:2: ( (lv_delete_0_0= Delete ) )
            {
            // InternalSiddhiParser.g:16550:2: ( (lv_delete_0_0= Delete ) )
            // InternalSiddhiParser.g:16551:3: (lv_delete_0_0= Delete )
            {
            // InternalSiddhiParser.g:16551:3: (lv_delete_0_0= Delete )
            // InternalSiddhiParser.g:16552:4: lv_delete_0_0= Delete
            {
            lv_delete_0_0=(Token)match(input,Delete,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_delete_0_0, grammarAccess.getDELETEAccess().getDeleteDeleteKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDELETERule());
              				}
              				setWithLastConsumed(current, "delete", lv_delete_0_0, "delete");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 347, ruleDELETE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDELETE"


    // $ANTLR start "ruleFOR"
    // InternalSiddhiParser.g:16568:1: ruleFOR[EObject in_current] returns [EObject current=in_current] : ( (lv_for_0_0= For ) ) ;
    public final EObject ruleFOR(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFOR_StartIndex = input.index();
        Token lv_for_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 348) ) { return current; }
            // InternalSiddhiParser.g:16574:2: ( ( (lv_for_0_0= For ) ) )
            // InternalSiddhiParser.g:16575:2: ( (lv_for_0_0= For ) )
            {
            // InternalSiddhiParser.g:16575:2: ( (lv_for_0_0= For ) )
            // InternalSiddhiParser.g:16576:3: (lv_for_0_0= For )
            {
            // InternalSiddhiParser.g:16576:3: (lv_for_0_0= For )
            // InternalSiddhiParser.g:16577:4: lv_for_0_0= For
            {
            lv_for_0_0=(Token)match(input,For,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_for_0_0, grammarAccess.getFORAccess().getForForKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFORRule());
              				}
              				setWithLastConsumed(current, "for", lv_for_0_0, "for");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 348, ruleFOR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFOR"


    // $ANTLR start "ruleUPDATE"
    // InternalSiddhiParser.g:16593:1: ruleUPDATE[EObject in_current] returns [EObject current=in_current] : ( (lv_update_0_0= Update ) ) ;
    public final EObject ruleUPDATE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleUPDATE_StartIndex = input.index();
        Token lv_update_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 349) ) { return current; }
            // InternalSiddhiParser.g:16599:2: ( ( (lv_update_0_0= Update ) ) )
            // InternalSiddhiParser.g:16600:2: ( (lv_update_0_0= Update ) )
            {
            // InternalSiddhiParser.g:16600:2: ( (lv_update_0_0= Update ) )
            // InternalSiddhiParser.g:16601:3: (lv_update_0_0= Update )
            {
            // InternalSiddhiParser.g:16601:3: (lv_update_0_0= Update )
            // InternalSiddhiParser.g:16602:4: lv_update_0_0= Update
            {
            lv_update_0_0=(Token)match(input,Update,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_update_0_0, grammarAccess.getUPDATEAccess().getUpdateUpdateKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUPDATERule());
              				}
              				setWithLastConsumed(current, "update", lv_update_0_0, "update");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 349, ruleUPDATE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUPDATE"


    // $ANTLR start "ruleEND"
    // InternalSiddhiParser.g:16618:1: ruleEND[EObject in_current] returns [EObject current=in_current] : ( (lv_end_0_0= End ) ) ;
    public final EObject ruleEND(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleEND_StartIndex = input.index();
        Token lv_end_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 350) ) { return current; }
            // InternalSiddhiParser.g:16624:2: ( ( (lv_end_0_0= End ) ) )
            // InternalSiddhiParser.g:16625:2: ( (lv_end_0_0= End ) )
            {
            // InternalSiddhiParser.g:16625:2: ( (lv_end_0_0= End ) )
            // InternalSiddhiParser.g:16626:3: (lv_end_0_0= End )
            {
            // InternalSiddhiParser.g:16626:3: (lv_end_0_0= End )
            // InternalSiddhiParser.g:16627:4: lv_end_0_0= End
            {
            lv_end_0_0=(Token)match(input,End,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_end_0_0, grammarAccess.getENDAccess().getEndEndKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getENDRule());
              				}
              				setWithLastConsumed(current, "end", lv_end_0_0, "end");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 350, ruleEND_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEND"


    // $ANTLR start "rulePARTITION"
    // InternalSiddhiParser.g:16643:1: rulePARTITION[EObject in_current] returns [EObject current=in_current] : ( (lv_partition_0_0= Partition ) ) ;
    public final EObject rulePARTITION(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int rulePARTITION_StartIndex = input.index();
        Token lv_partition_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 351) ) { return current; }
            // InternalSiddhiParser.g:16649:2: ( ( (lv_partition_0_0= Partition ) ) )
            // InternalSiddhiParser.g:16650:2: ( (lv_partition_0_0= Partition ) )
            {
            // InternalSiddhiParser.g:16650:2: ( (lv_partition_0_0= Partition ) )
            // InternalSiddhiParser.g:16651:3: (lv_partition_0_0= Partition )
            {
            // InternalSiddhiParser.g:16651:3: (lv_partition_0_0= Partition )
            // InternalSiddhiParser.g:16652:4: lv_partition_0_0= Partition
            {
            lv_partition_0_0=(Token)match(input,Partition,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_partition_0_0, grammarAccess.getPARTITIONAccess().getPartitionPartitionKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getPARTITIONRule());
              				}
              				setWithLastConsumed(current, "partition", lv_partition_0_0, "partition");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 351, rulePARTITION_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePARTITION"


    // $ANTLR start "ruleWITH"
    // InternalSiddhiParser.g:16668:1: ruleWITH[EObject in_current] returns [EObject current=in_current] : ( (lv_wi_0_0= With ) ) ;
    public final EObject ruleWITH(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWITH_StartIndex = input.index();
        Token lv_wi_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 352) ) { return current; }
            // InternalSiddhiParser.g:16674:2: ( ( (lv_wi_0_0= With ) ) )
            // InternalSiddhiParser.g:16675:2: ( (lv_wi_0_0= With ) )
            {
            // InternalSiddhiParser.g:16675:2: ( (lv_wi_0_0= With ) )
            // InternalSiddhiParser.g:16676:3: (lv_wi_0_0= With )
            {
            // InternalSiddhiParser.g:16676:3: (lv_wi_0_0= With )
            // InternalSiddhiParser.g:16677:4: lv_wi_0_0= With
            {
            lv_wi_0_0=(Token)match(input,With,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_wi_0_0, grammarAccess.getWITHAccess().getWiWithKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getWITHRule());
              				}
              				setWithLastConsumed(current, "wi", lv_wi_0_0, "with");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 352, ruleWITH_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWITH"


    // $ANTLR start "ruleAGGREGATION"
    // InternalSiddhiParser.g:16693:1: ruleAGGREGATION[EObject in_current] returns [EObject current=in_current] : ( (lv_aggre_0_0= Aggregation ) ) ;
    public final EObject ruleAGGREGATION(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleAGGREGATION_StartIndex = input.index();
        Token lv_aggre_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 353) ) { return current; }
            // InternalSiddhiParser.g:16699:2: ( ( (lv_aggre_0_0= Aggregation ) ) )
            // InternalSiddhiParser.g:16700:2: ( (lv_aggre_0_0= Aggregation ) )
            {
            // InternalSiddhiParser.g:16700:2: ( (lv_aggre_0_0= Aggregation ) )
            // InternalSiddhiParser.g:16701:3: (lv_aggre_0_0= Aggregation )
            {
            // InternalSiddhiParser.g:16701:3: (lv_aggre_0_0= Aggregation )
            // InternalSiddhiParser.g:16702:4: lv_aggre_0_0= Aggregation
            {
            lv_aggre_0_0=(Token)match(input,Aggregation,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_aggre_0_0, grammarAccess.getAGGREGATIONAccess().getAggreAggregationKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAGGREGATIONRule());
              				}
              				setWithLastConsumed(current, "aggre", lv_aggre_0_0, "aggregation");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 353, ruleAGGREGATION_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAGGREGATION"


    // $ANTLR start "ruleAGGREGATE"
    // InternalSiddhiParser.g:16718:1: ruleAGGREGATE[EObject in_current] returns [EObject current=in_current] : ( (lv_agrregate_0_0= Aggregate ) ) ;
    public final EObject ruleAGGREGATE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleAGGREGATE_StartIndex = input.index();
        Token lv_agrregate_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 354) ) { return current; }
            // InternalSiddhiParser.g:16724:2: ( ( (lv_agrregate_0_0= Aggregate ) ) )
            // InternalSiddhiParser.g:16725:2: ( (lv_agrregate_0_0= Aggregate ) )
            {
            // InternalSiddhiParser.g:16725:2: ( (lv_agrregate_0_0= Aggregate ) )
            // InternalSiddhiParser.g:16726:3: (lv_agrregate_0_0= Aggregate )
            {
            // InternalSiddhiParser.g:16726:3: (lv_agrregate_0_0= Aggregate )
            // InternalSiddhiParser.g:16727:4: lv_agrregate_0_0= Aggregate
            {
            lv_agrregate_0_0=(Token)match(input,Aggregate,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_agrregate_0_0, grammarAccess.getAGGREGATEAccess().getAgrregateAggregateKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAGGREGATERule());
              				}
              				setWithLastConsumed(current, "agrregate", lv_agrregate_0_0, "aggregate");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 354, ruleAGGREGATE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAGGREGATE"


    // $ANTLR start "ruleSET"
    // InternalSiddhiParser.g:16743:1: ruleSET[EObject in_current] returns [EObject current=in_current] : ( (lv_set_0_0= Set ) ) ;
    public final EObject ruleSET(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSET_StartIndex = input.index();
        Token lv_set_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 355) ) { return current; }
            // InternalSiddhiParser.g:16749:2: ( ( (lv_set_0_0= Set ) ) )
            // InternalSiddhiParser.g:16750:2: ( (lv_set_0_0= Set ) )
            {
            // InternalSiddhiParser.g:16750:2: ( (lv_set_0_0= Set ) )
            // InternalSiddhiParser.g:16751:3: (lv_set_0_0= Set )
            {
            // InternalSiddhiParser.g:16751:3: (lv_set_0_0= Set )
            // InternalSiddhiParser.g:16752:4: lv_set_0_0= Set
            {
            lv_set_0_0=(Token)match(input,Set,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_set_0_0, grammarAccess.getSETAccess().getSetSetKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSETRule());
              				}
              				setWithLastConsumed(current, "set", lv_set_0_0, "set");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 355, ruleSET_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSET"


    // $ANTLR start "rulePER"
    // InternalSiddhiParser.g:16768:1: rulePER[EObject in_current] returns [EObject current=in_current] : ( (lv_per_0_0= Per ) ) ;
    public final EObject rulePER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int rulePER_StartIndex = input.index();
        Token lv_per_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 356) ) { return current; }
            // InternalSiddhiParser.g:16774:2: ( ( (lv_per_0_0= Per ) ) )
            // InternalSiddhiParser.g:16775:2: ( (lv_per_0_0= Per ) )
            {
            // InternalSiddhiParser.g:16775:2: ( (lv_per_0_0= Per ) )
            // InternalSiddhiParser.g:16776:3: (lv_per_0_0= Per )
            {
            // InternalSiddhiParser.g:16776:3: (lv_per_0_0= Per )
            // InternalSiddhiParser.g:16777:4: lv_per_0_0= Per
            {
            lv_per_0_0=(Token)match(input,Per,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_per_0_0, grammarAccess.getPERAccess().getPerPerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getPERRule());
              				}
              				setWithLastConsumed(current, "per", lv_per_0_0, "per");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 356, rulePER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePER"


    // $ANTLR start "ruleYEARS"
    // InternalSiddhiParser.g:16793:1: ruleYEARS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) ) ;
    public final EObject ruleYEARS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleYEARS_StartIndex = input.index();
        Token lv_year_0_0=null;
        Token lv_years_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 357) ) { return current; }
            // InternalSiddhiParser.g:16799:2: ( ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) ) )
            // InternalSiddhiParser.g:16800:2: ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) )
            {
            // InternalSiddhiParser.g:16800:2: ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==Year) ) {
                alt229=1;
            }
            else if ( (LA229_0==Years) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }
            switch (alt229) {
                case 1 :
                    // InternalSiddhiParser.g:16801:3: ( (lv_year_0_0= Year ) )
                    {
                    // InternalSiddhiParser.g:16801:3: ( (lv_year_0_0= Year ) )
                    // InternalSiddhiParser.g:16802:4: (lv_year_0_0= Year )
                    {
                    // InternalSiddhiParser.g:16802:4: (lv_year_0_0= Year )
                    // InternalSiddhiParser.g:16803:5: lv_year_0_0= Year
                    {
                    lv_year_0_0=(Token)match(input,Year,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_year_0_0, grammarAccess.getYEARSAccess().getYearYearKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getYEARSRule());
                      					}
                      					setWithLastConsumed(current, "year", lv_year_0_0, "year");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:16816:3: ( (lv_years_1_0= Years ) )
                    {
                    // InternalSiddhiParser.g:16816:3: ( (lv_years_1_0= Years ) )
                    // InternalSiddhiParser.g:16817:4: (lv_years_1_0= Years )
                    {
                    // InternalSiddhiParser.g:16817:4: (lv_years_1_0= Years )
                    // InternalSiddhiParser.g:16818:5: lv_years_1_0= Years
                    {
                    lv_years_1_0=(Token)match(input,Years,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_years_1_0, grammarAccess.getYEARSAccess().getYearsYearsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getYEARSRule());
                      					}
                      					setWithLastConsumed(current, "years", lv_years_1_0, "years");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 357, ruleYEARS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleYEARS"


    // $ANTLR start "ruleMONTHS"
    // InternalSiddhiParser.g:16835:1: ruleMONTHS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) ) ;
    public final EObject ruleMONTHS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleMONTHS_StartIndex = input.index();
        Token lv_month_0_0=null;
        Token lv_months_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 358) ) { return current; }
            // InternalSiddhiParser.g:16841:2: ( ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) ) )
            // InternalSiddhiParser.g:16842:2: ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) )
            {
            // InternalSiddhiParser.g:16842:2: ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) )
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==Month) ) {
                alt230=1;
            }
            else if ( (LA230_0==Months) ) {
                alt230=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;
            }
            switch (alt230) {
                case 1 :
                    // InternalSiddhiParser.g:16843:3: ( (lv_month_0_0= Month ) )
                    {
                    // InternalSiddhiParser.g:16843:3: ( (lv_month_0_0= Month ) )
                    // InternalSiddhiParser.g:16844:4: (lv_month_0_0= Month )
                    {
                    // InternalSiddhiParser.g:16844:4: (lv_month_0_0= Month )
                    // InternalSiddhiParser.g:16845:5: lv_month_0_0= Month
                    {
                    lv_month_0_0=(Token)match(input,Month,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_month_0_0, grammarAccess.getMONTHSAccess().getMonthMonthKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMONTHSRule());
                      					}
                      					setWithLastConsumed(current, "month", lv_month_0_0, "month");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:16858:3: ( (lv_months_1_0= Months ) )
                    {
                    // InternalSiddhiParser.g:16858:3: ( (lv_months_1_0= Months ) )
                    // InternalSiddhiParser.g:16859:4: (lv_months_1_0= Months )
                    {
                    // InternalSiddhiParser.g:16859:4: (lv_months_1_0= Months )
                    // InternalSiddhiParser.g:16860:5: lv_months_1_0= Months
                    {
                    lv_months_1_0=(Token)match(input,Months,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_months_1_0, grammarAccess.getMONTHSAccess().getMonthsMonthsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMONTHSRule());
                      					}
                      					setWithLastConsumed(current, "months", lv_months_1_0, "months");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 358, ruleMONTHS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMONTHS"


    // $ANTLR start "ruleWEEKS"
    // InternalSiddhiParser.g:16877:1: ruleWEEKS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) ) ;
    public final EObject ruleWEEKS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWEEKS_StartIndex = input.index();
        Token lv_week_0_0=null;
        Token lv_weeks_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 359) ) { return current; }
            // InternalSiddhiParser.g:16883:2: ( ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) ) )
            // InternalSiddhiParser.g:16884:2: ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) )
            {
            // InternalSiddhiParser.g:16884:2: ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) )
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==Week) ) {
                alt231=1;
            }
            else if ( (LA231_0==Weeks) ) {
                alt231=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;
            }
            switch (alt231) {
                case 1 :
                    // InternalSiddhiParser.g:16885:3: ( (lv_week_0_0= Week ) )
                    {
                    // InternalSiddhiParser.g:16885:3: ( (lv_week_0_0= Week ) )
                    // InternalSiddhiParser.g:16886:4: (lv_week_0_0= Week )
                    {
                    // InternalSiddhiParser.g:16886:4: (lv_week_0_0= Week )
                    // InternalSiddhiParser.g:16887:5: lv_week_0_0= Week
                    {
                    lv_week_0_0=(Token)match(input,Week,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_week_0_0, grammarAccess.getWEEKSAccess().getWeekWeekKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getWEEKSRule());
                      					}
                      					setWithLastConsumed(current, "week", lv_week_0_0, "week");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:16900:3: ( (lv_weeks_1_0= Weeks ) )
                    {
                    // InternalSiddhiParser.g:16900:3: ( (lv_weeks_1_0= Weeks ) )
                    // InternalSiddhiParser.g:16901:4: (lv_weeks_1_0= Weeks )
                    {
                    // InternalSiddhiParser.g:16901:4: (lv_weeks_1_0= Weeks )
                    // InternalSiddhiParser.g:16902:5: lv_weeks_1_0= Weeks
                    {
                    lv_weeks_1_0=(Token)match(input,Weeks,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_weeks_1_0, grammarAccess.getWEEKSAccess().getWeeksWeeksKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getWEEKSRule());
                      					}
                      					setWithLastConsumed(current, "weeks", lv_weeks_1_0, "weeks");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 359, ruleWEEKS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWEEKS"


    // $ANTLR start "ruleDAYS"
    // InternalSiddhiParser.g:16919:1: ruleDAYS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) ) ;
    public final EObject ruleDAYS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDAYS_StartIndex = input.index();
        Token lv_day_0_0=null;
        Token lv_days_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 360) ) { return current; }
            // InternalSiddhiParser.g:16925:2: ( ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) ) )
            // InternalSiddhiParser.g:16926:2: ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) )
            {
            // InternalSiddhiParser.g:16926:2: ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) )
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==Day) ) {
                alt232=1;
            }
            else if ( (LA232_0==Days) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }
            switch (alt232) {
                case 1 :
                    // InternalSiddhiParser.g:16927:3: ( (lv_day_0_0= Day ) )
                    {
                    // InternalSiddhiParser.g:16927:3: ( (lv_day_0_0= Day ) )
                    // InternalSiddhiParser.g:16928:4: (lv_day_0_0= Day )
                    {
                    // InternalSiddhiParser.g:16928:4: (lv_day_0_0= Day )
                    // InternalSiddhiParser.g:16929:5: lv_day_0_0= Day
                    {
                    lv_day_0_0=(Token)match(input,Day,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_day_0_0, grammarAccess.getDAYSAccess().getDayDayKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAYSRule());
                      					}
                      					setWithLastConsumed(current, "day", lv_day_0_0, "day");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:16942:3: ( (lv_days_1_0= Days ) )
                    {
                    // InternalSiddhiParser.g:16942:3: ( (lv_days_1_0= Days ) )
                    // InternalSiddhiParser.g:16943:4: (lv_days_1_0= Days )
                    {
                    // InternalSiddhiParser.g:16943:4: (lv_days_1_0= Days )
                    // InternalSiddhiParser.g:16944:5: lv_days_1_0= Days
                    {
                    lv_days_1_0=(Token)match(input,Days,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_days_1_0, grammarAccess.getDAYSAccess().getDaysDaysKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAYSRule());
                      					}
                      					setWithLastConsumed(current, "days", lv_days_1_0, "days");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 360, ruleDAYS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDAYS"


    // $ANTLR start "ruleHOURS"
    // InternalSiddhiParser.g:16961:1: ruleHOURS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) ) ;
    public final EObject ruleHOURS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleHOURS_StartIndex = input.index();
        Token lv_hour_0_0=null;
        Token lv_hours_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 361) ) { return current; }
            // InternalSiddhiParser.g:16967:2: ( ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) ) )
            // InternalSiddhiParser.g:16968:2: ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) )
            {
            // InternalSiddhiParser.g:16968:2: ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) )
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==Hour) ) {
                alt233=1;
            }
            else if ( (LA233_0==Hours) ) {
                alt233=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;
            }
            switch (alt233) {
                case 1 :
                    // InternalSiddhiParser.g:16969:3: ( (lv_hour_0_0= Hour ) )
                    {
                    // InternalSiddhiParser.g:16969:3: ( (lv_hour_0_0= Hour ) )
                    // InternalSiddhiParser.g:16970:4: (lv_hour_0_0= Hour )
                    {
                    // InternalSiddhiParser.g:16970:4: (lv_hour_0_0= Hour )
                    // InternalSiddhiParser.g:16971:5: lv_hour_0_0= Hour
                    {
                    lv_hour_0_0=(Token)match(input,Hour,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hour_0_0, grammarAccess.getHOURSAccess().getHourHourKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHOURSRule());
                      					}
                      					setWithLastConsumed(current, "hour", lv_hour_0_0, "hour");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:16984:3: ( (lv_hours_1_0= Hours ) )
                    {
                    // InternalSiddhiParser.g:16984:3: ( (lv_hours_1_0= Hours ) )
                    // InternalSiddhiParser.g:16985:4: (lv_hours_1_0= Hours )
                    {
                    // InternalSiddhiParser.g:16985:4: (lv_hours_1_0= Hours )
                    // InternalSiddhiParser.g:16986:5: lv_hours_1_0= Hours
                    {
                    lv_hours_1_0=(Token)match(input,Hours,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hours_1_0, grammarAccess.getHOURSAccess().getHoursHoursKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHOURSRule());
                      					}
                      					setWithLastConsumed(current, "hours", lv_hours_1_0, "hours");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 361, ruleHOURS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHOURS"


    // $ANTLR start "ruleMINUTES"
    // InternalSiddhiParser.g:17003:1: ruleMINUTES[EObject in_current] returns [EObject current=in_current] : ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) ) ;
    public final EObject ruleMINUTES(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleMINUTES_StartIndex = input.index();
        Token lv_minute_0_0=null;
        Token lv_minutes_1_0=null;
        Token lv_min_2_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 362) ) { return current; }
            // InternalSiddhiParser.g:17009:2: ( ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) ) )
            // InternalSiddhiParser.g:17010:2: ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) )
            {
            // InternalSiddhiParser.g:17010:2: ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) )
            int alt234=3;
            switch ( input.LA(1) ) {
            case Minute:
                {
                alt234=1;
                }
                break;
            case Minutes:
                {
                alt234=2;
                }
                break;
            case Min:
                {
                alt234=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }

            switch (alt234) {
                case 1 :
                    // InternalSiddhiParser.g:17011:3: ( (lv_minute_0_0= Minute ) )
                    {
                    // InternalSiddhiParser.g:17011:3: ( (lv_minute_0_0= Minute ) )
                    // InternalSiddhiParser.g:17012:4: (lv_minute_0_0= Minute )
                    {
                    // InternalSiddhiParser.g:17012:4: (lv_minute_0_0= Minute )
                    // InternalSiddhiParser.g:17013:5: lv_minute_0_0= Minute
                    {
                    lv_minute_0_0=(Token)match(input,Minute,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_minute_0_0, grammarAccess.getMINUTESAccess().getMinuteMinuteKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMINUTESRule());
                      					}
                      					setWithLastConsumed(current, "minute", lv_minute_0_0, "minute");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:17026:3: ( (lv_minutes_1_0= Minutes ) )
                    {
                    // InternalSiddhiParser.g:17026:3: ( (lv_minutes_1_0= Minutes ) )
                    // InternalSiddhiParser.g:17027:4: (lv_minutes_1_0= Minutes )
                    {
                    // InternalSiddhiParser.g:17027:4: (lv_minutes_1_0= Minutes )
                    // InternalSiddhiParser.g:17028:5: lv_minutes_1_0= Minutes
                    {
                    lv_minutes_1_0=(Token)match(input,Minutes,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_minutes_1_0, grammarAccess.getMINUTESAccess().getMinutesMinutesKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMINUTESRule());
                      					}
                      					setWithLastConsumed(current, "minutes", lv_minutes_1_0, "minutes");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:17041:3: ( (lv_min_2_0= Min ) )
                    {
                    // InternalSiddhiParser.g:17041:3: ( (lv_min_2_0= Min ) )
                    // InternalSiddhiParser.g:17042:4: (lv_min_2_0= Min )
                    {
                    // InternalSiddhiParser.g:17042:4: (lv_min_2_0= Min )
                    // InternalSiddhiParser.g:17043:5: lv_min_2_0= Min
                    {
                    lv_min_2_0=(Token)match(input,Min,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_min_2_0, grammarAccess.getMINUTESAccess().getMinMinKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMINUTESRule());
                      					}
                      					setWithLastConsumed(current, "min", lv_min_2_0, "min");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 362, ruleMINUTES_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMINUTES"


    // $ANTLR start "ruleSECONDS"
    // InternalSiddhiParser.g:17060:1: ruleSECONDS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) ) ;
    public final EObject ruleSECONDS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSECONDS_StartIndex = input.index();
        Token lv_second_0_0=null;
        Token lv_seconds_1_0=null;
        Token lv_sec_2_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 363) ) { return current; }
            // InternalSiddhiParser.g:17066:2: ( ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) ) )
            // InternalSiddhiParser.g:17067:2: ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) )
            {
            // InternalSiddhiParser.g:17067:2: ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) )
            int alt235=3;
            switch ( input.LA(1) ) {
            case Second:
                {
                alt235=1;
                }
                break;
            case Seconds:
                {
                alt235=2;
                }
                break;
            case Sec:
                {
                alt235=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;
            }

            switch (alt235) {
                case 1 :
                    // InternalSiddhiParser.g:17068:3: ( (lv_second_0_0= Second ) )
                    {
                    // InternalSiddhiParser.g:17068:3: ( (lv_second_0_0= Second ) )
                    // InternalSiddhiParser.g:17069:4: (lv_second_0_0= Second )
                    {
                    // InternalSiddhiParser.g:17069:4: (lv_second_0_0= Second )
                    // InternalSiddhiParser.g:17070:5: lv_second_0_0= Second
                    {
                    lv_second_0_0=(Token)match(input,Second,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_second_0_0, grammarAccess.getSECONDSAccess().getSecondSecondKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSECONDSRule());
                      					}
                      					setWithLastConsumed(current, "second", lv_second_0_0, "second");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:17083:3: ( (lv_seconds_1_0= Seconds ) )
                    {
                    // InternalSiddhiParser.g:17083:3: ( (lv_seconds_1_0= Seconds ) )
                    // InternalSiddhiParser.g:17084:4: (lv_seconds_1_0= Seconds )
                    {
                    // InternalSiddhiParser.g:17084:4: (lv_seconds_1_0= Seconds )
                    // InternalSiddhiParser.g:17085:5: lv_seconds_1_0= Seconds
                    {
                    lv_seconds_1_0=(Token)match(input,Seconds,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_seconds_1_0, grammarAccess.getSECONDSAccess().getSecondsSecondsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSECONDSRule());
                      					}
                      					setWithLastConsumed(current, "seconds", lv_seconds_1_0, "seconds");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:17098:3: ( (lv_sec_2_0= Sec ) )
                    {
                    // InternalSiddhiParser.g:17098:3: ( (lv_sec_2_0= Sec ) )
                    // InternalSiddhiParser.g:17099:4: (lv_sec_2_0= Sec )
                    {
                    // InternalSiddhiParser.g:17099:4: (lv_sec_2_0= Sec )
                    // InternalSiddhiParser.g:17100:5: lv_sec_2_0= Sec
                    {
                    lv_sec_2_0=(Token)match(input,Sec,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_sec_2_0, grammarAccess.getSECONDSAccess().getSecSecKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSECONDSRule());
                      					}
                      					setWithLastConsumed(current, "sec", lv_sec_2_0, "sec");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 363, ruleSECONDS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSECONDS"


    // $ANTLR start "ruleMILLISECONDS"
    // InternalSiddhiParser.g:17117:1: ruleMILLISECONDS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) ) ;
    public final EObject ruleMILLISECONDS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleMILLISECONDS_StartIndex = input.index();
        Token lv_millisecond_0_0=null;
        Token lv_milliseconds_1_0=null;
        Token lv_millisec_2_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 364) ) { return current; }
            // InternalSiddhiParser.g:17123:2: ( ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) ) )
            // InternalSiddhiParser.g:17124:2: ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) )
            {
            // InternalSiddhiParser.g:17124:2: ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) )
            int alt236=3;
            switch ( input.LA(1) ) {
            case Millisecond:
                {
                alt236=1;
                }
                break;
            case Milliseconds:
                {
                alt236=2;
                }
                break;
            case Millisec:
                {
                alt236=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 236, 0, input);

                throw nvae;
            }

            switch (alt236) {
                case 1 :
                    // InternalSiddhiParser.g:17125:3: ( (lv_millisecond_0_0= Millisecond ) )
                    {
                    // InternalSiddhiParser.g:17125:3: ( (lv_millisecond_0_0= Millisecond ) )
                    // InternalSiddhiParser.g:17126:4: (lv_millisecond_0_0= Millisecond )
                    {
                    // InternalSiddhiParser.g:17126:4: (lv_millisecond_0_0= Millisecond )
                    // InternalSiddhiParser.g:17127:5: lv_millisecond_0_0= Millisecond
                    {
                    lv_millisecond_0_0=(Token)match(input,Millisecond,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_millisecond_0_0, grammarAccess.getMILLISECONDSAccess().getMillisecondMillisecondKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMILLISECONDSRule());
                      					}
                      					setWithLastConsumed(current, "millisecond", lv_millisecond_0_0, "millisecond");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:17140:3: ( (lv_milliseconds_1_0= Milliseconds ) )
                    {
                    // InternalSiddhiParser.g:17140:3: ( (lv_milliseconds_1_0= Milliseconds ) )
                    // InternalSiddhiParser.g:17141:4: (lv_milliseconds_1_0= Milliseconds )
                    {
                    // InternalSiddhiParser.g:17141:4: (lv_milliseconds_1_0= Milliseconds )
                    // InternalSiddhiParser.g:17142:5: lv_milliseconds_1_0= Milliseconds
                    {
                    lv_milliseconds_1_0=(Token)match(input,Milliseconds,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_milliseconds_1_0, grammarAccess.getMILLISECONDSAccess().getMillisecondsMillisecondsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMILLISECONDSRule());
                      					}
                      					setWithLastConsumed(current, "milliseconds", lv_milliseconds_1_0, "milliseconds");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:17155:3: ( (lv_millisec_2_0= Millisec ) )
                    {
                    // InternalSiddhiParser.g:17155:3: ( (lv_millisec_2_0= Millisec ) )
                    // InternalSiddhiParser.g:17156:4: (lv_millisec_2_0= Millisec )
                    {
                    // InternalSiddhiParser.g:17156:4: (lv_millisec_2_0= Millisec )
                    // InternalSiddhiParser.g:17157:5: lv_millisec_2_0= Millisec
                    {
                    lv_millisec_2_0=(Token)match(input,Millisec,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_millisec_2_0, grammarAccess.getMILLISECONDSAccess().getMillisecMillisecKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMILLISECONDSRule());
                      					}
                      					setWithLastConsumed(current, "millisec", lv_millisec_2_0, "millisec");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 364, ruleMILLISECONDS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMILLISECONDS"


    // $ANTLR start "ruleFALSE"
    // InternalSiddhiParser.g:17174:1: ruleFALSE[EObject in_current] returns [EObject current=in_current] : ( (lv_fals_0_0= False ) ) ;
    public final EObject ruleFALSE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFALSE_StartIndex = input.index();
        Token lv_fals_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 365) ) { return current; }
            // InternalSiddhiParser.g:17180:2: ( ( (lv_fals_0_0= False ) ) )
            // InternalSiddhiParser.g:17181:2: ( (lv_fals_0_0= False ) )
            {
            // InternalSiddhiParser.g:17181:2: ( (lv_fals_0_0= False ) )
            // InternalSiddhiParser.g:17182:3: (lv_fals_0_0= False )
            {
            // InternalSiddhiParser.g:17182:3: (lv_fals_0_0= False )
            // InternalSiddhiParser.g:17183:4: lv_fals_0_0= False
            {
            lv_fals_0_0=(Token)match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_fals_0_0, grammarAccess.getFALSEAccess().getFalsFalseKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFALSERule());
              				}
              				setWithLastConsumed(current, "fals", lv_fals_0_0, "false");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 365, ruleFALSE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFALSE"


    // $ANTLR start "ruleTRUE"
    // InternalSiddhiParser.g:17199:1: ruleTRUE[EObject in_current] returns [EObject current=in_current] : ( (lv_tr_0_0= True ) ) ;
    public final EObject ruleTRUE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleTRUE_StartIndex = input.index();
        Token lv_tr_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 366) ) { return current; }
            // InternalSiddhiParser.g:17205:2: ( ( (lv_tr_0_0= True ) ) )
            // InternalSiddhiParser.g:17206:2: ( (lv_tr_0_0= True ) )
            {
            // InternalSiddhiParser.g:17206:2: ( (lv_tr_0_0= True ) )
            // InternalSiddhiParser.g:17207:3: (lv_tr_0_0= True )
            {
            // InternalSiddhiParser.g:17207:3: (lv_tr_0_0= True )
            // InternalSiddhiParser.g:17208:4: lv_tr_0_0= True
            {
            lv_tr_0_0=(Token)match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_tr_0_0, grammarAccess.getTRUEAccess().getTrTrueKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTRUERule());
              				}
              				setWithLastConsumed(current, "tr", lv_tr_0_0, "true");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 366, ruleTRUE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTRUE"


    // $ANTLR start "entryRuleCOL"
    // InternalSiddhiParser.g:17223:1: entryRuleCOL returns [String current=null] : iv_ruleCOL= ruleCOL EOF ;
    public final String entryRuleCOL() throws RecognitionException {
        String current = null;
        int entryRuleCOL_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCOL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 367) ) { return current; }
            // InternalSiddhiParser.g:17223:43: (iv_ruleCOL= ruleCOL EOF )
            // InternalSiddhiParser.g:17224:2: iv_ruleCOL= ruleCOL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCOLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCOL=ruleCOL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCOL.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 367, entryRuleCOL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCOL"


    // $ANTLR start "ruleCOL"
    // InternalSiddhiParser.g:17230:1: ruleCOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Colon ;
    public final AntlrDatatypeRuleToken ruleCOL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCOL_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 368) ) { return current; }
            // InternalSiddhiParser.g:17236:2: (kw= Colon )
            // InternalSiddhiParser.g:17237:2: kw= Colon
            {
            kw=(Token)match(input,Colon,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCOLAccess().getColonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 368, ruleCOL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCOL"


    // $ANTLR start "entryRuleDOT"
    // InternalSiddhiParser.g:17245:1: entryRuleDOT returns [String current=null] : iv_ruleDOT= ruleDOT EOF ;
    public final String entryRuleDOT() throws RecognitionException {
        String current = null;
        int entryRuleDOT_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleDOT = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 369) ) { return current; }
            // InternalSiddhiParser.g:17245:43: (iv_ruleDOT= ruleDOT EOF )
            // InternalSiddhiParser.g:17246:2: iv_ruleDOT= ruleDOT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDOTRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDOT=ruleDOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDOT.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 369, entryRuleDOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDOT"


    // $ANTLR start "ruleDOT"
    // InternalSiddhiParser.g:17252:1: ruleDOT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStop ;
    public final AntlrDatatypeRuleToken ruleDOT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleDOT_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 370) ) { return current; }
            // InternalSiddhiParser.g:17258:2: (kw= FullStop )
            // InternalSiddhiParser.g:17259:2: kw= FullStop
            {
            kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDOTAccess().getFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 370, ruleDOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDOT"


    // $ANTLR start "entryRuleTRIPLE_DOT"
    // InternalSiddhiParser.g:17267:1: entryRuleTRIPLE_DOT returns [String current=null] : iv_ruleTRIPLE_DOT= ruleTRIPLE_DOT EOF ;
    public final String entryRuleTRIPLE_DOT() throws RecognitionException {
        String current = null;
        int entryRuleTRIPLE_DOT_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleTRIPLE_DOT = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 371) ) { return current; }
            // InternalSiddhiParser.g:17267:50: (iv_ruleTRIPLE_DOT= ruleTRIPLE_DOT EOF )
            // InternalSiddhiParser.g:17268:2: iv_ruleTRIPLE_DOT= ruleTRIPLE_DOT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRIPLE_DOTRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTRIPLE_DOT=ruleTRIPLE_DOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRIPLE_DOT.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 371, entryRuleTRIPLE_DOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTRIPLE_DOT"


    // $ANTLR start "ruleTRIPLE_DOT"
    // InternalSiddhiParser.g:17274:1: ruleTRIPLE_DOT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStopFullStopFullStop ;
    public final AntlrDatatypeRuleToken ruleTRIPLE_DOT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleTRIPLE_DOT_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 372) ) { return current; }
            // InternalSiddhiParser.g:17280:2: (kw= FullStopFullStopFullStop )
            // InternalSiddhiParser.g:17281:2: kw= FullStopFullStopFullStop
            {
            kw=(Token)match(input,FullStopFullStopFullStop,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getTRIPLE_DOTAccess().getFullStopFullStopFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 372, ruleTRIPLE_DOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTRIPLE_DOT"


    // $ANTLR start "entryRuleOPEN_PAR"
    // InternalSiddhiParser.g:17289:1: entryRuleOPEN_PAR returns [String current=null] : iv_ruleOPEN_PAR= ruleOPEN_PAR EOF ;
    public final String entryRuleOPEN_PAR() throws RecognitionException {
        String current = null;
        int entryRuleOPEN_PAR_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleOPEN_PAR = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 373) ) { return current; }
            // InternalSiddhiParser.g:17289:48: (iv_ruleOPEN_PAR= ruleOPEN_PAR EOF )
            // InternalSiddhiParser.g:17290:2: iv_ruleOPEN_PAR= ruleOPEN_PAR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPEN_PARRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOPEN_PAR=ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPEN_PAR.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 373, entryRuleOPEN_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOPEN_PAR"


    // $ANTLR start "ruleOPEN_PAR"
    // InternalSiddhiParser.g:17296:1: ruleOPEN_PAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= LeftParenthesis ;
    public final AntlrDatatypeRuleToken ruleOPEN_PAR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleOPEN_PAR_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 374) ) { return current; }
            // InternalSiddhiParser.g:17302:2: (kw= LeftParenthesis )
            // InternalSiddhiParser.g:17303:2: kw= LeftParenthesis
            {
            kw=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOPEN_PARAccess().getLeftParenthesisKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 374, ruleOPEN_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOPEN_PAR"


    // $ANTLR start "entryRuleCLOSE_PAR"
    // InternalSiddhiParser.g:17311:1: entryRuleCLOSE_PAR returns [String current=null] : iv_ruleCLOSE_PAR= ruleCLOSE_PAR EOF ;
    public final String entryRuleCLOSE_PAR() throws RecognitionException {
        String current = null;
        int entryRuleCLOSE_PAR_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCLOSE_PAR = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 375) ) { return current; }
            // InternalSiddhiParser.g:17311:49: (iv_ruleCLOSE_PAR= ruleCLOSE_PAR EOF )
            // InternalSiddhiParser.g:17312:2: iv_ruleCLOSE_PAR= ruleCLOSE_PAR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCLOSE_PARRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCLOSE_PAR=ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCLOSE_PAR.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 375, entryRuleCLOSE_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCLOSE_PAR"


    // $ANTLR start "ruleCLOSE_PAR"
    // InternalSiddhiParser.g:17318:1: ruleCLOSE_PAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= RightParenthesis ;
    public final AntlrDatatypeRuleToken ruleCLOSE_PAR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCLOSE_PAR_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 376) ) { return current; }
            // InternalSiddhiParser.g:17324:2: (kw= RightParenthesis )
            // InternalSiddhiParser.g:17325:2: kw= RightParenthesis
            {
            kw=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCLOSE_PARAccess().getRightParenthesisKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 376, ruleCLOSE_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCLOSE_PAR"


    // $ANTLR start "entryRuleOPEN_SQARE_BRACKETS"
    // InternalSiddhiParser.g:17333:1: entryRuleOPEN_SQARE_BRACKETS returns [String current=null] : iv_ruleOPEN_SQARE_BRACKETS= ruleOPEN_SQARE_BRACKETS EOF ;
    public final String entryRuleOPEN_SQARE_BRACKETS() throws RecognitionException {
        String current = null;
        int entryRuleOPEN_SQARE_BRACKETS_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleOPEN_SQARE_BRACKETS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 377) ) { return current; }
            // InternalSiddhiParser.g:17333:59: (iv_ruleOPEN_SQARE_BRACKETS= ruleOPEN_SQARE_BRACKETS EOF )
            // InternalSiddhiParser.g:17334:2: iv_ruleOPEN_SQARE_BRACKETS= ruleOPEN_SQARE_BRACKETS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPEN_SQARE_BRACKETSRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOPEN_SQARE_BRACKETS=ruleOPEN_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPEN_SQARE_BRACKETS.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 377, entryRuleOPEN_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOPEN_SQARE_BRACKETS"


    // $ANTLR start "ruleOPEN_SQARE_BRACKETS"
    // InternalSiddhiParser.g:17340:1: ruleOPEN_SQARE_BRACKETS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= LeftSquareBracket ;
    public final AntlrDatatypeRuleToken ruleOPEN_SQARE_BRACKETS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleOPEN_SQARE_BRACKETS_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 378) ) { return current; }
            // InternalSiddhiParser.g:17346:2: (kw= LeftSquareBracket )
            // InternalSiddhiParser.g:17347:2: kw= LeftSquareBracket
            {
            kw=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOPEN_SQARE_BRACKETSAccess().getLeftSquareBracketKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 378, ruleOPEN_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOPEN_SQARE_BRACKETS"


    // $ANTLR start "entryRuleCLOSE_SQARE_BRACKETS"
    // InternalSiddhiParser.g:17355:1: entryRuleCLOSE_SQARE_BRACKETS returns [String current=null] : iv_ruleCLOSE_SQARE_BRACKETS= ruleCLOSE_SQARE_BRACKETS EOF ;
    public final String entryRuleCLOSE_SQARE_BRACKETS() throws RecognitionException {
        String current = null;
        int entryRuleCLOSE_SQARE_BRACKETS_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCLOSE_SQARE_BRACKETS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 379) ) { return current; }
            // InternalSiddhiParser.g:17355:60: (iv_ruleCLOSE_SQARE_BRACKETS= ruleCLOSE_SQARE_BRACKETS EOF )
            // InternalSiddhiParser.g:17356:2: iv_ruleCLOSE_SQARE_BRACKETS= ruleCLOSE_SQARE_BRACKETS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCLOSE_SQARE_BRACKETSRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCLOSE_SQARE_BRACKETS=ruleCLOSE_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCLOSE_SQARE_BRACKETS.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 379, entryRuleCLOSE_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCLOSE_SQARE_BRACKETS"


    // $ANTLR start "ruleCLOSE_SQARE_BRACKETS"
    // InternalSiddhiParser.g:17362:1: ruleCLOSE_SQARE_BRACKETS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= RightSquareBracket ;
    public final AntlrDatatypeRuleToken ruleCLOSE_SQARE_BRACKETS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCLOSE_SQARE_BRACKETS_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 380) ) { return current; }
            // InternalSiddhiParser.g:17368:2: (kw= RightSquareBracket )
            // InternalSiddhiParser.g:17369:2: kw= RightSquareBracket
            {
            kw=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCLOSE_SQARE_BRACKETSAccess().getRightSquareBracketKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 380, ruleCLOSE_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCLOSE_SQARE_BRACKETS"


    // $ANTLR start "entryRuleMINUS"
    // InternalSiddhiParser.g:17377:1: entryRuleMINUS returns [String current=null] : iv_ruleMINUS= ruleMINUS EOF ;
    public final String entryRuleMINUS() throws RecognitionException {
        String current = null;
        int entryRuleMINUS_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleMINUS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 381) ) { return current; }
            // InternalSiddhiParser.g:17377:45: (iv_ruleMINUS= ruleMINUS EOF )
            // InternalSiddhiParser.g:17378:2: iv_ruleMINUS= ruleMINUS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMINUSRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMINUS=ruleMINUS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMINUS.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 381, entryRuleMINUS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMINUS"


    // $ANTLR start "ruleMINUS"
    // InternalSiddhiParser.g:17384:1: ruleMINUS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= HyphenMinus ;
    public final AntlrDatatypeRuleToken ruleMINUS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleMINUS_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 382) ) { return current; }
            // InternalSiddhiParser.g:17390:2: (kw= HyphenMinus )
            // InternalSiddhiParser.g:17391:2: kw= HyphenMinus
            {
            kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getMINUSAccess().getHyphenMinusKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 382, ruleMINUS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMINUS"


    // $ANTLR start "entryRuleIdNew"
    // InternalSiddhiParser.g:17399:1: entryRuleIdNew returns [String current=null] : iv_ruleIdNew= ruleIdNew EOF ;
    public final String entryRuleIdNew() throws RecognitionException {
        String current = null;
        int entryRuleIdNew_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleIdNew = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 383) ) { return current; }
            // InternalSiddhiParser.g:17399:45: (iv_ruleIdNew= ruleIdNew EOF )
            // InternalSiddhiParser.g:17400:2: iv_ruleIdNew= ruleIdNew EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdNewRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdNew=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdNew.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 383, entryRuleIdNew_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleIdNew"


    // $ANTLR start "ruleIdNew"
    // InternalSiddhiParser.g:17406:1: ruleIdNew returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleIdNew() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleIdNew_StartIndex = input.index();
        Token this_ID_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 384) ) { return current; }
            // InternalSiddhiParser.g:17412:2: (this_ID_0= RULE_ID )
            // InternalSiddhiParser.g:17413:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getIdNewAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 384, ruleIdNew_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIdNew"

    // $ANTLR start synpred1_InternalSiddhiParser
    public final void synpred1_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:131:6: ( ( ruleDefinitionStream ) )
        // InternalSiddhiParser.g:131:7: ( ruleDefinitionStream )
        {
        // InternalSiddhiParser.g:131:7: ( ruleDefinitionStream )
        // InternalSiddhiParser.g:132:7: ruleDefinitionStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred1_InternalSiddhiParser

    // $ANTLR start synpred2_InternalSiddhiParser
    public final void synpred2_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:155:6: ( ( ruleDefinitionTable ) )
        // InternalSiddhiParser.g:155:7: ( ruleDefinitionTable )
        {
        // InternalSiddhiParser.g:155:7: ( ruleDefinitionTable )
        // InternalSiddhiParser.g:156:7: ruleDefinitionTable
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalSiddhiParser

    // $ANTLR start synpred3_InternalSiddhiParser
    public final void synpred3_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:179:6: ( ( ruleDefinitionWindow ) )
        // InternalSiddhiParser.g:179:7: ( ruleDefinitionWindow )
        {
        // InternalSiddhiParser.g:179:7: ( ruleDefinitionWindow )
        // InternalSiddhiParser.g:180:7: ruleDefinitionWindow
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionWindow();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred3_InternalSiddhiParser

    // $ANTLR start synpred4_InternalSiddhiParser
    public final void synpred4_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:203:6: ( ( ruleDefinitionTrigger ) )
        // InternalSiddhiParser.g:203:7: ( ruleDefinitionTrigger )
        {
        // InternalSiddhiParser.g:203:7: ( ruleDefinitionTrigger )
        // InternalSiddhiParser.g:204:7: ruleDefinitionTrigger
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTrigger();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalSiddhiParser

    // $ANTLR start synpred5_InternalSiddhiParser
    public final void synpred5_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:227:6: ( ( ruleDefinitionFunction ) )
        // InternalSiddhiParser.g:227:7: ( ruleDefinitionFunction )
        {
        // InternalSiddhiParser.g:227:7: ( ruleDefinitionFunction )
        // InternalSiddhiParser.g:228:7: ruleDefinitionFunction
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalSiddhiParser

    // $ANTLR start synpred6_InternalSiddhiParser
    public final void synpred6_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:251:6: ( ( ruleDefinitionAggregation ) )
        // InternalSiddhiParser.g:251:7: ( ruleDefinitionAggregation )
        {
        // InternalSiddhiParser.g:251:7: ( ruleDefinitionAggregation )
        // InternalSiddhiParser.g:252:7: ruleDefinitionAggregation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionAggregation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalSiddhiParser

    // $ANTLR start synpred7_InternalSiddhiParser
    public final void synpred7_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:279:8: ( ( ruleDefinitionStream ) )
        // InternalSiddhiParser.g:279:9: ( ruleDefinitionStream )
        {
        // InternalSiddhiParser.g:279:9: ( ruleDefinitionStream )
        // InternalSiddhiParser.g:280:9: ruleDefinitionStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalSiddhiParser

    // $ANTLR start synpred8_InternalSiddhiParser
    public final void synpred8_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:289:8: ( ( ruleDefinitionTable ) )
        // InternalSiddhiParser.g:289:9: ( ruleDefinitionTable )
        {
        // InternalSiddhiParser.g:289:9: ( ruleDefinitionTable )
        // InternalSiddhiParser.g:290:9: ruleDefinitionTable
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalSiddhiParser

    // $ANTLR start synpred9_InternalSiddhiParser
    public final void synpred9_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:299:8: ( ( ruleDefinitionWindow ) )
        // InternalSiddhiParser.g:299:9: ( ruleDefinitionWindow )
        {
        // InternalSiddhiParser.g:299:9: ( ruleDefinitionWindow )
        // InternalSiddhiParser.g:300:9: ruleDefinitionWindow
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionWindow();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalSiddhiParser

    // $ANTLR start synpred10_InternalSiddhiParser
    public final void synpred10_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:309:8: ( ( ruleDefinitionTrigger ) )
        // InternalSiddhiParser.g:309:9: ( ruleDefinitionTrigger )
        {
        // InternalSiddhiParser.g:309:9: ( ruleDefinitionTrigger )
        // InternalSiddhiParser.g:310:9: ruleDefinitionTrigger
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTrigger();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred10_InternalSiddhiParser

    // $ANTLR start synpred11_InternalSiddhiParser
    public final void synpred11_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:319:8: ( ( ruleDefinitionFunction ) )
        // InternalSiddhiParser.g:319:9: ( ruleDefinitionFunction )
        {
        // InternalSiddhiParser.g:319:9: ( ruleDefinitionFunction )
        // InternalSiddhiParser.g:320:9: ruleDefinitionFunction
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred11_InternalSiddhiParser

    // $ANTLR start synpred12_InternalSiddhiParser
    public final void synpred12_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:329:8: ( ( ruleDefinitionAggregation ) )
        // InternalSiddhiParser.g:329:9: ( ruleDefinitionAggregation )
        {
        // InternalSiddhiParser.g:329:9: ( ruleDefinitionAggregation )
        // InternalSiddhiParser.g:330:9: ruleDefinitionAggregation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionAggregation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalSiddhiParser

    // $ANTLR start synpred13_InternalSiddhiParser
    public final void synpred13_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:275:5: ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )
        // InternalSiddhiParser.g:275:6: ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) )
        {
        // InternalSiddhiParser.g:275:6: ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) )
        // InternalSiddhiParser.g:276:6: Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) )
        {
        match(input,Semicolon,FollowSets000.FOLLOW_7); if (state.failed) return ;
        // InternalSiddhiParser.g:277:6: ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) )
        int alt237=6;
        int LA237_0 = input.LA(1);

        if ( (LA237_0==CommercialAt) ) {
            int LA237_1 = input.LA(2);

            if ( (synpred7_InternalSiddhiParser()) ) {
                alt237=1;
            }
            else if ( (synpred8_InternalSiddhiParser()) ) {
                alt237=2;
            }
            else if ( (synpred9_InternalSiddhiParser()) ) {
                alt237=3;
            }
            else if ( (synpred12_InternalSiddhiParser()) ) {
                alt237=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 1, input);

                throw nvae;
            }
        }
        else if ( (LA237_0==Define) ) {
            int LA237_2 = input.LA(2);

            if ( (synpred7_InternalSiddhiParser()) ) {
                alt237=1;
            }
            else if ( (synpred8_InternalSiddhiParser()) ) {
                alt237=2;
            }
            else if ( (synpred9_InternalSiddhiParser()) ) {
                alt237=3;
            }
            else if ( (synpred10_InternalSiddhiParser()) ) {
                alt237=4;
            }
            else if ( (synpred11_InternalSiddhiParser()) ) {
                alt237=5;
            }
            else if ( (synpred12_InternalSiddhiParser()) ) {
                alt237=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 2, input);

                throw nvae;
            }
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 237, 0, input);

            throw nvae;
        }
        switch (alt237) {
            case 1 :
                // InternalSiddhiParser.g:278:7: ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) )
                {
                // InternalSiddhiParser.g:278:7: ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) )
                // InternalSiddhiParser.g:279:8: ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream )
                {
                // InternalSiddhiParser.g:283:8: ( ruleDefinitionStream )
                // InternalSiddhiParser.g:284:9: ruleDefinitionStream
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionStream();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:288:7: ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) )
                {
                // InternalSiddhiParser.g:288:7: ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) )
                // InternalSiddhiParser.g:289:8: ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable )
                {
                // InternalSiddhiParser.g:293:8: ( ruleDefinitionTable )
                // InternalSiddhiParser.g:294:9: ruleDefinitionTable
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionTable();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalSiddhiParser.g:298:7: ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) )
                {
                // InternalSiddhiParser.g:298:7: ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) )
                // InternalSiddhiParser.g:299:8: ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow )
                {
                // InternalSiddhiParser.g:303:8: ( ruleDefinitionWindow )
                // InternalSiddhiParser.g:304:9: ruleDefinitionWindow
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionWindow();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalSiddhiParser.g:308:7: ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) )
                {
                // InternalSiddhiParser.g:308:7: ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) )
                // InternalSiddhiParser.g:309:8: ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger )
                {
                // InternalSiddhiParser.g:313:8: ( ruleDefinitionTrigger )
                // InternalSiddhiParser.g:314:9: ruleDefinitionTrigger
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionTrigger();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 5 :
                // InternalSiddhiParser.g:318:7: ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) )
                {
                // InternalSiddhiParser.g:318:7: ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) )
                // InternalSiddhiParser.g:319:8: ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction )
                {
                // InternalSiddhiParser.g:323:8: ( ruleDefinitionFunction )
                // InternalSiddhiParser.g:324:9: ruleDefinitionFunction
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 6 :
                // InternalSiddhiParser.g:328:7: ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) )
                {
                // InternalSiddhiParser.g:328:7: ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) )
                // InternalSiddhiParser.g:329:8: ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation )
                {
                // InternalSiddhiParser.g:333:8: ( ruleDefinitionAggregation )
                // InternalSiddhiParser.g:334:9: ruleDefinitionAggregation
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionAggregation();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred13_InternalSiddhiParser

    // $ANTLR start synpred14_InternalSiddhiParser
    public final void synpred14_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:347:8: ( ( ruleDefinitionStream ) )
        // InternalSiddhiParser.g:347:9: ( ruleDefinitionStream )
        {
        // InternalSiddhiParser.g:347:9: ( ruleDefinitionStream )
        // InternalSiddhiParser.g:348:9: ruleDefinitionStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalSiddhiParser

    // $ANTLR start synpred15_InternalSiddhiParser
    public final void synpred15_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:371:8: ( ( ruleDefinitionTable ) )
        // InternalSiddhiParser.g:371:9: ( ruleDefinitionTable )
        {
        // InternalSiddhiParser.g:371:9: ( ruleDefinitionTable )
        // InternalSiddhiParser.g:372:9: ruleDefinitionTable
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalSiddhiParser

    // $ANTLR start synpred16_InternalSiddhiParser
    public final void synpred16_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:395:8: ( ( ruleDefinitionWindow ) )
        // InternalSiddhiParser.g:395:9: ( ruleDefinitionWindow )
        {
        // InternalSiddhiParser.g:395:9: ( ruleDefinitionWindow )
        // InternalSiddhiParser.g:396:9: ruleDefinitionWindow
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionWindow();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalSiddhiParser

    // $ANTLR start synpred17_InternalSiddhiParser
    public final void synpred17_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:419:8: ( ( ruleDefinitionTrigger ) )
        // InternalSiddhiParser.g:419:9: ( ruleDefinitionTrigger )
        {
        // InternalSiddhiParser.g:419:9: ( ruleDefinitionTrigger )
        // InternalSiddhiParser.g:420:9: ruleDefinitionTrigger
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTrigger();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_InternalSiddhiParser

    // $ANTLR start synpred18_InternalSiddhiParser
    public final void synpred18_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:443:8: ( ( ruleDefinitionFunction ) )
        // InternalSiddhiParser.g:443:9: ( ruleDefinitionFunction )
        {
        // InternalSiddhiParser.g:443:9: ( ruleDefinitionFunction )
        // InternalSiddhiParser.g:444:9: ruleDefinitionFunction
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalSiddhiParser

    // $ANTLR start synpred19_InternalSiddhiParser
    public final void synpred19_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:467:8: ( ( ruleDefinitionAggregation ) )
        // InternalSiddhiParser.g:467:9: ( ruleDefinitionAggregation )
        {
        // InternalSiddhiParser.g:467:9: ( ruleDefinitionAggregation )
        // InternalSiddhiParser.g:468:9: ruleDefinitionAggregation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionAggregation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalSiddhiParser

    // $ANTLR start synpred20_InternalSiddhiParser
    public final void synpred20_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:493:5: ( ( Semicolon ( ( ruleExecutionElement ) ) ) )
        // InternalSiddhiParser.g:493:6: ( Semicolon ( ( ruleExecutionElement ) ) )
        {
        // InternalSiddhiParser.g:493:6: ( Semicolon ( ( ruleExecutionElement ) ) )
        // InternalSiddhiParser.g:494:6: Semicolon ( ( ruleExecutionElement ) )
        {
        match(input,Semicolon,FollowSets000.FOLLOW_6); if (state.failed) return ;
        // InternalSiddhiParser.g:495:6: ( ( ruleExecutionElement ) )
        // InternalSiddhiParser.g:496:7: ( ruleExecutionElement )
        {
        // InternalSiddhiParser.g:496:7: ( ruleExecutionElement )
        // InternalSiddhiParser.g:497:8: ruleExecutionElement
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleExecutionElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred20_InternalSiddhiParser

    // $ANTLR start synpred21_InternalSiddhiParser
    public final void synpred21_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:555:4: ( ( ( ruleExecPartition ) ) )
        // InternalSiddhiParser.g:555:5: ( ( ruleExecPartition ) )
        {
        // InternalSiddhiParser.g:555:5: ( ( ruleExecPartition ) )
        // InternalSiddhiParser.g:556:5: ( ruleExecPartition )
        {
        // InternalSiddhiParser.g:556:5: ( ruleExecPartition )
        // InternalSiddhiParser.g:557:6: ruleExecPartition
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleExecPartition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred21_InternalSiddhiParser

    // $ANTLR start synpred22_InternalSiddhiParser
    public final void synpred22_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:583:4: ( ( ( ruleQuery ) ) )
        // InternalSiddhiParser.g:583:5: ( ( ruleQuery ) )
        {
        // InternalSiddhiParser.g:583:5: ( ( ruleQuery ) )
        // InternalSiddhiParser.g:584:5: ( ruleQuery )
        {
        // InternalSiddhiParser.g:584:5: ( ruleQuery )
        // InternalSiddhiParser.g:585:6: ruleQuery
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleQuery();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalSiddhiParser

    // $ANTLR start synpred23_InternalSiddhiParser
    public final void synpred23_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3318:5: ( ( ruleJoinStream ) )
        // InternalSiddhiParser.g:3318:6: ( ruleJoinStream )
        {
        // InternalSiddhiParser.g:3318:6: ( ruleJoinStream )
        // InternalSiddhiParser.g:3319:6: ruleJoinStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleJoinStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalSiddhiParser

    // $ANTLR start synpred24_InternalSiddhiParser
    public final void synpred24_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3342:5: ( ( ruleSequenceStream ) )
        // InternalSiddhiParser.g:3342:6: ( ruleSequenceStream )
        {
        // InternalSiddhiParser.g:3342:6: ( ruleSequenceStream )
        // InternalSiddhiParser.g:3343:6: ruleSequenceStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalSiddhiParser

    // $ANTLR start synpred25_InternalSiddhiParser
    public final void synpred25_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3366:5: ( ( rulePatternStream ) )
        // InternalSiddhiParser.g:3366:6: ( rulePatternStream )
        {
        // InternalSiddhiParser.g:3366:6: ( rulePatternStream )
        // InternalSiddhiParser.g:3367:6: rulePatternStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rulePatternStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred25_InternalSiddhiParser

    // $ANTLR start synpred26_InternalSiddhiParser
    public final void synpred26_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3430:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )
        // InternalSiddhiParser.g:3430:6: ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) )
        {
        // InternalSiddhiParser.g:3430:6: ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) )
        // InternalSiddhiParser.g:3431:6: ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) )
        {
        // InternalSiddhiParser.g:3431:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:3432:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:3432:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:3433:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:3436:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:3437:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:3437:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:3438:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26_InternalSiddhiParser

    // $ANTLR start synpred27_InternalSiddhiParser
    public final void synpred27_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3566:5: ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )
        // InternalSiddhiParser.g:3566:6: ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) )
        {
        // InternalSiddhiParser.g:3566:6: ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) )
        // InternalSiddhiParser.g:3567:6: ( ( ruleJoinSource ) ) ( ( rulejoins ) )
        {
        // InternalSiddhiParser.g:3567:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:3568:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:3568:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:3569:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_57);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:3572:6: ( ( rulejoins ) )
        // InternalSiddhiParser.g:3573:7: ( rulejoins )
        {
        // InternalSiddhiParser.g:3573:7: ( rulejoins )
        // InternalSiddhiParser.g:3574:8: rulejoins
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rulejoins();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27_InternalSiddhiParser

    // $ANTLR start synpred28_InternalSiddhiParser
    public final void synpred28_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3702:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )
        // InternalSiddhiParser.g:3702:6: ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) )
        {
        // InternalSiddhiParser.g:3702:6: ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) )
        // InternalSiddhiParser.g:3703:6: ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) )
        {
        // InternalSiddhiParser.g:3703:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:3704:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:3704:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:3705:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_54);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:3708:6: ( ( ruleUNIDIRECTIONAL ) )
        // InternalSiddhiParser.g:3709:7: ( ruleUNIDIRECTIONAL )
        {
        // InternalSiddhiParser.g:3709:7: ( ruleUNIDIRECTIONAL )
        // InternalSiddhiParser.g:3710:8: ruleUNIDIRECTIONAL
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleUNIDIRECTIONAL();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred28_InternalSiddhiParser

    // $ANTLR start synpred29_InternalSiddhiParser
    public final void synpred29_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3856:4: ( ruleStandardStream )
        // InternalSiddhiParser.g:3856:5: ruleStandardStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStream();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred29_InternalSiddhiParser

    // $ANTLR start synpred31_InternalSiddhiParser
    public final void synpred31_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4313:4: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:4313:5: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_InternalSiddhiParser

    // $ANTLR start synpred32_InternalSiddhiParser
    public final void synpred32_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4325:4: ( ruleAbsentPatternSourceChain )
        // InternalSiddhiParser.g:4325:5: ruleAbsentPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAbsentPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalSiddhiParser

    // $ANTLR start synpred33_InternalSiddhiParser
    public final void synpred33_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4363:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )
        // InternalSiddhiParser.g:4363:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) )
        {
        // InternalSiddhiParser.g:4363:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) )
        // InternalSiddhiParser.g:4364:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) )
        {
        // InternalSiddhiParser.g:4364:5: ()
        // InternalSiddhiParser.g:4365:5: 
        {
        }

        // InternalSiddhiParser.g:4366:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:4367:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:4367:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:4368:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:4371:5: ( ( ruleEveryPatternSourceChain1 ) )
        // InternalSiddhiParser.g:4372:6: ( ruleEveryPatternSourceChain1 )
        {
        // InternalSiddhiParser.g:4372:6: ( ruleEveryPatternSourceChain1 )
        // InternalSiddhiParser.g:4373:7: ruleEveryPatternSourceChain1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryPatternSourceChain1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred33_InternalSiddhiParser

    // $ANTLR start synpred34_InternalSiddhiParser
    public final void synpred34_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4441:4: ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:4441:5: ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:4441:5: ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:4442:5: ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:4443:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:4444:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:4444:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:4445:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:4449:5: ( ( ruleWithinTime ) )?
        int alt239=2;
        int LA239_0 = input.LA(1);

        if ( (LA239_0==Within) ) {
            alt239=1;
        }
        switch (alt239) {
            case 1 :
                // InternalSiddhiParser.g:4450:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:4450:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:4451:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred34_InternalSiddhiParser

    // $ANTLR start synpred35_InternalSiddhiParser
    public final void synpred35_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4600:4: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:4600:5: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalSiddhiParser

    // $ANTLR start synpred36_InternalSiddhiParser
    public final void synpred36_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4664:4: ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:4664:5: ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:4664:5: ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:4665:5: ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:4666:5: ( ( rulePatternSourceChain ) )
        // InternalSiddhiParser.g:4667:6: ( rulePatternSourceChain )
        {
        // InternalSiddhiParser.g:4667:6: ( rulePatternSourceChain )
        // InternalSiddhiParser.g:4668:7: rulePatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_11);
        rulePatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:4672:5: ( ( ruleWithinTime ) )?
        int alt240=2;
        int LA240_0 = input.LA(1);

        if ( (LA240_0==Within) ) {
            alt240=1;
        }
        switch (alt240) {
            case 1 :
                // InternalSiddhiParser.g:4673:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:4673:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:4674:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred36_InternalSiddhiParser

    // $ANTLR start synpred37_InternalSiddhiParser
    public final void synpred37_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4795:4: ( ( ruleLogicalStatefulSource ) )
        // InternalSiddhiParser.g:4795:5: ( ruleLogicalStatefulSource )
        {
        // InternalSiddhiParser.g:4795:5: ( ruleLogicalStatefulSource )
        // InternalSiddhiParser.g:4796:5: ruleLogicalStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred37_InternalSiddhiParser

    // $ANTLR start synpred38_InternalSiddhiParser
    public final void synpred38_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4819:4: ( ( rulePatternCollectionStatefulSource ) )
        // InternalSiddhiParser.g:4819:5: ( rulePatternCollectionStatefulSource )
        {
        // InternalSiddhiParser.g:4819:5: ( rulePatternCollectionStatefulSource )
        // InternalSiddhiParser.g:4820:5: rulePatternCollectionStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rulePatternCollectionStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred38_InternalSiddhiParser

    // $ANTLR start synpred39_InternalSiddhiParser
    public final void synpred39_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4843:4: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:4843:5: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:4843:5: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:4844:5: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred39_InternalSiddhiParser

    // $ANTLR start synpred40_InternalSiddhiParser
    public final void synpred40_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4867:4: ( ( ruleLogicalAbsentStatefulSource ) )
        // InternalSiddhiParser.g:4867:5: ( ruleLogicalAbsentStatefulSource )
        {
        // InternalSiddhiParser.g:4867:5: ( ruleLogicalAbsentStatefulSource )
        // InternalSiddhiParser.g:4868:5: ruleLogicalAbsentStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalAbsentStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred40_InternalSiddhiParser

    // $ANTLR start synpred41_InternalSiddhiParser
    public final void synpred41_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4910:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )
        // InternalSiddhiParser.g:4910:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) )
        {
        // InternalSiddhiParser.g:4910:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) )
        // InternalSiddhiParser.g:4911:6: ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) )
        {
        // InternalSiddhiParser.g:4911:6: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:4912:7: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:4912:7: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:4913:8: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_64);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:4916:6: ( ( ruleAND ) )
        // InternalSiddhiParser.g:4917:7: ( ruleAND )
        {
        // InternalSiddhiParser.g:4917:7: ( ruleAND )
        // InternalSiddhiParser.g:4918:8: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalSiddhiParser

    // $ANTLR start synpred42_InternalSiddhiParser
    public final void synpred42_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4987:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )
        // InternalSiddhiParser.g:4987:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) )
        {
        // InternalSiddhiParser.g:4987:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) )
        // InternalSiddhiParser.g:4988:6: ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) )
        {
        // InternalSiddhiParser.g:4988:6: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:4989:7: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:4989:7: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:4990:8: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_65);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:4993:6: ( ( ruleOR ) )
        // InternalSiddhiParser.g:4994:7: ( ruleOR )
        {
        // InternalSiddhiParser.g:4994:7: ( ruleOR )
        // InternalSiddhiParser.g:4995:8: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred42_InternalSiddhiParser

    // $ANTLR start synpred43_InternalSiddhiParser
    public final void synpred43_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5316:4: ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )
        // InternalSiddhiParser.g:5316:5: ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
        {
        // InternalSiddhiParser.g:5316:5: ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
        // InternalSiddhiParser.g:5317:5: ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR
        {
        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:5318:5: ( ( ruleLogicalAbsentStatefulSource ) )
        // InternalSiddhiParser.g:5319:6: ( ruleLogicalAbsentStatefulSource )
        {
        // InternalSiddhiParser.g:5319:6: ( ruleLogicalAbsentStatefulSource )
        // InternalSiddhiParser.g:5320:7: ruleLogicalAbsentStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleLogicalAbsentStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_2);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalSiddhiParser

    // $ANTLR start synpred44_InternalSiddhiParser
    public final void synpred44_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5364:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )
        // InternalSiddhiParser.g:5364:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) )
        {
        // InternalSiddhiParser.g:5364:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) )
        // InternalSiddhiParser.g:5365:5: ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) )
        {
        // InternalSiddhiParser.g:5365:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:5366:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:5366:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:5367:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_64);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5370:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:5371:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:5371:6: ( ruleAND )
        // InternalSiddhiParser.g:5372:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_69);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5375:5: ( ( ruleNOT ) )
        // InternalSiddhiParser.g:5376:6: ( ruleNOT )
        {
        // InternalSiddhiParser.g:5376:6: ( ruleNOT )
        // InternalSiddhiParser.g:5377:7: ruleNOT
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleNOT();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5380:5: ( ( ruleBasicSource ) )
        // InternalSiddhiParser.g:5381:6: ( ruleBasicSource )
        {
        // InternalSiddhiParser.g:5381:6: ( ruleBasicSource )
        // InternalSiddhiParser.g:5382:7: ruleBasicSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred44_InternalSiddhiParser

    // $ANTLR start synpred45_InternalSiddhiParser
    public final void synpred45_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5469:5: ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )
        // InternalSiddhiParser.g:5469:6: ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) )
        {
        // InternalSiddhiParser.g:5469:6: ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) )
        // InternalSiddhiParser.g:5470:6: ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) )
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleNOT();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:5471:6: ( ( ruleBasicSource ) )
        // InternalSiddhiParser.g:5472:7: ( ruleBasicSource )
        {
        // InternalSiddhiParser.g:5472:7: ( ruleBasicSource )
        // InternalSiddhiParser.g:5473:8: ruleBasicSource
        {
        pushFollow(FollowSets000.FOLLOW_64);
        ruleBasicSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5476:6: ( ( ruleAND ) )
        // InternalSiddhiParser.g:5477:7: ( ruleAND )
        {
        // InternalSiddhiParser.g:5477:7: ( ruleAND )
        // InternalSiddhiParser.g:5478:8: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred45_InternalSiddhiParser

    // $ANTLR start synpred46_InternalSiddhiParser
    public final void synpred46_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5554:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:5554:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:5554:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:5555:5: ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:5555:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:5556:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:5556:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:5557:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_64);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5560:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:5561:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:5561:6: ( ruleAND )
        // InternalSiddhiParser.g:5562:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_69);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5565:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5566:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5566:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5567:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalSiddhiParser

    // $ANTLR start synpred47_InternalSiddhiParser
    public final void synpred47_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5634:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )
        // InternalSiddhiParser.g:5634:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) )
        {
        // InternalSiddhiParser.g:5634:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) )
        // InternalSiddhiParser.g:5635:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) )
        {
        // InternalSiddhiParser.g:5635:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5636:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5636:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5637:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_64);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5640:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:5641:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:5641:6: ( ruleAND )
        // InternalSiddhiParser.g:5642:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5645:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:5646:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:5646:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:5647:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred47_InternalSiddhiParser

    // $ANTLR start synpred48_InternalSiddhiParser
    public final void synpred48_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5714:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:5714:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:5714:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:5715:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:5715:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5716:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5716:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5717:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_64);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5720:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:5721:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:5721:6: ( ruleAND )
        // InternalSiddhiParser.g:5722:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_69);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5725:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5726:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5726:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5727:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred48_InternalSiddhiParser

    // $ANTLR start synpred49_InternalSiddhiParser
    public final void synpred49_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5794:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:5794:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:5794:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:5795:5: ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:5795:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:5796:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:5796:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:5797:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_65);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5800:5: ( ( ruleOR ) )
        // InternalSiddhiParser.g:5801:6: ( ruleOR )
        {
        // InternalSiddhiParser.g:5801:6: ( ruleOR )
        // InternalSiddhiParser.g:5802:7: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_69);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5805:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5806:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5806:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5807:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred49_InternalSiddhiParser

    // $ANTLR start synpred50_InternalSiddhiParser
    public final void synpred50_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5874:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )
        // InternalSiddhiParser.g:5874:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) )
        {
        // InternalSiddhiParser.g:5874:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) )
        // InternalSiddhiParser.g:5875:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) )
        {
        // InternalSiddhiParser.g:5875:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5876:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5876:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5877:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_65);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5880:5: ( ( ruleOR ) )
        // InternalSiddhiParser.g:5881:6: ( ruleOR )
        {
        // InternalSiddhiParser.g:5881:6: ( ruleOR )
        // InternalSiddhiParser.g:5882:7: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5885:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:5886:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:5886:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:5887:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred50_InternalSiddhiParser

    // $ANTLR start synpred51_InternalSiddhiParser
    public final void synpred51_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5954:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:5954:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:5954:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:5955:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:5955:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5956:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5956:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5957:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_65);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5960:5: ( ( ruleOR ) )
        // InternalSiddhiParser.g:5961:6: ( ruleOR )
        {
        // InternalSiddhiParser.g:5961:6: ( ruleOR )
        // InternalSiddhiParser.g:5962:7: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_69);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5965:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5966:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5966:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5967:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred51_InternalSiddhiParser

    // $ANTLR start synpred52_InternalSiddhiParser
    public final void synpred52_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6052:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:6052:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:6052:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:6053:5: ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:6053:5: ( ruleEVERY )?
        int alt241=2;
        int LA241_0 = input.LA(1);

        if ( (LA241_0==Every) ) {
            alt241=1;
        }
        switch (alt241) {
            case 1 :
                // InternalSiddhiParser.g:6054:6: ruleEVERY
                {
                pushFollow(FollowSets000.FOLLOW_10);
                ruleEVERY();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6057:5: ( ( ruleAbsentPatternSourceChain ) )
        // InternalSiddhiParser.g:6058:6: ( ruleAbsentPatternSourceChain )
        {
        // InternalSiddhiParser.g:6058:6: ( ruleAbsentPatternSourceChain )
        // InternalSiddhiParser.g:6059:7: ruleAbsentPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleAbsentPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6063:5: ( ( ruleWithinTime ) )?
        int alt242=2;
        int LA242_0 = input.LA(1);

        if ( (LA242_0==Within) ) {
            alt242=1;
        }
        switch (alt242) {
            case 1 :
                // InternalSiddhiParser.g:6064:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:6064:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:6065:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred52_InternalSiddhiParser

    // $ANTLR start synpred53_InternalSiddhiParser
    public final void synpred53_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6146:4: ( ruleLeftAbsentPatternSource )
        // InternalSiddhiParser.g:6146:5: ruleLeftAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_InternalSiddhiParser

    // $ANTLR start synpred54_InternalSiddhiParser
    public final void synpred54_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6158:4: ( ruleRightAbsentPatternSource )
        // InternalSiddhiParser.g:6158:5: ruleRightAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_InternalSiddhiParser

    // $ANTLR start synpred57_InternalSiddhiParser
    public final void synpred57_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6387:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )
        // InternalSiddhiParser.g:6387:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) )
        {
        // InternalSiddhiParser.g:6387:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) )
        // InternalSiddhiParser.g:6388:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) )
        {
        // InternalSiddhiParser.g:6388:5: ()
        // InternalSiddhiParser.g:6389:5: 
        {
        }

        // InternalSiddhiParser.g:6390:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:6391:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:6391:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:6392:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6395:5: ( ( ruleLeftAbsentPatternSource1 ) )
        // InternalSiddhiParser.g:6396:6: ( ruleLeftAbsentPatternSource1 )
        {
        // InternalSiddhiParser.g:6396:6: ( ruleLeftAbsentPatternSource1 )
        // InternalSiddhiParser.g:6397:7: ruleLeftAbsentPatternSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentPatternSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred57_InternalSiddhiParser

    // $ANTLR start synpred58_InternalSiddhiParser
    public final void synpred58_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6473:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:6473:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:6473:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:6474:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:6474:5: ()
        // InternalSiddhiParser.g:6475:5: 
        {
        }

        // InternalSiddhiParser.g:6476:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:6477:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:6477:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:6478:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_71); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6481:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:6482:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6482:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:6483:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred58_InternalSiddhiParser

    // $ANTLR start synpred59_InternalSiddhiParser
    public final void synpred59_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6551:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:6551:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:6551:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:6552:5: ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:6552:5: ( ruleEVERY )?
        int alt244=2;
        int LA244_0 = input.LA(1);

        if ( (LA244_0==Every) ) {
            alt244=1;
        }
        switch (alt244) {
            case 1 :
                // InternalSiddhiParser.g:6553:6: ruleEVERY
                {
                pushFollow(FollowSets000.FOLLOW_10);
                ruleEVERY();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6556:5: ( ( ruleLeftAbsentPatternSource ) )
        // InternalSiddhiParser.g:6557:6: ( ruleLeftAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6557:6: ( ruleLeftAbsentPatternSource )
        // InternalSiddhiParser.g:6558:7: ruleLeftAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleLeftAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6562:5: ( ( ruleWithinTime ) )?
        int alt245=2;
        int LA245_0 = input.LA(1);

        if ( (LA245_0==Within) ) {
            alt245=1;
        }
        switch (alt245) {
            case 1 :
                // InternalSiddhiParser.g:6563:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:6563:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:6564:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred59_InternalSiddhiParser

    // $ANTLR start synpred60_InternalSiddhiParser
    public final void synpred60_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6636:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )
        // InternalSiddhiParser.g:6636:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) )
        {
        // InternalSiddhiParser.g:6636:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) )
        // InternalSiddhiParser.g:6637:5: ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) )
        {
        // InternalSiddhiParser.g:6637:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:6638:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6638:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:6639:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return ;
        // InternalSiddhiParser.g:6643:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:6644:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:6644:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:6645:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred60_InternalSiddhiParser

    // $ANTLR start synpred61_InternalSiddhiParser
    public final void synpred61_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6697:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:6697:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:6697:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:6698:5: ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:6698:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:6699:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:6699:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:6700:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return ;
        // InternalSiddhiParser.g:6704:5: ( ( ruleLeftAbsentPatternSource ) )
        // InternalSiddhiParser.g:6705:6: ( ruleLeftAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6705:6: ( ruleLeftAbsentPatternSource )
        // InternalSiddhiParser.g:6706:7: ruleLeftAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred61_InternalSiddhiParser

    // $ANTLR start synpred62_InternalSiddhiParser
    public final void synpred62_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6784:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )
        // InternalSiddhiParser.g:6784:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) )
        {
        // InternalSiddhiParser.g:6784:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) )
        // InternalSiddhiParser.g:6785:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) )
        {
        // InternalSiddhiParser.g:6785:5: ()
        // InternalSiddhiParser.g:6786:5: 
        {
        }

        // InternalSiddhiParser.g:6787:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:6788:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:6788:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:6789:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6792:5: ( ( ruleRightAbsentPatternSource1 ) )
        // InternalSiddhiParser.g:6793:6: ( ruleRightAbsentPatternSource1 )
        {
        // InternalSiddhiParser.g:6793:6: ( ruleRightAbsentPatternSource1 )
        // InternalSiddhiParser.g:6794:7: ruleRightAbsentPatternSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentPatternSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred62_InternalSiddhiParser

    // $ANTLR start synpred63_InternalSiddhiParser
    public final void synpred63_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6870:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:6870:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:6870:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:6871:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:6871:5: ()
        // InternalSiddhiParser.g:6872:5: 
        {
        }

        // InternalSiddhiParser.g:6873:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:6874:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:6874:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:6875:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_71); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6878:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:6879:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6879:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:6880:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred63_InternalSiddhiParser

    // $ANTLR start synpred64_InternalSiddhiParser
    public final void synpred64_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6948:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:6948:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:6948:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:6949:5: ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:6949:5: ( ruleEVERY )?
        int alt246=2;
        int LA246_0 = input.LA(1);

        if ( (LA246_0==Every) ) {
            alt246=1;
        }
        switch (alt246) {
            case 1 :
                // InternalSiddhiParser.g:6950:6: ruleEVERY
                {
                pushFollow(FollowSets000.FOLLOW_10);
                ruleEVERY();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6953:5: ( ( ruleRightAbsentPatternSource ) )
        // InternalSiddhiParser.g:6954:6: ( ruleRightAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6954:6: ( ruleRightAbsentPatternSource )
        // InternalSiddhiParser.g:6955:7: ruleRightAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleRightAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6959:5: ( ( ruleWithinTime ) )?
        int alt247=2;
        int LA247_0 = input.LA(1);

        if ( (LA247_0==Within) ) {
            alt247=1;
        }
        switch (alt247) {
            case 1 :
                // InternalSiddhiParser.g:6960:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:6960:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:6961:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred64_InternalSiddhiParser

    // $ANTLR start synpred65_InternalSiddhiParser
    public final void synpred65_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7033:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:7033:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:7033:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:7034:5: ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:7034:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:7035:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:7035:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:7036:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_71); if (state.failed) return ;
        // InternalSiddhiParser.g:7040:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:7041:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:7041:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:7042:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred65_InternalSiddhiParser

    // $ANTLR start synpred66_InternalSiddhiParser
    public final void synpred66_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7094:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:7094:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:7094:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:7095:5: ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:7095:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:7096:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:7096:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:7097:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return ;
        // InternalSiddhiParser.g:7101:5: ( ( ruleRightAbsentPatternSource ) )
        // InternalSiddhiParser.g:7102:6: ( ruleRightAbsentPatternSource )
        {
        // InternalSiddhiParser.g:7102:6: ( ruleRightAbsentPatternSource )
        // InternalSiddhiParser.g:7103:7: ruleRightAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred66_InternalSiddhiParser

    // $ANTLR start synpred67_InternalSiddhiParser
    public final void synpred67_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7173:4: ( ( ruleEverySequenceSourceChain ) )
        // InternalSiddhiParser.g:7173:5: ( ruleEverySequenceSourceChain )
        {
        // InternalSiddhiParser.g:7173:5: ( ruleEverySequenceSourceChain )
        // InternalSiddhiParser.g:7174:5: ruleEverySequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEverySequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred67_InternalSiddhiParser

    // $ANTLR start synpred68_InternalSiddhiParser
    public final void synpred68_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7197:4: ( ( ruleEveryAbsentSequenceSourceChain ) )
        // InternalSiddhiParser.g:7197:5: ( ruleEveryAbsentSequenceSourceChain )
        {
        // InternalSiddhiParser.g:7197:5: ( ruleEveryAbsentSequenceSourceChain )
        // InternalSiddhiParser.g:7198:5: ruleEveryAbsentSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred68_InternalSiddhiParser

    // $ANTLR start synpred71_InternalSiddhiParser
    public final void synpred71_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7443:4: ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:7443:5: ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:7443:5: ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:7444:5: ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:7445:5: ( ( ruleAbsentSequenceSourceChain ) )
        // InternalSiddhiParser.g:7446:6: ( ruleAbsentSequenceSourceChain )
        {
        // InternalSiddhiParser.g:7446:6: ( ruleAbsentSequenceSourceChain )
        // InternalSiddhiParser.g:7447:7: ruleAbsentSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleAbsentSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:7451:5: ( ( ruleWithinTime ) )?
        int alt251=2;
        int LA251_0 = input.LA(1);

        if ( (LA251_0==Within) ) {
            alt251=1;
        }
        switch (alt251) {
            case 1 :
                // InternalSiddhiParser.g:7452:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:7452:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:7453:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred71_InternalSiddhiParser

    // $ANTLR start synpred72_InternalSiddhiParser
    public final void synpred72_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7515:4: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:7515:5: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:7515:5: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:7516:5: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred72_InternalSiddhiParser

    // $ANTLR start synpred73_InternalSiddhiParser
    public final void synpred73_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7539:4: ( ( ruleLeftAbsentSequenceSource ) )
        // InternalSiddhiParser.g:7539:5: ( ruleLeftAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:7539:5: ( ruleLeftAbsentSequenceSource )
        // InternalSiddhiParser.g:7540:5: ruleLeftAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred73_InternalSiddhiParser

    // $ANTLR start synpred74_InternalSiddhiParser
    public final void synpred74_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7563:4: ( ( ruleRightAbsentSequenceSource ) )
        // InternalSiddhiParser.g:7563:5: ( ruleRightAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:7563:5: ( ruleRightAbsentSequenceSource )
        // InternalSiddhiParser.g:7564:5: ruleRightAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred74_InternalSiddhiParser

    // $ANTLR start synpred75_InternalSiddhiParser
    public final void synpred75_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7613:4: ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )
        // InternalSiddhiParser.g:7613:5: ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) )
        {
        // InternalSiddhiParser.g:7613:5: ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) )
        // InternalSiddhiParser.g:7614:5: () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) )
        {
        // InternalSiddhiParser.g:7614:5: ()
        // InternalSiddhiParser.g:7615:5: 
        {
        }

        // InternalSiddhiParser.g:7616:5: ( ( Comma ) )
        // InternalSiddhiParser.g:7617:6: ( Comma )
        {
        // InternalSiddhiParser.g:7617:6: ( Comma )
        // InternalSiddhiParser.g:7618:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7621:5: ( ( ruleLeftAbsentSequenceSource1 ) )
        // InternalSiddhiParser.g:7622:6: ( ruleLeftAbsentSequenceSource1 )
        {
        // InternalSiddhiParser.g:7622:6: ( ruleLeftAbsentSequenceSource1 )
        // InternalSiddhiParser.g:7623:7: ruleLeftAbsentSequenceSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentSequenceSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred75_InternalSiddhiParser

    // $ANTLR start synpred76_InternalSiddhiParser
    public final void synpred76_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7699:4: ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:7699:5: ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:7699:5: ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:7700:5: () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:7700:5: ()
        // InternalSiddhiParser.g:7701:5: 
        {
        }

        // InternalSiddhiParser.g:7702:5: ( ( Comma ) )
        // InternalSiddhiParser.g:7703:6: ( Comma )
        {
        // InternalSiddhiParser.g:7703:6: ( Comma )
        // InternalSiddhiParser.g:7704:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_69); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7707:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:7708:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:7708:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:7709:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred76_InternalSiddhiParser

    // $ANTLR start synpred77_InternalSiddhiParser
    public final void synpred77_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7777:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:7777:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:7777:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:7778:5: ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:7778:5: ( ( ruleOPEN_PAR ) )
        // InternalSiddhiParser.g:7779:6: ( ruleOPEN_PAR )
        {
        // InternalSiddhiParser.g:7779:6: ( ruleOPEN_PAR )
        // InternalSiddhiParser.g:7780:7: ruleOPEN_PAR
        {
        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7783:5: ( ( ruleLeftAbsentSequenceSource ) )
        // InternalSiddhiParser.g:7784:6: ( ruleLeftAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:7784:6: ( ruleLeftAbsentSequenceSource )
        // InternalSiddhiParser.g:7785:7: ruleLeftAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleLeftAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7788:5: ( ( ruleCLOSE_PAR ) )
        // InternalSiddhiParser.g:7789:6: ( ruleCLOSE_PAR )
        {
        // InternalSiddhiParser.g:7789:6: ( ruleCLOSE_PAR )
        // InternalSiddhiParser.g:7790:7: ruleCLOSE_PAR
        {
        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7793:5: ( ( ruleWithinTime ) )?
        int alt252=2;
        int LA252_0 = input.LA(1);

        if ( (LA252_0==Within) ) {
            alt252=1;
        }
        switch (alt252) {
            case 1 :
                // InternalSiddhiParser.g:7794:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:7794:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:7795:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred77_InternalSiddhiParser

    // $ANTLR start synpred78_InternalSiddhiParser
    public final void synpred78_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7881:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )
        // InternalSiddhiParser.g:7881:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        {
        // InternalSiddhiParser.g:7881:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        // InternalSiddhiParser.g:7882:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) )
        {
        // InternalSiddhiParser.g:7882:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:7883:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:7883:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:7884:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7887:5: ( ( Comma ) )
        // InternalSiddhiParser.g:7888:6: ( Comma )
        {
        // InternalSiddhiParser.g:7888:6: ( Comma )
        // InternalSiddhiParser.g:7889:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7892:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:7893:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:7893:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:7894:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred78_InternalSiddhiParser

    // $ANTLR start synpred79_InternalSiddhiParser
    public final void synpred79_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7956:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )
        // InternalSiddhiParser.g:7956:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) )
        {
        // InternalSiddhiParser.g:7956:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) )
        // InternalSiddhiParser.g:7957:5: ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) )
        {
        // InternalSiddhiParser.g:7957:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:7958:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:7958:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:7959:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7962:5: ( ( Comma ) )
        // InternalSiddhiParser.g:7963:6: ( Comma )
        {
        // InternalSiddhiParser.g:7963:6: ( Comma )
        // InternalSiddhiParser.g:7964:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7967:5: ( ( ruleLeftAbsentSequenceSource ) )
        // InternalSiddhiParser.g:7968:6: ( ruleLeftAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:7968:6: ( ruleLeftAbsentSequenceSource )
        // InternalSiddhiParser.g:7969:7: ruleLeftAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred79_InternalSiddhiParser

    // $ANTLR start synpred80_InternalSiddhiParser
    public final void synpred80_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8057:4: ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )
        // InternalSiddhiParser.g:8057:5: ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) )
        {
        // InternalSiddhiParser.g:8057:5: ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) )
        // InternalSiddhiParser.g:8058:5: () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) )
        {
        // InternalSiddhiParser.g:8058:5: ()
        // InternalSiddhiParser.g:8059:5: 
        {
        }

        // InternalSiddhiParser.g:8060:5: ( ( Comma ) )
        // InternalSiddhiParser.g:8061:6: ( Comma )
        {
        // InternalSiddhiParser.g:8061:6: ( Comma )
        // InternalSiddhiParser.g:8062:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8065:5: ( ( ruleRightAbsentSequenceSource1 ) )
        // InternalSiddhiParser.g:8066:6: ( ruleRightAbsentSequenceSource1 )
        {
        // InternalSiddhiParser.g:8066:6: ( ruleRightAbsentSequenceSource1 )
        // InternalSiddhiParser.g:8067:7: ruleRightAbsentSequenceSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentSequenceSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred80_InternalSiddhiParser

    // $ANTLR start synpred81_InternalSiddhiParser
    public final void synpred81_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8143:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )
        // InternalSiddhiParser.g:8143:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        {
        // InternalSiddhiParser.g:8143:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        // InternalSiddhiParser.g:8144:5: () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) )
        {
        // InternalSiddhiParser.g:8144:5: ()
        // InternalSiddhiParser.g:8145:5: 
        {
        }

        // InternalSiddhiParser.g:8146:5: ( ( Comma ) )
        // InternalSiddhiParser.g:8147:6: ( Comma )
        {
        // InternalSiddhiParser.g:8147:6: ( Comma )
        // InternalSiddhiParser.g:8148:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8151:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:8152:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:8152:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:8153:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred81_InternalSiddhiParser

    // $ANTLR start synpred82_InternalSiddhiParser
    public final void synpred82_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8221:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:8221:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:8221:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:8222:5: ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:8222:5: ( ( ruleOPEN_PAR ) )
        // InternalSiddhiParser.g:8223:6: ( ruleOPEN_PAR )
        {
        // InternalSiddhiParser.g:8223:6: ( ruleOPEN_PAR )
        // InternalSiddhiParser.g:8224:7: ruleOPEN_PAR
        {
        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8227:5: ( ( ruleRightAbsentSequenceSource ) )
        // InternalSiddhiParser.g:8228:6: ( ruleRightAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:8228:6: ( ruleRightAbsentSequenceSource )
        // InternalSiddhiParser.g:8229:7: ruleRightAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleRightAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8232:5: ( ( ruleCLOSE_PAR ) )
        // InternalSiddhiParser.g:8233:6: ( ruleCLOSE_PAR )
        {
        // InternalSiddhiParser.g:8233:6: ( ruleCLOSE_PAR )
        // InternalSiddhiParser.g:8234:7: ruleCLOSE_PAR
        {
        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8237:5: ( ( ruleWithinTime ) )?
        int alt253=2;
        int LA253_0 = input.LA(1);

        if ( (LA253_0==Within) ) {
            alt253=1;
        }
        switch (alt253) {
            case 1 :
                // InternalSiddhiParser.g:8238:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:8238:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:8239:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred82_InternalSiddhiParser

    // $ANTLR start synpred83_InternalSiddhiParser
    public final void synpred83_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8325:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:8325:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:8325:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:8326:5: ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:8326:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:8327:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:8327:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:8328:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8331:5: ( ( Comma ) )
        // InternalSiddhiParser.g:8332:6: ( Comma )
        {
        // InternalSiddhiParser.g:8332:6: ( Comma )
        // InternalSiddhiParser.g:8333:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_69); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8336:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8337:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8337:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8338:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred83_InternalSiddhiParser

    // $ANTLR start synpred84_InternalSiddhiParser
    public final void synpred84_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8400:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )
        // InternalSiddhiParser.g:8400:5: ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) )
        {
        // InternalSiddhiParser.g:8400:5: ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) )
        // InternalSiddhiParser.g:8401:5: ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) )
        {
        // InternalSiddhiParser.g:8401:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8402:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8402:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8403:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return ;
        // InternalSiddhiParser.g:8407:5: ( ( ruleRightAbsentSequenceSource ) )
        // InternalSiddhiParser.g:8408:6: ( ruleRightAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:8408:6: ( ruleRightAbsentSequenceSource )
        // InternalSiddhiParser.g:8409:7: ruleRightAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred84_InternalSiddhiParser

    // $ANTLR start synpred85_InternalSiddhiParser
    public final void synpred85_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8487:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )
        // InternalSiddhiParser.g:8487:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) )
        {
        // InternalSiddhiParser.g:8487:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) )
        // InternalSiddhiParser.g:8488:5: () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) )
        {
        // InternalSiddhiParser.g:8488:5: ()
        // InternalSiddhiParser.g:8489:5: 
        {
        }

        // InternalSiddhiParser.g:8490:5: ( ( Comma ) )
        // InternalSiddhiParser.g:8491:6: ( Comma )
        {
        // InternalSiddhiParser.g:8491:6: ( Comma )
        // InternalSiddhiParser.g:8492:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_63); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8495:5: ( ( ruleSequenceSourceChain1 ) )
        // InternalSiddhiParser.g:8496:6: ( ruleSequenceSourceChain1 )
        {
        // InternalSiddhiParser.g:8496:6: ( ruleSequenceSourceChain1 )
        // InternalSiddhiParser.g:8497:7: ruleSequenceSourceChain1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceSourceChain1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred85_InternalSiddhiParser

    // $ANTLR start synpred86_InternalSiddhiParser
    public final void synpred86_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8565:4: ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:8565:5: ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:8565:5: ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:8566:5: ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_63);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_11);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_56);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:8569:5: ( ( ruleWithinTime ) )?
        int alt254=2;
        int LA254_0 = input.LA(1);

        if ( (LA254_0==Within) ) {
            alt254=1;
        }
        switch (alt254) {
            case 1 :
                // InternalSiddhiParser.g:8570:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:8570:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:8571:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalSiddhiParser

    // $ANTLR start synpred87_InternalSiddhiParser
    public final void synpred87_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8670:4: ( ruleLogicalStatefulSource )
        // InternalSiddhiParser.g:8670:5: ruleLogicalStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_InternalSiddhiParser

    // $ANTLR start synpred88_InternalSiddhiParser
    public final void synpred88_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8682:4: ( ruleSequenceCollectionStatefulSource )
        // InternalSiddhiParser.g:8682:5: ruleSequenceCollectionStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceCollectionStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_InternalSiddhiParser

    // $ANTLR start synpred89_InternalSiddhiParser
    public final void synpred89_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8694:4: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:8694:5: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred89_InternalSiddhiParser

    // $ANTLR start synpred90_InternalSiddhiParser
    public final void synpred90_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8706:4: ( ruleLogicalAbsentStatefulSource )
        // InternalSiddhiParser.g:8706:5: ruleLogicalAbsentStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalAbsentStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_InternalSiddhiParser

    // $ANTLR start synpred91_InternalSiddhiParser
    public final void synpred91_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10005:5: ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
        // InternalSiddhiParser.g:10005:6: ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
        {
        // InternalSiddhiParser.g:10005:6: ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
        // InternalSiddhiParser.g:10006:6: ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS
        {
        // InternalSiddhiParser.g:10006:6: ( NumberSign )?
        int alt255=2;
        int LA255_0 = input.LA(1);

        if ( (LA255_0==NumberSign) ) {
            alt255=1;
        }
        switch (alt255) {
            case 1 :
                // InternalSiddhiParser.g:10007:7: NumberSign
                {
                match(input,NumberSign,FollowSets000.FOLLOW_21); if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_43);
        ruleOPEN_SQARE_BRACKETS();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:10010:6: ( ( ruleExpression ) )
        // InternalSiddhiParser.g:10011:7: ( ruleExpression )
        {
        // InternalSiddhiParser.g:10011:7: ( ruleExpression )
        // InternalSiddhiParser.g:10012:8: ruleExpression
        {
        pushFollow(FollowSets000.FOLLOW_22);
        ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_2);
        ruleCLOSE_SQARE_BRACKETS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred91_InternalSiddhiParser

    // $ANTLR start synpred92_InternalSiddhiParser
    public final void synpred92_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10062:5: ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )
        // InternalSiddhiParser.g:10062:6: ( NumberSign ( ( ruleFunctionOperation ) ) )
        {
        // InternalSiddhiParser.g:10062:6: ( NumberSign ( ( ruleFunctionOperation ) ) )
        // InternalSiddhiParser.g:10063:6: NumberSign ( ( ruleFunctionOperation ) )
        {
        match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return ;
        // InternalSiddhiParser.g:10064:6: ( ( ruleFunctionOperation ) )
        // InternalSiddhiParser.g:10065:7: ( ruleFunctionOperation )
        {
        // InternalSiddhiParser.g:10065:7: ( ruleFunctionOperation )
        // InternalSiddhiParser.g:10066:8: ruleFunctionOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFunctionOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred92_InternalSiddhiParser

    // $ANTLR start synpred93_InternalSiddhiParser
    public final void synpred93_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10099:4: ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )
        // InternalSiddhiParser.g:10099:5: ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) )
        {
        // InternalSiddhiParser.g:10099:5: ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) )
        // InternalSiddhiParser.g:10100:5: NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) )
        {
        match(input,NumberSign,FollowSets000.FOLLOW_12); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_90);
        ruleWINDOW(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,FullStop,FollowSets000.FOLLOW_9); if (state.failed) return ;
        // InternalSiddhiParser.g:10103:5: ( ( ruleFunctionOperation ) )
        // InternalSiddhiParser.g:10104:6: ( ruleFunctionOperation )
        {
        // InternalSiddhiParser.g:10104:6: ( ruleFunctionOperation )
        // InternalSiddhiParser.g:10105:7: ruleFunctionOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFunctionOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred93_InternalSiddhiParser

    // $ANTLR start synpred94_InternalSiddhiParser
    public final void synpred94_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11158:4: ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )
        // InternalSiddhiParser.g:11158:5: ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) )
        {
        // InternalSiddhiParser.g:11158:5: ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) )
        // InternalSiddhiParser.g:11159:5: () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) )
        {
        // InternalSiddhiParser.g:11159:5: ()
        // InternalSiddhiParser.g:11160:5: 
        {
        }

        // InternalSiddhiParser.g:11161:5: ( ( ( ruleAND ) ) | ( ( ruleOR ) ) )
        int alt256=2;
        int LA256_0 = input.LA(1);

        if ( (LA256_0==And) ) {
            alt256=1;
        }
        else if ( (LA256_0==Or) ) {
            alt256=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 256, 0, input);

            throw nvae;
        }
        switch (alt256) {
            case 1 :
                // InternalSiddhiParser.g:11162:6: ( ( ruleAND ) )
                {
                // InternalSiddhiParser.g:11162:6: ( ( ruleAND ) )
                // InternalSiddhiParser.g:11163:7: ( ruleAND )
                {
                // InternalSiddhiParser.g:11163:7: ( ruleAND )
                // InternalSiddhiParser.g:11164:8: ruleAND
                {
                pushFollow(FollowSets000.FOLLOW_43);
                ruleAND();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11168:6: ( ( ruleOR ) )
                {
                // InternalSiddhiParser.g:11168:6: ( ( ruleOR ) )
                // InternalSiddhiParser.g:11169:7: ( ruleOR )
                {
                // InternalSiddhiParser.g:11169:7: ( ruleOR )
                // InternalSiddhiParser.g:11170:8: ruleOR
                {
                pushFollow(FollowSets000.FOLLOW_43);
                ruleOR();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11174:5: ( ( ruleMathInOperation ) )
        // InternalSiddhiParser.g:11175:6: ( ruleMathInOperation )
        {
        // InternalSiddhiParser.g:11175:6: ( ruleMathInOperation )
        // InternalSiddhiParser.g:11176:7: ruleMathInOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathInOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred94_InternalSiddhiParser

    // $ANTLR start synpred95_InternalSiddhiParser
    public final void synpred95_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11279:4: ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )
        // InternalSiddhiParser.g:11279:5: ( () ( ( ruleIN ) ) ( ( ruleName ) ) )
        {
        // InternalSiddhiParser.g:11279:5: ( () ( ( ruleIN ) ) ( ( ruleName ) ) )
        // InternalSiddhiParser.g:11280:5: () ( ( ruleIN ) ) ( ( ruleName ) )
        {
        // InternalSiddhiParser.g:11280:5: ()
        // InternalSiddhiParser.g:11281:5: 
        {
        }

        // InternalSiddhiParser.g:11282:5: ( ( ruleIN ) )
        // InternalSiddhiParser.g:11283:6: ( ruleIN )
        {
        // InternalSiddhiParser.g:11283:6: ( ruleIN )
        // InternalSiddhiParser.g:11284:7: ruleIN
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleIN();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:11287:5: ( ( ruleName ) )
        // InternalSiddhiParser.g:11288:6: ( ruleName )
        {
        // InternalSiddhiParser.g:11288:6: ( ruleName )
        // InternalSiddhiParser.g:11289:7: ruleName
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred95_InternalSiddhiParser

    // $ANTLR start synpred96_InternalSiddhiParser
    public final void synpred96_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11370:4: ( ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )
        // InternalSiddhiParser.g:11370:5: ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) )
        {
        // InternalSiddhiParser.g:11370:5: ( () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) )
        // InternalSiddhiParser.g:11371:5: () ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) )
        {
        // InternalSiddhiParser.g:11371:5: ()
        // InternalSiddhiParser.g:11372:5: 
        {
        }

        // InternalSiddhiParser.g:11373:5: ( ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) ) )
        // InternalSiddhiParser.g:11374:6: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) )
        {
        // InternalSiddhiParser.g:11374:6: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign ) )
        // InternalSiddhiParser.g:11375:7: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalSiddhiParser.g:11386:5: ( ( ruleMathGtLtOperation ) )
        // InternalSiddhiParser.g:11387:6: ( ruleMathGtLtOperation )
        {
        // InternalSiddhiParser.g:11387:6: ( ruleMathGtLtOperation )
        // InternalSiddhiParser.g:11388:7: ruleMathGtLtOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathGtLtOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred96_InternalSiddhiParser

    // $ANTLR start synpred97_InternalSiddhiParser
    public final void synpred97_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11499:4: ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )
        // InternalSiddhiParser.g:11499:5: ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) )
        {
        // InternalSiddhiParser.g:11499:5: ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) )
        // InternalSiddhiParser.g:11500:5: () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) )
        {
        // InternalSiddhiParser.g:11500:5: ()
        // InternalSiddhiParser.g:11501:5: 
        {
        }

        // InternalSiddhiParser.g:11502:5: ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) )
        int alt257=2;
        int LA257_0 = input.LA(1);

        if ( (LA257_0==EqualsSignEqualsSign) ) {
            alt257=1;
        }
        else if ( (LA257_0==ExclamationMarkEqualsSign) ) {
            alt257=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 257, 0, input);

            throw nvae;
        }
        switch (alt257) {
            case 1 :
                // InternalSiddhiParser.g:11503:6: ( ( EqualsSignEqualsSign ) )
                {
                // InternalSiddhiParser.g:11503:6: ( ( EqualsSignEqualsSign ) )
                // InternalSiddhiParser.g:11504:7: ( EqualsSignEqualsSign )
                {
                // InternalSiddhiParser.g:11504:7: ( EqualsSignEqualsSign )
                // InternalSiddhiParser.g:11505:8: EqualsSignEqualsSign
                {
                match(input,EqualsSignEqualsSign,FollowSets000.FOLLOW_43); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11509:6: ( ( ExclamationMarkEqualsSign ) )
                {
                // InternalSiddhiParser.g:11509:6: ( ( ExclamationMarkEqualsSign ) )
                // InternalSiddhiParser.g:11510:7: ( ExclamationMarkEqualsSign )
                {
                // InternalSiddhiParser.g:11510:7: ( ExclamationMarkEqualsSign )
                // InternalSiddhiParser.g:11511:8: ExclamationMarkEqualsSign
                {
                match(input,ExclamationMarkEqualsSign,FollowSets000.FOLLOW_43); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11515:5: ( ( ruleMathAddsubOperation ) )
        // InternalSiddhiParser.g:11516:6: ( ruleMathAddsubOperation )
        {
        // InternalSiddhiParser.g:11516:6: ( ruleMathAddsubOperation )
        // InternalSiddhiParser.g:11517:7: ruleMathAddsubOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathAddsubOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred97_InternalSiddhiParser

    // $ANTLR start synpred98_InternalSiddhiParser
    public final void synpred98_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11610:4: ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )
        // InternalSiddhiParser.g:11610:5: ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) )
        {
        // InternalSiddhiParser.g:11610:5: ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) )
        // InternalSiddhiParser.g:11611:5: () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) )
        {
        // InternalSiddhiParser.g:11611:5: ()
        // InternalSiddhiParser.g:11612:5: 
        {
        }

        // InternalSiddhiParser.g:11613:5: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
        int alt258=2;
        int LA258_0 = input.LA(1);

        if ( (LA258_0==PlusSign) ) {
            alt258=1;
        }
        else if ( (LA258_0==HyphenMinus) ) {
            alt258=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 258, 0, input);

            throw nvae;
        }
        switch (alt258) {
            case 1 :
                // InternalSiddhiParser.g:11614:6: ( ( PlusSign ) )
                {
                // InternalSiddhiParser.g:11614:6: ( ( PlusSign ) )
                // InternalSiddhiParser.g:11615:7: ( PlusSign )
                {
                // InternalSiddhiParser.g:11615:7: ( PlusSign )
                // InternalSiddhiParser.g:11616:8: PlusSign
                {
                match(input,PlusSign,FollowSets000.FOLLOW_43); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11620:6: ( ( HyphenMinus ) )
                {
                // InternalSiddhiParser.g:11620:6: ( ( HyphenMinus ) )
                // InternalSiddhiParser.g:11621:7: ( HyphenMinus )
                {
                // InternalSiddhiParser.g:11621:7: ( HyphenMinus )
                // InternalSiddhiParser.g:11622:8: HyphenMinus
                {
                match(input,HyphenMinus,FollowSets000.FOLLOW_43); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11626:5: ( ( ruleMathDivmulOperation ) )
        // InternalSiddhiParser.g:11627:6: ( ruleMathDivmulOperation )
        {
        // InternalSiddhiParser.g:11627:6: ( ruleMathDivmulOperation )
        // InternalSiddhiParser.g:11628:7: ruleMathDivmulOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathDivmulOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred98_InternalSiddhiParser

    // $ANTLR start synpred99_InternalSiddhiParser
    public final void synpred99_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11721:4: ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )
        // InternalSiddhiParser.g:11721:5: ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) )
        {
        // InternalSiddhiParser.g:11721:5: ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) )
        // InternalSiddhiParser.g:11722:5: () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) )
        {
        // InternalSiddhiParser.g:11722:5: ()
        // InternalSiddhiParser.g:11723:5: 
        {
        }

        // InternalSiddhiParser.g:11724:5: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) )
        int alt259=3;
        switch ( input.LA(1) ) {
        case Asterisk:
            {
            alt259=1;
            }
            break;
        case Solidus:
            {
            alt259=2;
            }
            break;
        case PercentSign:
            {
            alt259=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 259, 0, input);

            throw nvae;
        }

        switch (alt259) {
            case 1 :
                // InternalSiddhiParser.g:11725:6: ( ( Asterisk ) )
                {
                // InternalSiddhiParser.g:11725:6: ( ( Asterisk ) )
                // InternalSiddhiParser.g:11726:7: ( Asterisk )
                {
                // InternalSiddhiParser.g:11726:7: ( Asterisk )
                // InternalSiddhiParser.g:11727:8: Asterisk
                {
                match(input,Asterisk,FollowSets000.FOLLOW_43); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11731:6: ( ( Solidus ) )
                {
                // InternalSiddhiParser.g:11731:6: ( ( Solidus ) )
                // InternalSiddhiParser.g:11732:7: ( Solidus )
                {
                // InternalSiddhiParser.g:11732:7: ( Solidus )
                // InternalSiddhiParser.g:11733:8: Solidus
                {
                match(input,Solidus,FollowSets000.FOLLOW_43); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalSiddhiParser.g:11737:6: ( ( PercentSign ) )
                {
                // InternalSiddhiParser.g:11737:6: ( ( PercentSign ) )
                // InternalSiddhiParser.g:11738:7: ( PercentSign )
                {
                // InternalSiddhiParser.g:11738:7: ( PercentSign )
                // InternalSiddhiParser.g:11739:8: PercentSign
                {
                match(input,PercentSign,FollowSets000.FOLLOW_43); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11743:5: ( ( ruleMathOtherOperations ) )
        // InternalSiddhiParser.g:11744:6: ( ruleMathOtherOperations )
        {
        // InternalSiddhiParser.g:11744:6: ( ruleMathOtherOperations )
        // InternalSiddhiParser.g:11745:7: ruleMathOtherOperations
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathOtherOperations();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred99_InternalSiddhiParser

    // $ANTLR start synpred100_InternalSiddhiParser
    public final void synpred100_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11845:4: ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )
        // InternalSiddhiParser.g:11845:5: ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) )
        {
        // InternalSiddhiParser.g:11845:5: ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) )
        // InternalSiddhiParser.g:11846:5: () ( ( ruleNOT ) ) ( ( ruleMathOperation ) )
        {
        // InternalSiddhiParser.g:11846:5: ()
        // InternalSiddhiParser.g:11847:5: 
        {
        }

        // InternalSiddhiParser.g:11848:5: ( ( ruleNOT ) )
        // InternalSiddhiParser.g:11849:6: ( ruleNOT )
        {
        // InternalSiddhiParser.g:11849:6: ( ruleNOT )
        // InternalSiddhiParser.g:11850:7: ruleNOT
        {
        pushFollow(FollowSets000.FOLLOW_43);
        ruleNOT();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:11853:5: ( ( ruleMathOperation ) )
        // InternalSiddhiParser.g:11854:6: ( ruleMathOperation )
        {
        // InternalSiddhiParser.g:11854:6: ( ruleMathOperation )
        // InternalSiddhiParser.g:11855:7: ruleMathOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred100_InternalSiddhiParser

    // $ANTLR start synpred101_InternalSiddhiParser
    public final void synpred101_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11946:4: ( ruleNullCheck )
        // InternalSiddhiParser.g:11946:5: ruleNullCheck
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleNullCheck();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalSiddhiParser

    // $ANTLR start synpred102_InternalSiddhiParser
    public final void synpred102_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11997:5: ( ( ruleStreamReference ) )
        // InternalSiddhiParser.g:11997:6: ( ruleStreamReference )
        {
        // InternalSiddhiParser.g:11997:6: ( ruleStreamReference )
        // InternalSiddhiParser.g:11998:6: ruleStreamReference
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStreamReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred102_InternalSiddhiParser

    // $ANTLR start synpred103_InternalSiddhiParser
    public final void synpred103_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:12021:5: ( ( ruleAttributeReference ) )
        // InternalSiddhiParser.g:12021:6: ( ruleAttributeReference )
        {
        // InternalSiddhiParser.g:12021:6: ( ruleAttributeReference )
        // InternalSiddhiParser.g:12022:6: ruleAttributeReference
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred103_InternalSiddhiParser

    // $ANTLR start synpred104_InternalSiddhiParser
    public final void synpred104_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:12045:5: ( ( ruleFunctionOperation ) )
        // InternalSiddhiParser.g:12045:6: ( ruleFunctionOperation )
        {
        // InternalSiddhiParser.g:12045:6: ( ruleFunctionOperation )
        // InternalSiddhiParser.g:12046:6: ruleFunctionOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFunctionOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred104_InternalSiddhiParser

    // $ANTLR start synpred105_InternalSiddhiParser
    public final void synpred105_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:14428:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )
        // InternalSiddhiParser.g:14428:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) )
        {
        // InternalSiddhiParser.g:14428:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) )
        // InternalSiddhiParser.g:14429:5: () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )
        {
        // InternalSiddhiParser.g:14429:5: ()
        // InternalSiddhiParser.g:14430:5: 
        {
        }

        // InternalSiddhiParser.g:14431:5: ( ruleDIGIT )+
        int cnt260=0;
        loop260:
        do {
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==RULE_INT) ) {
                alt260=1;
            }


            switch (alt260) {
        	case 1 :
        	    // InternalSiddhiParser.g:14432:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_122);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt260 >= 1 ) break loop260;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(260, input);
                    throw eee;
            }
            cnt260++;
        } while (true);

        // InternalSiddhiParser.g:14434:5: ( FullStop ( ruleDIGIT )* )?
        int alt262=2;
        int LA262_0 = input.LA(1);

        if ( (LA262_0==FullStop) ) {
            alt262=1;
        }
        switch (alt262) {
            case 1 :
                // InternalSiddhiParser.g:14435:6: FullStop ( ruleDIGIT )*
                {
                match(input,FullStop,FollowSets000.FOLLOW_122); if (state.failed) return ;
                // InternalSiddhiParser.g:14436:6: ( ruleDIGIT )*
                loop261:
                do {
                    int alt261=2;
                    int LA261_0 = input.LA(1);

                    if ( (LA261_0==RULE_INT) ) {
                        alt261=1;
                    }


                    switch (alt261) {
                	case 1 :
                	    // InternalSiddhiParser.g:14437:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_122);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop261;
                    }
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:14440:5: ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )?
        int alt265=2;
        int LA265_0 = input.LA(1);

        if ( (LA265_0==E) ) {
            alt265=1;
        }
        switch (alt265) {
            case 1 :
                // InternalSiddhiParser.g:14441:6: ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+
                {
                // InternalSiddhiParser.g:14441:6: ( ( ruleE ) )
                // InternalSiddhiParser.g:14442:7: ( ruleE )
                {
                // InternalSiddhiParser.g:14442:7: ( ruleE )
                // InternalSiddhiParser.g:14443:8: ruleE
                {
                pushFollow(FollowSets000.FOLLOW_113);
                ruleE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSiddhiParser.g:14446:6: ( HyphenMinus | PlusSign )?
                int alt263=2;
                int LA263_0 = input.LA(1);

                if ( (LA263_0==PlusSign||LA263_0==HyphenMinus) ) {
                    alt263=1;
                }
                switch (alt263) {
                    case 1 :
                        // InternalSiddhiParser.g:
                        {
                        if ( input.LA(1)==PlusSign||input.LA(1)==HyphenMinus ) {
                            input.consume();
                            state.errorRecovery=false;state.failed=false;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            MismatchedSetException mse = new MismatchedSetException(null,input);
                            throw mse;
                        }


                        }
                        break;

                }

                // InternalSiddhiParser.g:14451:6: ( ruleDIGIT )+
                int cnt264=0;
                loop264:
                do {
                    int alt264=2;
                    int LA264_0 = input.LA(1);

                    if ( (LA264_0==RULE_INT) ) {
                        alt264=1;
                    }


                    switch (alt264) {
                	case 1 :
                	    // InternalSiddhiParser.g:14452:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_122);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt264 >= 1 ) break loop264;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(264, input);
                            throw eee;
                    }
                    cnt264++;
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:14455:5: ( ( ruleD ) )
        // InternalSiddhiParser.g:14456:6: ( ruleD )
        {
        // InternalSiddhiParser.g:14456:6: ( ruleD )
        // InternalSiddhiParser.g:14457:7: ruleD
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleD();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred105_InternalSiddhiParser

    // $ANTLR start synpred106_InternalSiddhiParser
    public final void synpred106_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:14650:4: ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )
        // InternalSiddhiParser.g:14650:5: ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? )
        {
        // InternalSiddhiParser.g:14650:5: ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? )
        // InternalSiddhiParser.g:14651:5: () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )?
        {
        // InternalSiddhiParser.g:14651:5: ()
        // InternalSiddhiParser.g:14652:5: 
        {
        }

        // InternalSiddhiParser.g:14653:5: ( ruleDIGIT )*
        loop266:
        do {
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==RULE_INT) ) {
                alt266=1;
            }


            switch (alt266) {
        	case 1 :
        	    // InternalSiddhiParser.g:14654:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_126);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop266;
            }
        } while (true);

        match(input,FullStop,FollowSets000.FOLLOW_19); if (state.failed) return ;
        // InternalSiddhiParser.g:14657:5: ( ruleDIGIT )+
        int cnt267=0;
        loop267:
        do {
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==RULE_INT) ) {
                alt267=1;
            }


            switch (alt267) {
        	case 1 :
        	    // InternalSiddhiParser.g:14658:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_125);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt267 >= 1 ) break loop267;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(267, input);
                    throw eee;
            }
            cnt267++;
        } while (true);

        // InternalSiddhiParser.g:14660:5: ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )?
        int alt270=2;
        int LA270_0 = input.LA(1);

        if ( (LA270_0==E) ) {
            alt270=1;
        }
        switch (alt270) {
            case 1 :
                // InternalSiddhiParser.g:14661:6: ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+
                {
                // InternalSiddhiParser.g:14661:6: ( ( ruleE ) )
                // InternalSiddhiParser.g:14662:7: ( ruleE )
                {
                // InternalSiddhiParser.g:14662:7: ( ruleE )
                // InternalSiddhiParser.g:14663:8: ruleE
                {
                pushFollow(FollowSets000.FOLLOW_113);
                ruleE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSiddhiParser.g:14666:6: ( HyphenMinus | PlusSign )?
                int alt268=2;
                int LA268_0 = input.LA(1);

                if ( (LA268_0==PlusSign||LA268_0==HyphenMinus) ) {
                    alt268=1;
                }
                switch (alt268) {
                    case 1 :
                        // InternalSiddhiParser.g:
                        {
                        if ( input.LA(1)==PlusSign||input.LA(1)==HyphenMinus ) {
                            input.consume();
                            state.errorRecovery=false;state.failed=false;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            MismatchedSetException mse = new MismatchedSetException(null,input);
                            throw mse;
                        }


                        }
                        break;

                }

                // InternalSiddhiParser.g:14671:6: ( ruleDIGIT )+
                int cnt269=0;
                loop269:
                do {
                    int alt269=2;
                    int LA269_0 = input.LA(1);

                    if ( (LA269_0==RULE_INT) ) {
                        alt269=1;
                    }


                    switch (alt269) {
                	case 1 :
                	    // InternalSiddhiParser.g:14672:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_125);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt269 >= 1 ) break loop269;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(269, input);
                            throw eee;
                    }
                    cnt269++;
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:14675:5: ( ( ruleD ) )?
        int alt271=2;
        int LA271_0 = input.LA(1);

        if ( (LA271_0==D) ) {
            alt271=1;
        }
        switch (alt271) {
            case 1 :
                // InternalSiddhiParser.g:14676:6: ( ruleD )
                {
                // InternalSiddhiParser.g:14676:6: ( ruleD )
                // InternalSiddhiParser.g:14677:7: ruleD
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleD();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred106_InternalSiddhiParser

    // $ANTLR start synpred107_InternalSiddhiParser
    public final void synpred107_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:14794:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )
        // InternalSiddhiParser.g:14794:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) )
        {
        // InternalSiddhiParser.g:14794:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) )
        // InternalSiddhiParser.g:14795:5: () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) )
        {
        // InternalSiddhiParser.g:14795:5: ()
        // InternalSiddhiParser.g:14796:5: 
        {
        }

        // InternalSiddhiParser.g:14797:5: ( ruleDIGIT )+
        int cnt272=0;
        loop272:
        do {
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==RULE_INT) ) {
                alt272=1;
            }


            switch (alt272) {
        	case 1 :
        	    // InternalSiddhiParser.g:14798:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_127);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt272 >= 1 ) break loop272;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(272, input);
                    throw eee;
            }
            cnt272++;
        } while (true);

        // InternalSiddhiParser.g:14800:5: ( FullStop ( ruleDIGIT )* )?
        int alt274=2;
        int LA274_0 = input.LA(1);

        if ( (LA274_0==FullStop) ) {
            alt274=1;
        }
        switch (alt274) {
            case 1 :
                // InternalSiddhiParser.g:14801:6: FullStop ( ruleDIGIT )*
                {
                match(input,FullStop,FollowSets000.FOLLOW_127); if (state.failed) return ;
                // InternalSiddhiParser.g:14802:6: ( ruleDIGIT )*
                loop273:
                do {
                    int alt273=2;
                    int LA273_0 = input.LA(1);

                    if ( (LA273_0==RULE_INT) ) {
                        alt273=1;
                    }


                    switch (alt273) {
                	case 1 :
                	    // InternalSiddhiParser.g:14803:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_127);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop273;
                    }
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:14806:5: ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )?
        int alt277=2;
        int LA277_0 = input.LA(1);

        if ( (LA277_0==E) ) {
            alt277=1;
        }
        switch (alt277) {
            case 1 :
                // InternalSiddhiParser.g:14807:6: ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+
                {
                // InternalSiddhiParser.g:14807:6: ( ( ruleE ) )
                // InternalSiddhiParser.g:14808:7: ( ruleE )
                {
                // InternalSiddhiParser.g:14808:7: ( ruleE )
                // InternalSiddhiParser.g:14809:8: ruleE
                {
                pushFollow(FollowSets000.FOLLOW_113);
                ruleE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSiddhiParser.g:14812:6: ( HyphenMinus | PlusSign )?
                int alt275=2;
                int LA275_0 = input.LA(1);

                if ( (LA275_0==PlusSign||LA275_0==HyphenMinus) ) {
                    alt275=1;
                }
                switch (alt275) {
                    case 1 :
                        // InternalSiddhiParser.g:
                        {
                        if ( input.LA(1)==PlusSign||input.LA(1)==HyphenMinus ) {
                            input.consume();
                            state.errorRecovery=false;state.failed=false;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            MismatchedSetException mse = new MismatchedSetException(null,input);
                            throw mse;
                        }


                        }
                        break;

                }

                // InternalSiddhiParser.g:14817:6: ( ruleDIGIT )+
                int cnt276=0;
                loop276:
                do {
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==RULE_INT) ) {
                        alt276=1;
                    }


                    switch (alt276) {
                	case 1 :
                	    // InternalSiddhiParser.g:14818:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_127);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt276 >= 1 ) break loop276;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(276, input);
                            throw eee;
                    }
                    cnt276++;
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:14821:5: ( ( ruleF ) )
        // InternalSiddhiParser.g:14822:6: ( ruleF )
        {
        // InternalSiddhiParser.g:14822:6: ( ruleF )
        // InternalSiddhiParser.g:14823:7: ruleF
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleF();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred107_InternalSiddhiParser

    // Delegated rules

    public final boolean synpred18_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA20 dfa20 = new DFA20(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA133 dfa133 = new DFA133(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA160 dfa160 = new DFA160(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA170 dfa170 = new DFA170(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA180 dfa180 = new DFA180(this);
    protected DFA181 dfa181 = new DFA181(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA188 dfa188 = new DFA188(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA215 dfa215 = new DFA215(this);
    protected DFA227 dfa227 = new DFA227(this);
    static final String dfa_1s = "\23\uffff";
    static final String dfa_2s = "\1\uffff\20\22\2\uffff";
    static final String dfa_3s = "\1\17\20\22\2\uffff";
    static final String dfa_4s = "\1\116\20\155\2\uffff";
    static final String dfa_5s = "\21\uffff\1\1\1\2";
    static final String dfa_6s = "\23\uffff}>";
    static final String[] dfa_7s = {
            "\1\5\1\2\7\uffff\1\4\1\16\3\uffff\1\1\14\uffff\1\10\1\uffff\1\15\3\uffff\1\14\1\20\1\uffff\1\12\2\uffff\1\7\10\uffff\1\13\1\uffff\1\17\4\uffff\1\11\3\uffff\1\6\3\uffff\1\3",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "\1\22\57\uffff\1\21\40\uffff\1\22\4\uffff\1\22\4\uffff\1\22",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1633:2: (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_aggregation_time_interval_1= ruleaggregation_time_interval )";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\1\17\uffff";
    static final String dfa_10s = "\1\22\15\uffff\1\0\1\uffff";
    static final String dfa_11s = "\1\155\15\uffff\1\0\1\uffff";
    static final String dfa_12s = "\1\uffff\1\2\15\uffff\1\1";
    static final String dfa_13s = "\16\uffff\1\0\1\uffff}>";
    static final String[] dfa_14s = {
            "\2\1\3\uffff\1\1\3\uffff\2\1\1\uffff\1\1\2\uffff\1\1\22\uffff\1\1\22\uffff\1\1\11\uffff\1\16\16\uffff\1\1\7\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 4362:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_14 = input.LA(1);

                         
                        int index56_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalSiddhiParser()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\1\2\17\uffff";
    static final String dfa_16s = "\1\22\1\0\16\uffff";
    static final String dfa_17s = "\1\155\1\0\16\uffff";
    static final String dfa_18s = "\2\uffff\1\2\14\uffff\1\1";
    static final String dfa_19s = "\1\uffff\1\0\16\uffff}>";
    static final String[] dfa_20s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\22\uffff\1\2\22\uffff\1\2\11\uffff\1\1\16\uffff\1\2\7\uffff\1\2\4\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_8;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "()* loopback of 4599:3: ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_1 = input.LA(1);

                         
                        int index59_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalSiddhiParser()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index59_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\7\uffff";
    static final String dfa_22s = "\1\uffff\1\4\1\uffff\1\5\3\uffff";
    static final String dfa_23s = "\2\147\1\uffff\1\153\3\uffff";
    static final String dfa_24s = "\2\170\1\uffff\1\170\3\uffff";
    static final String dfa_25s = "\2\uffff\1\3\1\uffff\1\4\1\2\1\1";
    static final String dfa_26s = "\7\uffff}>";
    static final String[] dfa_27s = {
            "\1\2\20\uffff\1\1",
            "\1\3\3\uffff\1\4\14\uffff\1\1",
            "",
            "\1\5\14\uffff\1\6",
            "",
            "",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "5141:3: ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL )";
        }
    }
    static final String dfa_28s = "\14\uffff";
    static final String dfa_29s = "\1\113\1\uffff\2\0\10\uffff";
    static final String dfa_30s = "\1\167\1\uffff\2\0\10\uffff";
    static final String dfa_31s = "\1\uffff\1\1\2\uffff\1\2\1\4\1\7\1\3\1\5\1\6\1\10\1\11";
    static final String dfa_32s = "\1\0\1\uffff\1\1\1\2\10\uffff}>";
    static final String[] dfa_33s = {
            "\1\3\23\uffff\1\1\27\uffff\1\2",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "5314:2: ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_0 = input.LA(1);

                         
                        int index66_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA66_0==LeftParenthesis) && (synpred43_InternalSiddhiParser())) {s = 1;}

                        else if ( (LA66_0==RULE_ID) ) {s = 2;}

                        else if ( (LA66_0==Not) ) {s = 3;}

                         
                        input.seek(index66_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_2 = input.LA(1);

                         
                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalSiddhiParser()) ) {s = 4;}

                        else if ( (synpred46_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (synpred49_InternalSiddhiParser()) ) {s = 6;}

                         
                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_3 = input.LA(1);

                         
                        int index66_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSiddhiParser()) ) {s = 7;}

                        else if ( (synpred47_InternalSiddhiParser()) ) {s = 8;}

                        else if ( (synpred48_InternalSiddhiParser()) ) {s = 9;}

                        else if ( (synpred50_InternalSiddhiParser()) ) {s = 10;}

                        else if ( (synpred51_InternalSiddhiParser()) ) {s = 11;}

                         
                        input.seek(index66_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\1\22\14\uffff\1\0\2\uffff";
    static final String dfa_35s = "\1\155\14\uffff\1\0\2\uffff";
    static final String dfa_36s = "\15\uffff\1\0\2\uffff}>";
    static final String[] dfa_37s = {
            "\2\1\3\uffff\1\1\3\uffff\2\1\1\uffff\1\1\2\uffff\1\1\22\uffff\1\1\22\uffff\1\1\30\uffff\1\1\2\uffff\1\15\4\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_12;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "()* loopback of 8486:3: ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_13 = input.LA(1);

                         
                        int index95_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalSiddhiParser()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\4\uffff";
    static final String dfa_39s = "\1\170\1\5\2\uffff";
    static final String dfa_40s = "\2\170\2\uffff";
    static final String dfa_41s = "\2\uffff\1\1\1\2";
    static final String dfa_42s = "\4\uffff}>";
    static final String[] dfa_43s = {
            "\1\1",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\4\uffff\1\3\2\uffff\2\2\3\uffff\1\2\14\uffff\1\2\1\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\10\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\1\2\3\uffff\1\2\51\uffff\1\1",
            "",
            ""
    };

    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "9039:4: ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) )";
        }
    }
    static final String dfa_44s = "\34\uffff";
    static final String dfa_45s = "\1\3\33\uffff";
    static final String dfa_46s = "\1\4\2\0\31\uffff";
    static final String dfa_47s = "\1\167\2\0\31\uffff";
    static final String dfa_48s = "\3\uffff\1\3\26\uffff\1\1\1\2";
    static final String dfa_49s = "\1\uffff\1\0\1\1\31\uffff}>";
    static final String[] dfa_50s = {
            "\1\3\15\uffff\2\3\3\uffff\1\3\3\uffff\2\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\1\3\1\uffff\2\3\5\uffff\2\3\2\uffff\1\3\1\uffff\1\3\14\uffff\1\3\15\uffff\1\3\5\uffff\1\3\1\uffff\1\1\12\uffff\1\3\4\uffff\1\3\1\2\10\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_44;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "10003:3: ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA121_1 = input.LA(1);

                         
                        int index121_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSiddhiParser()) ) {s = 26;}

                        else if ( (synpred92_InternalSiddhiParser()) ) {s = 27;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index121_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA121_2 = input.LA(1);

                         
                        int index121_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSiddhiParser()) ) {s = 26;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index121_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 121, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\26\uffff";
    static final String dfa_52s = "\3\uffff\1\10\10\uffff\1\10\11\uffff";
    static final String dfa_53s = "\1\46\1\uffff\1\167\1\10\1\131\1\71\2\167\1\uffff\1\157\1\144\1\145\1\10\1\131\1\170\1\71\2\157\1\144\1\145\1\170\1\157";
    static final String dfa_54s = "\1\175\1\uffff\1\167\2\156\1\170\2\167\1\uffff\1\170\1\157\1\156\1\155\1\145\4\170\1\157\1\145\2\170";
    static final String dfa_55s = "\1\uffff\1\1\6\uffff\1\2\15\uffff";
    static final String dfa_56s = "\26\uffff}>";
    static final String[] dfa_57s = {
            "\1\1\27\uffff\1\1\14\uffff\1\1\21\uffff\1\2\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\21\uffff\1\3\1\1\4\uffff\1\1",
            "",
            "\1\4",
            "\1\10\11\uffff\2\10\2\uffff\2\10\3\uffff\2\10\4\uffff\1\10\7\uffff\1\10\12\uffff\1\10\17\uffff\1\1\2\uffff\1\10\10\uffff\1\1\1\uffff\4\1\2\uffff\2\1\2\uffff\1\1\1\6\2\1\1\uffff\2\1\1\10\1\1\1\7\2\1\1\10\1\1\1\uffff\1\1\1\uffff\1\10\1\5",
            "\1\1\3\uffff\1\6\7\uffff\1\7\10\uffff\1\5",
            "\1\12\76\uffff\1\11",
            "\1\13",
            "\1\14",
            "",
            "\1\15\10\uffff\1\11",
            "\1\16\12\uffff\1\15",
            "\1\7\10\uffff\1\17",
            "\1\10\11\uffff\2\10\2\uffff\2\10\3\uffff\2\10\4\uffff\1\10\7\uffff\1\10\12\uffff\1\10\17\uffff\1\1\2\uffff\1\10\10\uffff\1\1\1\uffff\4\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\10\1\1\1\uffff\1\1\1\uffff\1\10\1\1\1\uffff\1\1\1\uffff\1\10",
            "\1\1\3\uffff\1\6\7\uffff\1\7",
            "\1\20",
            "\1\22\76\uffff\1\21",
            "\1\15\10\uffff\1\20",
            "\1\23\10\uffff\1\21",
            "\1\24\12\uffff\1\23",
            "\1\7",
            "\1\25",
            "\1\23\10\uffff\1\25"
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA133 extends DFA {

        public DFA133(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 133;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "10826:2: ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) )";
        }
    }
    static final String dfa_58s = "\15\uffff";
    static final String dfa_59s = "\1\46\2\uffff\2\0\10\uffff";
    static final String dfa_60s = "\1\175\2\uffff\2\0\10\uffff";
    static final String dfa_61s = "\1\uffff\1\1\1\2\2\uffff\1\4\6\uffff\1\3";
    static final String dfa_62s = "\1\0\2\uffff\1\1\1\2\10\uffff}>";
    static final String[] dfa_63s = {
            "\1\5\27\uffff\1\5\14\uffff\1\1\21\uffff\1\3\1\uffff\1\2\2\uffff\1\5\1\uffff\2\5\21\uffff\1\4\1\5\4\uffff\1\5",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_58;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "11843:2: ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_mathOtherOperations1_7_0= ruleMathOtherOperations1 ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_0 = input.LA(1);

                         
                        int index146_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA146_0==Not) && (synpred100_InternalSiddhiParser())) {s = 1;}

                        else if ( (LA146_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA146_0==NumberSign) ) {s = 3;}

                        else if ( (LA146_0==RULE_ID) ) {s = 4;}

                        else if ( (LA146_0==False||LA146_0==True||LA146_0==PlusSign||(LA146_0>=HyphenMinus && LA146_0<=FullStop)||LA146_0==RULE_INT||LA146_0==RULE_STRING) ) {s = 5;}

                         
                        input.seek(index146_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA146_3 = input.LA(1);

                         
                        int index146_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSiddhiParser()) ) {s = 12;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index146_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA146_4 = input.LA(1);

                         
                        int index146_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSiddhiParser()) ) {s = 12;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index146_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\21\uffff";
    static final String dfa_65s = "\1\135\1\167\1\137\1\131\4\uffff\1\71\3\uffff\1\157\1\144\1\131\1\170\1\157";
    static final String dfa_66s = "\2\167\1\147\1\156\4\uffff\1\170\3\uffff\1\170\1\157\1\145\2\170";
    static final String dfa_67s = "\4\uffff\2\3\1\1\1\2\1\uffff\2\2\1\1\5\uffff";
    static final String dfa_68s = "\2\uffff\1\0\1\2\12\uffff\1\1\2\uffff}>";
    static final String[] dfa_69s = {
            "\1\1\31\uffff\1\2",
            "\1\3",
            "\1\5\7\uffff\1\4",
            "\1\13\3\uffff\1\11\7\uffff\1\12\10\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\15\76\uffff\1\14",
            "",
            "",
            "",
            "\1\16\10\uffff\1\14",
            "\1\17\12\uffff\1\16",
            "\1\13\3\uffff\1\11\7\uffff\1\12",
            "\1\20",
            "\1\16\10\uffff\1\20"
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "11995:3: ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( ( ( ruleAttributeReference ) )=> (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( ( ( ruleFunctionOperation ) )=> (lv_fo_2_0= ruleFunctionOperation ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_2 = input.LA(1);

                         
                        int index147_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_2==Colon) && (synpred104_InternalSiddhiParser())) {s = 4;}

                        else if ( (LA147_2==LeftParenthesis) && (synpred104_InternalSiddhiParser())) {s = 5;}

                        else if ( (synpred102_InternalSiddhiParser()) ) {s = 6;}

                        else if ( (synpred103_InternalSiddhiParser()) ) {s = 7;}

                         
                        input.seek(index147_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA147_14 = input.LA(1);

                         
                        int index147_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_14==NumberSign) && (synpred103_InternalSiddhiParser())) {s = 9;}

                        else if ( (LA147_14==FullStop) && (synpred103_InternalSiddhiParser())) {s = 10;}

                        else if ( (LA147_14==Is) && (synpred102_InternalSiddhiParser())) {s = 11;}

                         
                        input.seek(index147_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA147_3 = input.LA(1);

                         
                        int index147_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_3==LeftSquareBracket) ) {s = 8;}

                        else if ( (LA147_3==NumberSign) && (synpred103_InternalSiddhiParser())) {s = 9;}

                        else if ( (LA147_3==FullStop) && (synpred103_InternalSiddhiParser())) {s = 10;}

                        else if ( (LA147_3==Is) && (synpred102_InternalSiddhiParser())) {s = 11;}

                         
                        input.seek(index147_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\4\uffff\1\12\2\uffff\1\12\7\uffff\2\15\2\uffff\1\15\4\uffff\1\15\2\uffff\1\15";
    static final String dfa_71s = "\1\46\1\uffff\2\145\1\5\1\170\1\uffff\1\22\1\uffff\1\160\1\uffff\1\142\3\uffff\2\22\2\170\1\22\2\142\2\170\1\22\2\170\1\22";
    static final String dfa_72s = "\1\175\1\uffff\2\170\1\175\1\170\1\uffff\1\175\1\uffff\1\170\1\uffff\1\170\3\uffff\2\175\2\170\1\175\4\170\1\175\2\170\1\175";
    static final String dfa_73s = "\1\uffff\1\1\4\uffff\1\7\1\uffff\1\6\1\uffff\1\5\1\uffff\1\3\1\2\1\4\15\uffff";
    static final String dfa_74s = "\34\uffff}>";
    static final String[] dfa_75s = {
            "\1\1\27\uffff\1\1\43\uffff\1\3\1\uffff\1\2\1\5\22\uffff\1\4\4\uffff\1\6",
            "",
            "\1\5\22\uffff\1\7",
            "\1\5\22\uffff\1\7",
            "\1\10\1\uffff\1\10\3\uffff\1\10\3\uffff\2\10\1\uffff\2\12\3\uffff\1\12\2\10\1\uffff\2\12\1\10\1\12\2\uffff\1\12\1\uffff\1\12\6\uffff\1\10\1\uffff\1\10\3\uffff\2\10\1\uffff\1\10\1\12\1\uffff\1\10\10\uffff\1\10\1\uffff\1\10\2\uffff\1\12\1\uffff\1\10\1\12\2\uffff\1\10\3\uffff\1\10\1\uffff\1\12\1\uffff\4\12\2\uffff\1\12\1\uffff\3\12\1\uffff\1\12\1\uffff\5\12\1\11\1\12\1\uffff\2\12\1\uffff\1\12\1\uffff\1\12\1\uffff\1\12\1\15\1\13\1\14\1\16\4\uffff\1\4\4\uffff\1\12",
            "\1\17",
            "",
            "\2\12\3\uffff\1\12\3\uffff\2\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\20\uffff\1\12\17\uffff\1\12\2\uffff\1\12\10\uffff\1\12\1\uffff\4\12\2\uffff\1\12\1\uffff\3\12\1\uffff\1\12\1\uffff\5\12\1\11\1\12\1\uffff\2\12\1\uffff\1\12\1\uffff\1\12\1\uffff\1\12\1\15\1\13\1\14\1\16\4\uffff\1\7\4\uffff\1\12",
            "",
            "\1\15\1\13\1\14\5\uffff\1\20",
            "",
            "\1\22\1\uffff\1\21\23\uffff\1\23",
            "",
            "",
            "",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\10\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\24\1\14\5\uffff\1\17\4\uffff\1\15",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\10\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\25\1\14\5\uffff\1\20\4\uffff\1\15",
            "\1\23",
            "\1\23",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\10\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\14\5\uffff\1\23\4\uffff\1\15",
            "\1\27\1\uffff\1\26\23\uffff\1\30",
            "\1\32\1\uffff\1\31\23\uffff\1\33",
            "\1\30",
            "\1\30",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\10\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\14\5\uffff\1\30\4\uffff\1\15",
            "\1\33",
            "\1\33",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\10\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\14\5\uffff\1\33\4\uffff\1\15"
    };
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA160 extends DFA {

        public DFA160(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 160;
            this.eot = dfa_44;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "12777:2: ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) )";
        }
    }
    static final String dfa_76s = "\12\uffff";
    static final String dfa_77s = "\1\170\1\5\10\uffff";
    static final String dfa_78s = "\2\170\10\uffff";
    static final String dfa_79s = "\2\uffff\1\3\1\6\1\2\1\4\1\5\1\7\1\10\1\1";
    static final String dfa_80s = "\12\uffff}>";
    static final String[] dfa_81s = {
            "\1\1",
            "\1\10\1\uffff\1\10\3\uffff\1\10\3\uffff\1\3\1\7\7\uffff\1\3\1\4\3\uffff\1\7\14\uffff\1\6\1\uffff\1\4\3\uffff\1\2\1\11\1\uffff\1\5\2\uffff\1\6\10\uffff\1\2\1\uffff\1\11\4\uffff\1\5\3\uffff\1\3\3\uffff\1\7\51\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[][] dfa_81 = unpackEncodedStringArray(dfa_81s);

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = dfa_76;
            this.eof = dfa_76;
            this.min = dfa_77;
            this.max = dfa_78;
            this.accept = dfa_79;
            this.special = dfa_80;
            this.transition = dfa_81;
        }
        public String getDescription() {
            return "13311:2: ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) )";
        }
    }
    static final String dfa_82s = "\1\2\3\uffff";
    static final String dfa_83s = "\1\22\1\5\2\uffff";
    static final String dfa_84s = "\1\175\1\170\2\uffff";
    static final String dfa_85s = "\2\uffff\1\2\1\1";
    static final String[] dfa_86s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\10\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\10\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\1\3\3\uffff\1\2\14\uffff\1\2\1\uffff\1\3\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\10\uffff\1\2\6\uffff\1\2\3\uffff\1\2\3\uffff\1\2\51\uffff\1\1",
            "",
            ""
    };
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "13332:4: ( (lv_mv_1_0= ruleMonthValue ) )?";
        }
    }
    static final String[] dfa_87s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\10\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\10\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\14\uffff\1\2\5\uffff\1\3\2\uffff\1\2\2\uffff\1\2\10\uffff\1\3\6\uffff\1\2\3\uffff\1\2\3\uffff\1\2\51\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "13351:4: ( (lv_wv_2_0= ruleWeekValue ) )?";
        }
    }
    static final String[] dfa_88s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\10\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\10\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\14\uffff\1\2\10\uffff\1\3\2\uffff\1\2\17\uffff\1\3\3\uffff\1\2\3\uffff\1\2\51\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "13370:4: ( (lv_dv_3_0= ruleDayValue ) )?";
        }
    }
    static final String[] dfa_89s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\10\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\10\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\14\uffff\1\3\13\uffff\1\3\23\uffff\1\2\3\uffff\1\2\51\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "13389:4: ( (lv_hv_4_0= ruleHourValue ) )?";
        }
    }
    static final String[] dfa_90s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\10\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\10\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\1\3\1\2\7\uffff\1\3\4\uffff\1\2\54\uffff\1\3\3\uffff\1\2\51\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA170 extends DFA {

        public DFA170(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 170;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "13408:4: ( (lv_minv_5_0= ruleMinuteValue ) )?";
        }
    }
    static final String[] dfa_91s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\10\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\10\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\4\uffff\1\3\14\uffff\1\3\60\uffff\1\3\51\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "13427:4: ( (lv_secv_6_0= ruleSecondValue ) )?";
        }
    }

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "13487:4: ( (lv_wv_9_0= ruleWeekValue ) )?";
        }
    }

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "13506:4: ( (lv_dv_10_0= ruleDayValue ) )?";
        }
    }

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "13525:4: ( (lv_hv_11_0= ruleHourValue ) )?";
        }
    }

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "13544:4: ( (lv_minv_12_0= ruleMinuteValue ) )?";
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "13563:4: ( (lv_secv_13_0= ruleSecondValue ) )?";
        }
    }

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "13623:4: ( (lv_dv_16_0= ruleDayValue ) )?";
        }
    }

    class DFA180 extends DFA {

        public DFA180(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 180;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "13642:4: ( (lv_hv_17_0= ruleHourValue ) )?";
        }
    }

    class DFA181 extends DFA {

        public DFA181(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 181;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "13661:4: ( (lv_minv_18_0= ruleMinuteValue ) )?";
        }
    }

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "13680:4: ( (lv_secv_19_0= ruleSecondValue ) )?";
        }
    }

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "13740:4: ( (lv_hv_22_0= ruleHourValue ) )?";
        }
    }

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "13759:4: ( (lv_minv_23_0= ruleMinuteValue ) )?";
        }
    }

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "13778:4: ( (lv_secv_24_0= ruleSecondValue ) )?";
        }
    }

    class DFA188 extends DFA {

        public DFA188(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 188;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "13838:4: ( (lv_minv_27_0= ruleMinuteValue ) )?";
        }
    }

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "13857:4: ( (lv_secv_28_0= ruleSecondValue ) )?";
        }
    }

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_38;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_42;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "13917:4: ( (lv_secv_31_0= ruleSecondValue ) )?";
        }
    }
    static final String dfa_92s = "\64\uffff";
    static final String dfa_93s = "\6\uffff\1\35\2\uffff\1\57\52\uffff";
    static final String dfa_94s = "\2\145\1\uffff\1\160\1\142\1\uffff\1\22\2\170\1\22\1\142\1\0\42\uffff\1\0\1\uffff\2\170\1\160\1\uffff";
    static final String dfa_95s = "\2\170\1\uffff\2\170\1\uffff\1\175\2\170\1\175\1\170\1\0\42\uffff\1\0\1\uffff\3\170\1\uffff";
    static final String dfa_96s = "\2\uffff\1\3\2\uffff\1\1\6\uffff\42\3\1\uffff\1\2\3\uffff\1\1";
    static final String dfa_97s = "\1\0\1\6\1\uffff\1\5\2\uffff\1\3\4\uffff\1\4\42\uffff\1\1\3\uffff\1\2\1\uffff}>";
    static final String[] dfa_98s = {
            "\1\2\22\uffff\1\1",
            "\1\3\12\uffff\1\5\1\4\6\uffff\1\1",
            "",
            "\1\5\1\4\6\uffff\1\6",
            "\1\10\1\uffff\1\7\23\uffff\1\11",
            "",
            "\1\47\1\42\3\uffff\1\41\3\uffff\1\40\1\44\1\uffff\1\37\2\uffff\1\43\1\uffff\1\36\20\uffff\1\50\17\uffff\1\30\2\uffff\1\51\10\uffff\1\22\1\uffff\1\24\1\21\1\23\1\32\2\uffff\1\27\1\uffff\1\34\1\53\1\31\1\uffff\1\16\1\uffff\1\55\1\14\1\17\1\52\1\20\1\uffff\1\15\1\uffff\1\45\1\26\1\uffff\1\25\1\uffff\1\46\1\uffff\1\54\1\13\1\12\6\uffff\1\6\4\uffff\1\33",
            "\1\11",
            "\1\11",
            "\2\57\3\uffff\1\57\3\uffff\2\57\1\uffff\1\57\2\uffff\1\57\1\uffff\1\57\20\uffff\1\57\17\uffff\1\57\2\uffff\1\57\10\uffff\1\57\1\uffff\4\57\2\uffff\1\57\1\uffff\3\57\1\uffff\1\57\1\uffff\5\57\1\uffff\1\57\1\uffff\2\57\1\uffff\1\57\1\uffff\1\57\1\uffff\1\57\1\56\7\uffff\1\11\4\uffff\1\57",
            "\1\61\1\uffff\1\60\23\uffff\1\62",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\62",
            "\1\62",
            "\1\5\7\uffff\1\63",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA215 extends DFA {

        public DFA215(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 215;
            this.eot = dfa_92;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "14426:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA215_0 = input.LA(1);

                         
                        int index215_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA215_0==RULE_INT) ) {s = 1;}

                        else if ( (LA215_0==FullStop) && (synpred106_InternalSiddhiParser())) {s = 2;}

                         
                        input.seek(index215_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA215_46 = input.LA(1);

                         
                        int index215_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index215_46);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA215_50 = input.LA(1);

                         
                        int index215_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA215_50==D) && (synpred105_InternalSiddhiParser())) {s = 5;}

                        else if ( (LA215_50==RULE_INT) && (synpred105_InternalSiddhiParser())) {s = 51;}

                        else if ( (true) ) {s = 47;}

                        else if ( (synpred106_InternalSiddhiParser()) ) {s = 45;}

                         
                        input.seek(index215_50);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA215_6 = input.LA(1);

                         
                        int index215_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA215_6==E) ) {s = 10;}

                        else if ( (LA215_6==D) ) {s = 11;}

                        else if ( (LA215_6==Asterisk) && (synpred106_InternalSiddhiParser())) {s = 12;}

                        else if ( (LA215_6==Solidus) && (synpred106_InternalSiddhiParser())) {s = 13;}

                        else if ( (LA215_6==PercentSign) && (synpred106_InternalSiddhiParser())) {s = 14;}

                        else if ( (LA215_6==PlusSign) && (synpred106_InternalSiddhiParser())) {s = 15;}

                        else if ( (LA215_6==HyphenMinus) && (synpred106_InternalSiddhiParser())) {s = 16;}

                        else if ( (LA215_6==EqualsSignEqualsSign) && (synpred106_InternalSiddhiParser())) {s = 17;}

                        else if ( (LA215_6==ExclamationMarkEqualsSign) && (synpred106_InternalSiddhiParser())) {s = 18;}

                        else if ( (LA215_6==GreaterThanSignEqualsSign) && (synpred106_InternalSiddhiParser())) {s = 19;}

                        else if ( (LA215_6==LessThanSignEqualsSign) && (synpred106_InternalSiddhiParser())) {s = 20;}

                        else if ( (LA215_6==GreaterThanSign) && (synpred106_InternalSiddhiParser())) {s = 21;}

                        else if ( (LA215_6==LessThanSign) && (synpred106_InternalSiddhiParser())) {s = 22;}

                        else if ( (LA215_6==In) && (synpred106_InternalSiddhiParser())) {s = 23;}

                        else if ( (LA215_6==And) && (synpred106_InternalSiddhiParser())) {s = 24;}

                        else if ( (LA215_6==Or) && (synpred106_InternalSiddhiParser())) {s = 25;}

                        else if ( (LA215_6==As) && (synpred106_InternalSiddhiParser())) {s = 26;}

                        else if ( (LA215_6==RULE_STRING) && (synpred106_InternalSiddhiParser())) {s = 27;}

                        else if ( (LA215_6==Of) && (synpred106_InternalSiddhiParser())) {s = 28;}

                        else if ( (LA215_6==EOF) && (synpred106_InternalSiddhiParser())) {s = 29;}

                        else if ( (LA215_6==Within) && (synpred106_InternalSiddhiParser())) {s = 30;}

                        else if ( (LA215_6==Select) && (synpred106_InternalSiddhiParser())) {s = 31;}

                        else if ( (LA215_6==Output) && (synpred106_InternalSiddhiParser())) {s = 32;}

                        else if ( (LA215_6==Insert) && (synpred106_InternalSiddhiParser())) {s = 33;}

                        else if ( (LA215_6==Delete) && (synpred106_InternalSiddhiParser())) {s = 34;}

                        else if ( (LA215_6==Update) && (synpred106_InternalSiddhiParser())) {s = 35;}

                        else if ( (LA215_6==Return) && (synpred106_InternalSiddhiParser())) {s = 36;}

                        else if ( (LA215_6==Semicolon) && (synpred106_InternalSiddhiParser())) {s = 37;}

                        else if ( (LA215_6==CommercialAt) && (synpred106_InternalSiddhiParser())) {s = 38;}

                        else if ( (LA215_6==Define) && (synpred106_InternalSiddhiParser())) {s = 39;}

                        else if ( (LA215_6==From) && (synpred106_InternalSiddhiParser())) {s = 40;}

                        else if ( (LA215_6==End) && (synpred106_InternalSiddhiParser())) {s = 41;}

                        else if ( (LA215_6==Comma) && (synpred106_InternalSiddhiParser())) {s = 42;}

                        else if ( (LA215_6==On) && (synpred106_InternalSiddhiParser())) {s = 43;}

                        else if ( (LA215_6==RightSquareBracket) && (synpred106_InternalSiddhiParser())) {s = 44;}

                        else if ( (LA215_6==RightParenthesis) && (synpred106_InternalSiddhiParser())) {s = 45;}

                        else if ( (LA215_6==RULE_INT) ) {s = 6;}

                         
                        input.seek(index215_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA215_11 = input.LA(1);

                         
                        int index215_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (synpred106_InternalSiddhiParser()) ) {s = 45;}

                         
                        input.seek(index215_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA215_3 = input.LA(1);

                         
                        int index215_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA215_3==RULE_INT) ) {s = 6;}

                        else if ( (LA215_3==E) ) {s = 4;}

                        else if ( (LA215_3==D) && (synpred105_InternalSiddhiParser())) {s = 5;}

                         
                        input.seek(index215_3);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA215_1 = input.LA(1);

                         
                        int index215_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA215_1==FullStop) ) {s = 3;}

                        else if ( (LA215_1==RULE_INT) ) {s = 1;}

                        else if ( (LA215_1==E) ) {s = 4;}

                        else if ( (LA215_1==D) && (synpred105_InternalSiddhiParser())) {s = 5;}

                         
                        input.seek(index215_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 215, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_99s = "\2\145\1\uffff\1\161\2\uffff\1\161\1\142\1\0\2\170\1\162";
    static final String dfa_100s = "\2\170\1\uffff\1\170\2\uffff\2\170\1\0\3\170";
    static final String dfa_101s = "\2\uffff\1\2\1\uffff\2\1\6\uffff";
    static final String dfa_102s = "\1\uffff\1\1\1\uffff\1\0\4\uffff\1\2\3\uffff}>";
    static final String[] dfa_103s = {
            "\1\2\22\uffff\1\1",
            "\1\3\13\uffff\1\4\1\5\5\uffff\1\1",
            "",
            "\1\4\1\5\5\uffff\1\6",
            "",
            "",
            "\1\7\1\10\5\uffff\1\6",
            "\1\12\1\uffff\1\11\23\uffff\1\13",
            "\1\uffff",
            "\1\13",
            "\1\13",
            "\1\10\5\uffff\1\13"
    };
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA227 extends DFA {

        public DFA227(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 227;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "14792:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA227_3 = input.LA(1);

                         
                        int index227_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA227_3==RULE_INT) ) {s = 6;}

                        else if ( (LA227_3==E) && (synpred107_InternalSiddhiParser())) {s = 4;}

                        else if ( (LA227_3==F) && (synpred107_InternalSiddhiParser())) {s = 5;}

                         
                        input.seek(index227_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA227_1 = input.LA(1);

                         
                        int index227_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA227_1==FullStop) ) {s = 3;}

                        else if ( (LA227_1==RULE_INT) ) {s = 1;}

                        else if ( (LA227_1==E) && (synpred107_InternalSiddhiParser())) {s = 4;}

                        else if ( (LA227_1==F) && (synpred107_InternalSiddhiParser())) {s = 5;}

                         
                        input.seek(index227_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA227_8 = input.LA(1);

                         
                        int index227_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index227_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 227, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000040002L,0x0000200000000000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000040000L,0x0000210000000000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0010000000000200L,0x0000200000000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040000L,0x0000200000000000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000800080000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0080000020000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000900000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000206000L,0x0000000000000008L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000002000000000L,0x2000000000000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0804010104100000L,0x0000000000000200L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000002000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x804B140023018000L,0x0000000000004442L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000002000000000L,0x2080000020000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000002000000000L,0x2080200020000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000002L,0x000000B000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000200L,0x0000200000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x4000006000000000L,0x21800034A0000800L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0010000000000200L,0x0000210000000080L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000002000000002L,0x2000000000200000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000002000000002L,0x2000000000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0010002000000200L,0x00802000A0000800L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000258880002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000218880002L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000210880002L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000800000002L,0x0000000008000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0520680000000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000400020000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000400020000000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000002000000000L,0x00800000A0000800L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0100008000000000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000002000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000800000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000120600000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000058000000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000018000000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000206002L,0x0000000000000008L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x020000A000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0080000000206000L,0x0000000000000008L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000100L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0080000030000000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000008008100L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000008008000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x4000006000000000L,0x2180003FA0000800L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x4000006000000000L,0x21800036A0000800L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000020000000002L,0x0000000800000000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000010L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000002L,0x00000A0000140000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000000090000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000002L,0x0000001400000000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000004240000000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0200000000000000L,0x0100000000000000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000402020000000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000002020000000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000402000000000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0100003400000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0100001400000000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000100002000000L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x8001000000000000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0040040000000000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000001008000L,0x0000000000000400L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000020010000L,0x0000000000004000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x00000000000008A0L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0103002000000000L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0102002000000000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0102000000000000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0103002000000000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0100002000000000L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0106002000000000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0108000000000000L});
    }


}