package org.xtext.example.siddhi.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.siddhi.services.SiddhiGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSiddhiParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Unidirectional", "Milliseconds", "Aggregation", "Millisecond", "Aggregate", "Partition", "Function", "Millisec", "Snapshot", "Current", "Expired", "Minutes", "Seconds", "Trigger", "Define", "Delete", "Double", "Events", "Having", "Insert", "Minute", "Months", "Object", "Output", "Return", "Second", "Select", "Stream", "String", "Update", "Window", "Within", "Begin", "Every", "False", "First", "Float", "Group", "Hours", "Inner", "Month", "Outer", "Right", "Table", "Weeks", "Years", "Bool", "Days", "From", "Full", "Hour", "Into", "Join", "Last", "Left", "Long", "Null", "Plan", "True", "Week", "With", "Year", "FullStopFullStopFullStop", "All", "And", "App", "Day", "End", "For", "Int", "Min", "Not", "Per", "Raw", "Sec", "Set", "ExclamationMarkEqualsSign", "HyphenMinusGreaterThanSign", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "GreaterThanSignEqualsSign", "As", "At", "By", "In", "Is", "Of", "On", "Or", "NumberSign", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "CommercialAt", "LeftSquareBracket", "RightSquareBracket", "D", "E", "F", "L", "RULE_SCRIPT_ATOM", "RULE_SCRIPT", "RULE_ID", "RULE_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "RULE_STRING"
    };
    public static final int Delete=19;
    public static final int App=69;
    public static final int Left=58;
    public static final int Or=92;
    public static final int Raw=77;
    public static final int String=32;
    public static final int False=38;
    public static final int Insert=23;
    public static final int Minutes=15;
    public static final int Inner=43;
    public static final int LessThanSign=105;
    public static final int Month=44;
    public static final int Millisec=11;
    public static final int Define=18;
    public static final int LeftParenthesis=95;
    public static final int Bool=50;
    public static final int GreaterThanSign=107;
    public static final int RULE_ID=118;
    public static final int Weeks=48;
    public static final int Hour=54;
    public static final int Expired=14;
    public static final int Having=22;
    public static final int GreaterThanSignEqualsSign=84;
    public static final int Sec=78;
    public static final int Snapshot=12;
    public static final int Float=40;
    public static final int EqualsSignEqualsSign=83;
    public static final int Min=74;
    public static final int PlusSign=98;
    public static final int RULE_INT=119;
    public static final int RULE_ML_COMMENT=120;
    public static final int Object=26;
    public static final int LeftSquareBracket=110;
    public static final int Current=13;
    public static final int Week=63;
    public static final int Group=41;
    public static final int Set=79;
    public static final int D=112;
    public static final int In=88;
    public static final int E=113;
    public static final int F=114;
    public static final int Right=46;
    public static final int RULE_SCRIPT_ATOM=116;
    public static final int Is=89;
    public static final int L=115;
    public static final int Aggregation=6;
    public static final int Millisecond=7;
    public static final int Comma=99;
    public static final int As=85;
    public static final int HyphenMinus=100;
    public static final int At=86;
    public static final int Minute=24;
    public static final int Events=21;
    public static final int Output=27;
    public static final int Days=51;
    public static final int Begin=36;
    public static final int LessThanSignEqualsSign=82;
    public static final int Solidus=102;
    public static final int Window=34;
    public static final int FullStop=101;
    public static final int Table=47;
    public static final int Join=56;
    public static final int Plan=61;
    public static final int CommercialAt=109;
    public static final int Semicolon=104;
    public static final int Year=65;
    public static final int QuestionMark=108;
    public static final int By=87;
    public static final int Select=30;
    public static final int ExclamationMarkEqualsSign=80;
    public static final int Aggregate=8;
    public static final int HyphenMinusGreaterThanSign=81;
    public static final int Day=70;
    public static final int All=67;
    public static final int Null=60;
    public static final int True=62;
    public static final int Update=33;
    public static final int Full=53;
    public static final int FullStopFullStopFullStop=66;
    public static final int PercentSign=94;
    public static final int Last=57;
    public static final int Unidirectional=4;
    public static final int Trigger=17;
    public static final int Stream=31;
    public static final int First=39;
    public static final int RightSquareBracket=111;
    public static final int Into=55;
    public static final int Years=49;
    public static final int Months=25;
    public static final int For=72;
    public static final int RightParenthesis=96;
    public static final int Double=20;
    public static final int Not=75;
    public static final int And=68;
    public static final int NumberSign=93;
    public static final int Long=59;
    public static final int End=71;
    public static final int Hours=42;
    public static final int RULE_STRING=124;
    public static final int Outer=45;
    public static final int Int=73;
    public static final int With=64;
    public static final int RULE_SL_COMMENT=121;
    public static final int Function=10;
    public static final int EqualsSign=106;
    public static final int Colon=103;
    public static final int EOF=-1;
    public static final int Asterisk=97;
    public static final int RULE_SCRIPT=117;
    public static final int Partition=9;
    public static final int Return=28;
    public static final int RULE_WS=122;
    public static final int From=52;
    public static final int RULE_ANY_OTHER=123;
    public static final int Milliseconds=5;
    public static final int Second=29;
    public static final int Of=90;
    public static final int Within=35;
    public static final int Every=37;
    public static final int Seconds=16;
    public static final int Per=76;
    public static final int On=91;

    // delegates
    // delegators


        public InternalSiddhiParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSiddhiParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[505+1];
             
             
        }
        

    public String[] getTokenNames() { return InternalSiddhiParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSiddhiParser.g"; }



     	private SiddhiGrammarAccess grammarAccess;

        public InternalSiddhiParser(TokenStream input, SiddhiGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "SiddhiQL";
       	}

       	@Override
       	protected SiddhiGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleSiddhiQL"
    // InternalSiddhiParser.g:58:1: entryRuleSiddhiQL returns [EObject current=null] : iv_ruleSiddhiQL= ruleSiddhiQL EOF ;
    public final EObject entryRuleSiddhiQL() throws RecognitionException {
        EObject current = null;
        int entryRuleSiddhiQL_StartIndex = input.index();
        EObject iv_ruleSiddhiQL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return current; }
            // InternalSiddhiParser.g:58:49: (iv_ruleSiddhiQL= ruleSiddhiQL EOF )
            // InternalSiddhiParser.g:59:2: iv_ruleSiddhiQL= ruleSiddhiQL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSiddhiQLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSiddhiQL=ruleSiddhiQL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSiddhiQL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRuleSiddhiQL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSiddhiQL"


    // $ANTLR start "ruleSiddhiQL"
    // InternalSiddhiParser.g:65:1: ruleSiddhiQL returns [EObject current=null] : ( (lv_elements_0_0= ruleExecutionPlan ) )* ;
    public final EObject ruleSiddhiQL() throws RecognitionException {
        EObject current = null;
        int ruleSiddhiQL_StartIndex = input.index();
        EObject lv_elements_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return current; }
            // InternalSiddhiParser.g:71:2: ( ( (lv_elements_0_0= ruleExecutionPlan ) )* )
            // InternalSiddhiParser.g:72:2: ( (lv_elements_0_0= ruleExecutionPlan ) )*
            {
            // InternalSiddhiParser.g:72:2: ( (lv_elements_0_0= ruleExecutionPlan ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==Define||LA1_0==CommercialAt) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSiddhiParser.g:73:3: (lv_elements_0_0= ruleExecutionPlan )
            	    {
            	    // InternalSiddhiParser.g:73:3: (lv_elements_0_0= ruleExecutionPlan )
            	    // InternalSiddhiParser.g:74:4: lv_elements_0_0= ruleExecutionPlan
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getSiddhiQLAccess().getElementsExecutionPlanParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_elements_0_0=ruleExecutionPlan();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getSiddhiQLRule());
            	      				}
            	      				add(
            	      					current,
            	      					"elements",
            	      					lv_elements_0_0,
            	      					"org.xtext.example.siddhi.Siddhi.ExecutionPlan");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, ruleSiddhiQL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSiddhiQL"


    // $ANTLR start "entryRuleExecutionPlan"
    // InternalSiddhiParser.g:94:1: entryRuleExecutionPlan returns [EObject current=null] : iv_ruleExecutionPlan= ruleExecutionPlan EOF ;
    public final EObject entryRuleExecutionPlan() throws RecognitionException {
        EObject current = null;
        int entryRuleExecutionPlan_StartIndex = input.index();
        EObject iv_ruleExecutionPlan = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return current; }
            // InternalSiddhiParser.g:94:54: (iv_ruleExecutionPlan= ruleExecutionPlan EOF )
            // InternalSiddhiParser.g:95:2: iv_ruleExecutionPlan= ruleExecutionPlan EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutionPlanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExecutionPlan=ruleExecutionPlan();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutionPlan; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRuleExecutionPlan_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutionPlan"


    // $ANTLR start "ruleExecutionPlan"
    // InternalSiddhiParser.g:101:1: ruleExecutionPlan returns [EObject current=null] : ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) ) ;
    public final EObject ruleExecutionPlan() throws RecognitionException {
        EObject current = null;
        int ruleExecutionPlan_StartIndex = input.index();
        Token otherlv_7=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_appAnn_0_0 = null;

        EObject lv_defStream_1_0 = null;

        EObject lv_defTable_2_0 = null;

        EObject lv_def_window_3_0 = null;

        EObject lv_defTrigger_4_0 = null;

        EObject lv_defFunction_5_0 = null;

        EObject lv_defAggregation_6_0 = null;

        EObject lv_defStream_8_0 = null;

        EObject lv_defTable_9_0 = null;

        EObject lv_def_window_10_0 = null;

        EObject lv_defTrigger_11_0 = null;

        EObject lv_defFunction_12_0 = null;

        EObject lv_defAggregation_13_0 = null;

        EObject lv_exElement_15_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return current; }
            // InternalSiddhiParser.g:107:2: ( ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) ) )
            // InternalSiddhiParser.g:108:2: ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) )
            {
            // InternalSiddhiParser.g:108:2: ( ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? ) )
            // InternalSiddhiParser.g:109:3: ( (lv_appAnn_0_0= ruleAppAnnotation ) )* ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? )
            {
            // InternalSiddhiParser.g:109:3: ( (lv_appAnn_0_0= ruleAppAnnotation ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==CommercialAt) ) {
                    int LA2_1 = input.LA(2);

                    if ( (LA2_1==App) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // InternalSiddhiParser.g:110:4: (lv_appAnn_0_0= ruleAppAnnotation )
            	    {
            	    // InternalSiddhiParser.g:110:4: (lv_appAnn_0_0= ruleAppAnnotation )
            	    // InternalSiddhiParser.g:111:5: lv_appAnn_0_0= ruleAppAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecutionPlanAccess().getAppAnnAppAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_appAnn_0_0=ruleAppAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	      					}
            	      					add(
            	      						current,
            	      						"appAnn",
            	      						lv_appAnn_0_0,
            	      						"org.xtext.example.siddhi.Siddhi.AppAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // InternalSiddhiParser.g:128:3: ( ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )? )
            // InternalSiddhiParser.g:129:4: ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) ) ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )* ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )* (otherlv_16= Semicolon )?
            {
            // InternalSiddhiParser.g:129:4: ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) ) )
            int alt3=6;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CommercialAt) ) {
                int LA3_1 = input.LA(2);

                if ( (synpred1_InternalSiddhiParser()) ) {
                    alt3=1;
                }
                else if ( (synpred2_InternalSiddhiParser()) ) {
                    alt3=2;
                }
                else if ( (synpred3_InternalSiddhiParser()) ) {
                    alt3=3;
                }
                else if ( (synpred6_InternalSiddhiParser()) ) {
                    alt3=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA3_0==Define) ) {
                int LA3_2 = input.LA(2);

                if ( (synpred1_InternalSiddhiParser()) ) {
                    alt3=1;
                }
                else if ( (synpred2_InternalSiddhiParser()) ) {
                    alt3=2;
                }
                else if ( (synpred3_InternalSiddhiParser()) ) {
                    alt3=3;
                }
                else if ( (synpred4_InternalSiddhiParser()) ) {
                    alt3=4;
                }
                else if ( (synpred5_InternalSiddhiParser()) ) {
                    alt3=5;
                }
                else if ( (synpred6_InternalSiddhiParser()) ) {
                    alt3=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSiddhiParser.g:130:5: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) )
                    {
                    // InternalSiddhiParser.g:130:5: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream ) )
                    // InternalSiddhiParser.g:131:6: ( ( ruleDefinitionStream ) )=> (lv_defStream_1_0= ruleDefinitionStream )
                    {
                    // InternalSiddhiParser.g:135:6: (lv_defStream_1_0= ruleDefinitionStream )
                    // InternalSiddhiParser.g:136:7: lv_defStream_1_0= ruleDefinitionStream
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defStream_1_0=ruleDefinitionStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defStream",
                      								lv_defStream_1_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionStream");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:154:5: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) )
                    {
                    // InternalSiddhiParser.g:154:5: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable ) )
                    // InternalSiddhiParser.g:155:6: ( ( ruleDefinitionTable ) )=> (lv_defTable_2_0= ruleDefinitionTable )
                    {
                    // InternalSiddhiParser.g:159:6: (lv_defTable_2_0= ruleDefinitionTable )
                    // InternalSiddhiParser.g:160:7: lv_defTable_2_0= ruleDefinitionTable
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defTable_2_0=ruleDefinitionTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defTable",
                      								lv_defTable_2_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionTable");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:178:5: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) )
                    {
                    // InternalSiddhiParser.g:178:5: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow ) )
                    // InternalSiddhiParser.g:179:6: ( ( ruleDefinitionWindow ) )=> (lv_def_window_3_0= ruleDefinitionWindow )
                    {
                    // InternalSiddhiParser.g:183:6: (lv_def_window_3_0= ruleDefinitionWindow )
                    // InternalSiddhiParser.g:184:7: lv_def_window_3_0= ruleDefinitionWindow
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_def_window_3_0=ruleDefinitionWindow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"def_window",
                      								lv_def_window_3_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionWindow");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:202:5: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) )
                    {
                    // InternalSiddhiParser.g:202:5: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger ) )
                    // InternalSiddhiParser.g:203:6: ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_4_0= ruleDefinitionTrigger )
                    {
                    // InternalSiddhiParser.g:207:6: (lv_defTrigger_4_0= ruleDefinitionTrigger )
                    // InternalSiddhiParser.g:208:7: lv_defTrigger_4_0= ruleDefinitionTrigger
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defTrigger_4_0=ruleDefinitionTrigger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defTrigger",
                      								lv_defTrigger_4_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionTrigger");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:226:5: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) )
                    {
                    // InternalSiddhiParser.g:226:5: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction ) )
                    // InternalSiddhiParser.g:227:6: ( ( ruleDefinitionFunction ) )=> (lv_defFunction_5_0= ruleDefinitionFunction )
                    {
                    // InternalSiddhiParser.g:231:6: (lv_defFunction_5_0= ruleDefinitionFunction )
                    // InternalSiddhiParser.g:232:7: lv_defFunction_5_0= ruleDefinitionFunction
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_0_4_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defFunction_5_0=ruleDefinitionFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defFunction",
                      								lv_defFunction_5_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionFunction");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:250:5: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) )
                    {
                    // InternalSiddhiParser.g:250:5: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation ) )
                    // InternalSiddhiParser.g:251:6: ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_6_0= ruleDefinitionAggregation )
                    {
                    // InternalSiddhiParser.g:255:6: (lv_defAggregation_6_0= ruleDefinitionAggregation )
                    // InternalSiddhiParser.g:256:7: lv_defAggregation_6_0= ruleDefinitionAggregation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefAggregationDefinitionAggregationParserRuleCall_1_0_5_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_defAggregation_6_0=ruleDefinitionAggregation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
                      							}
                      							add(
                      								current,
                      								"defAggregation",
                      								lv_defAggregation_6_0,
                      								"org.xtext.example.siddhi.Siddhi.DefinitionAggregation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:274:4: ( ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==Semicolon) ) {
                    int LA5_1 = input.LA(2);

                    if ( (synpred13_InternalSiddhiParser()) ) {
                        alt5=1;
                    }


                }


                switch (alt5) {
            	case 1 :
            	    // InternalSiddhiParser.g:275:5: ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )=> (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) )
            	    {
            	    // InternalSiddhiParser.g:340:5: (otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) ) )
            	    // InternalSiddhiParser.g:341:6: otherlv_7= Semicolon ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) )
            	    {
            	    otherlv_7=(Token)match(input,Semicolon,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_7, grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_1_0_0());
            	      					
            	    }
            	    // InternalSiddhiParser.g:345:6: ( ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) ) )
            	    int alt4=6;
            	    int LA4_0 = input.LA(1);

            	    if ( (LA4_0==CommercialAt) ) {
            	        int LA4_1 = input.LA(2);

            	        if ( (synpred14_InternalSiddhiParser()) ) {
            	            alt4=1;
            	        }
            	        else if ( (synpred15_InternalSiddhiParser()) ) {
            	            alt4=2;
            	        }
            	        else if ( (synpred16_InternalSiddhiParser()) ) {
            	            alt4=3;
            	        }
            	        else if ( (synpred19_InternalSiddhiParser()) ) {
            	            alt4=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 4, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else if ( (LA4_0==Define) ) {
            	        int LA4_2 = input.LA(2);

            	        if ( (synpred14_InternalSiddhiParser()) ) {
            	            alt4=1;
            	        }
            	        else if ( (synpred15_InternalSiddhiParser()) ) {
            	            alt4=2;
            	        }
            	        else if ( (synpred16_InternalSiddhiParser()) ) {
            	            alt4=3;
            	        }
            	        else if ( (synpred17_InternalSiddhiParser()) ) {
            	            alt4=4;
            	        }
            	        else if ( (synpred18_InternalSiddhiParser()) ) {
            	            alt4=5;
            	        }
            	        else if ( (synpred19_InternalSiddhiParser()) ) {
            	            alt4=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 4, 2, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 4, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt4) {
            	        case 1 :
            	            // InternalSiddhiParser.g:346:7: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) )
            	            {
            	            // InternalSiddhiParser.g:346:7: ( ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream ) )
            	            // InternalSiddhiParser.g:347:8: ( ( ruleDefinitionStream ) )=> (lv_defStream_8_0= ruleDefinitionStream )
            	            {
            	            // InternalSiddhiParser.g:351:8: (lv_defStream_8_0= ruleDefinitionStream )
            	            // InternalSiddhiParser.g:352:9: lv_defStream_8_0= ruleDefinitionStream
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_1_0_1_0_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defStream_8_0=ruleDefinitionStream();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defStream",
            	              										lv_defStream_8_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionStream");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:370:7: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) )
            	            {
            	            // InternalSiddhiParser.g:370:7: ( ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable ) )
            	            // InternalSiddhiParser.g:371:8: ( ( ruleDefinitionTable ) )=> (lv_defTable_9_0= ruleDefinitionTable )
            	            {
            	            // InternalSiddhiParser.g:375:8: (lv_defTable_9_0= ruleDefinitionTable )
            	            // InternalSiddhiParser.g:376:9: lv_defTable_9_0= ruleDefinitionTable
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_1_0_1_1_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defTable_9_0=ruleDefinitionTable();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defTable",
            	              										lv_defTable_9_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionTable");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalSiddhiParser.g:394:7: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) )
            	            {
            	            // InternalSiddhiParser.g:394:7: ( ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow ) )
            	            // InternalSiddhiParser.g:395:8: ( ( ruleDefinitionWindow ) )=> (lv_def_window_10_0= ruleDefinitionWindow )
            	            {
            	            // InternalSiddhiParser.g:399:8: (lv_def_window_10_0= ruleDefinitionWindow )
            	            // InternalSiddhiParser.g:400:9: lv_def_window_10_0= ruleDefinitionWindow
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_1_0_1_2_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_def_window_10_0=ruleDefinitionWindow();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"def_window",
            	              										lv_def_window_10_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionWindow");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 4 :
            	            // InternalSiddhiParser.g:418:7: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) )
            	            {
            	            // InternalSiddhiParser.g:418:7: ( ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger ) )
            	            // InternalSiddhiParser.g:419:8: ( ( ruleDefinitionTrigger ) )=> (lv_defTrigger_11_0= ruleDefinitionTrigger )
            	            {
            	            // InternalSiddhiParser.g:423:8: (lv_defTrigger_11_0= ruleDefinitionTrigger )
            	            // InternalSiddhiParser.g:424:9: lv_defTrigger_11_0= ruleDefinitionTrigger
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_1_0_1_3_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defTrigger_11_0=ruleDefinitionTrigger();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defTrigger",
            	              										lv_defTrigger_11_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionTrigger");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 5 :
            	            // InternalSiddhiParser.g:442:7: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) )
            	            {
            	            // InternalSiddhiParser.g:442:7: ( ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction ) )
            	            // InternalSiddhiParser.g:443:8: ( ( ruleDefinitionFunction ) )=> (lv_defFunction_12_0= ruleDefinitionFunction )
            	            {
            	            // InternalSiddhiParser.g:447:8: (lv_defFunction_12_0= ruleDefinitionFunction )
            	            // InternalSiddhiParser.g:448:9: lv_defFunction_12_0= ruleDefinitionFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_1_0_1_4_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defFunction_12_0=ruleDefinitionFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defFunction",
            	              										lv_defFunction_12_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionFunction");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 6 :
            	            // InternalSiddhiParser.g:466:7: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) )
            	            {
            	            // InternalSiddhiParser.g:466:7: ( ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation ) )
            	            // InternalSiddhiParser.g:467:8: ( ( ruleDefinitionAggregation ) )=> (lv_defAggregation_13_0= ruleDefinitionAggregation )
            	            {
            	            // InternalSiddhiParser.g:471:8: (lv_defAggregation_13_0= ruleDefinitionAggregation )
            	            // InternalSiddhiParser.g:472:9: lv_defAggregation_13_0= ruleDefinitionAggregation
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExecutionPlanAccess().getDefAggregationDefinitionAggregationParserRuleCall_1_1_0_1_5_0());
            	              								
            	            }
            	            pushFollow(FollowSets000.FOLLOW_5);
            	            lv_defAggregation_13_0=ruleDefinitionAggregation();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	              									}
            	              									add(
            	              										current,
            	              										"defAggregation",
            	              										lv_defAggregation_13_0,
            	              										"org.xtext.example.siddhi.Siddhi.DefinitionAggregation");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalSiddhiParser.g:492:4: ( ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==Semicolon) ) {
                    int LA6_1 = input.LA(2);

                    if ( (synpred20_InternalSiddhiParser()) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // InternalSiddhiParser.g:493:5: ( ( Semicolon ( ( ruleExecutionElement ) ) ) )=> (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) )
            	    {
            	    // InternalSiddhiParser.g:502:5: (otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) ) )
            	    // InternalSiddhiParser.g:503:6: otherlv_14= Semicolon ( (lv_exElement_15_0= ruleExecutionElement ) )
            	    {
            	    otherlv_14=(Token)match(input,Semicolon,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_14, grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_2_0_0());
            	      					
            	    }
            	    // InternalSiddhiParser.g:507:6: ( (lv_exElement_15_0= ruleExecutionElement ) )
            	    // InternalSiddhiParser.g:508:7: (lv_exElement_15_0= ruleExecutionElement )
            	    {
            	    // InternalSiddhiParser.g:508:7: (lv_exElement_15_0= ruleExecutionElement )
            	    // InternalSiddhiParser.g:509:8: lv_exElement_15_0= ruleExecutionElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getExecutionPlanAccess().getExElementExecutionElementParserRuleCall_1_2_0_1_0());
            	      							
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_exElement_15_0=ruleExecutionElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getExecutionPlanRule());
            	      								}
            	      								add(
            	      									current,
            	      									"exElement",
            	      									lv_exElement_15_0,
            	      									"org.xtext.example.siddhi.Siddhi.ExecutionElement");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            // InternalSiddhiParser.g:528:4: (otherlv_16= Semicolon )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Semicolon) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalSiddhiParser.g:529:5: otherlv_16= Semicolon
                    {
                    otherlv_16=(Token)match(input,Semicolon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_3());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, ruleExecutionPlan_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExecutionPlan"


    // $ANTLR start "entryRuleExecutionElement"
    // InternalSiddhiParser.g:539:1: entryRuleExecutionElement returns [EObject current=null] : iv_ruleExecutionElement= ruleExecutionElement EOF ;
    public final EObject entryRuleExecutionElement() throws RecognitionException {
        EObject current = null;
        int entryRuleExecutionElement_StartIndex = input.index();
        EObject iv_ruleExecutionElement = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return current; }
            // InternalSiddhiParser.g:539:57: (iv_ruleExecutionElement= ruleExecutionElement EOF )
            // InternalSiddhiParser.g:540:2: iv_ruleExecutionElement= ruleExecutionElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutionElementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExecutionElement=ruleExecutionElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutionElement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRuleExecutionElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutionElement"


    // $ANTLR start "ruleExecutionElement"
    // InternalSiddhiParser.g:546:1: ruleExecutionElement returns [EObject current=null] : ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) ) ;
    public final EObject ruleExecutionElement() throws RecognitionException {
        EObject current = null;
        int ruleExecutionElement_StartIndex = input.index();
        EObject lv_execPartition_0_0 = null;

        EObject lv_que_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return current; }
            // InternalSiddhiParser.g:552:2: ( ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) ) )
            // InternalSiddhiParser.g:553:2: ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) )
            {
            // InternalSiddhiParser.g:553:2: ( ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) ) | ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==CommercialAt) ) {
                int LA8_1 = input.LA(2);

                if ( (synpred21_InternalSiddhiParser()) ) {
                    alt8=1;
                }
                else if ( (synpred22_InternalSiddhiParser()) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA8_0==Partition) && (synpred21_InternalSiddhiParser())) {
                alt8=1;
            }
            else if ( (LA8_0==From) && (synpred22_InternalSiddhiParser())) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSiddhiParser.g:554:3: ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) )
                    {
                    // InternalSiddhiParser.g:554:3: ( ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) ) )
                    // InternalSiddhiParser.g:555:4: ( ( ( ruleExecPartition ) ) )=> ( (lv_execPartition_0_0= ruleExecPartition ) )
                    {
                    // InternalSiddhiParser.g:561:4: ( (lv_execPartition_0_0= ruleExecPartition ) )
                    // InternalSiddhiParser.g:562:5: (lv_execPartition_0_0= ruleExecPartition )
                    {
                    // InternalSiddhiParser.g:562:5: (lv_execPartition_0_0= ruleExecPartition )
                    // InternalSiddhiParser.g:563:6: lv_execPartition_0_0= ruleExecPartition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutionElementAccess().getExecPartitionExecPartitionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_execPartition_0_0=ruleExecPartition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutionElementRule());
                      						}
                      						set(
                      							current,
                      							"execPartition",
                      							lv_execPartition_0_0,
                      							"org.xtext.example.siddhi.Siddhi.ExecPartition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:582:3: ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) )
                    {
                    // InternalSiddhiParser.g:582:3: ( ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) ) )
                    // InternalSiddhiParser.g:583:4: ( ( ( ruleQuery ) ) )=> ( (lv_que_1_0= ruleQuery ) )
                    {
                    // InternalSiddhiParser.g:589:4: ( (lv_que_1_0= ruleQuery ) )
                    // InternalSiddhiParser.g:590:5: (lv_que_1_0= ruleQuery )
                    {
                    // InternalSiddhiParser.g:590:5: (lv_que_1_0= ruleQuery )
                    // InternalSiddhiParser.g:591:6: lv_que_1_0= ruleQuery
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutionElementAccess().getQueQueryParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_que_1_0=ruleQuery();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutionElementRule());
                      						}
                      						set(
                      							current,
                      							"que",
                      							lv_que_1_0,
                      							"org.xtext.example.siddhi.Siddhi.Query");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, ruleExecutionElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExecutionElement"


    // $ANTLR start "entryRuleDefinitionStream"
    // InternalSiddhiParser.g:613:1: entryRuleDefinitionStream returns [EObject current=null] : iv_ruleDefinitionStream= ruleDefinitionStream EOF ;
    public final EObject entryRuleDefinitionStream() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionStream_StartIndex = input.index();
        EObject iv_ruleDefinitionStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return current; }
            // InternalSiddhiParser.g:613:57: (iv_ruleDefinitionStream= ruleDefinitionStream EOF )
            // InternalSiddhiParser.g:614:2: iv_ruleDefinitionStream= ruleDefinitionStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionStream=ruleDefinitionStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuleDefinitionStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionStream"


    // $ANTLR start "ruleDefinitionStream"
    // InternalSiddhiParser.g:620:1: ruleDefinitionStream returns [EObject current=null] : ( ( (lv_ann_0_0= ruleAnnotation ) )* this_DEFINE_1= ruleDEFINE[$current] this_STREAM_2= ruleSTREAM[$current] ( (lv_src_3_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_5_0= ruleFeatures ) ) (otherlv_6= Comma ( (lv_feature_7_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) ;
    public final EObject ruleDefinitionStream() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionStream_StartIndex = input.index();
        Token otherlv_6=null;
        EObject lv_ann_0_0 = null;

        EObject this_DEFINE_1 = null;

        EObject this_STREAM_2 = null;

        EObject lv_src_3_0 = null;

        EObject lv_feature_5_0 = null;

        EObject lv_feature_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return current; }
            // InternalSiddhiParser.g:626:2: ( ( ( (lv_ann_0_0= ruleAnnotation ) )* this_DEFINE_1= ruleDEFINE[$current] this_STREAM_2= ruleSTREAM[$current] ( (lv_src_3_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_5_0= ruleFeatures ) ) (otherlv_6= Comma ( (lv_feature_7_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:627:2: ( ( (lv_ann_0_0= ruleAnnotation ) )* this_DEFINE_1= ruleDEFINE[$current] this_STREAM_2= ruleSTREAM[$current] ( (lv_src_3_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_5_0= ruleFeatures ) ) (otherlv_6= Comma ( (lv_feature_7_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            {
            // InternalSiddhiParser.g:627:2: ( ( (lv_ann_0_0= ruleAnnotation ) )* this_DEFINE_1= ruleDEFINE[$current] this_STREAM_2= ruleSTREAM[$current] ( (lv_src_3_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_5_0= ruleFeatures ) ) (otherlv_6= Comma ( (lv_feature_7_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            // InternalSiddhiParser.g:628:3: ( (lv_ann_0_0= ruleAnnotation ) )* this_DEFINE_1= ruleDEFINE[$current] this_STREAM_2= ruleSTREAM[$current] ( (lv_src_3_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_5_0= ruleFeatures ) ) (otherlv_6= Comma ( (lv_feature_7_0= ruleFeatures ) ) )* ruleCLOSE_PAR
            {
            // InternalSiddhiParser.g:628:3: ( (lv_ann_0_0= ruleAnnotation ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==CommercialAt) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalSiddhiParser.g:629:4: (lv_ann_0_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:629:4: (lv_ann_0_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:630:5: lv_ann_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionStreamAccess().getAnnAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann",
            	      						lv_ann_0_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionStreamRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionStreamAccess().getDEFINEParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_8);
            this_DEFINE_1=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_1;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionStreamRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionStreamAccess().getSTREAMParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_STREAM_2=ruleSTREAM(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_STREAM_2;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:669:3: ( (lv_src_3_0= ruleSource1 ) )
            // InternalSiddhiParser.g:670:4: (lv_src_3_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:670:4: (lv_src_3_0= ruleSource1 )
            // InternalSiddhiParser.g:671:5: lv_src_3_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionStreamAccess().getSrcSource1ParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_src_3_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_3_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionStreamAccess().getOPEN_PARParserRuleCall_4());
              		
            }
            pushFollow(FollowSets000.FOLLOW_11);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:695:3: ( (lv_feature_5_0= ruleFeatures ) )
            // InternalSiddhiParser.g:696:4: (lv_feature_5_0= ruleFeatures )
            {
            // InternalSiddhiParser.g:696:4: (lv_feature_5_0= ruleFeatures )
            // InternalSiddhiParser.g:697:5: lv_feature_5_0= ruleFeatures
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_12);
            lv_feature_5_0=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
              					}
              					add(
              						current,
              						"feature",
              						lv_feature_5_0,
              						"org.xtext.example.siddhi.Siddhi.Features");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:714:3: (otherlv_6= Comma ( (lv_feature_7_0= ruleFeatures ) ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==Comma) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // InternalSiddhiParser.g:715:4: otherlv_6= Comma ( (lv_feature_7_0= ruleFeatures ) )
            	    {
            	    otherlv_6=(Token)match(input,Comma,FollowSets000.FOLLOW_11); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getDefinitionStreamAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:719:4: ( (lv_feature_7_0= ruleFeatures ) )
            	    // InternalSiddhiParser.g:720:5: (lv_feature_7_0= ruleFeatures )
            	    {
            	    // InternalSiddhiParser.g:720:5: (lv_feature_7_0= ruleFeatures )
            	    // InternalSiddhiParser.g:721:6: lv_feature_7_0= ruleFeatures
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_feature_7_0=ruleFeatures();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDefinitionStreamRule());
            	      						}
            	      						add(
            	      							current,
            	      							"feature",
            	      							lv_feature_7_0,
            	      							"org.xtext.example.siddhi.Siddhi.Features");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionStreamAccess().getCLOSE_PARParserRuleCall_7());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruleDefinitionStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionStream"


    // $ANTLR start "entryRuleDefinitionTable"
    // InternalSiddhiParser.g:750:1: entryRuleDefinitionTable returns [EObject current=null] : iv_ruleDefinitionTable= ruleDefinitionTable EOF ;
    public final EObject entryRuleDefinitionTable() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionTable_StartIndex = input.index();
        EObject iv_ruleDefinitionTable = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return current; }
            // InternalSiddhiParser.g:750:56: (iv_ruleDefinitionTable= ruleDefinitionTable EOF )
            // InternalSiddhiParser.g:751:2: iv_ruleDefinitionTable= ruleDefinitionTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionTableRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionTable=ruleDefinitionTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionTable; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRuleDefinitionTable_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionTable"


    // $ANTLR start "ruleDefinitionTable"
    // InternalSiddhiParser.g:757:1: ruleDefinitionTable returns [EObject current=null] : ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) ;
    public final EObject ruleDefinitionTable() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionTable_StartIndex = input.index();
        Token otherlv_7=null;
        EObject lv_ann1_1_0 = null;

        EObject this_DEFINE_2 = null;

        EObject this_TABLE_3 = null;

        EObject lv_src_4_0 = null;

        EObject lv_feature_6_0 = null;

        EObject lv_feature_8_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return current; }
            // InternalSiddhiParser.g:763:2: ( ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:764:2: ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            {
            // InternalSiddhiParser.g:764:2: ( () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR )
            // InternalSiddhiParser.g:765:3: () ( (lv_ann1_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_TABLE_3= ruleTABLE[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR
            {
            // InternalSiddhiParser.g:765:3: ()
            // InternalSiddhiParser.g:766:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionTableAccess().getDefinitionTableAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:772:3: ( (lv_ann1_1_0= ruleAnnotation ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==CommercialAt) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalSiddhiParser.g:773:4: (lv_ann1_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:773:4: (lv_ann1_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:774:5: lv_ann1_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionTableAccess().getAnn1AnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann1_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann1",
            	      						lv_ann1_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionTableRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getDEFINEParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_13);
            this_DEFINE_2=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionTableRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getTABLEParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_TABLE_3=ruleTABLE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TABLE_3;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:813:3: ( (lv_src_4_0= ruleSource1 ) )
            // InternalSiddhiParser.g:814:4: (lv_src_4_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:814:4: (lv_src_4_0= ruleSource1 )
            // InternalSiddhiParser.g:815:5: lv_src_4_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionTableAccess().getSrcSource1ParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_src_4_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_4_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getOPEN_PARParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_11);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:839:3: ( (lv_feature_6_0= ruleFeatures ) )
            // InternalSiddhiParser.g:840:4: (lv_feature_6_0= ruleFeatures )
            {
            // InternalSiddhiParser.g:840:4: (lv_feature_6_0= ruleFeatures )
            // InternalSiddhiParser.g:841:5: lv_feature_6_0= ruleFeatures
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_12);
            lv_feature_6_0=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
              					}
              					add(
              						current,
              						"feature",
              						lv_feature_6_0,
              						"org.xtext.example.siddhi.Siddhi.Features");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:858:3: (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==Comma) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalSiddhiParser.g:859:4: otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) )
            	    {
            	    otherlv_7=(Token)match(input,Comma,FollowSets000.FOLLOW_11); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getDefinitionTableAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:863:4: ( (lv_feature_8_0= ruleFeatures ) )
            	    // InternalSiddhiParser.g:864:5: (lv_feature_8_0= ruleFeatures )
            	    {
            	    // InternalSiddhiParser.g:864:5: (lv_feature_8_0= ruleFeatures )
            	    // InternalSiddhiParser.g:865:6: lv_feature_8_0= ruleFeatures
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_feature_8_0=ruleFeatures();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDefinitionTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"feature",
            	      							lv_feature_8_0,
            	      							"org.xtext.example.siddhi.Siddhi.Features");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionTableAccess().getCLOSE_PARParserRuleCall_8());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, ruleDefinitionTable_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionTable"


    // $ANTLR start "entryRuleDefinitionWindow"
    // InternalSiddhiParser.g:894:1: entryRuleDefinitionWindow returns [EObject current=null] : iv_ruleDefinitionWindow= ruleDefinitionWindow EOF ;
    public final EObject entryRuleDefinitionWindow() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionWindow_StartIndex = input.index();
        EObject iv_ruleDefinitionWindow = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return current; }
            // InternalSiddhiParser.g:894:57: (iv_ruleDefinitionWindow= ruleDefinitionWindow EOF )
            // InternalSiddhiParser.g:895:2: iv_ruleDefinitionWindow= ruleDefinitionWindow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionWindowRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionWindow=ruleDefinitionWindow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionWindow; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRuleDefinitionWindow_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionWindow"


    // $ANTLR start "ruleDefinitionWindow"
    // InternalSiddhiParser.g:901:1: ruleDefinitionWindow returns [EObject current=null] : ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? ) ;
    public final EObject ruleDefinitionWindow() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionWindow_StartIndex = input.index();
        Token otherlv_7=null;
        EObject lv_ann2_1_0 = null;

        EObject this_DEFINE_2 = null;

        EObject this_WINDOW_3 = null;

        EObject lv_src_4_0 = null;

        EObject lv_feature_6_0 = null;

        EObject lv_feature_8_0 = null;

        EObject lv_funcOp_10_0 = null;

        EObject this_OUTPUT_11 = null;

        EObject lv_opEventType_12_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return current; }
            // InternalSiddhiParser.g:907:2: ( ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? ) )
            // InternalSiddhiParser.g:908:2: ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? )
            {
            // InternalSiddhiParser.g:908:2: ( () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )? )
            // InternalSiddhiParser.g:909:3: () ( (lv_ann2_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_WINDOW_3= ruleWINDOW[$current] ( (lv_src_4_0= ruleSource1 ) ) ruleOPEN_PAR ( (lv_feature_6_0= ruleFeatures ) ) (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )* ruleCLOSE_PAR ( (lv_funcOp_10_0= ruleFunctionOperation ) ) (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )?
            {
            // InternalSiddhiParser.g:909:3: ()
            // InternalSiddhiParser.g:910:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionWindowAccess().getDefinitionWindowAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:916:3: ( (lv_ann2_1_0= ruleAnnotation ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==CommercialAt) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalSiddhiParser.g:917:4: (lv_ann2_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:917:4: (lv_ann2_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:918:5: lv_ann2_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getAnn2AnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann2_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann2",
            	      						lv_ann2_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionWindowRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getDEFINEParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_14);
            this_DEFINE_2=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionWindowRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getWINDOWParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_WINDOW_3=ruleWINDOW(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WINDOW_3;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:957:3: ( (lv_src_4_0= ruleSource1 ) )
            // InternalSiddhiParser.g:958:4: (lv_src_4_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:958:4: (lv_src_4_0= ruleSource1 )
            // InternalSiddhiParser.g:959:5: lv_src_4_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getSrcSource1ParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_src_4_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_4_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getOPEN_PARParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_11);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:983:3: ( (lv_feature_6_0= ruleFeatures ) )
            // InternalSiddhiParser.g:984:4: (lv_feature_6_0= ruleFeatures )
            {
            // InternalSiddhiParser.g:984:4: (lv_feature_6_0= ruleFeatures )
            // InternalSiddhiParser.g:985:5: lv_feature_6_0= ruleFeatures
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_12);
            lv_feature_6_0=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
              					}
              					add(
              						current,
              						"feature",
              						lv_feature_6_0,
              						"org.xtext.example.siddhi.Siddhi.Features");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1002:3: (otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==Comma) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalSiddhiParser.g:1003:4: otherlv_7= Comma ( (lv_feature_8_0= ruleFeatures ) )
            	    {
            	    otherlv_7=(Token)match(input,Comma,FollowSets000.FOLLOW_11); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getDefinitionWindowAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:1007:4: ( (lv_feature_8_0= ruleFeatures ) )
            	    // InternalSiddhiParser.g:1008:5: (lv_feature_8_0= ruleFeatures )
            	    {
            	    // InternalSiddhiParser.g:1008:5: (lv_feature_8_0= ruleFeatures )
            	    // InternalSiddhiParser.g:1009:6: lv_feature_8_0= ruleFeatures
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_feature_8_0=ruleFeatures();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"feature",
            	      							lv_feature_8_0,
            	      							"org.xtext.example.siddhi.Siddhi.Features");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionWindowAccess().getCLOSE_PARParserRuleCall_8());
              		
            }
            pushFollow(FollowSets000.FOLLOW_11);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1034:3: ( (lv_funcOp_10_0= ruleFunctionOperation ) )
            // InternalSiddhiParser.g:1035:4: (lv_funcOp_10_0= ruleFunctionOperation )
            {
            // InternalSiddhiParser.g:1035:4: (lv_funcOp_10_0= ruleFunctionOperation )
            // InternalSiddhiParser.g:1036:5: lv_funcOp_10_0= ruleFunctionOperation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionWindowAccess().getFuncOpFunctionOperationParserRuleCall_9_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_15);
            lv_funcOp_10_0=ruleFunctionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
              					}
              					set(
              						current,
              						"funcOp",
              						lv_funcOp_10_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionOperation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1053:3: (this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==Output) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalSiddhiParser.g:1054:4: this_OUTPUT_11= ruleOUTPUT[$current] ( (lv_opEventType_12_0= ruleOutputEventType ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDefinitionWindowRule());
                      				}
                      				newCompositeNode(grammarAccess.getDefinitionWindowAccess().getOUTPUTParserRuleCall_10_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    this_OUTPUT_11=ruleOUTPUT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTPUT_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:1065:4: ( (lv_opEventType_12_0= ruleOutputEventType ) )
                    // InternalSiddhiParser.g:1066:5: (lv_opEventType_12_0= ruleOutputEventType )
                    {
                    // InternalSiddhiParser.g:1066:5: (lv_opEventType_12_0= ruleOutputEventType )
                    // InternalSiddhiParser.g:1067:6: lv_opEventType_12_0= ruleOutputEventType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefinitionWindowAccess().getOpEventTypeOutputEventTypeParserRuleCall_10_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_opEventType_12_0=ruleOutputEventType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefinitionWindowRule());
                      						}
                      						set(
                      							current,
                      							"opEventType",
                      							lv_opEventType_12_0,
                      							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, ruleDefinitionWindow_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionWindow"


    // $ANTLR start "entryRuleDefinitionTrigger"
    // InternalSiddhiParser.g:1089:1: entryRuleDefinitionTrigger returns [EObject current=null] : iv_ruleDefinitionTrigger= ruleDefinitionTrigger EOF ;
    public final EObject entryRuleDefinitionTrigger() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionTrigger_StartIndex = input.index();
        EObject iv_ruleDefinitionTrigger = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return current; }
            // InternalSiddhiParser.g:1089:58: (iv_ruleDefinitionTrigger= ruleDefinitionTrigger EOF )
            // InternalSiddhiParser.g:1090:2: iv_ruleDefinitionTrigger= ruleDefinitionTrigger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionTriggerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionTrigger=ruleDefinitionTrigger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionTrigger; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRuleDefinitionTrigger_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionTrigger"


    // $ANTLR start "ruleDefinitionTrigger"
    // InternalSiddhiParser.g:1096:1: ruleDefinitionTrigger returns [EObject current=null] : ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) ) ;
    public final EObject ruleDefinitionTrigger() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionTrigger_StartIndex = input.index();
        EObject this_DEFINE_1 = null;

        EObject this_TRIGGER_2 = null;

        EObject lv_tn_3_0 = null;

        EObject this_AT_4 = null;

        EObject lv_every_5_0 = null;

        EObject lv_tv_6_0 = null;

        EObject lv_sv_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return current; }
            // InternalSiddhiParser.g:1102:2: ( ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) ) )
            // InternalSiddhiParser.g:1103:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) )
            {
            // InternalSiddhiParser.g:1103:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) ) )
            // InternalSiddhiParser.g:1104:3: () (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] ) ( (lv_tn_3_0= ruleTriggerName ) ) this_AT_4= ruleAT[$current] ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) )
            {
            // InternalSiddhiParser.g:1104:3: ()
            // InternalSiddhiParser.g:1105:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionTriggerAccess().getDefinitionTriggerAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:1111:3: (this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current] )
            // InternalSiddhiParser.g:1112:4: this_DEFINE_1= ruleDEFINE[$current] this_TRIGGER_2= ruleTRIGGER[$current]
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionTriggerRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getDEFINEParserRuleCall_1_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_17);
            this_DEFINE_1=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_DEFINE_1;
              				afterParserOrEnumRuleCall();
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionTriggerRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getTRIGGERParserRuleCall_1_1());
              			
            }
            pushFollow(FollowSets000.FOLLOW_18);
            this_TRIGGER_2=ruleTRIGGER(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_TRIGGER_2;
              				afterParserOrEnumRuleCall();
              			
            }

            }

            // InternalSiddhiParser.g:1135:3: ( (lv_tn_3_0= ruleTriggerName ) )
            // InternalSiddhiParser.g:1136:4: (lv_tn_3_0= ruleTriggerName )
            {
            // InternalSiddhiParser.g:1136:4: (lv_tn_3_0= ruleTriggerName )
            // InternalSiddhiParser.g:1137:5: lv_tn_3_0= ruleTriggerName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getTnTriggerNameParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_tn_3_0=ruleTriggerName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
              					}
              					set(
              						current,
              						"tn",
              						lv_tn_3_0,
              						"org.xtext.example.siddhi.Siddhi.TriggerName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionTriggerRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getATParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_20);
            this_AT_4=ruleAT(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AT_4;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1165:3: ( ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) ) | ( (lv_sv_7_0= ruleStringValue ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==Every) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_STRING) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSiddhiParser.g:1166:4: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) )
                    {
                    // InternalSiddhiParser.g:1166:4: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) ) )
                    // InternalSiddhiParser.g:1167:5: ( (lv_every_5_0= ruleEVERY ) ) ( (lv_tv_6_0= ruleTimeValue ) )
                    {
                    // InternalSiddhiParser.g:1167:5: ( (lv_every_5_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:1168:6: (lv_every_5_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:1168:6: (lv_every_5_0= ruleEVERY )
                    // InternalSiddhiParser.g:1169:7: lv_every_5_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getEveryEVERYParserRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_every_5_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
                      							}
                      							set(
                      								current,
                      								"every",
                      								lv_every_5_0,
                      								"org.xtext.example.siddhi.Siddhi.EVERY");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:1186:5: ( (lv_tv_6_0= ruleTimeValue ) )
                    // InternalSiddhiParser.g:1187:6: (lv_tv_6_0= ruleTimeValue )
                    {
                    // InternalSiddhiParser.g:1187:6: (lv_tv_6_0= ruleTimeValue )
                    // InternalSiddhiParser.g:1188:7: lv_tv_6_0= ruleTimeValue
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getTvTimeValueParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tv_6_0=ruleTimeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
                      							}
                      							set(
                      								current,
                      								"tv",
                      								lv_tv_6_0,
                      								"org.xtext.example.siddhi.Siddhi.TimeValue");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:1207:4: ( (lv_sv_7_0= ruleStringValue ) )
                    {
                    // InternalSiddhiParser.g:1207:4: ( (lv_sv_7_0= ruleStringValue ) )
                    // InternalSiddhiParser.g:1208:5: (lv_sv_7_0= ruleStringValue )
                    {
                    // InternalSiddhiParser.g:1208:5: (lv_sv_7_0= ruleStringValue )
                    // InternalSiddhiParser.g:1209:6: lv_sv_7_0= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefinitionTriggerAccess().getSvStringValueParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sv_7_0=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefinitionTriggerRule());
                      						}
                      						set(
                      							current,
                      							"sv",
                      							lv_sv_7_0,
                      							"org.xtext.example.siddhi.Siddhi.StringValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, ruleDefinitionTrigger_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionTrigger"


    // $ANTLR start "entryRuleDefinitionFunction"
    // InternalSiddhiParser.g:1231:1: entryRuleDefinitionFunction returns [EObject current=null] : iv_ruleDefinitionFunction= ruleDefinitionFunction EOF ;
    public final EObject entryRuleDefinitionFunction() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionFunction_StartIndex = input.index();
        EObject iv_ruleDefinitionFunction = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return current; }
            // InternalSiddhiParser.g:1231:59: (iv_ruleDefinitionFunction= ruleDefinitionFunction EOF )
            // InternalSiddhiParser.g:1232:2: iv_ruleDefinitionFunction= ruleDefinitionFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionFunction=ruleDefinitionFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRuleDefinitionFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionFunction"


    // $ANTLR start "ruleDefinitionFunction"
    // InternalSiddhiParser.g:1238:1: ruleDefinitionFunction returns [EObject current=null] : ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) ) ;
    public final EObject ruleDefinitionFunction() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionFunction_StartIndex = input.index();
        EObject this_DEFINE_1 = null;

        EObject this_FUNCTION_2 = null;

        EObject lv_fn_3_0 = null;

        EObject lv_ln_5_0 = null;

        EObject this_RETURN_7 = null;

        EObject lv_attr_type_8_0 = null;

        EObject lv_func_body_9_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return current; }
            // InternalSiddhiParser.g:1244:2: ( ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) ) )
            // InternalSiddhiParser.g:1245:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) )
            {
            // InternalSiddhiParser.g:1245:2: ( () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) ) )
            // InternalSiddhiParser.g:1246:3: () (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] ) ( (lv_fn_3_0= ruleFunctionName ) ) ruleOPEN_SQARE_BRACKETS ( (lv_ln_5_0= ruleLanguageName ) ) ruleCLOSE_SQARE_BRACKETS this_RETURN_7= ruleRETURN[$current] ( (lv_attr_type_8_0= ruleAttributeType ) ) ( (lv_func_body_9_0= ruleFunctionBody ) )
            {
            // InternalSiddhiParser.g:1246:3: ()
            // InternalSiddhiParser.g:1247:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionFunctionAccess().getDefinitionFunctionAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:1253:3: (this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current] )
            // InternalSiddhiParser.g:1254:4: this_DEFINE_1= ruleDEFINE[$current] this_FUNCTION_2= ruleFUNCTION[$current]
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionFunctionRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getDEFINEParserRuleCall_1_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_22);
            this_DEFINE_1=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_DEFINE_1;
              				afterParserOrEnumRuleCall();
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDefinitionFunctionRule());
              				}
              				newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getFUNCTIONParserRuleCall_1_1());
              			
            }
            pushFollow(FollowSets000.FOLLOW_18);
            this_FUNCTION_2=ruleFUNCTION(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_FUNCTION_2;
              				afterParserOrEnumRuleCall();
              			
            }

            }

            // InternalSiddhiParser.g:1277:3: ( (lv_fn_3_0= ruleFunctionName ) )
            // InternalSiddhiParser.g:1278:4: (lv_fn_3_0= ruleFunctionName )
            {
            // InternalSiddhiParser.g:1278:4: (lv_fn_3_0= ruleFunctionName )
            // InternalSiddhiParser.g:1279:5: lv_fn_3_0= ruleFunctionName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getFnFunctionNameParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_23);
            lv_fn_3_0=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"fn",
              						lv_fn_3_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getOPEN_SQARE_BRACKETSParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_18);
            ruleOPEN_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1303:3: ( (lv_ln_5_0= ruleLanguageName ) )
            // InternalSiddhiParser.g:1304:4: (lv_ln_5_0= ruleLanguageName )
            {
            // InternalSiddhiParser.g:1304:4: (lv_ln_5_0= ruleLanguageName )
            // InternalSiddhiParser.g:1305:5: lv_ln_5_0= ruleLanguageName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getLnLanguageNameParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_24);
            lv_ln_5_0=ruleLanguageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"ln",
              						lv_ln_5_0,
              						"org.xtext.example.siddhi.Siddhi.LanguageName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_25);
            ruleCLOSE_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getRETURNParserRuleCall_6());
              		
            }
            pushFollow(FollowSets000.FOLLOW_26);
            this_RETURN_7=ruleRETURN(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RETURN_7;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1340:3: ( (lv_attr_type_8_0= ruleAttributeType ) )
            // InternalSiddhiParser.g:1341:4: (lv_attr_type_8_0= ruleAttributeType )
            {
            // InternalSiddhiParser.g:1341:4: (lv_attr_type_8_0= ruleAttributeType )
            // InternalSiddhiParser.g:1342:5: lv_attr_type_8_0= ruleAttributeType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getAttr_typeAttributeTypeParserRuleCall_7_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_27);
            lv_attr_type_8_0=ruleAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"attr_type",
              						lv_attr_type_8_0,
              						"org.xtext.example.siddhi.Siddhi.AttributeType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1359:3: ( (lv_func_body_9_0= ruleFunctionBody ) )
            // InternalSiddhiParser.g:1360:4: (lv_func_body_9_0= ruleFunctionBody )
            {
            // InternalSiddhiParser.g:1360:4: (lv_func_body_9_0= ruleFunctionBody )
            // InternalSiddhiParser.g:1361:5: lv_func_body_9_0= ruleFunctionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFunctionAccess().getFunc_bodyFunctionBodyParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_func_body_9_0=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFunctionRule());
              					}
              					set(
              						current,
              						"func_body",
              						lv_func_body_9_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, ruleDefinitionFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionFunction"


    // $ANTLR start "entryRuleDefinitionAggregation"
    // InternalSiddhiParser.g:1382:1: entryRuleDefinitionAggregation returns [EObject current=null] : iv_ruleDefinitionAggregation= ruleDefinitionAggregation EOF ;
    public final EObject entryRuleDefinitionAggregation() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinitionAggregation_StartIndex = input.index();
        EObject iv_ruleDefinitionAggregation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return current; }
            // InternalSiddhiParser.g:1382:62: (iv_ruleDefinitionAggregation= ruleDefinitionAggregation EOF )
            // InternalSiddhiParser.g:1383:2: iv_ruleDefinitionAggregation= ruleDefinitionAggregation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionAggregationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDefinitionAggregation=ruleDefinitionAggregation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionAggregation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRuleDefinitionAggregation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionAggregation"


    // $ANTLR start "ruleDefinitionAggregation"
    // InternalSiddhiParser.g:1389:1: ruleDefinitionAggregation returns [EObject current=null] : ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) ) ;
    public final EObject ruleDefinitionAggregation() throws RecognitionException {
        EObject current = null;
        int ruleDefinitionAggregation_StartIndex = input.index();
        EObject lv_ann_1_0 = null;

        EObject this_DEFINE_2 = null;

        EObject this_AGGREGATION_3 = null;

        EObject lv_src_4_0 = null;

        EObject this_FROM_5 = null;

        EObject lv_stdStream_6_0 = null;

        EObject lv_groupByQuerySel_7_0 = null;

        EObject this_AGGREGATE_8 = null;

        EObject this_BY_9 = null;

        EObject lv_attrRef_10_0 = null;

        EObject lv_eve_11_0 = null;

        EObject lv_aggrTime_12_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return current; }
            // InternalSiddhiParser.g:1395:2: ( ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) ) )
            // InternalSiddhiParser.g:1396:2: ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) )
            {
            // InternalSiddhiParser.g:1396:2: ( () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) ) )
            // InternalSiddhiParser.g:1397:3: () ( (lv_ann_1_0= ruleAnnotation ) )* this_DEFINE_2= ruleDEFINE[$current] this_AGGREGATION_3= ruleAGGREGATION[$current] ( (lv_src_4_0= ruleSource1 ) ) this_FROM_5= ruleFROM[$current] ( (lv_stdStream_6_0= ruleStandardStream ) ) ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) ) this_AGGREGATE_8= ruleAGGREGATE[$current] (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )? ( (lv_eve_11_0= ruleEVERY ) ) ( (lv_aggrTime_12_0= ruleAggregationTime ) )
            {
            // InternalSiddhiParser.g:1397:3: ()
            // InternalSiddhiParser.g:1398:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefinitionAggregationAccess().getDefinitionAggregationAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:1404:3: ( (lv_ann_1_0= ruleAnnotation ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==CommercialAt) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalSiddhiParser.g:1405:4: (lv_ann_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:1405:4: (lv_ann_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:1406:5: lv_ann_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAnnAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_ann_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann",
            	      						lv_ann_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getDEFINEParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_28);
            this_DEFINE_2=ruleDEFINE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DEFINE_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAGGREGATIONParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_AGGREGATION_3=ruleAGGREGATION(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AGGREGATION_3;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1445:3: ( (lv_src_4_0= ruleSource1 ) )
            // InternalSiddhiParser.g:1446:4: (lv_src_4_0= ruleSource1 )
            {
            // InternalSiddhiParser.g:1446:4: (lv_src_4_0= ruleSource1 )
            // InternalSiddhiParser.g:1447:5: lv_src_4_0= ruleSource1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getSrcSource1ParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_6);
            lv_src_4_0=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_4_0,
              						"org.xtext.example.siddhi.Siddhi.Source1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getFROMParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_FROM_5=ruleFROM(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FROM_5;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1475:3: ( (lv_stdStream_6_0= ruleStandardStream ) )
            // InternalSiddhiParser.g:1476:4: (lv_stdStream_6_0= ruleStandardStream )
            {
            // InternalSiddhiParser.g:1476:4: (lv_stdStream_6_0= ruleStandardStream )
            // InternalSiddhiParser.g:1477:5: lv_stdStream_6_0= ruleStandardStream
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getStdStreamStandardStreamParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_29);
            lv_stdStream_6_0=ruleStandardStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"stdStream",
              						lv_stdStream_6_0,
              						"org.xtext.example.siddhi.Siddhi.StandardStream");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1494:3: ( (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection ) )
            // InternalSiddhiParser.g:1495:4: (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection )
            {
            // InternalSiddhiParser.g:1495:4: (lv_groupByQuerySel_7_0= ruleGroupByQuerySelection )
            // InternalSiddhiParser.g:1496:5: lv_groupByQuerySel_7_0= ruleGroupByQuerySelection
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getGroupByQuerySelGroupByQuerySelectionParserRuleCall_7_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_groupByQuerySel_7_0=ruleGroupByQuerySelection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"groupByQuerySel",
              						lv_groupByQuerySel_7_0,
              						"org.xtext.example.siddhi.Siddhi.GroupByQuerySelection");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDefinitionAggregationRule());
              			}
              			newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAGGREGATEParserRuleCall_8());
              		
            }
            pushFollow(FollowSets000.FOLLOW_31);
            this_AGGREGATE_8=ruleAGGREGATE(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AGGREGATE_8;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1524:3: (this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==By) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalSiddhiParser.g:1525:4: this_BY_9= ruleBY[$current] ( (lv_attrRef_10_0= ruleAttributeReference ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDefinitionAggregationRule());
                      				}
                      				newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getBYParserRuleCall_9_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_BY_9=ruleBY(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BY_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:1536:4: ( (lv_attrRef_10_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:1537:5: (lv_attrRef_10_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:1537:5: (lv_attrRef_10_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:1538:6: lv_attrRef_10_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAttrRefAttributeReferenceParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_attrRef_10_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
                      						}
                      						set(
                      							current,
                      							"attrRef",
                      							lv_attrRef_10_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:1556:3: ( (lv_eve_11_0= ruleEVERY ) )
            // InternalSiddhiParser.g:1557:4: (lv_eve_11_0= ruleEVERY )
            {
            // InternalSiddhiParser.g:1557:4: (lv_eve_11_0= ruleEVERY )
            // InternalSiddhiParser.g:1558:5: lv_eve_11_0= ruleEVERY
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getEveEVERYParserRuleCall_10_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_33);
            lv_eve_11_0=ruleEVERY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"eve",
              						lv_eve_11_0,
              						"org.xtext.example.siddhi.Siddhi.EVERY");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1575:3: ( (lv_aggrTime_12_0= ruleAggregationTime ) )
            // InternalSiddhiParser.g:1576:4: (lv_aggrTime_12_0= ruleAggregationTime )
            {
            // InternalSiddhiParser.g:1576:4: (lv_aggrTime_12_0= ruleAggregationTime )
            // InternalSiddhiParser.g:1577:5: lv_aggrTime_12_0= ruleAggregationTime
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionAggregationAccess().getAggrTimeAggregationTimeParserRuleCall_11_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_aggrTime_12_0=ruleAggregationTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionAggregationRule());
              					}
              					set(
              						current,
              						"aggrTime",
              						lv_aggrTime_12_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTime");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, ruleDefinitionAggregation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionAggregation"


    // $ANTLR start "entryRuleAggregationTime"
    // InternalSiddhiParser.g:1598:1: entryRuleAggregationTime returns [EObject current=null] : iv_ruleAggregationTime= ruleAggregationTime EOF ;
    public final EObject entryRuleAggregationTime() throws RecognitionException {
        EObject current = null;
        int entryRuleAggregationTime_StartIndex = input.index();
        EObject iv_ruleAggregationTime = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return current; }
            // InternalSiddhiParser.g:1598:56: (iv_ruleAggregationTime= ruleAggregationTime EOF )
            // InternalSiddhiParser.g:1599:2: iv_ruleAggregationTime= ruleAggregationTime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregationTimeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAggregationTime=ruleAggregationTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregationTime; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRuleAggregationTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregationTime"


    // $ANTLR start "ruleAggregationTime"
    // InternalSiddhiParser.g:1605:1: ruleAggregationTime returns [EObject current=null] : (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_AggregationTimeInterval_1= ruleAggregationTimeInterval ) ;
    public final EObject ruleAggregationTime() throws RecognitionException {
        EObject current = null;
        int ruleAggregationTime_StartIndex = input.index();
        EObject this_AggregationTimeRange_0 = null;

        EObject this_AggregationTimeInterval_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return current; }
            // InternalSiddhiParser.g:1611:2: ( (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_AggregationTimeInterval_1= ruleAggregationTimeInterval ) )
            // InternalSiddhiParser.g:1612:2: (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_AggregationTimeInterval_1= ruleAggregationTimeInterval )
            {
            // InternalSiddhiParser.g:1612:2: (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_AggregationTimeInterval_1= ruleAggregationTimeInterval )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalSiddhiParser.g:1613:3: this_AggregationTimeRange_0= ruleAggregationTimeRange
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAggregationTimeAccess().getAggregationTimeRangeParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AggregationTimeRange_0=ruleAggregationTimeRange();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AggregationTimeRange_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:1622:3: this_AggregationTimeInterval_1= ruleAggregationTimeInterval
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAggregationTimeAccess().getAggregationTimeIntervalParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AggregationTimeInterval_1=ruleAggregationTimeInterval();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AggregationTimeInterval_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, ruleAggregationTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAggregationTime"


    // $ANTLR start "entryRuleAggregationTimeInterval"
    // InternalSiddhiParser.g:1634:1: entryRuleAggregationTimeInterval returns [EObject current=null] : iv_ruleAggregationTimeInterval= ruleAggregationTimeInterval EOF ;
    public final EObject entryRuleAggregationTimeInterval() throws RecognitionException {
        EObject current = null;
        int entryRuleAggregationTimeInterval_StartIndex = input.index();
        EObject iv_ruleAggregationTimeInterval = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return current; }
            // InternalSiddhiParser.g:1634:64: (iv_ruleAggregationTimeInterval= ruleAggregationTimeInterval EOF )
            // InternalSiddhiParser.g:1635:2: iv_ruleAggregationTimeInterval= ruleAggregationTimeInterval EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregationTimeIntervalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAggregationTimeInterval=ruleAggregationTimeInterval();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregationTimeInterval; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRuleAggregationTimeInterval_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregationTimeInterval"


    // $ANTLR start "ruleAggregationTimeInterval"
    // InternalSiddhiParser.g:1641:1: ruleAggregationTimeInterval returns [EObject current=null] : ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* ) ;
    public final EObject ruleAggregationTimeInterval() throws RecognitionException {
        EObject current = null;
        int ruleAggregationTimeInterval_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_aggrtimeDur_0_0 = null;

        EObject lv_aggrtimeDur_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return current; }
            // InternalSiddhiParser.g:1647:2: ( ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* ) )
            // InternalSiddhiParser.g:1648:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* )
            {
            // InternalSiddhiParser.g:1648:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )* )
            // InternalSiddhiParser.g:1649:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )*
            {
            // InternalSiddhiParser.g:1649:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) )
            // InternalSiddhiParser.g:1650:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            {
            // InternalSiddhiParser.g:1650:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            // InternalSiddhiParser.g:1651:5: lv_aggrtimeDur_0_0= ruleAggregationTimeDuration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregationTimeIntervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_aggrtimeDur_0_0=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregationTimeIntervalRule());
              					}
              					add(
              						current,
              						"aggrtimeDur",
              						lv_aggrtimeDur_0_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:1668:3: (otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==Comma) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalSiddhiParser.g:1669:4: otherlv_1= Comma ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            	    {
            	    otherlv_1=(Token)match(input,Comma,FollowSets000.FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getAggregationTimeIntervalAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:1673:4: ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            	    // InternalSiddhiParser.g:1674:5: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            	    {
            	    // InternalSiddhiParser.g:1674:5: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            	    // InternalSiddhiParser.g:1675:6: lv_aggrtimeDur_2_0= ruleAggregationTimeDuration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAggregationTimeIntervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_aggrtimeDur_2_0=ruleAggregationTimeDuration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAggregationTimeIntervalRule());
            	      						}
            	      						add(
            	      							current,
            	      							"aggrtimeDur",
            	      							lv_aggrtimeDur_2_0,
            	      							"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, ruleAggregationTimeInterval_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAggregationTimeInterval"


    // $ANTLR start "entryRuleAggregationTimeDuration"
    // InternalSiddhiParser.g:1697:1: entryRuleAggregationTimeDuration returns [EObject current=null] : iv_ruleAggregationTimeDuration= ruleAggregationTimeDuration EOF ;
    public final EObject entryRuleAggregationTimeDuration() throws RecognitionException {
        EObject current = null;
        int entryRuleAggregationTimeDuration_StartIndex = input.index();
        EObject iv_ruleAggregationTimeDuration = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return current; }
            // InternalSiddhiParser.g:1697:64: (iv_ruleAggregationTimeDuration= ruleAggregationTimeDuration EOF )
            // InternalSiddhiParser.g:1698:2: iv_ruleAggregationTimeDuration= ruleAggregationTimeDuration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregationTimeDurationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAggregationTimeDuration=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregationTimeDuration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRuleAggregationTimeDuration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregationTimeDuration"


    // $ANTLR start "ruleAggregationTimeDuration"
    // InternalSiddhiParser.g:1704:1: ruleAggregationTimeDuration returns [EObject current=null] : (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] ) ;
    public final EObject ruleAggregationTimeDuration() throws RecognitionException {
        EObject current = null;
        int ruleAggregationTimeDuration_StartIndex = input.index();
        EObject this_SECONDS_0 = null;

        EObject this_MINUTES_1 = null;

        EObject this_HOURS_2 = null;

        EObject this_DAYS_3 = null;

        EObject this_WEEKS_4 = null;

        EObject this_MONTHS_5 = null;

        EObject this_YEARS_6 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return current; }
            // InternalSiddhiParser.g:1710:2: ( (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] ) )
            // InternalSiddhiParser.g:1711:2: (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] )
            {
            // InternalSiddhiParser.g:1711:2: (this_SECONDS_0= ruleSECONDS[$current] | this_MINUTES_1= ruleMINUTES[$current] | this_HOURS_2= ruleHOURS[$current] | this_DAYS_3= ruleDAYS[$current] | this_WEEKS_4= ruleWEEKS[$current] | this_MONTHS_5= ruleMONTHS[$current] | this_YEARS_6= ruleYEARS[$current] )
            int alt21=7;
            switch ( input.LA(1) ) {
            case Seconds:
            case Second:
            case Sec:
                {
                alt21=1;
                }
                break;
            case Minutes:
            case Minute:
            case Min:
                {
                alt21=2;
                }
                break;
            case Hours:
            case Hour:
                {
                alt21=3;
                }
                break;
            case Days:
            case Day:
                {
                alt21=4;
                }
                break;
            case Weeks:
            case Week:
                {
                alt21=5;
                }
                break;
            case Months:
            case Month:
                {
                alt21=6;
                }
                break;
            case Years:
            case Year:
                {
                alt21=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSiddhiParser.g:1712:3: this_SECONDS_0= ruleSECONDS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getSECONDSParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SECONDS_0=ruleSECONDS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SECONDS_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:1724:3: this_MINUTES_1= ruleMINUTES[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getMINUTESParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MINUTES_1=ruleMINUTES(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MINUTES_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:1736:3: this_HOURS_2= ruleHOURS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getHOURSParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HOURS_2=ruleHOURS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HOURS_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:1748:3: this_DAYS_3= ruleDAYS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getDAYSParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DAYS_3=ruleDAYS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DAYS_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:1760:3: this_WEEKS_4= ruleWEEKS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getWEEKSParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WEEKS_4=ruleWEEKS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WEEKS_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:1772:3: this_MONTHS_5= ruleMONTHS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getMONTHSParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MONTHS_5=ruleMONTHS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MONTHS_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:1784:3: this_YEARS_6= ruleYEARS[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getAggregationTimeDurationRule());
                      			}
                      			newCompositeNode(grammarAccess.getAggregationTimeDurationAccess().getYEARSParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_YEARS_6=ruleYEARS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_YEARS_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, ruleAggregationTimeDuration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAggregationTimeDuration"


    // $ANTLR start "entryRuleAggregationTimeRange"
    // InternalSiddhiParser.g:1799:1: entryRuleAggregationTimeRange returns [EObject current=null] : iv_ruleAggregationTimeRange= ruleAggregationTimeRange EOF ;
    public final EObject entryRuleAggregationTimeRange() throws RecognitionException {
        EObject current = null;
        int entryRuleAggregationTimeRange_StartIndex = input.index();
        EObject iv_ruleAggregationTimeRange = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return current; }
            // InternalSiddhiParser.g:1799:61: (iv_ruleAggregationTimeRange= ruleAggregationTimeRange EOF )
            // InternalSiddhiParser.g:1800:2: iv_ruleAggregationTimeRange= ruleAggregationTimeRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregationTimeRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAggregationTimeRange=ruleAggregationTimeRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregationTimeRange; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRuleAggregationTimeRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregationTimeRange"


    // $ANTLR start "ruleAggregationTimeRange"
    // InternalSiddhiParser.g:1806:1: ruleAggregationTimeRange returns [EObject current=null] : ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) ) ;
    public final EObject ruleAggregationTimeRange() throws RecognitionException {
        EObject current = null;
        int ruleAggregationTimeRange_StartIndex = input.index();
        EObject lv_aggrtimeDur_0_0 = null;

        EObject lv_aggrtimeDur_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return current; }
            // InternalSiddhiParser.g:1812:2: ( ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) ) )
            // InternalSiddhiParser.g:1813:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )
            {
            // InternalSiddhiParser.g:1813:2: ( ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) ) )
            // InternalSiddhiParser.g:1814:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) ) ruleTRIPLE_DOT ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            {
            // InternalSiddhiParser.g:1814:3: ( (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration ) )
            // InternalSiddhiParser.g:1815:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            {
            // InternalSiddhiParser.g:1815:4: (lv_aggrtimeDur_0_0= ruleAggregationTimeDuration )
            // InternalSiddhiParser.g:1816:5: lv_aggrtimeDur_0_0= ruleAggregationTimeDuration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_35);
            lv_aggrtimeDur_0_0=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregationTimeRangeRule());
              					}
              					add(
              						current,
              						"aggrtimeDur",
              						lv_aggrtimeDur_0_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAggregationTimeRangeAccess().getTRIPLE_DOTParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_33);
            ruleTRIPLE_DOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:1840:3: ( (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration ) )
            // InternalSiddhiParser.g:1841:4: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            {
            // InternalSiddhiParser.g:1841:4: (lv_aggrtimeDur_2_0= ruleAggregationTimeDuration )
            // InternalSiddhiParser.g:1842:5: lv_aggrtimeDur_2_0= ruleAggregationTimeDuration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_aggrtimeDur_2_0=ruleAggregationTimeDuration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregationTimeRangeRule());
              					}
              					add(
              						current,
              						"aggrtimeDur",
              						lv_aggrtimeDur_2_0,
              						"org.xtext.example.siddhi.Siddhi.AggregationTimeDuration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, ruleAggregationTimeRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAggregationTimeRange"


    // $ANTLR start "entryRuleFunctionName"
    // InternalSiddhiParser.g:1863:1: entryRuleFunctionName returns [EObject current=null] : iv_ruleFunctionName= ruleFunctionName EOF ;
    public final EObject entryRuleFunctionName() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionName_StartIndex = input.index();
        EObject iv_ruleFunctionName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return current; }
            // InternalSiddhiParser.g:1863:53: (iv_ruleFunctionName= ruleFunctionName EOF )
            // InternalSiddhiParser.g:1864:2: iv_ruleFunctionName= ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionName=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRuleFunctionName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalSiddhiParser.g:1870:1: ruleFunctionName returns [EObject current=null] : ( (lv_id_0_0= RULE_ID ) ) ;
    public final EObject ruleFunctionName() throws RecognitionException {
        EObject current = null;
        int ruleFunctionName_StartIndex = input.index();
        Token lv_id_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return current; }
            // InternalSiddhiParser.g:1876:2: ( ( (lv_id_0_0= RULE_ID ) ) )
            // InternalSiddhiParser.g:1877:2: ( (lv_id_0_0= RULE_ID ) )
            {
            // InternalSiddhiParser.g:1877:2: ( (lv_id_0_0= RULE_ID ) )
            // InternalSiddhiParser.g:1878:3: (lv_id_0_0= RULE_ID )
            {
            // InternalSiddhiParser.g:1878:3: (lv_id_0_0= RULE_ID )
            // InternalSiddhiParser.g:1879:4: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_id_0_0, grammarAccess.getFunctionNameAccess().getIdIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFunctionNameRule());
              				}
              				setWithLastConsumed(
              					current,
              					"id",
              					lv_id_0_0,
              					"org.xtext.example.siddhi.Siddhi.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, ruleFunctionName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleLanguageName"
    // InternalSiddhiParser.g:1898:1: entryRuleLanguageName returns [EObject current=null] : iv_ruleLanguageName= ruleLanguageName EOF ;
    public final EObject entryRuleLanguageName() throws RecognitionException {
        EObject current = null;
        int entryRuleLanguageName_StartIndex = input.index();
        EObject iv_ruleLanguageName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return current; }
            // InternalSiddhiParser.g:1898:53: (iv_ruleLanguageName= ruleLanguageName EOF )
            // InternalSiddhiParser.g:1899:2: iv_ruleLanguageName= ruleLanguageName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLanguageNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLanguageName=ruleLanguageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLanguageName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRuleLanguageName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLanguageName"


    // $ANTLR start "ruleLanguageName"
    // InternalSiddhiParser.g:1905:1: ruleLanguageName returns [EObject current=null] : ( (lv_id_0_0= RULE_ID ) ) ;
    public final EObject ruleLanguageName() throws RecognitionException {
        EObject current = null;
        int ruleLanguageName_StartIndex = input.index();
        Token lv_id_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return current; }
            // InternalSiddhiParser.g:1911:2: ( ( (lv_id_0_0= RULE_ID ) ) )
            // InternalSiddhiParser.g:1912:2: ( (lv_id_0_0= RULE_ID ) )
            {
            // InternalSiddhiParser.g:1912:2: ( (lv_id_0_0= RULE_ID ) )
            // InternalSiddhiParser.g:1913:3: (lv_id_0_0= RULE_ID )
            {
            // InternalSiddhiParser.g:1913:3: (lv_id_0_0= RULE_ID )
            // InternalSiddhiParser.g:1914:4: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_id_0_0, grammarAccess.getLanguageNameAccess().getIdIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLanguageNameRule());
              				}
              				setWithLastConsumed(
              					current,
              					"id",
              					lv_id_0_0,
              					"org.xtext.example.siddhi.Siddhi.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, ruleLanguageName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLanguageName"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalSiddhiParser.g:1933:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionBody_StartIndex = input.index();
        EObject iv_ruleFunctionBody = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return current; }
            // InternalSiddhiParser.g:1933:53: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalSiddhiParser.g:1934:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRuleFunctionBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalSiddhiParser.g:1940:1: ruleFunctionBody returns [EObject current=null] : ( (lv_value_0_0= RULE_SCRIPT ) ) ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;
        int ruleFunctionBody_StartIndex = input.index();
        Token lv_value_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return current; }
            // InternalSiddhiParser.g:1946:2: ( ( (lv_value_0_0= RULE_SCRIPT ) ) )
            // InternalSiddhiParser.g:1947:2: ( (lv_value_0_0= RULE_SCRIPT ) )
            {
            // InternalSiddhiParser.g:1947:2: ( (lv_value_0_0= RULE_SCRIPT ) )
            // InternalSiddhiParser.g:1948:3: (lv_value_0_0= RULE_SCRIPT )
            {
            // InternalSiddhiParser.g:1948:3: (lv_value_0_0= RULE_SCRIPT )
            // InternalSiddhiParser.g:1949:4: lv_value_0_0= RULE_SCRIPT
            {
            lv_value_0_0=(Token)match(input,RULE_SCRIPT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFunctionBodyAccess().getValueSCRIPTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFunctionBodyRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.xtext.example.siddhi.Siddhi.SCRIPT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ruleFunctionBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleTriggerName"
    // InternalSiddhiParser.g:1968:1: entryRuleTriggerName returns [EObject current=null] : iv_ruleTriggerName= ruleTriggerName EOF ;
    public final EObject entryRuleTriggerName() throws RecognitionException {
        EObject current = null;
        int entryRuleTriggerName_StartIndex = input.index();
        EObject iv_ruleTriggerName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return current; }
            // InternalSiddhiParser.g:1968:52: (iv_ruleTriggerName= ruleTriggerName EOF )
            // InternalSiddhiParser.g:1969:2: iv_ruleTriggerName= ruleTriggerName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTriggerNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTriggerName=ruleTriggerName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTriggerName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRuleTriggerName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTriggerName"


    // $ANTLR start "ruleTriggerName"
    // InternalSiddhiParser.g:1975:1: ruleTriggerName returns [EObject current=null] : ( (lv_id_0_0= RULE_ID ) ) ;
    public final EObject ruleTriggerName() throws RecognitionException {
        EObject current = null;
        int ruleTriggerName_StartIndex = input.index();
        Token lv_id_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return current; }
            // InternalSiddhiParser.g:1981:2: ( ( (lv_id_0_0= RULE_ID ) ) )
            // InternalSiddhiParser.g:1982:2: ( (lv_id_0_0= RULE_ID ) )
            {
            // InternalSiddhiParser.g:1982:2: ( (lv_id_0_0= RULE_ID ) )
            // InternalSiddhiParser.g:1983:3: (lv_id_0_0= RULE_ID )
            {
            // InternalSiddhiParser.g:1983:3: (lv_id_0_0= RULE_ID )
            // InternalSiddhiParser.g:1984:4: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_id_0_0, grammarAccess.getTriggerNameAccess().getIdIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTriggerNameRule());
              				}
              				setWithLastConsumed(
              					current,
              					"id",
              					lv_id_0_0,
              					"org.xtext.example.siddhi.Siddhi.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, ruleTriggerName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTriggerName"


    // $ANTLR start "entryRuleAppAnnotation"
    // InternalSiddhiParser.g:2003:1: entryRuleAppAnnotation returns [EObject current=null] : iv_ruleAppAnnotation= ruleAppAnnotation EOF ;
    public final EObject entryRuleAppAnnotation() throws RecognitionException {
        EObject current = null;
        int entryRuleAppAnnotation_StartIndex = input.index();
        EObject iv_ruleAppAnnotation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return current; }
            // InternalSiddhiParser.g:2003:54: (iv_ruleAppAnnotation= ruleAppAnnotation EOF )
            // InternalSiddhiParser.g:2004:2: iv_ruleAppAnnotation= ruleAppAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppAnnotation=ruleAppAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRuleAppAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAppAnnotation"


    // $ANTLR start "ruleAppAnnotation"
    // InternalSiddhiParser.g:2010:1: ruleAppAnnotation returns [EObject current=null] : (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_name_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? ) ;
    public final EObject ruleAppAnnotation() throws RecognitionException {
        EObject current = null;
        int ruleAppAnnotation_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject this_APP_1 = null;

        EObject lv_name_3_0 = null;

        EObject lv_ann5_5_0 = null;

        EObject lv_ann5_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return current; }
            // InternalSiddhiParser.g:2016:2: ( (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_name_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? ) )
            // InternalSiddhiParser.g:2017:2: (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_name_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? )
            {
            // InternalSiddhiParser.g:2017:2: (otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_name_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )? )
            // InternalSiddhiParser.g:2018:3: otherlv_0= CommercialAt this_APP_1= ruleAPP otherlv_2= Colon ( (lv_name_3_0= ruleName ) ) ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )?
            {
            otherlv_0=(Token)match(input,CommercialAt,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAppAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAppAnnotationAccess().getAPPParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_37);
            this_APP_1=ruleAPP();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_APP_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAppAnnotationAccess().getColonKeyword_2());
              		
            }
            // InternalSiddhiParser.g:2034:3: ( (lv_name_3_0= ruleName ) )
            // InternalSiddhiParser.g:2035:4: (lv_name_3_0= ruleName )
            {
            // InternalSiddhiParser.g:2035:4: (lv_name_3_0= ruleName )
            // InternalSiddhiParser.g:2036:5: lv_name_3_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAppAnnotationAccess().getNameNameParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_38);
            lv_name_3_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAppAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2053:3: ( ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==LeftParenthesis) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalSiddhiParser.g:2054:4: ruleOPEN_PAR ( (lv_ann5_5_0= ruleAnnotationElement ) ) (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )* ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAppAnnotationAccess().getOPEN_PARParserRuleCall_4_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:2061:4: ( (lv_ann5_5_0= ruleAnnotationElement ) )
                    // InternalSiddhiParser.g:2062:5: (lv_ann5_5_0= ruleAnnotationElement )
                    {
                    // InternalSiddhiParser.g:2062:5: (lv_ann5_5_0= ruleAnnotationElement )
                    // InternalSiddhiParser.g:2063:6: lv_ann5_5_0= ruleAnnotationElement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_ann5_5_0=ruleAnnotationElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAppAnnotationRule());
                      						}
                      						add(
                      							current,
                      							"ann5",
                      							lv_ann5_5_0,
                      							"org.xtext.example.siddhi.Siddhi.AnnotationElement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:2080:4: (otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==Comma) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:2081:5: otherlv_6= Comma ( (lv_ann5_7_0= ruleAnnotationElement ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAppAnnotationAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSiddhiParser.g:2085:5: ( (lv_ann5_7_0= ruleAnnotationElement ) )
                    	    // InternalSiddhiParser.g:2086:6: (lv_ann5_7_0= ruleAnnotationElement )
                    	    {
                    	    // InternalSiddhiParser.g:2086:6: (lv_ann5_7_0= ruleAnnotationElement )
                    	    // InternalSiddhiParser.g:2087:7: lv_ann5_7_0= ruleAnnotationElement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_12);
                    	    lv_ann5_7_0=ruleAnnotationElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAppAnnotationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ann5",
                    	      								lv_ann5_7_0,
                    	      								"org.xtext.example.siddhi.Siddhi.AnnotationElement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAppAnnotationAccess().getCLOSE_PARParserRuleCall_4_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, ruleAppAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAppAnnotation"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSiddhiParser.g:2117:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;
        int entryRuleAnnotation_StartIndex = input.index();
        EObject iv_ruleAnnotation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return current; }
            // InternalSiddhiParser.g:2117:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSiddhiParser.g:2118:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRuleAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSiddhiParser.g:2124:1: ruleAnnotation returns [EObject current=null] : (otherlv_0= CommercialAt ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;
        int ruleAnnotation_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_5=null;
        EObject lv_name_1_0 = null;

        EObject lv_annElement_3_0 = null;

        EObject lv_ann_4_0 = null;

        EObject lv_annElement_6_0 = null;

        EObject lv_ann_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return current; }
            // InternalSiddhiParser.g:2130:2: ( (otherlv_0= CommercialAt ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) ) )
            // InternalSiddhiParser.g:2131:2: (otherlv_0= CommercialAt ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) )
            {
            // InternalSiddhiParser.g:2131:2: (otherlv_0= CommercialAt ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:2132:3: otherlv_0= CommercialAt ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR )
            {
            otherlv_0=(Token)match(input,CommercialAt,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSiddhiParser.g:2136:3: ( (lv_name_1_0= ruleName ) )
            // InternalSiddhiParser.g:2137:4: (lv_name_1_0= ruleName )
            {
            // InternalSiddhiParser.g:2137:4: (lv_name_1_0= ruleName )
            // InternalSiddhiParser.g:2138:5: lv_name_1_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotationAccess().getNameNameParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_name_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2155:3: ( ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR )
            // InternalSiddhiParser.g:2156:4: ruleOPEN_PAR ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) ) (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )* ruleCLOSE_PAR
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getOPEN_PARParserRuleCall_2_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_39);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }
            // InternalSiddhiParser.g:2163:4: ( ( (lv_annElement_3_0= ruleAnnotationElement ) ) | ( (lv_ann_4_0= ruleAnnotation ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=Unidirectional && LA24_0<=Milliseconds)||LA24_0==Millisecond||LA24_0==Partition||(LA24_0>=Millisec && LA24_0<=Seconds)||(LA24_0>=Define && LA24_0<=Null)||(LA24_0>=True && LA24_0<=Year)||(LA24_0>=All && LA24_0<=And)||(LA24_0>=Day && LA24_0<=Not)||(LA24_0>=Raw && LA24_0<=Sec)||LA24_0==As||LA24_0==By||(LA24_0>=Is && LA24_0<=Or)||LA24_0==RULE_ID||LA24_0==RULE_STRING) ) {
                alt24=1;
            }
            else if ( (LA24_0==CommercialAt) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalSiddhiParser.g:2164:5: ( (lv_annElement_3_0= ruleAnnotationElement ) )
                    {
                    // InternalSiddhiParser.g:2164:5: ( (lv_annElement_3_0= ruleAnnotationElement ) )
                    // InternalSiddhiParser.g:2165:6: (lv_annElement_3_0= ruleAnnotationElement )
                    {
                    // InternalSiddhiParser.g:2165:6: (lv_annElement_3_0= ruleAnnotationElement )
                    // InternalSiddhiParser.g:2166:7: lv_annElement_3_0= ruleAnnotationElement
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_annElement_3_0=ruleAnnotationElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAnnotationRule());
                      							}
                      							add(
                      								current,
                      								"annElement",
                      								lv_annElement_3_0,
                      								"org.xtext.example.siddhi.Siddhi.AnnotationElement");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:2184:5: ( (lv_ann_4_0= ruleAnnotation ) )
                    {
                    // InternalSiddhiParser.g:2184:5: ( (lv_ann_4_0= ruleAnnotation ) )
                    // InternalSiddhiParser.g:2185:6: (lv_ann_4_0= ruleAnnotation )
                    {
                    // InternalSiddhiParser.g:2185:6: (lv_ann_4_0= ruleAnnotation )
                    // InternalSiddhiParser.g:2186:7: lv_ann_4_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_ann_4_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAnnotationRule());
                      							}
                      							add(
                      								current,
                      								"ann",
                      								lv_ann_4_0,
                      								"org.xtext.example.siddhi.Siddhi.Annotation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:2204:4: (otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==Comma) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalSiddhiParser.g:2205:5: otherlv_5= Comma ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) )
            	    {
            	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_39); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_5, grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalSiddhiParser.g:2209:5: ( ( (lv_annElement_6_0= ruleAnnotationElement ) ) | ( (lv_ann_7_0= ruleAnnotation ) ) )
            	    int alt25=2;
            	    int LA25_0 = input.LA(1);

            	    if ( ((LA25_0>=Unidirectional && LA25_0<=Milliseconds)||LA25_0==Millisecond||LA25_0==Partition||(LA25_0>=Millisec && LA25_0<=Seconds)||(LA25_0>=Define && LA25_0<=Null)||(LA25_0>=True && LA25_0<=Year)||(LA25_0>=All && LA25_0<=And)||(LA25_0>=Day && LA25_0<=Not)||(LA25_0>=Raw && LA25_0<=Sec)||LA25_0==As||LA25_0==By||(LA25_0>=Is && LA25_0<=Or)||LA25_0==RULE_ID||LA25_0==RULE_STRING) ) {
            	        alt25=1;
            	    }
            	    else if ( (LA25_0==CommercialAt) ) {
            	        alt25=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 25, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt25) {
            	        case 1 :
            	            // InternalSiddhiParser.g:2210:6: ( (lv_annElement_6_0= ruleAnnotationElement ) )
            	            {
            	            // InternalSiddhiParser.g:2210:6: ( (lv_annElement_6_0= ruleAnnotationElement ) )
            	            // InternalSiddhiParser.g:2211:7: (lv_annElement_6_0= ruleAnnotationElement )
            	            {
            	            // InternalSiddhiParser.g:2211:7: (lv_annElement_6_0= ruleAnnotationElement )
            	            // InternalSiddhiParser.g:2212:8: lv_annElement_6_0= ruleAnnotationElement
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_2_1_0_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_12);
            	            lv_annElement_6_0=ruleAnnotationElement();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAnnotationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"annElement",
            	              									lv_annElement_6_0,
            	              									"org.xtext.example.siddhi.Siddhi.AnnotationElement");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:2230:6: ( (lv_ann_7_0= ruleAnnotation ) )
            	            {
            	            // InternalSiddhiParser.g:2230:6: ( (lv_ann_7_0= ruleAnnotation ) )
            	            // InternalSiddhiParser.g:2231:7: (lv_ann_7_0= ruleAnnotation )
            	            {
            	            // InternalSiddhiParser.g:2231:7: (lv_ann_7_0= ruleAnnotation )
            	            // InternalSiddhiParser.g:2232:8: lv_ann_7_0= ruleAnnotation
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_2_1_1_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_12);
            	            lv_ann_7_0=ruleAnnotation();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAnnotationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"ann",
            	              									lv_ann_7_0,
            	              									"org.xtext.example.siddhi.Siddhi.Annotation");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getCLOSE_PARParserRuleCall_2_3());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, ruleAnnotation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleAnnotationElement"
    // InternalSiddhiParser.g:2263:1: entryRuleAnnotationElement returns [EObject current=null] : iv_ruleAnnotationElement= ruleAnnotationElement EOF ;
    public final EObject entryRuleAnnotationElement() throws RecognitionException {
        EObject current = null;
        int entryRuleAnnotationElement_StartIndex = input.index();
        EObject iv_ruleAnnotationElement = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return current; }
            // InternalSiddhiParser.g:2263:58: (iv_ruleAnnotationElement= ruleAnnotationElement EOF )
            // InternalSiddhiParser.g:2264:2: iv_ruleAnnotationElement= ruleAnnotationElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationElementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotationElement=ruleAnnotationElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationElement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRuleAnnotationElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationElement"


    // $ANTLR start "ruleAnnotationElement"
    // InternalSiddhiParser.g:2270:1: ruleAnnotationElement returns [EObject current=null] : ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) ) ;
    public final EObject ruleAnnotationElement() throws RecognitionException {
        EObject current = null;
        int ruleAnnotationElement_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_propName_0_0 = null;

        EObject lv_propVal_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return current; }
            // InternalSiddhiParser.g:2276:2: ( ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) ) )
            // InternalSiddhiParser.g:2277:2: ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) )
            {
            // InternalSiddhiParser.g:2277:2: ( ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) ) )
            // InternalSiddhiParser.g:2278:3: ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )? ( (lv_propVal_2_0= rulePropertyValue ) )
            {
            // InternalSiddhiParser.g:2278:3: ( ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=Unidirectional && LA27_0<=Milliseconds)||LA27_0==Millisecond||LA27_0==Partition||(LA27_0>=Millisec && LA27_0<=Seconds)||(LA27_0>=Define && LA27_0<=Null)||(LA27_0>=True && LA27_0<=Year)||(LA27_0>=All && LA27_0<=And)||(LA27_0>=Day && LA27_0<=Not)||(LA27_0>=Raw && LA27_0<=Sec)||LA27_0==As||LA27_0==By||(LA27_0>=Is && LA27_0<=Or)||LA27_0==RULE_ID) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalSiddhiParser.g:2279:4: ( (lv_propName_0_0= rulePropertyName ) ) otherlv_1= EqualsSign
                    {
                    // InternalSiddhiParser.g:2279:4: ( (lv_propName_0_0= rulePropertyName ) )
                    // InternalSiddhiParser.g:2280:5: (lv_propName_0_0= rulePropertyName )
                    {
                    // InternalSiddhiParser.g:2280:5: (lv_propName_0_0= rulePropertyName )
                    // InternalSiddhiParser.g:2281:6: lv_propName_0_0= rulePropertyName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotationElementAccess().getPropNamePropertyNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_propName_0_0=rulePropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotationElementRule());
                      						}
                      						set(
                      							current,
                      							"propName",
                      							lv_propName_0_0,
                      							"org.xtext.example.siddhi.Siddhi.PropertyName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:2303:3: ( (lv_propVal_2_0= rulePropertyValue ) )
            // InternalSiddhiParser.g:2304:4: (lv_propVal_2_0= rulePropertyValue )
            {
            // InternalSiddhiParser.g:2304:4: (lv_propVal_2_0= rulePropertyValue )
            // InternalSiddhiParser.g:2305:5: lv_propVal_2_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotationElementAccess().getPropValPropertyValueParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_propVal_2_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotationElementRule());
              					}
              					set(
              						current,
              						"propVal",
              						lv_propVal_2_0,
              						"org.xtext.example.siddhi.Siddhi.PropertyValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, ruleAnnotationElement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationElement"


    // $ANTLR start "entryRulePropertyValue"
    // InternalSiddhiParser.g:2326:1: entryRulePropertyValue returns [EObject current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final EObject entryRulePropertyValue() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyValue_StartIndex = input.index();
        EObject iv_rulePropertyValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return current; }
            // InternalSiddhiParser.g:2326:54: (iv_rulePropertyValue= rulePropertyValue EOF )
            // InternalSiddhiParser.g:2327:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePropertyValue=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRulePropertyValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyValue"


    // $ANTLR start "rulePropertyValue"
    // InternalSiddhiParser.g:2333:1: rulePropertyValue returns [EObject current=null] : ( (lv_sv_0_0= ruleStringValue ) ) ;
    public final EObject rulePropertyValue() throws RecognitionException {
        EObject current = null;
        int rulePropertyValue_StartIndex = input.index();
        EObject lv_sv_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return current; }
            // InternalSiddhiParser.g:2339:2: ( ( (lv_sv_0_0= ruleStringValue ) ) )
            // InternalSiddhiParser.g:2340:2: ( (lv_sv_0_0= ruleStringValue ) )
            {
            // InternalSiddhiParser.g:2340:2: ( (lv_sv_0_0= ruleStringValue ) )
            // InternalSiddhiParser.g:2341:3: (lv_sv_0_0= ruleStringValue )
            {
            // InternalSiddhiParser.g:2341:3: (lv_sv_0_0= ruleStringValue )
            // InternalSiddhiParser.g:2342:4: lv_sv_0_0= ruleStringValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPropertyValueAccess().getSvStringValueParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_sv_0_0=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPropertyValueRule());
              				}
              				set(
              					current,
              					"sv",
              					lv_sv_0_0,
              					"org.xtext.example.siddhi.Siddhi.StringValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, rulePropertyValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePropertyValue"


    // $ANTLR start "entryRulePropertyName"
    // InternalSiddhiParser.g:2362:1: entryRulePropertyName returns [EObject current=null] : iv_rulePropertyName= rulePropertyName EOF ;
    public final EObject entryRulePropertyName() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyName_StartIndex = input.index();
        EObject iv_rulePropertyName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return current; }
            // InternalSiddhiParser.g:2362:53: (iv_rulePropertyName= rulePropertyName EOF )
            // InternalSiddhiParser.g:2363:2: iv_rulePropertyName= rulePropertyName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePropertyName=rulePropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRulePropertyName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyName"


    // $ANTLR start "rulePropertyName"
    // InternalSiddhiParser.g:2369:1: rulePropertyName returns [EObject current=null] : ( () ( (lv_name_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_name_3_0= ruleName ) ) )* ) ;
    public final EObject rulePropertyName() throws RecognitionException {
        EObject current = null;
        int rulePropertyName_StartIndex = input.index();
        EObject lv_name_1_0 = null;

        EObject lv_ps_2_0 = null;

        EObject lv_name_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return current; }
            // InternalSiddhiParser.g:2375:2: ( ( () ( (lv_name_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_name_3_0= ruleName ) ) )* ) )
            // InternalSiddhiParser.g:2376:2: ( () ( (lv_name_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_name_3_0= ruleName ) ) )* )
            {
            // InternalSiddhiParser.g:2376:2: ( () ( (lv_name_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_name_3_0= ruleName ) ) )* )
            // InternalSiddhiParser.g:2377:3: () ( (lv_name_1_0= ruleName ) ) ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_name_3_0= ruleName ) ) )*
            {
            // InternalSiddhiParser.g:2377:3: ()
            // InternalSiddhiParser.g:2378:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPropertyNameAccess().getPropertyNameAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:2384:3: ( (lv_name_1_0= ruleName ) )
            // InternalSiddhiParser.g:2385:4: (lv_name_1_0= ruleName )
            {
            // InternalSiddhiParser.g:2385:4: (lv_name_1_0= ruleName )
            // InternalSiddhiParser.g:2386:5: lv_name_1_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPropertyNameAccess().getNameNameParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_name_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPropertyNameRule());
              					}
              					add(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2403:3: ( ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_name_3_0= ruleName ) ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( ((LA28_0>=HyphenMinus && LA28_0<=FullStop)||LA28_0==Colon) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalSiddhiParser.g:2404:4: ( (lv_ps_2_0= rulePropertySeparator ) ) ( (lv_name_3_0= ruleName ) )
            	    {
            	    // InternalSiddhiParser.g:2404:4: ( (lv_ps_2_0= rulePropertySeparator ) )
            	    // InternalSiddhiParser.g:2405:5: (lv_ps_2_0= rulePropertySeparator )
            	    {
            	    // InternalSiddhiParser.g:2405:5: (lv_ps_2_0= rulePropertySeparator )
            	    // InternalSiddhiParser.g:2406:6: lv_ps_2_0= rulePropertySeparator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPropertyNameAccess().getPsPropertySeparatorParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_ps_2_0=rulePropertySeparator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPropertyNameRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ps",
            	      							lv_ps_2_0,
            	      							"org.xtext.example.siddhi.Siddhi.PropertySeparator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:2423:4: ( (lv_name_3_0= ruleName ) )
            	    // InternalSiddhiParser.g:2424:5: (lv_name_3_0= ruleName )
            	    {
            	    // InternalSiddhiParser.g:2424:5: (lv_name_3_0= ruleName )
            	    // InternalSiddhiParser.g:2425:6: lv_name_3_0= ruleName
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPropertyNameAccess().getNameNameParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_name_3_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPropertyNameRule());
            	      						}
            	      						add(
            	      							current,
            	      							"name",
            	      							lv_name_3_0,
            	      							"org.xtext.example.siddhi.Siddhi.Name");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, rulePropertyName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePropertyName"


    // $ANTLR start "entryRulePropertySeparator"
    // InternalSiddhiParser.g:2447:1: entryRulePropertySeparator returns [EObject current=null] : iv_rulePropertySeparator= rulePropertySeparator EOF ;
    public final EObject entryRulePropertySeparator() throws RecognitionException {
        EObject current = null;
        int entryRulePropertySeparator_StartIndex = input.index();
        EObject iv_rulePropertySeparator = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return current; }
            // InternalSiddhiParser.g:2447:58: (iv_rulePropertySeparator= rulePropertySeparator EOF )
            // InternalSiddhiParser.g:2448:2: iv_rulePropertySeparator= rulePropertySeparator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertySeparatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePropertySeparator=rulePropertySeparator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertySeparator; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRulePropertySeparator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePropertySeparator"


    // $ANTLR start "rulePropertySeparator"
    // InternalSiddhiParser.g:2454:1: rulePropertySeparator returns [EObject current=null] : ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) ) ;
    public final EObject rulePropertySeparator() throws RecognitionException {
        EObject current = null;
        int rulePropertySeparator_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return current; }
            // InternalSiddhiParser.g:2460:2: ( ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) ) )
            // InternalSiddhiParser.g:2461:2: ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) )
            {
            // InternalSiddhiParser.g:2461:2: ( ( () ruleDOT ) | ( () ruleMINUS ) | ( () ruleCOL ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case FullStop:
                {
                alt29=1;
                }
                break;
            case HyphenMinus:
                {
                alt29=2;
                }
                break;
            case Colon:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSiddhiParser.g:2462:3: ( () ruleDOT )
                    {
                    // InternalSiddhiParser.g:2462:3: ( () ruleDOT )
                    // InternalSiddhiParser.g:2463:4: () ruleDOT
                    {
                    // InternalSiddhiParser.g:2463:4: ()
                    // InternalSiddhiParser.g:2464:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertySeparatorAccess().getDOTParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:2479:3: ( () ruleMINUS )
                    {
                    // InternalSiddhiParser.g:2479:3: ( () ruleMINUS )
                    // InternalSiddhiParser.g:2480:4: () ruleMINUS
                    {
                    // InternalSiddhiParser.g:2480:4: ()
                    // InternalSiddhiParser.g:2481:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertySeparatorAccess().getMINUSParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMINUS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:2496:3: ( () ruleCOL )
                    {
                    // InternalSiddhiParser.g:2496:3: ( () ruleCOL )
                    // InternalSiddhiParser.g:2497:4: () ruleCOL
                    {
                    // InternalSiddhiParser.g:2497:4: ()
                    // InternalSiddhiParser.g:2498:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertySeparatorAccess().getCOLParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCOL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, rulePropertySeparator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePropertySeparator"


    // $ANTLR start "entryRuleFeatures"
    // InternalSiddhiParser.g:2516:1: entryRuleFeatures returns [EObject current=null] : iv_ruleFeatures= ruleFeatures EOF ;
    public final EObject entryRuleFeatures() throws RecognitionException {
        EObject current = null;
        int entryRuleFeatures_StartIndex = input.index();
        EObject iv_ruleFeatures = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return current; }
            // InternalSiddhiParser.g:2516:49: (iv_ruleFeatures= ruleFeatures EOF )
            // InternalSiddhiParser.g:2517:2: iv_ruleFeatures= ruleFeatures EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeaturesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFeatures=ruleFeatures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatures; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRuleFeatures_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatures"


    // $ANTLR start "ruleFeatures"
    // InternalSiddhiParser.g:2523:1: ruleFeatures returns [EObject current=null] : ( ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) ) ( (lv_type_2_0= ruleAttributeType ) ) ) ;
    public final EObject ruleFeatures() throws RecognitionException {
        EObject current = null;
        int ruleFeatures_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_nam_1_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return current; }
            // InternalSiddhiParser.g:2529:2: ( ( ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) ) ( (lv_type_2_0= ruleAttributeType ) ) ) )
            // InternalSiddhiParser.g:2530:2: ( ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) ) ( (lv_type_2_0= ruleAttributeType ) ) )
            {
            // InternalSiddhiParser.g:2530:2: ( ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) ) ( (lv_type_2_0= ruleAttributeType ) ) )
            // InternalSiddhiParser.g:2531:3: ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) ) ( (lv_type_2_0= ruleAttributeType ) )
            {
            // InternalSiddhiParser.g:2531:3: ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) )
            int alt30=2;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalSiddhiParser.g:2532:4: ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) )
                    {
                    // InternalSiddhiParser.g:2532:4: ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) )
                    // InternalSiddhiParser.g:2533:5: ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) )
                    {
                    // InternalSiddhiParser.g:2539:5: ( (lv_name_0_0= ruleIdNew ) )
                    // InternalSiddhiParser.g:2540:6: (lv_name_0_0= ruleIdNew )
                    {
                    // InternalSiddhiParser.g:2540:6: (lv_name_0_0= ruleIdNew )
                    // InternalSiddhiParser.g:2541:7: lv_name_0_0= ruleIdNew
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeaturesAccess().getNameIdNewParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_name_0_0=ruleIdNew();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeaturesRule());
                      							}
                      							set(
                      								current,
                      								"name",
                      								lv_name_0_0,
                      								"org.xtext.example.siddhi.Siddhi.IdNew");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:2560:4: ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) )
                    {
                    // InternalSiddhiParser.g:2560:4: ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) )
                    // InternalSiddhiParser.g:2561:5: ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) )
                    {
                    // InternalSiddhiParser.g:2567:5: ( (lv_nam_1_0= ruleName ) )
                    // InternalSiddhiParser.g:2568:6: (lv_nam_1_0= ruleName )
                    {
                    // InternalSiddhiParser.g:2568:6: (lv_nam_1_0= ruleName )
                    // InternalSiddhiParser.g:2569:7: lv_nam_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeaturesAccess().getNamNameParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_nam_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeaturesRule());
                      							}
                      							set(
                      								current,
                      								"nam",
                      								lv_nam_1_0,
                      								"org.xtext.example.siddhi.Siddhi.Name");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:2588:3: ( (lv_type_2_0= ruleAttributeType ) )
            // InternalSiddhiParser.g:2589:4: (lv_type_2_0= ruleAttributeType )
            {
            // InternalSiddhiParser.g:2589:4: (lv_type_2_0= ruleAttributeType )
            // InternalSiddhiParser.g:2590:5: lv_type_2_0= ruleAttributeType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeaturesAccess().getTypeAttributeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_type_2_0=ruleAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeaturesRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.example.siddhi.Siddhi.AttributeType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, ruleFeatures_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFeatures"


    // $ANTLR start "entryRuleAttributeType"
    // InternalSiddhiParser.g:2611:1: entryRuleAttributeType returns [EObject current=null] : iv_ruleAttributeType= ruleAttributeType EOF ;
    public final EObject entryRuleAttributeType() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeType_StartIndex = input.index();
        EObject iv_ruleAttributeType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return current; }
            // InternalSiddhiParser.g:2611:54: (iv_ruleAttributeType= ruleAttributeType EOF )
            // InternalSiddhiParser.g:2612:2: iv_ruleAttributeType= ruleAttributeType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeType=ruleAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeType; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRuleAttributeType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeType"


    // $ANTLR start "ruleAttributeType"
    // InternalSiddhiParser.g:2618:1: ruleAttributeType returns [EObject current=null] : ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) ) ;
    public final EObject ruleAttributeType() throws RecognitionException {
        EObject current = null;
        int ruleAttributeType_StartIndex = input.index();
        EObject this_STRINGS_1 = null;

        EObject this_INTS_3 = null;

        EObject this_LONG_5 = null;

        EObject this_FLOAT_7 = null;

        EObject this_DOUBLE_9 = null;

        EObject this_BOOL_11 = null;

        EObject this_OBJECT_13 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return current; }
            // InternalSiddhiParser.g:2624:2: ( ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) ) )
            // InternalSiddhiParser.g:2625:2: ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) )
            {
            // InternalSiddhiParser.g:2625:2: ( ( () this_STRINGS_1= ruleSTRINGS[$current] ) | ( () this_INTS_3= ruleINTS[$current] ) | ( () this_LONG_5= ruleLONG[$current] ) | ( () this_FLOAT_7= ruleFLOAT[$current] ) | ( () this_DOUBLE_9= ruleDOUBLE[$current] ) | ( () this_BOOL_11= ruleBOOL[$current] ) | ( () this_OBJECT_13= ruleOBJECT[$current] ) )
            int alt31=7;
            switch ( input.LA(1) ) {
            case String:
                {
                alt31=1;
                }
                break;
            case Int:
                {
                alt31=2;
                }
                break;
            case Long:
                {
                alt31=3;
                }
                break;
            case Float:
                {
                alt31=4;
                }
                break;
            case Double:
                {
                alt31=5;
                }
                break;
            case Bool:
                {
                alt31=6;
                }
                break;
            case Object:
                {
                alt31=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalSiddhiParser.g:2626:3: ( () this_STRINGS_1= ruleSTRINGS[$current] )
                    {
                    // InternalSiddhiParser.g:2626:3: ( () this_STRINGS_1= ruleSTRINGS[$current] )
                    // InternalSiddhiParser.g:2627:4: () this_STRINGS_1= ruleSTRINGS[$current]
                    {
                    // InternalSiddhiParser.g:2627:4: ()
                    // InternalSiddhiParser.g:2628:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getSTRINGSParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_STRINGS_1=ruleSTRINGS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_STRINGS_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:2647:3: ( () this_INTS_3= ruleINTS[$current] )
                    {
                    // InternalSiddhiParser.g:2647:3: ( () this_INTS_3= ruleINTS[$current] )
                    // InternalSiddhiParser.g:2648:4: () this_INTS_3= ruleINTS[$current]
                    {
                    // InternalSiddhiParser.g:2648:4: ()
                    // InternalSiddhiParser.g:2649:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getINTSParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_INTS_3=ruleINTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INTS_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:2668:3: ( () this_LONG_5= ruleLONG[$current] )
                    {
                    // InternalSiddhiParser.g:2668:3: ( () this_LONG_5= ruleLONG[$current] )
                    // InternalSiddhiParser.g:2669:4: () this_LONG_5= ruleLONG[$current]
                    {
                    // InternalSiddhiParser.g:2669:4: ()
                    // InternalSiddhiParser.g:2670:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getLONGParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LONG_5=ruleLONG(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LONG_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:2689:3: ( () this_FLOAT_7= ruleFLOAT[$current] )
                    {
                    // InternalSiddhiParser.g:2689:3: ( () this_FLOAT_7= ruleFLOAT[$current] )
                    // InternalSiddhiParser.g:2690:4: () this_FLOAT_7= ruleFLOAT[$current]
                    {
                    // InternalSiddhiParser.g:2690:4: ()
                    // InternalSiddhiParser.g:2691:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_3_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getFLOATParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FLOAT_7=ruleFLOAT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FLOAT_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:2710:3: ( () this_DOUBLE_9= ruleDOUBLE[$current] )
                    {
                    // InternalSiddhiParser.g:2710:3: ( () this_DOUBLE_9= ruleDOUBLE[$current] )
                    // InternalSiddhiParser.g:2711:4: () this_DOUBLE_9= ruleDOUBLE[$current]
                    {
                    // InternalSiddhiParser.g:2711:4: ()
                    // InternalSiddhiParser.g:2712:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_4_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getDOUBLEParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DOUBLE_9=ruleDOUBLE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DOUBLE_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:2731:3: ( () this_BOOL_11= ruleBOOL[$current] )
                    {
                    // InternalSiddhiParser.g:2731:3: ( () this_BOOL_11= ruleBOOL[$current] )
                    // InternalSiddhiParser.g:2732:4: () this_BOOL_11= ruleBOOL[$current]
                    {
                    // InternalSiddhiParser.g:2732:4: ()
                    // InternalSiddhiParser.g:2733:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_5_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getBOOLParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BOOL_11=ruleBOOL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BOOL_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:2752:3: ( () this_OBJECT_13= ruleOBJECT[$current] )
                    {
                    // InternalSiddhiParser.g:2752:3: ( () this_OBJECT_13= ruleOBJECT[$current] )
                    // InternalSiddhiParser.g:2753:4: () this_OBJECT_13= ruleOBJECT[$current]
                    {
                    // InternalSiddhiParser.g:2753:4: ()
                    // InternalSiddhiParser.g:2754:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_6_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeTypeAccess().getOBJECTParserRuleCall_6_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OBJECT_13=ruleOBJECT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OBJECT_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, ruleAttributeType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeType"


    // $ANTLR start "entryRuleSource"
    // InternalSiddhiParser.g:2776:1: entryRuleSource returns [EObject current=null] : iv_ruleSource= ruleSource EOF ;
    public final EObject entryRuleSource() throws RecognitionException {
        EObject current = null;
        int entryRuleSource_StartIndex = input.index();
        EObject iv_ruleSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return current; }
            // InternalSiddhiParser.g:2776:47: (iv_ruleSource= ruleSource EOF )
            // InternalSiddhiParser.g:2777:2: iv_ruleSource= ruleSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSource=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRuleSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSource"


    // $ANTLR start "ruleSource"
    // InternalSiddhiParser.g:2783:1: ruleSource returns [EObject current=null] : ( ( ruleIdNew ) ) ;
    public final EObject ruleSource() throws RecognitionException {
        EObject current = null;
        int ruleSource_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return current; }
            // InternalSiddhiParser.g:2789:2: ( ( ( ruleIdNew ) ) )
            // InternalSiddhiParser.g:2790:2: ( ( ruleIdNew ) )
            {
            // InternalSiddhiParser.g:2790:2: ( ( ruleIdNew ) )
            // InternalSiddhiParser.g:2791:3: ( ruleIdNew )
            {
            // InternalSiddhiParser.g:2791:3: ( ruleIdNew )
            // InternalSiddhiParser.g:2792:4: ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSourceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSourceAccess().getStrIdSource1CrossReference_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, ruleSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSource"


    // $ANTLR start "entryRuleSource1"
    // InternalSiddhiParser.g:2809:1: entryRuleSource1 returns [EObject current=null] : iv_ruleSource1= ruleSource1 EOF ;
    public final EObject entryRuleSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleSource1_StartIndex = input.index();
        EObject iv_ruleSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return current; }
            // InternalSiddhiParser.g:2809:48: (iv_ruleSource1= ruleSource1 EOF )
            // InternalSiddhiParser.g:2810:2: iv_ruleSource1= ruleSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSource1=ruleSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRuleSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSource1"


    // $ANTLR start "ruleSource1"
    // InternalSiddhiParser.g:2816:1: ruleSource1 returns [EObject current=null] : ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) ) ;
    public final EObject ruleSource1() throws RecognitionException {
        EObject current = null;
        int ruleSource1_StartIndex = input.index();
        Token lv_inner_0_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return current; }
            // InternalSiddhiParser.g:2822:2: ( ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) ) )
            // InternalSiddhiParser.g:2823:2: ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) )
            {
            // InternalSiddhiParser.g:2823:2: ( ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) ) )
            // InternalSiddhiParser.g:2824:3: ( (lv_inner_0_0= NumberSign ) )? ( (lv_name_1_0= ruleIdNew ) )
            {
            // InternalSiddhiParser.g:2824:3: ( (lv_inner_0_0= NumberSign ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==NumberSign) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalSiddhiParser.g:2825:4: (lv_inner_0_0= NumberSign )
                    {
                    // InternalSiddhiParser.g:2825:4: (lv_inner_0_0= NumberSign )
                    // InternalSiddhiParser.g:2826:5: lv_inner_0_0= NumberSign
                    {
                    lv_inner_0_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_inner_0_0, grammarAccess.getSource1Access().getInnerNumberSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSource1Rule());
                      					}
                      					setWithLastConsumed(current, "inner", lv_inner_0_0, "#");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:2838:3: ( (lv_name_1_0= ruleIdNew ) )
            // InternalSiddhiParser.g:2839:4: (lv_name_1_0= ruleIdNew )
            {
            // InternalSiddhiParser.g:2839:4: (lv_name_1_0= ruleIdNew )
            // InternalSiddhiParser.g:2840:5: lv_name_1_0= ruleIdNew
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSource1Access().getNameIdNewParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSource1Rule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.siddhi.Siddhi.IdNew");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, ruleSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSource1"


    // $ANTLR start "entryRuleExecPartition"
    // InternalSiddhiParser.g:2861:1: entryRuleExecPartition returns [EObject current=null] : iv_ruleExecPartition= ruleExecPartition EOF ;
    public final EObject entryRuleExecPartition() throws RecognitionException {
        EObject current = null;
        int entryRuleExecPartition_StartIndex = input.index();
        EObject iv_ruleExecPartition = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return current; }
            // InternalSiddhiParser.g:2861:54: (iv_ruleExecPartition= ruleExecPartition EOF )
            // InternalSiddhiParser.g:2862:2: iv_ruleExecPartition= ruleExecPartition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecPartitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExecPartition=ruleExecPartition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecPartition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleExecPartition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExecPartition"


    // $ANTLR start "ruleExecPartition"
    // InternalSiddhiParser.g:2868:1: ruleExecPartition returns [EObject current=null] : ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] ) ;
    public final EObject ruleExecPartition() throws RecognitionException {
        EObject current = null;
        int ruleExecPartition_StartIndex = input.index();
        Token otherlv_5=null;
        Token otherlv_11=null;
        EObject lv_ann4_0_0 = null;

        EObject this_PARTITION_1 = null;

        EObject this_WITH_2 = null;

        EObject lv_partWithStream_4_0 = null;

        EObject lv_partWithStream_6_0 = null;

        EObject this_BEGIN_8 = null;

        EObject lv_qu_9_0 = null;

        EObject lv_qu_10_0 = null;

        EObject this_END_12 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return current; }
            // InternalSiddhiParser.g:2874:2: ( ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] ) )
            // InternalSiddhiParser.g:2875:2: ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] )
            {
            // InternalSiddhiParser.g:2875:2: ( ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current] )
            // InternalSiddhiParser.g:2876:3: ( (lv_ann4_0_0= ruleAnnotation ) )* this_PARTITION_1= rulePARTITION[$current] this_WITH_2= ruleWITH[$current] ruleOPEN_PAR ( (lv_partWithStream_4_0= rulePartitionWithStream ) ) (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )* ruleCLOSE_PAR this_BEGIN_8= ruleBEGIN[$current] ( (lv_qu_9_0= ruleQuery ) ) ( (lv_qu_10_0= ruleQuery ) )* (otherlv_11= Semicolon )? this_END_12= ruleEND[$current]
            {
            // InternalSiddhiParser.g:2876:3: ( (lv_ann4_0_0= ruleAnnotation ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==CommercialAt) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalSiddhiParser.g:2877:4: (lv_ann4_0_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:2877:4: (lv_ann4_0_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:2878:5: lv_ann4_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecPartitionAccess().getAnn4AnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_42);
            	    lv_ann4_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann4",
            	      						lv_ann4_0_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getPARTITIONParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_43);
            this_PARTITION_1=rulePARTITION(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PARTITION_1;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getWITHParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_10);
            this_WITH_2=ruleWITH(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WITH_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExecPartitionAccess().getOPEN_PARParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_44);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:2924:3: ( (lv_partWithStream_4_0= rulePartitionWithStream ) )
            // InternalSiddhiParser.g:2925:4: (lv_partWithStream_4_0= rulePartitionWithStream )
            {
            // InternalSiddhiParser.g:2925:4: (lv_partWithStream_4_0= rulePartitionWithStream )
            // InternalSiddhiParser.g:2926:5: lv_partWithStream_4_0= rulePartitionWithStream
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_12);
            lv_partWithStream_4_0=rulePartitionWithStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
              					}
              					add(
              						current,
              						"partWithStream",
              						lv_partWithStream_4_0,
              						"org.xtext.example.siddhi.Siddhi.PartitionWithStream");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:2943:3: (otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==Comma) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSiddhiParser.g:2944:4: otherlv_5= Comma ( (lv_partWithStream_6_0= rulePartitionWithStream ) )
            	    {
            	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getExecPartitionAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:2948:4: ( (lv_partWithStream_6_0= rulePartitionWithStream ) )
            	    // InternalSiddhiParser.g:2949:5: (lv_partWithStream_6_0= rulePartitionWithStream )
            	    {
            	    // InternalSiddhiParser.g:2949:5: (lv_partWithStream_6_0= rulePartitionWithStream )
            	    // InternalSiddhiParser.g:2950:6: lv_partWithStream_6_0= rulePartitionWithStream
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_partWithStream_6_0=rulePartitionWithStream();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExecPartitionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"partWithStream",
            	      							lv_partWithStream_6_0,
            	      							"org.xtext.example.siddhi.Siddhi.PartitionWithStream");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExecPartitionAccess().getCLOSE_PARParserRuleCall_6());
              		
            }
            pushFollow(FollowSets000.FOLLOW_45);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getBEGINParserRuleCall_7());
              		
            }
            pushFollow(FollowSets000.FOLLOW_6);
            this_BEGIN_8=ruleBEGIN(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BEGIN_8;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:2986:3: ( (lv_qu_9_0= ruleQuery ) )
            // InternalSiddhiParser.g:2987:4: (lv_qu_9_0= ruleQuery )
            {
            // InternalSiddhiParser.g:2987:4: (lv_qu_9_0= ruleQuery )
            // InternalSiddhiParser.g:2988:5: lv_qu_9_0= ruleQuery
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_46);
            lv_qu_9_0=ruleQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
              					}
              					add(
              						current,
              						"qu",
              						lv_qu_9_0,
              						"org.xtext.example.siddhi.Siddhi.Query");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3005:3: ( (lv_qu_10_0= ruleQuery ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==From||LA35_0==CommercialAt) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalSiddhiParser.g:3006:4: (lv_qu_10_0= ruleQuery )
            	    {
            	    // InternalSiddhiParser.g:3006:4: (lv_qu_10_0= ruleQuery )
            	    // InternalSiddhiParser.g:3007:5: lv_qu_10_0= ruleQuery
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    lv_qu_10_0=ruleQuery();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecPartitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"qu",
            	      						lv_qu_10_0,
            	      						"org.xtext.example.siddhi.Siddhi.Query");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            // InternalSiddhiParser.g:3024:3: (otherlv_11= Semicolon )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==Semicolon) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSiddhiParser.g:3025:4: otherlv_11= Semicolon
                    {
                    otherlv_11=(Token)match(input,Semicolon,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getExecPartitionAccess().getSemicolonKeyword_10());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExecPartitionRule());
              			}
              			newCompositeNode(grammarAccess.getExecPartitionAccess().getENDParserRuleCall_11());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_END_12=ruleEND(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_END_12;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleExecPartition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExecPartition"


    // $ANTLR start "entryRulePartitionWithStream"
    // InternalSiddhiParser.g:3045:1: entryRulePartitionWithStream returns [EObject current=null] : iv_rulePartitionWithStream= rulePartitionWithStream EOF ;
    public final EObject entryRulePartitionWithStream() throws RecognitionException {
        EObject current = null;
        int entryRulePartitionWithStream_StartIndex = input.index();
        EObject iv_rulePartitionWithStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return current; }
            // InternalSiddhiParser.g:3045:60: (iv_rulePartitionWithStream= rulePartitionWithStream EOF )
            // InternalSiddhiParser.g:3046:2: iv_rulePartitionWithStream= rulePartitionWithStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPartitionWithStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePartitionWithStream=rulePartitionWithStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePartitionWithStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRulePartitionWithStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePartitionWithStream"


    // $ANTLR start "rulePartitionWithStream"
    // InternalSiddhiParser.g:3052:1: rulePartitionWithStream returns [EObject current=null] : (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) ) ;
    public final EObject rulePartitionWithStream() throws RecognitionException {
        EObject current = null;
        int rulePartitionWithStream_StartIndex = input.index();
        EObject this_ConditionRanges_0 = null;

        EObject lv_of_1_0 = null;

        EObject lv_str_id2_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return current; }
            // InternalSiddhiParser.g:3058:2: ( (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) ) )
            // InternalSiddhiParser.g:3059:2: (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) )
            {
            // InternalSiddhiParser.g:3059:2: (this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) ) )
            // InternalSiddhiParser.g:3060:3: this_ConditionRanges_0= ruleConditionRanges ( (lv_of_1_0= ruleOF ) ) ( (lv_str_id2_2_0= ruleSource ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPartitionWithStreamAccess().getConditionRangesParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_48);
            this_ConditionRanges_0=ruleConditionRanges();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConditionRanges_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:3068:3: ( (lv_of_1_0= ruleOF ) )
            // InternalSiddhiParser.g:3069:4: (lv_of_1_0= ruleOF )
            {
            // InternalSiddhiParser.g:3069:4: (lv_of_1_0= ruleOF )
            // InternalSiddhiParser.g:3070:5: lv_of_1_0= ruleOF
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPartitionWithStreamAccess().getOfOFParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_of_1_0=ruleOF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPartitionWithStreamRule());
              					}
              					set(
              						current,
              						"of",
              						lv_of_1_0,
              						"org.xtext.example.siddhi.Siddhi.OF");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3087:3: ( (lv_str_id2_2_0= ruleSource ) )
            // InternalSiddhiParser.g:3088:4: (lv_str_id2_2_0= ruleSource )
            {
            // InternalSiddhiParser.g:3088:4: (lv_str_id2_2_0= ruleSource )
            // InternalSiddhiParser.g:3089:5: lv_str_id2_2_0= ruleSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPartitionWithStreamAccess().getStr_id2SourceParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_str_id2_2_0=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPartitionWithStreamRule());
              					}
              					set(
              						current,
              						"str_id2",
              						lv_str_id2_2_0,
              						"org.xtext.example.siddhi.Siddhi.Source");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, rulePartitionWithStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePartitionWithStream"


    // $ANTLR start "entryRuleConditionRanges"
    // InternalSiddhiParser.g:3110:1: entryRuleConditionRanges returns [EObject current=null] : iv_ruleConditionRanges= ruleConditionRanges EOF ;
    public final EObject entryRuleConditionRanges() throws RecognitionException {
        EObject current = null;
        int entryRuleConditionRanges_StartIndex = input.index();
        EObject iv_ruleConditionRanges = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return current; }
            // InternalSiddhiParser.g:3110:56: (iv_ruleConditionRanges= ruleConditionRanges EOF )
            // InternalSiddhiParser.g:3111:2: iv_ruleConditionRanges= ruleConditionRanges EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRangesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditionRanges=ruleConditionRanges();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionRanges; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleConditionRanges_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionRanges"


    // $ANTLR start "ruleConditionRanges"
    // InternalSiddhiParser.g:3117:1: ruleConditionRanges returns [EObject current=null] : ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* ) ;
    public final EObject ruleConditionRanges() throws RecognitionException {
        EObject current = null;
        int ruleConditionRanges_StartIndex = input.index();
        EObject lv_conRange_0_0 = null;

        EObject lv_or_1_0 = null;

        EObject lv_conRange_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return current; }
            // InternalSiddhiParser.g:3123:2: ( ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* ) )
            // InternalSiddhiParser.g:3124:2: ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* )
            {
            // InternalSiddhiParser.g:3124:2: ( ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )* )
            // InternalSiddhiParser.g:3125:3: ( (lv_conRange_0_0= ruleConditionRange ) ) ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )*
            {
            // InternalSiddhiParser.g:3125:3: ( (lv_conRange_0_0= ruleConditionRange ) )
            // InternalSiddhiParser.g:3126:4: (lv_conRange_0_0= ruleConditionRange )
            {
            // InternalSiddhiParser.g:3126:4: (lv_conRange_0_0= ruleConditionRange )
            // InternalSiddhiParser.g:3127:5: lv_conRange_0_0= ruleConditionRange
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_49);
            lv_conRange_0_0=ruleConditionRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionRangesRule());
              					}
              					add(
              						current,
              						"conRange",
              						lv_conRange_0_0,
              						"org.xtext.example.siddhi.Siddhi.ConditionRange");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3144:3: ( ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==Or) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalSiddhiParser.g:3145:4: ( (lv_or_1_0= ruleOR ) ) ( (lv_conRange_2_0= ruleConditionRange ) )
            	    {
            	    // InternalSiddhiParser.g:3145:4: ( (lv_or_1_0= ruleOR ) )
            	    // InternalSiddhiParser.g:3146:5: (lv_or_1_0= ruleOR )
            	    {
            	    // InternalSiddhiParser.g:3146:5: (lv_or_1_0= ruleOR )
            	    // InternalSiddhiParser.g:3147:6: lv_or_1_0= ruleOR
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionRangesAccess().getOrORParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_or_1_0=ruleOR();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionRangesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"or",
            	      							lv_or_1_0,
            	      							"org.xtext.example.siddhi.Siddhi.OR");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:3164:4: ( (lv_conRange_2_0= ruleConditionRange ) )
            	    // InternalSiddhiParser.g:3165:5: (lv_conRange_2_0= ruleConditionRange )
            	    {
            	    // InternalSiddhiParser.g:3165:5: (lv_conRange_2_0= ruleConditionRange )
            	    // InternalSiddhiParser.g:3166:6: lv_conRange_2_0= ruleConditionRange
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_conRange_2_0=ruleConditionRange();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionRangesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"conRange",
            	      							lv_conRange_2_0,
            	      							"org.xtext.example.siddhi.Siddhi.ConditionRange");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleConditionRanges_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConditionRanges"


    // $ANTLR start "entryRuleConditionRange"
    // InternalSiddhiParser.g:3188:1: entryRuleConditionRange returns [EObject current=null] : iv_ruleConditionRange= ruleConditionRange EOF ;
    public final EObject entryRuleConditionRange() throws RecognitionException {
        EObject current = null;
        int entryRuleConditionRange_StartIndex = input.index();
        EObject iv_ruleConditionRange = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return current; }
            // InternalSiddhiParser.g:3188:55: (iv_ruleConditionRange= ruleConditionRange EOF )
            // InternalSiddhiParser.g:3189:2: iv_ruleConditionRange= ruleConditionRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditionRange=ruleConditionRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionRange; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuleConditionRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionRange"


    // $ANTLR start "ruleConditionRange"
    // InternalSiddhiParser.g:3195:1: ruleConditionRange returns [EObject current=null] : ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? ) ;
    public final EObject ruleConditionRange() throws RecognitionException {
        EObject current = null;
        int ruleConditionRange_StartIndex = input.index();
        EObject lv_expr_0_0 = null;

        EObject lv_a_1_0 = null;

        EObject lv_sv_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return current; }
            // InternalSiddhiParser.g:3201:2: ( ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? ) )
            // InternalSiddhiParser.g:3202:2: ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? )
            {
            // InternalSiddhiParser.g:3202:2: ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )? )
            // InternalSiddhiParser.g:3203:3: ( (lv_expr_0_0= ruleExpression ) ) ( (lv_a_1_0= ruleAS ) )? ( (lv_sv_2_0= ruleStringValue ) )?
            {
            // InternalSiddhiParser.g:3203:3: ( (lv_expr_0_0= ruleExpression ) )
            // InternalSiddhiParser.g:3204:4: (lv_expr_0_0= ruleExpression )
            {
            // InternalSiddhiParser.g:3204:4: (lv_expr_0_0= ruleExpression )
            // InternalSiddhiParser.g:3205:5: lv_expr_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionRangeAccess().getExprExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_50);
            lv_expr_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionRangeRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_0_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3222:3: ( (lv_a_1_0= ruleAS ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==As) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalSiddhiParser.g:3223:4: (lv_a_1_0= ruleAS )
                    {
                    // InternalSiddhiParser.g:3223:4: (lv_a_1_0= ruleAS )
                    // InternalSiddhiParser.g:3224:5: lv_a_1_0= ruleAS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConditionRangeAccess().getAASParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_a_1_0=ruleAS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConditionRangeRule());
                      					}
                      					set(
                      						current,
                      						"a",
                      						lv_a_1_0,
                      						"org.xtext.example.siddhi.Siddhi.AS");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:3241:3: ( (lv_sv_2_0= ruleStringValue ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_STRING) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSiddhiParser.g:3242:4: (lv_sv_2_0= ruleStringValue )
                    {
                    // InternalSiddhiParser.g:3242:4: (lv_sv_2_0= ruleStringValue )
                    // InternalSiddhiParser.g:3243:5: lv_sv_2_0= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConditionRangeAccess().getSvStringValueParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sv_2_0=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConditionRangeRule());
                      					}
                      					set(
                      						current,
                      						"sv",
                      						lv_sv_2_0,
                      						"org.xtext.example.siddhi.Siddhi.StringValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruleConditionRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConditionRange"


    // $ANTLR start "entryRuleQuery"
    // InternalSiddhiParser.g:3264:1: entryRuleQuery returns [EObject current=null] : iv_ruleQuery= ruleQuery EOF ;
    public final EObject entryRuleQuery() throws RecognitionException {
        EObject current = null;
        int entryRuleQuery_StartIndex = input.index();
        EObject iv_ruleQuery = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return current; }
            // InternalSiddhiParser.g:3264:46: (iv_ruleQuery= ruleQuery EOF )
            // InternalSiddhiParser.g:3265:2: iv_ruleQuery= ruleQuery EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuery=ruleQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuery; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleQuery_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQuery"


    // $ANTLR start "ruleQuery"
    // InternalSiddhiParser.g:3271:1: ruleQuery returns [EObject current=null] : ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) ) ) ;
    public final EObject ruleQuery() throws RecognitionException {
        EObject current = null;
        int ruleQuery_StartIndex = input.index();
        EObject lv_ann3_1_0 = null;

        EObject this_FROM_2 = null;

        EObject lv_qInp_3_0 = null;

        EObject lv_querySec_4_0 = null;

        EObject lv_outRate_5_0 = null;

        EObject lv_qOutput_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return current; }
            // InternalSiddhiParser.g:3277:2: ( ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) ) ) )
            // InternalSiddhiParser.g:3278:2: ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) ) )
            {
            // InternalSiddhiParser.g:3278:2: ( () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) ) )
            // InternalSiddhiParser.g:3279:3: () ( (lv_ann3_1_0= ruleAnnotation ) )* this_FROM_2= ruleFROM[$current] ( (lv_qInp_3_0= ruleQueryInput ) ) ( (lv_querySec_4_0= ruleQuerySection ) )? ( (lv_outRate_5_0= ruleOutputRate ) )? ( (lv_qOutput_6_0= ruleQueryOutput ) )
            {
            // InternalSiddhiParser.g:3279:3: ()
            // InternalSiddhiParser.g:3280:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQueryAccess().getQueryAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:3286:3: ( (lv_ann3_1_0= ruleAnnotation ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==CommercialAt) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalSiddhiParser.g:3287:4: (lv_ann3_1_0= ruleAnnotation )
            	    {
            	    // InternalSiddhiParser.g:3287:4: (lv_ann3_1_0= ruleAnnotation )
            	    // InternalSiddhiParser.g:3288:5: lv_ann3_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getQueryAccess().getAnn3AnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_ann3_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getQueryRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ann3",
            	      						lv_ann3_1_0,
            	      						"org.xtext.example.siddhi.Siddhi.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getQueryRule());
              			}
              			newCompositeNode(grammarAccess.getQueryAccess().getFROMParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_52);
            this_FROM_2=ruleFROM(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FROM_2;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:3316:3: ( (lv_qInp_3_0= ruleQueryInput ) )
            // InternalSiddhiParser.g:3317:4: (lv_qInp_3_0= ruleQueryInput )
            {
            // InternalSiddhiParser.g:3317:4: (lv_qInp_3_0= ruleQueryInput )
            // InternalSiddhiParser.g:3318:5: lv_qInp_3_0= ruleQueryInput
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQueryAccess().getQInpQueryInputParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_qInp_3_0=ruleQueryInput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQueryRule());
              					}
              					set(
              						current,
              						"qInp",
              						lv_qInp_3_0,
              						"org.xtext.example.siddhi.Siddhi.QueryInput");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3335:3: ( (lv_querySec_4_0= ruleQuerySection ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==Select) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalSiddhiParser.g:3336:4: (lv_querySec_4_0= ruleQuerySection )
                    {
                    // InternalSiddhiParser.g:3336:4: (lv_querySec_4_0= ruleQuerySection )
                    // InternalSiddhiParser.g:3337:5: lv_querySec_4_0= ruleQuerySection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQueryAccess().getQuerySecQuerySectionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_querySec_4_0=ruleQuerySection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQueryRule());
                      					}
                      					set(
                      						current,
                      						"querySec",
                      						lv_querySec_4_0,
                      						"org.xtext.example.siddhi.Siddhi.QuerySection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:3354:3: ( (lv_outRate_5_0= ruleOutputRate ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==Output) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSiddhiParser.g:3355:4: (lv_outRate_5_0= ruleOutputRate )
                    {
                    // InternalSiddhiParser.g:3355:4: (lv_outRate_5_0= ruleOutputRate )
                    // InternalSiddhiParser.g:3356:5: lv_outRate_5_0= ruleOutputRate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQueryAccess().getOutRateOutputRateParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_outRate_5_0=ruleOutputRate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQueryRule());
                      					}
                      					set(
                      						current,
                      						"outRate",
                      						lv_outRate_5_0,
                      						"org.xtext.example.siddhi.Siddhi.OutputRate");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:3373:3: ( (lv_qOutput_6_0= ruleQueryOutput ) )
            // InternalSiddhiParser.g:3374:4: (lv_qOutput_6_0= ruleQueryOutput )
            {
            // InternalSiddhiParser.g:3374:4: (lv_qOutput_6_0= ruleQueryOutput )
            // InternalSiddhiParser.g:3375:5: lv_qOutput_6_0= ruleQueryOutput
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQueryAccess().getQOutputQueryOutputParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_qOutput_6_0=ruleQueryOutput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQueryRule());
              					}
              					set(
              						current,
              						"qOutput",
              						lv_qOutput_6_0,
              						"org.xtext.example.siddhi.Siddhi.QueryOutput");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleQuery_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQuery"


    // $ANTLR start "entryRuleQueryOutput"
    // InternalSiddhiParser.g:3396:1: entryRuleQueryOutput returns [EObject current=null] : iv_ruleQueryOutput= ruleQueryOutput EOF ;
    public final EObject entryRuleQueryOutput() throws RecognitionException {
        EObject current = null;
        int entryRuleQueryOutput_StartIndex = input.index();
        EObject iv_ruleQueryOutput = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return current; }
            // InternalSiddhiParser.g:3396:52: (iv_ruleQueryOutput= ruleQueryOutput EOF )
            // InternalSiddhiParser.g:3397:2: iv_ruleQueryOutput= ruleQueryOutput EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryOutputRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQueryOutput=ruleQueryOutput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryOutput; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRuleQueryOutput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryOutput"


    // $ANTLR start "ruleQueryOutput"
    // InternalSiddhiParser.g:3403:1: ruleQueryOutput returns [EObject current=null] : ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleTarget ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleTarget ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleTarget ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) ) ;
    public final EObject ruleQueryOutput() throws RecognitionException {
        EObject current = null;
        int ruleQueryOutput_StartIndex = input.index();
        EObject this_INSERT_0 = null;

        EObject lv_outEventType_1_0 = null;

        EObject this_INTO_2 = null;

        EObject lv_tar_3_0 = null;

        EObject this_DELETE_4 = null;

        EObject lv_tar_5_0 = null;

        EObject this_FOR_6 = null;

        EObject lv_outEventType_7_0 = null;

        EObject lv_on_8_0 = null;

        EObject lv_expr_9_0 = null;

        EObject this_UPDATE_10 = null;

        EObject lv_or_11_0 = null;

        EObject this_INSERT_12 = null;

        EObject this_INTO_13 = null;

        EObject lv_tar_14_0 = null;

        EObject this_FOR_15 = null;

        EObject lv_outEventType_16_0 = null;

        EObject lv_setClause_17_0 = null;

        EObject lv_on_18_0 = null;

        EObject lv_expr_19_0 = null;

        EObject this_RETURN_20 = null;

        EObject lv_outEventType_21_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return current; }
            // InternalSiddhiParser.g:3409:2: ( ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleTarget ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleTarget ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleTarget ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) ) )
            // InternalSiddhiParser.g:3410:2: ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleTarget ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleTarget ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleTarget ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) )
            {
            // InternalSiddhiParser.g:3410:2: ( (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleTarget ) ) ) | (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleTarget ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) ) | (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleTarget ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) ) | (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? ) )
            int alt49=4;
            switch ( input.LA(1) ) {
            case Insert:
                {
                alt49=1;
                }
                break;
            case Delete:
                {
                alt49=2;
                }
                break;
            case Update:
                {
                alt49=3;
                }
                break;
            case Return:
                {
                alt49=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalSiddhiParser.g:3411:3: (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleTarget ) ) )
                    {
                    // InternalSiddhiParser.g:3411:3: (this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleTarget ) ) )
                    // InternalSiddhiParser.g:3412:4: this_INSERT_0= ruleINSERT[$current] ( (lv_outEventType_1_0= ruleOutputEventType ) )? this_INTO_2= ruleINTO[$current] ( (lv_tar_3_0= ruleTarget ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    this_INSERT_0=ruleINSERT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INSERT_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:3423:4: ( (lv_outEventType_1_0= ruleOutputEventType ) )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( ((LA43_0>=Current && LA43_0<=Expired)||LA43_0==Events||LA43_0==All) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalSiddhiParser.g:3424:5: (lv_outEventType_1_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:3424:5: (lv_outEventType_1_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:3425:6: lv_outEventType_1_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_54);
                            lv_outEventType_1_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              						}
                              						set(
                              							current,
                              							"outEventType",
                              							lv_outEventType_1_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_INTO_2=ruleINTO(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INTO_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:3453:4: ( (lv_tar_3_0= ruleTarget ) )
                    // InternalSiddhiParser.g:3454:5: (lv_tar_3_0= ruleTarget )
                    {
                    // InternalSiddhiParser.g:3454:5: (lv_tar_3_0= ruleTarget )
                    // InternalSiddhiParser.g:3455:6: lv_tar_3_0= ruleTarget
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getTarTargetParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tar_3_0=ruleTarget();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"tar",
                      							lv_tar_3_0,
                      							"org.xtext.example.siddhi.Siddhi.Target");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:3474:3: (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleTarget ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) )
                    {
                    // InternalSiddhiParser.g:3474:3: (this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleTarget ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) ) )
                    // InternalSiddhiParser.g:3475:4: this_DELETE_4= ruleDELETE[$current] ( (lv_tar_5_0= ruleTarget ) ) (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )? ( (lv_on_8_0= ruleON ) ) ( (lv_expr_9_0= ruleExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getDELETEParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_DELETE_4=ruleDELETE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DELETE_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:3486:4: ( (lv_tar_5_0= ruleTarget ) )
                    // InternalSiddhiParser.g:3487:5: (lv_tar_5_0= ruleTarget )
                    {
                    // InternalSiddhiParser.g:3487:5: (lv_tar_5_0= ruleTarget )
                    // InternalSiddhiParser.g:3488:6: lv_tar_5_0= ruleTarget
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getTarTargetParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_tar_5_0=ruleTarget();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"tar",
                      							lv_tar_5_0,
                      							"org.xtext.example.siddhi.Siddhi.Target");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3505:4: (this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==For) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalSiddhiParser.g:3506:5: this_FOR_6= ruleFOR[$current] ( (lv_outEventType_7_0= ruleOutputEventType ) )
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_1_2_0());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            this_FOR_6=ruleFOR(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_FOR_6;
                              					afterParserOrEnumRuleCall();
                              				
                            }
                            // InternalSiddhiParser.g:3517:5: ( (lv_outEventType_7_0= ruleOutputEventType ) )
                            // InternalSiddhiParser.g:3518:6: (lv_outEventType_7_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:3518:6: (lv_outEventType_7_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:3519:7: lv_outEventType_7_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_1_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_outEventType_7_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              							}
                              							set(
                              								current,
                              								"outEventType",
                              								lv_outEventType_7_0,
                              								"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:3537:4: ( (lv_on_8_0= ruleON ) )
                    // InternalSiddhiParser.g:3538:5: (lv_on_8_0= ruleON )
                    {
                    // InternalSiddhiParser.g:3538:5: (lv_on_8_0= ruleON )
                    // InternalSiddhiParser.g:3539:6: lv_on_8_0= ruleON
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_on_8_0=ruleON();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"on",
                      							lv_on_8_0,
                      							"org.xtext.example.siddhi.Siddhi.ON");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3556:4: ( (lv_expr_9_0= ruleExpression ) )
                    // InternalSiddhiParser.g:3557:5: (lv_expr_9_0= ruleExpression )
                    {
                    // InternalSiddhiParser.g:3557:5: (lv_expr_9_0= ruleExpression )
                    // InternalSiddhiParser.g:3558:6: lv_expr_9_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expr_9_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_9_0,
                      							"org.xtext.example.siddhi.Siddhi.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:3577:3: (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleTarget ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )
                    {
                    // InternalSiddhiParser.g:3577:3: (this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleTarget ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )
                    // InternalSiddhiParser.g:3578:4: this_UPDATE_10= ruleUPDATE[$current] ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )? ( (lv_tar_14_0= ruleTarget ) ) (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )? ( (lv_setClause_17_0= ruleSetClause ) )? ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getUPDATEParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    this_UPDATE_10=ruleUPDATE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_UPDATE_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:3589:4: ( ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current] )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==Or) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalSiddhiParser.g:3590:5: ( (lv_or_11_0= ruleOR ) ) this_INSERT_12= ruleINSERT[$current] this_INTO_13= ruleINTO[$current]
                            {
                            // InternalSiddhiParser.g:3590:5: ( (lv_or_11_0= ruleOR ) )
                            // InternalSiddhiParser.g:3591:6: (lv_or_11_0= ruleOR )
                            {
                            // InternalSiddhiParser.g:3591:6: (lv_or_11_0= ruleOR )
                            // InternalSiddhiParser.g:3592:7: lv_or_11_0= ruleOR
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getQueryOutputAccess().getOrORParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_58);
                            lv_or_11_0=ruleOR();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              							}
                              							set(
                              								current,
                              								"or",
                              								lv_or_11_0,
                              								"org.xtext.example.siddhi.Siddhi.OR");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_2_1_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_54);
                            this_INSERT_12=ruleINSERT(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_INSERT_12;
                              					afterParserOrEnumRuleCall();
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_2_1_2());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_9);
                            this_INTO_13=ruleINTO(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_INTO_13;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalSiddhiParser.g:3632:4: ( (lv_tar_14_0= ruleTarget ) )
                    // InternalSiddhiParser.g:3633:5: (lv_tar_14_0= ruleTarget )
                    {
                    // InternalSiddhiParser.g:3633:5: (lv_tar_14_0= ruleTarget )
                    // InternalSiddhiParser.g:3634:6: lv_tar_14_0= ruleTarget
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getTarTargetParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    lv_tar_14_0=ruleTarget();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"tar",
                      							lv_tar_14_0,
                      							"org.xtext.example.siddhi.Siddhi.Target");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3651:4: (this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) ) )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==For) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalSiddhiParser.g:3652:5: this_FOR_15= ruleFOR[$current] ( (lv_outEventType_16_0= ruleOutputEventType ) )
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getQueryOutputRule());
                              					}
                              					newCompositeNode(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_2_3_0());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            this_FOR_15=ruleFOR(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_FOR_15;
                              					afterParserOrEnumRuleCall();
                              				
                            }
                            // InternalSiddhiParser.g:3663:5: ( (lv_outEventType_16_0= ruleOutputEventType ) )
                            // InternalSiddhiParser.g:3664:6: (lv_outEventType_16_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:3664:6: (lv_outEventType_16_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:3665:7: lv_outEventType_16_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_60);
                            lv_outEventType_16_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              							}
                              							set(
                              								current,
                              								"outEventType",
                              								lv_outEventType_16_0,
                              								"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:3683:4: ( (lv_setClause_17_0= ruleSetClause ) )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==Set) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalSiddhiParser.g:3684:5: (lv_setClause_17_0= ruleSetClause )
                            {
                            // InternalSiddhiParser.g:3684:5: (lv_setClause_17_0= ruleSetClause )
                            // InternalSiddhiParser.g:3685:6: lv_setClause_17_0= ruleSetClause
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getQueryOutputAccess().getSetClauseSetClauseParserRuleCall_2_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_setClause_17_0=ruleSetClause();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              						}
                              						set(
                              							current,
                              							"setClause",
                              							lv_setClause_17_0,
                              							"org.xtext.example.siddhi.Siddhi.SetClause");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:3702:4: ( (lv_on_18_0= ruleON ) )
                    // InternalSiddhiParser.g:3703:5: (lv_on_18_0= ruleON )
                    {
                    // InternalSiddhiParser.g:3703:5: (lv_on_18_0= ruleON )
                    // InternalSiddhiParser.g:3704:6: lv_on_18_0= ruleON
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_2_5_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_on_18_0=ruleON();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"on",
                      							lv_on_18_0,
                      							"org.xtext.example.siddhi.Siddhi.ON");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:3721:4: ( (lv_expr_19_0= ruleExpression ) )
                    // InternalSiddhiParser.g:3722:5: (lv_expr_19_0= ruleExpression )
                    {
                    // InternalSiddhiParser.g:3722:5: (lv_expr_19_0= ruleExpression )
                    // InternalSiddhiParser.g:3723:6: lv_expr_19_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_2_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expr_19_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_19_0,
                      							"org.xtext.example.siddhi.Siddhi.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:3742:3: (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? )
                    {
                    // InternalSiddhiParser.g:3742:3: (this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )? )
                    // InternalSiddhiParser.g:3743:4: this_RETURN_20= ruleRETURN[$current] ( (lv_outEventType_21_0= ruleOutputEventType ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getQueryOutputRule());
                      				}
                      				newCompositeNode(grammarAccess.getQueryOutputAccess().getRETURNParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_61);
                    this_RETURN_20=ruleRETURN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RETURN_20;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:3754:4: ( (lv_outEventType_21_0= ruleOutputEventType ) )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( ((LA48_0>=Current && LA48_0<=Expired)||LA48_0==Events||LA48_0==All) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalSiddhiParser.g:3755:5: (lv_outEventType_21_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:3755:5: (lv_outEventType_21_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:3756:6: lv_outEventType_21_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_3_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_outEventType_21_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getQueryOutputRule());
                              						}
                              						set(
                              							current,
                              							"outEventType",
                              							lv_outEventType_21_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, ruleQueryOutput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQueryOutput"


    // $ANTLR start "entryRuleTarget"
    // InternalSiddhiParser.g:3778:1: entryRuleTarget returns [EObject current=null] : iv_ruleTarget= ruleTarget EOF ;
    public final EObject entryRuleTarget() throws RecognitionException {
        EObject current = null;
        int entryRuleTarget_StartIndex = input.index();
        EObject iv_ruleTarget = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return current; }
            // InternalSiddhiParser.g:3778:47: (iv_ruleTarget= ruleTarget EOF )
            // InternalSiddhiParser.g:3779:2: iv_ruleTarget= ruleTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTargetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTarget=ruleTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTarget; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRuleTarget_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTarget"


    // $ANTLR start "ruleTarget"
    // InternalSiddhiParser.g:3785:1: ruleTarget returns [EObject current=null] : ( ( ( ( ( ruleSource1 ) ) )=> ( (lv_na_0_0= ruleSource1 ) ) ) | ( ( ( ruleSource ) )=> (lv_src_1_0= ruleSource ) ) ) ;
    public final EObject ruleTarget() throws RecognitionException {
        EObject current = null;
        int ruleTarget_StartIndex = input.index();
        EObject lv_na_0_0 = null;

        EObject lv_src_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return current; }
            // InternalSiddhiParser.g:3791:2: ( ( ( ( ( ( ruleSource1 ) ) )=> ( (lv_na_0_0= ruleSource1 ) ) ) | ( ( ( ruleSource ) )=> (lv_src_1_0= ruleSource ) ) ) )
            // InternalSiddhiParser.g:3792:2: ( ( ( ( ( ruleSource1 ) ) )=> ( (lv_na_0_0= ruleSource1 ) ) ) | ( ( ( ruleSource ) )=> (lv_src_1_0= ruleSource ) ) )
            {
            // InternalSiddhiParser.g:3792:2: ( ( ( ( ( ruleSource1 ) ) )=> ( (lv_na_0_0= ruleSource1 ) ) ) | ( ( ( ruleSource ) )=> (lv_src_1_0= ruleSource ) ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==NumberSign) && (synpred25_InternalSiddhiParser())) {
                alt50=1;
            }
            else if ( (LA50_0==RULE_ID) ) {
                int LA50_2 = input.LA(2);

                if ( (synpred25_InternalSiddhiParser()) ) {
                    alt50=1;
                }
                else if ( (synpred26_InternalSiddhiParser()) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalSiddhiParser.g:3793:3: ( ( ( ( ruleSource1 ) ) )=> ( (lv_na_0_0= ruleSource1 ) ) )
                    {
                    // InternalSiddhiParser.g:3793:3: ( ( ( ( ruleSource1 ) ) )=> ( (lv_na_0_0= ruleSource1 ) ) )
                    // InternalSiddhiParser.g:3794:4: ( ( ( ruleSource1 ) ) )=> ( (lv_na_0_0= ruleSource1 ) )
                    {
                    // InternalSiddhiParser.g:3800:4: ( (lv_na_0_0= ruleSource1 ) )
                    // InternalSiddhiParser.g:3801:5: (lv_na_0_0= ruleSource1 )
                    {
                    // InternalSiddhiParser.g:3801:5: (lv_na_0_0= ruleSource1 )
                    // InternalSiddhiParser.g:3802:6: lv_na_0_0= ruleSource1
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTargetAccess().getNaSource1ParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_na_0_0=ruleSource1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTargetRule());
                      						}
                      						set(
                      							current,
                      							"na",
                      							lv_na_0_0,
                      							"org.xtext.example.siddhi.Siddhi.Source1");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:3821:3: ( ( ( ruleSource ) )=> (lv_src_1_0= ruleSource ) )
                    {
                    // InternalSiddhiParser.g:3821:3: ( ( ( ruleSource ) )=> (lv_src_1_0= ruleSource ) )
                    // InternalSiddhiParser.g:3822:4: ( ( ruleSource ) )=> (lv_src_1_0= ruleSource )
                    {
                    // InternalSiddhiParser.g:3826:4: (lv_src_1_0= ruleSource )
                    // InternalSiddhiParser.g:3827:5: lv_src_1_0= ruleSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTargetAccess().getSrcSourceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_src_1_0=ruleSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTargetRule());
                      					}
                      					set(
                      						current,
                      						"src",
                      						lv_src_1_0,
                      						"org.xtext.example.siddhi.Siddhi.Source");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, ruleTarget_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTarget"


    // $ANTLR start "entryRuleSetClause"
    // InternalSiddhiParser.g:3848:1: entryRuleSetClause returns [EObject current=null] : iv_ruleSetClause= ruleSetClause EOF ;
    public final EObject entryRuleSetClause() throws RecognitionException {
        EObject current = null;
        int entryRuleSetClause_StartIndex = input.index();
        EObject iv_ruleSetClause = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return current; }
            // InternalSiddhiParser.g:3848:50: (iv_ruleSetClause= ruleSetClause EOF )
            // InternalSiddhiParser.g:3849:2: iv_ruleSetClause= ruleSetClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetClauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSetClause=ruleSetClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetClause; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRuleSetClause_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSetClause"


    // $ANTLR start "ruleSetClause"
    // InternalSiddhiParser.g:3855:1: ruleSetClause returns [EObject current=null] : (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* ) ;
    public final EObject ruleSetClause() throws RecognitionException {
        EObject current = null;
        int ruleSetClause_StartIndex = input.index();
        Token otherlv_2=null;
        EObject this_SET_0 = null;

        EObject lv_setAssignment_1_0 = null;

        EObject lv_setAssignment_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return current; }
            // InternalSiddhiParser.g:3861:2: ( (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* ) )
            // InternalSiddhiParser.g:3862:2: (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* )
            {
            // InternalSiddhiParser.g:3862:2: (this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )* )
            // InternalSiddhiParser.g:3863:3: this_SET_0= ruleSET[$current] ( (lv_setAssignment_1_0= ruleSetAssignment ) ) (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSetClauseRule());
              			}
              			newCompositeNode(grammarAccess.getSetClauseAccess().getSETParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_SET_0=ruleSET(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SET_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:3874:3: ( (lv_setAssignment_1_0= ruleSetAssignment ) )
            // InternalSiddhiParser.g:3875:4: (lv_setAssignment_1_0= ruleSetAssignment )
            {
            // InternalSiddhiParser.g:3875:4: (lv_setAssignment_1_0= ruleSetAssignment )
            // InternalSiddhiParser.g:3876:5: lv_setAssignment_1_0= ruleSetAssignment
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_setAssignment_1_0=ruleSetAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetClauseRule());
              					}
              					add(
              						current,
              						"setAssignment",
              						lv_setAssignment_1_0,
              						"org.xtext.example.siddhi.Siddhi.SetAssignment");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:3893:3: (otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==Comma) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSiddhiParser.g:3894:4: otherlv_2= Comma ( (lv_setAssignment_3_0= ruleSetAssignment ) )
            	    {
            	    otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSetClauseAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:3898:4: ( (lv_setAssignment_3_0= ruleSetAssignment ) )
            	    // InternalSiddhiParser.g:3899:5: (lv_setAssignment_3_0= ruleSetAssignment )
            	    {
            	    // InternalSiddhiParser.g:3899:5: (lv_setAssignment_3_0= ruleSetAssignment )
            	    // InternalSiddhiParser.g:3900:6: lv_setAssignment_3_0= ruleSetAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_setAssignment_3_0=ruleSetAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSetClauseRule());
            	      						}
            	      						add(
            	      							current,
            	      							"setAssignment",
            	      							lv_setAssignment_3_0,
            	      							"org.xtext.example.siddhi.Siddhi.SetAssignment");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, ruleSetClause_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSetClause"


    // $ANTLR start "entryRuleSetAssignment"
    // InternalSiddhiParser.g:3922:1: entryRuleSetAssignment returns [EObject current=null] : iv_ruleSetAssignment= ruleSetAssignment EOF ;
    public final EObject entryRuleSetAssignment() throws RecognitionException {
        EObject current = null;
        int entryRuleSetAssignment_StartIndex = input.index();
        EObject iv_ruleSetAssignment = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return current; }
            // InternalSiddhiParser.g:3922:54: (iv_ruleSetAssignment= ruleSetAssignment EOF )
            // InternalSiddhiParser.g:3923:2: iv_ruleSetAssignment= ruleSetAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSetAssignment=ruleSetAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleSetAssignment_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSetAssignment"


    // $ANTLR start "ruleSetAssignment"
    // InternalSiddhiParser.g:3929:1: ruleSetAssignment returns [EObject current=null] : (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleSetAssignment() throws RecognitionException {
        EObject current = null;
        int ruleSetAssignment_StartIndex = input.index();
        Token otherlv_1=null;
        EObject this_AttributeReference_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return current; }
            // InternalSiddhiParser.g:3935:2: ( (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSiddhiParser.g:3936:2: (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSiddhiParser.g:3936:2: (this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSiddhiParser.g:3937:3: this_AttributeReference_0= ruleAttributeReference otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSetAssignmentAccess().getAttributeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_40);
            this_AttributeReference_0=ruleAttributeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AttributeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSetAssignmentAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalSiddhiParser.g:3949:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSiddhiParser.g:3950:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSiddhiParser.g:3950:4: (lv_expression_2_0= ruleExpression )
            // InternalSiddhiParser.g:3951:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetAssignmentAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleSetAssignment_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSetAssignment"


    // $ANTLR start "entryRuleOutputEventType"
    // InternalSiddhiParser.g:3972:1: entryRuleOutputEventType returns [EObject current=null] : iv_ruleOutputEventType= ruleOutputEventType EOF ;
    public final EObject entryRuleOutputEventType() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputEventType_StartIndex = input.index();
        EObject iv_ruleOutputEventType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return current; }
            // InternalSiddhiParser.g:3972:56: (iv_ruleOutputEventType= ruleOutputEventType EOF )
            // InternalSiddhiParser.g:3973:2: iv_ruleOutputEventType= ruleOutputEventType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputEventTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputEventType=ruleOutputEventType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputEventType; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRuleOutputEventType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputEventType"


    // $ANTLR start "ruleOutputEventType"
    // InternalSiddhiParser.g:3979:1: ruleOutputEventType returns [EObject current=null] : ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) ) ;
    public final EObject ruleOutputEventType() throws RecognitionException {
        EObject current = null;
        int ruleOutputEventType_StartIndex = input.index();
        EObject this_ALL_1 = null;

        EObject this_EVENTS_2 = null;

        EObject this_ALL_4 = null;

        EObject this_RAW_5 = null;

        EObject this_EVENTS_6 = null;

        EObject this_EXPIRED_8 = null;

        EObject this_EVENTS_9 = null;

        EObject this_EXPIRED_11 = null;

        EObject this_RAW_12 = null;

        EObject this_EVENTS_13 = null;

        EObject this_CURRENT_15 = null;

        EObject this_EVENTS_16 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return current; }
            // InternalSiddhiParser.g:3985:2: ( ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) ) )
            // InternalSiddhiParser.g:3986:2: ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) )
            {
            // InternalSiddhiParser.g:3986:2: ( ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] ) | ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] ) | ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] ) | ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] ) | ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] ) )
            int alt53=5;
            switch ( input.LA(1) ) {
            case All:
                {
                int LA53_1 = input.LA(2);

                if ( (LA53_1==Events) ) {
                    alt53=1;
                }
                else if ( (LA53_1==Raw) ) {
                    alt53=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;
                }
                }
                break;
            case Expired:
                {
                int LA53_2 = input.LA(2);

                if ( (LA53_2==Events) ) {
                    alt53=3;
                }
                else if ( (LA53_2==Raw) ) {
                    alt53=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 2, input);

                    throw nvae;
                }
                }
                break;
            case Current:
            case Events:
                {
                alt53=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalSiddhiParser.g:3987:3: ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:3987:3: ( () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:3988:4: () this_ALL_1= ruleALL[$current] this_EVENTS_2= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:3988:4: ()
                    // InternalSiddhiParser.g:3989:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    this_ALL_1=ruleALL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ALL_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_2=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4019:3: ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:4019:3: ( () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:4020:4: () this_ALL_4= ruleALL[$current] this_RAW_5= ruleRAW[$current] this_EVENTS_6= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:4020:4: ()
                    // InternalSiddhiParser.g:4021:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    this_ALL_4=ruleALL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ALL_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    this_RAW_5=ruleRAW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RAW_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_1_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_6=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:4062:3: ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:4062:3: ( () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:4063:4: () this_EXPIRED_8= ruleEXPIRED[$current] this_EVENTS_9= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:4063:4: ()
                    // InternalSiddhiParser.g:4064:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    this_EXPIRED_8=ruleEXPIRED(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EXPIRED_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_9=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:4094:3: ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:4094:3: ( () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:4095:4: () this_EXPIRED_11= ruleEXPIRED[$current] this_RAW_12= ruleRAW[$current] this_EVENTS_13= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:4095:4: ()
                    // InternalSiddhiParser.g:4096:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_3_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    this_EXPIRED_11=ruleEXPIRED(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EXPIRED_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_3_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    this_RAW_12=ruleRAW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RAW_12;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_3_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_13=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:4137:3: ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:4137:3: ( () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:4138:4: () (this_CURRENT_15= ruleCURRENT[$current] )? this_EVENTS_16= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:4138:4: ()
                    // InternalSiddhiParser.g:4139:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:4145:4: (this_CURRENT_15= ruleCURRENT[$current] )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==Current) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalSiddhiParser.g:4146:5: this_CURRENT_15= ruleCURRENT[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getOutputEventTypeRule());
                              					}
                              					newCompositeNode(grammarAccess.getOutputEventTypeAccess().getCURRENTParserRuleCall_4_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_62);
                            this_CURRENT_15=ruleCURRENT(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_CURRENT_15;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputEventTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_4_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_16=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_16;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, ruleOutputEventType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputEventType"


    // $ANTLR start "entryRuleOutputRate"
    // InternalSiddhiParser.g:4174:1: entryRuleOutputRate returns [EObject current=null] : iv_ruleOutputRate= ruleOutputRate EOF ;
    public final EObject entryRuleOutputRate() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputRate_StartIndex = input.index();
        EObject iv_ruleOutputRate = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return current; }
            // InternalSiddhiParser.g:4174:51: (iv_ruleOutputRate= ruleOutputRate EOF )
            // InternalSiddhiParser.g:4175:2: iv_ruleOutputRate= ruleOutputRate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputRateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputRate=ruleOutputRate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputRate; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRuleOutputRate_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputRate"


    // $ANTLR start "ruleOutputRate"
    // InternalSiddhiParser.g:4181:1: ruleOutputRate returns [EObject current=null] : ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) ) ;
    public final EObject ruleOutputRate() throws RecognitionException {
        EObject current = null;
        int ruleOutputRate_StartIndex = input.index();
        EObject this_OUTPUT_1 = null;

        EObject lv_op_rate_type_2_0 = null;

        EObject lv_every_3_0 = null;

        EObject lv_tv_4_0 = null;

        EObject this_EVENTS_6 = null;

        EObject this_OUTPUT_8 = null;

        EObject this_SNAPSHOT_9 = null;

        EObject lv_every_10_0 = null;

        EObject lv_tv_11_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return current; }
            // InternalSiddhiParser.g:4187:2: ( ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) ) )
            // InternalSiddhiParser.g:4188:2: ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) )
            {
            // InternalSiddhiParser.g:4188:2: ( ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) ) | ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==Output) ) {
                int LA56_1 = input.LA(2);

                if ( (LA56_1==Every||LA56_1==First||LA56_1==Last||LA56_1==All) ) {
                    alt56=1;
                }
                else if ( (LA56_1==Snapshot) ) {
                    alt56=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalSiddhiParser.g:4189:3: ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) )
                    {
                    // InternalSiddhiParser.g:4189:3: ( () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) ) )
                    // InternalSiddhiParser.g:4190:4: () this_OUTPUT_1= ruleOUTPUT[$current] ( (lv_op_rate_type_2_0= ruleOutputRateType ) )? ( (lv_every_3_0= ruleEVERY ) ) ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) )
                    {
                    // InternalSiddhiParser.g:4190:4: ()
                    // InternalSiddhiParser.g:4191:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateAccess().getOutputRateAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    this_OUTPUT_1=ruleOUTPUT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTPUT_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:4208:4: ( (lv_op_rate_type_2_0= ruleOutputRateType ) )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==First||LA54_0==Last||LA54_0==All) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalSiddhiParser.g:4209:5: (lv_op_rate_type_2_0= ruleOutputRateType )
                            {
                            // InternalSiddhiParser.g:4209:5: (lv_op_rate_type_2_0= ruleOutputRateType )
                            // InternalSiddhiParser.g:4210:6: lv_op_rate_type_2_0= ruleOutputRateType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getOutputRateAccess().getOp_rate_typeOutputRateTypeParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_32);
                            lv_op_rate_type_2_0=ruleOutputRateType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                              						}
                              						set(
                              							current,
                              							"op_rate_type",
                              							lv_op_rate_type_2_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputRateType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:4227:4: ( (lv_every_3_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:4228:5: (lv_every_3_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:4228:5: (lv_every_3_0= ruleEVERY )
                    // InternalSiddhiParser.g:4229:6: lv_every_3_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_every_3_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                      						}
                      						set(
                      							current,
                      							"every",
                      							lv_every_3_0,
                      							"org.xtext.example.siddhi.Siddhi.EVERY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:4246:4: ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) )
                    int alt55=2;
                    alt55 = dfa55.predict(input);
                    switch (alt55) {
                        case 1 :
                            // InternalSiddhiParser.g:4247:5: ( (lv_tv_4_0= ruleTimeValue ) )
                            {
                            // InternalSiddhiParser.g:4247:5: ( (lv_tv_4_0= ruleTimeValue ) )
                            // InternalSiddhiParser.g:4248:6: (lv_tv_4_0= ruleTimeValue )
                            {
                            // InternalSiddhiParser.g:4248:6: (lv_tv_4_0= ruleTimeValue )
                            // InternalSiddhiParser.g:4249:7: lv_tv_4_0= ruleTimeValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_tv_4_0=ruleTimeValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getOutputRateRule());
                              							}
                              							set(
                              								current,
                              								"tv",
                              								lv_tv_4_0,
                              								"org.xtext.example.siddhi.Siddhi.TimeValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSiddhiParser.g:4267:5: ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] )
                            {
                            // InternalSiddhiParser.g:4267:5: ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] )
                            // InternalSiddhiParser.g:4268:6: ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getOutputRateAccess().getINT_LITERALParserRuleCall_0_4_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_62);
                            ruleINT_LITERAL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getOutputRateRule());
                              						}
                              						newCompositeNode(grammarAccess.getOutputRateAccess().getEVENTSParserRuleCall_0_4_1_1());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            this_EVENTS_6=ruleEVENTS(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVENTS_6;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4290:3: ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) )
                    {
                    // InternalSiddhiParser.g:4290:3: ( () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) ) )
                    // InternalSiddhiParser.g:4291:4: () this_OUTPUT_8= ruleOUTPUT[$current] this_SNAPSHOT_9= ruleSNAPSHOT[$current] ( (lv_every_10_0= ruleEVERY ) ) ( (lv_tv_11_0= ruleTimeValue ) )
                    {
                    // InternalSiddhiParser.g:4291:4: ()
                    // InternalSiddhiParser.g:4292:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateAccess().getOutputRateAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    this_OUTPUT_8=ruleOUTPUT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTPUT_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateAccess().getSNAPSHOTParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    this_SNAPSHOT_9=ruleSNAPSHOT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SNAPSHOT_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:4320:4: ( (lv_every_10_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:4321:5: (lv_every_10_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:4321:5: (lv_every_10_0= ruleEVERY )
                    // InternalSiddhiParser.g:4322:6: lv_every_10_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_every_10_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                      						}
                      						set(
                      							current,
                      							"every",
                      							lv_every_10_0,
                      							"org.xtext.example.siddhi.Siddhi.EVERY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:4339:4: ( (lv_tv_11_0= ruleTimeValue ) )
                    // InternalSiddhiParser.g:4340:5: (lv_tv_11_0= ruleTimeValue )
                    {
                    // InternalSiddhiParser.g:4340:5: (lv_tv_11_0= ruleTimeValue )
                    // InternalSiddhiParser.g:4341:6: lv_tv_11_0= ruleTimeValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tv_11_0=ruleTimeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputRateRule());
                      						}
                      						set(
                      							current,
                      							"tv",
                      							lv_tv_11_0,
                      							"org.xtext.example.siddhi.Siddhi.TimeValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, ruleOutputRate_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputRate"


    // $ANTLR start "entryRuleOutputRateType"
    // InternalSiddhiParser.g:4363:1: entryRuleOutputRateType returns [EObject current=null] : iv_ruleOutputRateType= ruleOutputRateType EOF ;
    public final EObject entryRuleOutputRateType() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputRateType_StartIndex = input.index();
        EObject iv_ruleOutputRateType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return current; }
            // InternalSiddhiParser.g:4363:55: (iv_ruleOutputRateType= ruleOutputRateType EOF )
            // InternalSiddhiParser.g:4364:2: iv_ruleOutputRateType= ruleOutputRateType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputRateTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputRateType=ruleOutputRateType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputRateType; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleOutputRateType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputRateType"


    // $ANTLR start "ruleOutputRateType"
    // InternalSiddhiParser.g:4370:1: ruleOutputRateType returns [EObject current=null] : ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) ) ;
    public final EObject ruleOutputRateType() throws RecognitionException {
        EObject current = null;
        int ruleOutputRateType_StartIndex = input.index();
        EObject this_ALL_1 = null;

        EObject this_LAST_3 = null;

        EObject this_FIRST_5 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return current; }
            // InternalSiddhiParser.g:4376:2: ( ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) ) )
            // InternalSiddhiParser.g:4377:2: ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) )
            {
            // InternalSiddhiParser.g:4377:2: ( ( () this_ALL_1= ruleALL[$current] ) | ( () this_LAST_3= ruleLAST[$current] ) | ( () this_FIRST_5= ruleFIRST[$current] ) )
            int alt57=3;
            switch ( input.LA(1) ) {
            case All:
                {
                alt57=1;
                }
                break;
            case Last:
                {
                alt57=2;
                }
                break;
            case First:
                {
                alt57=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalSiddhiParser.g:4378:3: ( () this_ALL_1= ruleALL[$current] )
                    {
                    // InternalSiddhiParser.g:4378:3: ( () this_ALL_1= ruleALL[$current] )
                    // InternalSiddhiParser.g:4379:4: () this_ALL_1= ruleALL[$current]
                    {
                    // InternalSiddhiParser.g:4379:4: ()
                    // InternalSiddhiParser.g:4380:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateTypeAccess().getALLParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ALL_1=ruleALL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ALL_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4399:3: ( () this_LAST_3= ruleLAST[$current] )
                    {
                    // InternalSiddhiParser.g:4399:3: ( () this_LAST_3= ruleLAST[$current] )
                    // InternalSiddhiParser.g:4400:4: () this_LAST_3= ruleLAST[$current]
                    {
                    // InternalSiddhiParser.g:4400:4: ()
                    // InternalSiddhiParser.g:4401:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateTypeAccess().getLASTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LAST_3=ruleLAST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LAST_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:4420:3: ( () this_FIRST_5= ruleFIRST[$current] )
                    {
                    // InternalSiddhiParser.g:4420:3: ( () this_FIRST_5= ruleFIRST[$current] )
                    // InternalSiddhiParser.g:4421:4: () this_FIRST_5= ruleFIRST[$current]
                    {
                    // InternalSiddhiParser.g:4421:4: ()
                    // InternalSiddhiParser.g:4422:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOutputRateTypeRule());
                      				}
                      				newCompositeNode(grammarAccess.getOutputRateTypeAccess().getFIRSTParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FIRST_5=ruleFIRST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FIRST_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleOutputRateType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputRateType"


    // $ANTLR start "entryRuleGroupByQuerySelection"
    // InternalSiddhiParser.g:4444:1: entryRuleGroupByQuerySelection returns [EObject current=null] : iv_ruleGroupByQuerySelection= ruleGroupByQuerySelection EOF ;
    public final EObject entryRuleGroupByQuerySelection() throws RecognitionException {
        EObject current = null;
        int entryRuleGroupByQuerySelection_StartIndex = input.index();
        EObject iv_ruleGroupByQuerySelection = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return current; }
            // InternalSiddhiParser.g:4444:62: (iv_ruleGroupByQuerySelection= ruleGroupByQuerySelection EOF )
            // InternalSiddhiParser.g:4445:2: iv_ruleGroupByQuerySelection= ruleGroupByQuerySelection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupByQuerySelectionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGroupByQuerySelection=ruleGroupByQuerySelection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroupByQuerySelection; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleGroupByQuerySelection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleGroupByQuerySelection"


    // $ANTLR start "ruleGroupByQuerySelection"
    // InternalSiddhiParser.g:4451:1: ruleGroupByQuerySelection returns [EObject current=null] : ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? ) ;
    public final EObject ruleGroupByQuerySelection() throws RecognitionException {
        EObject current = null;
        int ruleGroupByQuerySelection_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_SELECT_1 = null;

        EObject lv_out_att_3_0 = null;

        EObject lv_out_att_5_0 = null;

        EObject lv_grp_by_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return current; }
            // InternalSiddhiParser.g:4457:2: ( ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? ) )
            // InternalSiddhiParser.g:4458:2: ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? )
            {
            // InternalSiddhiParser.g:4458:2: ( () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )? )
            // InternalSiddhiParser.g:4459:3: () (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) ) ( (lv_grp_by_6_0= ruleGroupBy ) )?
            {
            // InternalSiddhiParser.g:4459:3: ()
            // InternalSiddhiParser.g:4460:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGroupByQuerySelectionAccess().getGroupByQuerySelectionAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:4466:3: (this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) ) )
            // InternalSiddhiParser.g:4467:4: this_SELECT_1= ruleSELECT[$current] (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) )
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getGroupByQuerySelectionRule());
              				}
              				newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getSELECTParserRuleCall_1_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_66);
            this_SELECT_1=ruleSELECT(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_SELECT_1;
              				afterParserOrEnumRuleCall();
              			
            }
            // InternalSiddhiParser.g:4478:4: (otherlv_2= Asterisk | ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==Asterisk) ) {
                alt59=1;
            }
            else if ( ((LA59_0>=Unidirectional && LA59_0<=Milliseconds)||LA59_0==Millisecond||LA59_0==Partition||(LA59_0>=Millisec && LA59_0<=Seconds)||(LA59_0>=Define && LA59_0<=Null)||(LA59_0>=True && LA59_0<=Year)||(LA59_0>=All && LA59_0<=And)||(LA59_0>=Day && LA59_0<=Not)||(LA59_0>=Raw && LA59_0<=Sec)||LA59_0==As||LA59_0==By||(LA59_0>=Is && LA59_0<=NumberSign)||LA59_0==LeftParenthesis||LA59_0==PlusSign||(LA59_0>=HyphenMinus && LA59_0<=FullStop)||(LA59_0>=RULE_ID && LA59_0<=RULE_INT)||LA59_0==RULE_STRING) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalSiddhiParser.g:4479:5: otherlv_2= Asterisk
                    {
                    otherlv_2=(Token)match(input,Asterisk,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getGroupByQuerySelectionAccess().getAsteriskKeyword_1_1_0());
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4484:5: ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* )
                    {
                    // InternalSiddhiParser.g:4484:5: ( ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )* )
                    // InternalSiddhiParser.g:4485:6: ( (lv_out_att_3_0= ruleOutputAttribute ) ) (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )*
                    {
                    // InternalSiddhiParser.g:4485:6: ( (lv_out_att_3_0= ruleOutputAttribute ) )
                    // InternalSiddhiParser.g:4486:7: (lv_out_att_3_0= ruleOutputAttribute )
                    {
                    // InternalSiddhiParser.g:4486:7: (lv_out_att_3_0= ruleOutputAttribute )
                    // InternalSiddhiParser.g:4487:8: lv_out_att_3_0= ruleOutputAttribute
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_68);
                    lv_out_att_3_0=ruleOutputAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getGroupByQuerySelectionRule());
                      								}
                      								add(
                      									current,
                      									"out_att",
                      									lv_out_att_3_0,
                      									"org.xtext.example.siddhi.Siddhi.OutputAttribute");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:4504:6: (otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) ) )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==Comma) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:4505:7: otherlv_4= Comma ( (lv_out_att_5_0= ruleOutputAttribute ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_4, grammarAccess.getGroupByQuerySelectionAccess().getCommaKeyword_1_1_1_1_0());
                    	      						
                    	    }
                    	    // InternalSiddhiParser.g:4509:7: ( (lv_out_att_5_0= ruleOutputAttribute ) )
                    	    // InternalSiddhiParser.g:4510:8: (lv_out_att_5_0= ruleOutputAttribute )
                    	    {
                    	    // InternalSiddhiParser.g:4510:8: (lv_out_att_5_0= ruleOutputAttribute )
                    	    // InternalSiddhiParser.g:4511:9: lv_out_att_5_0= ruleOutputAttribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_68);
                    	    lv_out_att_5_0=ruleOutputAttribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getGroupByQuerySelectionRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"out_att",
                    	      										lv_out_att_5_0,
                    	      										"org.xtext.example.siddhi.Siddhi.OutputAttribute");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            // InternalSiddhiParser.g:4532:3: ( (lv_grp_by_6_0= ruleGroupBy ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==Group) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSiddhiParser.g:4533:4: (lv_grp_by_6_0= ruleGroupBy )
                    {
                    // InternalSiddhiParser.g:4533:4: (lv_grp_by_6_0= ruleGroupBy )
                    // InternalSiddhiParser.g:4534:5: lv_grp_by_6_0= ruleGroupBy
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGroupByQuerySelectionAccess().getGrp_byGroupByParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_grp_by_6_0=ruleGroupBy();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGroupByQuerySelectionRule());
                      					}
                      					set(
                      						current,
                      						"grp_by",
                      						lv_grp_by_6_0,
                      						"org.xtext.example.siddhi.Siddhi.GroupBy");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleGroupByQuerySelection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleGroupByQuerySelection"


    // $ANTLR start "entryRuleQuerySection"
    // InternalSiddhiParser.g:4555:1: entryRuleQuerySection returns [EObject current=null] : iv_ruleQuerySection= ruleQuerySection EOF ;
    public final EObject entryRuleQuerySection() throws RecognitionException {
        EObject current = null;
        int entryRuleQuerySection_StartIndex = input.index();
        EObject iv_ruleQuerySection = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return current; }
            // InternalSiddhiParser.g:4555:53: (iv_ruleQuerySection= ruleQuerySection EOF )
            // InternalSiddhiParser.g:4556:2: iv_ruleQuerySection= ruleQuerySection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuerySectionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuerySection=ruleQuerySection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuerySection; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRuleQuerySection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQuerySection"


    // $ANTLR start "ruleQuerySection"
    // InternalSiddhiParser.g:4562:1: ruleQuerySection returns [EObject current=null] : ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? ) ;
    public final EObject ruleQuerySection() throws RecognitionException {
        EObject current = null;
        int ruleQuerySection_StartIndex = input.index();
        EObject lv_grpByQuerySel_1_0 = null;

        EObject lv_having_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return current; }
            // InternalSiddhiParser.g:4568:2: ( ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? ) )
            // InternalSiddhiParser.g:4569:2: ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? )
            {
            // InternalSiddhiParser.g:4569:2: ( () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )? )
            // InternalSiddhiParser.g:4570:3: () ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) ) ( (lv_having_2_0= ruleHavingExpr ) )?
            {
            // InternalSiddhiParser.g:4570:3: ()
            // InternalSiddhiParser.g:4571:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQuerySectionAccess().getQuerySectionAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:4577:3: ( (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection ) )
            // InternalSiddhiParser.g:4578:4: (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection )
            {
            // InternalSiddhiParser.g:4578:4: (lv_grpByQuerySel_1_0= ruleGroupByQuerySelection )
            // InternalSiddhiParser.g:4579:5: lv_grpByQuerySel_1_0= ruleGroupByQuerySelection
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuerySectionAccess().getGrpByQuerySelGroupByQuerySelectionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_69);
            lv_grpByQuerySel_1_0=ruleGroupByQuerySelection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuerySectionRule());
              					}
              					set(
              						current,
              						"grpByQuerySel",
              						lv_grpByQuerySel_1_0,
              						"org.xtext.example.siddhi.Siddhi.GroupByQuerySelection");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:4596:3: ( (lv_having_2_0= ruleHavingExpr ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==Having) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSiddhiParser.g:4597:4: (lv_having_2_0= ruleHavingExpr )
                    {
                    // InternalSiddhiParser.g:4597:4: (lv_having_2_0= ruleHavingExpr )
                    // InternalSiddhiParser.g:4598:5: lv_having_2_0= ruleHavingExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQuerySectionAccess().getHavingHavingExprParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_having_2_0=ruleHavingExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQuerySectionRule());
                      					}
                      					set(
                      						current,
                      						"having",
                      						lv_having_2_0,
                      						"org.xtext.example.siddhi.Siddhi.HavingExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, ruleQuerySection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQuerySection"


    // $ANTLR start "entryRuleGroupBy"
    // InternalSiddhiParser.g:4619:1: entryRuleGroupBy returns [EObject current=null] : iv_ruleGroupBy= ruleGroupBy EOF ;
    public final EObject entryRuleGroupBy() throws RecognitionException {
        EObject current = null;
        int entryRuleGroupBy_StartIndex = input.index();
        EObject iv_ruleGroupBy = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return current; }
            // InternalSiddhiParser.g:4619:48: (iv_ruleGroupBy= ruleGroupBy EOF )
            // InternalSiddhiParser.g:4620:2: iv_ruleGroupBy= ruleGroupBy EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupByRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGroupBy=ruleGroupBy();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroupBy; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRuleGroupBy_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleGroupBy"


    // $ANTLR start "ruleGroupBy"
    // InternalSiddhiParser.g:4626:1: ruleGroupBy returns [EObject current=null] : (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* ) ;
    public final EObject ruleGroupBy() throws RecognitionException {
        EObject current = null;
        int ruleGroupBy_StartIndex = input.index();
        Token otherlv_3=null;
        EObject this_GROUP_0 = null;

        EObject this_BY_1 = null;

        EObject lv_attr_ref_2_0 = null;

        EObject lv_attr_ref_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return current; }
            // InternalSiddhiParser.g:4632:2: ( (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* ) )
            // InternalSiddhiParser.g:4633:2: (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* )
            {
            // InternalSiddhiParser.g:4633:2: (this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )* )
            // InternalSiddhiParser.g:4634:3: this_GROUP_0= ruleGROUP[$current] this_BY_1= ruleBY[$current] ( (lv_attr_ref_2_0= ruleAttributeReference ) ) (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getGroupByRule());
              			}
              			newCompositeNode(grammarAccess.getGroupByAccess().getGROUPParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_70);
            this_GROUP_0=ruleGROUP(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_GROUP_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getGroupByRule());
              			}
              			newCompositeNode(grammarAccess.getGroupByAccess().getBYParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_BY_1=ruleBY(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BY_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:4656:3: ( (lv_attr_ref_2_0= ruleAttributeReference ) )
            // InternalSiddhiParser.g:4657:4: (lv_attr_ref_2_0= ruleAttributeReference )
            {
            // InternalSiddhiParser.g:4657:4: (lv_attr_ref_2_0= ruleAttributeReference )
            // InternalSiddhiParser.g:4658:5: lv_attr_ref_2_0= ruleAttributeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_attr_ref_2_0=ruleAttributeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGroupByRule());
              					}
              					add(
              						current,
              						"attr_ref",
              						lv_attr_ref_2_0,
              						"org.xtext.example.siddhi.Siddhi.AttributeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:4675:3: (otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==Comma) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSiddhiParser.g:4676:4: otherlv_3= Comma ( (lv_attr_ref_4_0= ruleAttributeReference ) )
            	    {
            	    otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getGroupByAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSiddhiParser.g:4680:4: ( (lv_attr_ref_4_0= ruleAttributeReference ) )
            	    // InternalSiddhiParser.g:4681:5: (lv_attr_ref_4_0= ruleAttributeReference )
            	    {
            	    // InternalSiddhiParser.g:4681:5: (lv_attr_ref_4_0= ruleAttributeReference )
            	    // InternalSiddhiParser.g:4682:6: lv_attr_ref_4_0= ruleAttributeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_attr_ref_4_0=ruleAttributeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getGroupByRule());
            	      						}
            	      						add(
            	      							current,
            	      							"attr_ref",
            	      							lv_attr_ref_4_0,
            	      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, ruleGroupBy_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleGroupBy"


    // $ANTLR start "entryRuleHavingExpr"
    // InternalSiddhiParser.g:4704:1: entryRuleHavingExpr returns [EObject current=null] : iv_ruleHavingExpr= ruleHavingExpr EOF ;
    public final EObject entryRuleHavingExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleHavingExpr_StartIndex = input.index();
        EObject iv_ruleHavingExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return current; }
            // InternalSiddhiParser.g:4704:51: (iv_ruleHavingExpr= ruleHavingExpr EOF )
            // InternalSiddhiParser.g:4705:2: iv_ruleHavingExpr= ruleHavingExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHavingExprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHavingExpr=ruleHavingExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHavingExpr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRuleHavingExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleHavingExpr"


    // $ANTLR start "ruleHavingExpr"
    // InternalSiddhiParser.g:4711:1: ruleHavingExpr returns [EObject current=null] : (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) ) ;
    public final EObject ruleHavingExpr() throws RecognitionException {
        EObject current = null;
        int ruleHavingExpr_StartIndex = input.index();
        EObject this_HAVING_0 = null;

        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return current; }
            // InternalSiddhiParser.g:4717:2: ( (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) ) )
            // InternalSiddhiParser.g:4718:2: (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) )
            {
            // InternalSiddhiParser.g:4718:2: (this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) ) )
            // InternalSiddhiParser.g:4719:3: this_HAVING_0= ruleHAVING[$current] ( (lv_expr_1_0= ruleExpression ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getHavingExprRule());
              			}
              			newCompositeNode(grammarAccess.getHavingExprAccess().getHAVINGParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_44);
            this_HAVING_0=ruleHAVING(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_HAVING_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:4730:3: ( (lv_expr_1_0= ruleExpression ) )
            // InternalSiddhiParser.g:4731:4: (lv_expr_1_0= ruleExpression )
            {
            // InternalSiddhiParser.g:4731:4: (lv_expr_1_0= ruleExpression )
            // InternalSiddhiParser.g:4732:5: lv_expr_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHavingExprAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expr_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHavingExprRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, ruleHavingExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHavingExpr"


    // $ANTLR start "entryRuleOutputAttribute"
    // InternalSiddhiParser.g:4753:1: entryRuleOutputAttribute returns [EObject current=null] : iv_ruleOutputAttribute= ruleOutputAttribute EOF ;
    public final EObject entryRuleOutputAttribute() throws RecognitionException {
        EObject current = null;
        int entryRuleOutputAttribute_StartIndex = input.index();
        EObject iv_ruleOutputAttribute = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return current; }
            // InternalSiddhiParser.g:4753:56: (iv_ruleOutputAttribute= ruleOutputAttribute EOF )
            // InternalSiddhiParser.g:4754:2: iv_ruleOutputAttribute= ruleOutputAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputAttribute=ruleOutputAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputAttribute; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRuleOutputAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputAttribute"


    // $ANTLR start "ruleOutputAttribute"
    // InternalSiddhiParser.g:4760:1: ruleOutputAttribute returns [EObject current=null] : ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) ) ;
    public final EObject ruleOutputAttribute() throws RecognitionException {
        EObject current = null;
        int ruleOutputAttribute_StartIndex = input.index();
        EObject lv_outAttr_1_0 = null;

        EObject lv_attr_ref_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return current; }
            // InternalSiddhiParser.g:4766:2: ( ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) ) )
            // InternalSiddhiParser.g:4767:2: ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) )
            {
            // InternalSiddhiParser.g:4767:2: ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) )
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalSiddhiParser.g:4768:3: ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) )
                    {
                    // InternalSiddhiParser.g:4768:3: ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) )
                    // InternalSiddhiParser.g:4769:4: () ( (lv_outAttr_1_0= ruleOutAttr ) )
                    {
                    // InternalSiddhiParser.g:4769:4: ()
                    // InternalSiddhiParser.g:4770:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:4776:4: ( (lv_outAttr_1_0= ruleOutAttr ) )
                    // InternalSiddhiParser.g:4777:5: (lv_outAttr_1_0= ruleOutAttr )
                    {
                    // InternalSiddhiParser.g:4777:5: (lv_outAttr_1_0= ruleOutAttr )
                    // InternalSiddhiParser.g:4778:6: lv_outAttr_1_0= ruleOutAttr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputAttributeAccess().getOutAttrOutAttrParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_outAttr_1_0=ruleOutAttr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputAttributeRule());
                      						}
                      						set(
                      							current,
                      							"outAttr",
                      							lv_outAttr_1_0,
                      							"org.xtext.example.siddhi.Siddhi.OutAttr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4797:3: ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) )
                    {
                    // InternalSiddhiParser.g:4797:3: ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) )
                    // InternalSiddhiParser.g:4798:4: () ( (lv_attr_ref_3_0= ruleAttributeReference ) )
                    {
                    // InternalSiddhiParser.g:4798:4: ()
                    // InternalSiddhiParser.g:4799:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:4805:4: ( (lv_attr_ref_3_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:4806:5: (lv_attr_ref_3_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:4806:5: (lv_attr_ref_3_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:4807:6: lv_attr_ref_3_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputAttributeAccess().getAttr_refAttributeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_attr_ref_3_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutputAttributeRule());
                      						}
                      						set(
                      							current,
                      							"attr_ref",
                      							lv_attr_ref_3_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, ruleOutputAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutputAttribute"


    // $ANTLR start "entryRuleOutAttr"
    // InternalSiddhiParser.g:4829:1: entryRuleOutAttr returns [EObject current=null] : iv_ruleOutAttr= ruleOutAttr EOF ;
    public final EObject entryRuleOutAttr() throws RecognitionException {
        EObject current = null;
        int entryRuleOutAttr_StartIndex = input.index();
        EObject iv_ruleOutAttr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return current; }
            // InternalSiddhiParser.g:4829:48: (iv_ruleOutAttr= ruleOutAttr EOF )
            // InternalSiddhiParser.g:4830:2: iv_ruleOutAttr= ruleOutAttr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutAttrRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutAttr=ruleOutAttr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutAttr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRuleOutAttr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOutAttr"


    // $ANTLR start "ruleOutAttr"
    // InternalSiddhiParser.g:4836:1: ruleOutAttr returns [EObject current=null] : ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) ) ;
    public final EObject ruleOutAttr() throws RecognitionException {
        EObject current = null;
        int ruleOutAttr_StartIndex = input.index();
        EObject lv_attr_0_0 = null;

        EObject lv_a_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return current; }
            // InternalSiddhiParser.g:4842:2: ( ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) ) )
            // InternalSiddhiParser.g:4843:2: ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) )
            {
            // InternalSiddhiParser.g:4843:2: ( ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) ) )
            // InternalSiddhiParser.g:4844:3: ( (lv_attr_0_0= ruleAttribute ) ) ( (lv_a_1_0= ruleAS ) ) ( (lv_name_2_0= ruleIdNew ) )
            {
            // InternalSiddhiParser.g:4844:3: ( (lv_attr_0_0= ruleAttribute ) )
            // InternalSiddhiParser.g:4845:4: (lv_attr_0_0= ruleAttribute )
            {
            // InternalSiddhiParser.g:4845:4: (lv_attr_0_0= ruleAttribute )
            // InternalSiddhiParser.g:4846:5: lv_attr_0_0= ruleAttribute
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutAttrAccess().getAttrAttributeParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_attr_0_0=ruleAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutAttrRule());
              					}
              					set(
              						current,
              						"attr",
              						lv_attr_0_0,
              						"org.xtext.example.siddhi.Siddhi.Attribute");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:4863:3: ( (lv_a_1_0= ruleAS ) )
            // InternalSiddhiParser.g:4864:4: (lv_a_1_0= ruleAS )
            {
            // InternalSiddhiParser.g:4864:4: (lv_a_1_0= ruleAS )
            // InternalSiddhiParser.g:4865:5: lv_a_1_0= ruleAS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutAttrAccess().getAASParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_a_1_0=ruleAS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutAttrRule());
              					}
              					set(
              						current,
              						"a",
              						lv_a_1_0,
              						"org.xtext.example.siddhi.Siddhi.AS");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:4882:3: ( (lv_name_2_0= ruleIdNew ) )
            // InternalSiddhiParser.g:4883:4: (lv_name_2_0= ruleIdNew )
            {
            // InternalSiddhiParser.g:4883:4: (lv_name_2_0= ruleIdNew )
            // InternalSiddhiParser.g:4884:5: lv_name_2_0= ruleIdNew
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutAttrAccess().getNameIdNewParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_2_0=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutAttrRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.example.siddhi.Siddhi.IdNew");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, ruleOutAttr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOutAttr"


    // $ANTLR start "entryRuleQueryInput"
    // InternalSiddhiParser.g:4905:1: entryRuleQueryInput returns [EObject current=null] : iv_ruleQueryInput= ruleQueryInput EOF ;
    public final EObject entryRuleQueryInput() throws RecognitionException {
        EObject current = null;
        int entryRuleQueryInput_StartIndex = input.index();
        EObject iv_ruleQueryInput = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return current; }
            // InternalSiddhiParser.g:4905:51: (iv_ruleQueryInput= ruleQueryInput EOF )
            // InternalSiddhiParser.g:4906:2: iv_ruleQueryInput= ruleQueryInput EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryInputRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQueryInput=ruleQueryInput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryInput; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleQueryInput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryInput"


    // $ANTLR start "ruleQueryInput"
    // InternalSiddhiParser.g:4912:1: ruleQueryInput returns [EObject current=null] : ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) ) ;
    public final EObject ruleQueryInput() throws RecognitionException {
        EObject current = null;
        int ruleQueryInput_StartIndex = input.index();
        EObject lv_js_1_0 = null;

        EObject lv_seqSrcChanin_2_0 = null;

        EObject lv_ps_3_0 = null;

        EObject lv_anonStream_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return current; }
            // InternalSiddhiParser.g:4918:2: ( ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) ) )
            // InternalSiddhiParser.g:4919:2: ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) )
            {
            // InternalSiddhiParser.g:4919:2: ( () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) ) )
            // InternalSiddhiParser.g:4920:3: () ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) )
            {
            // InternalSiddhiParser.g:4920:3: ()
            // InternalSiddhiParser.g:4921:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQueryInputAccess().getQueryInputAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:4927:3: ( ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) ) | ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) ) | ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) ) | ( (lv_anonStream_4_0= ruleAnonymousStream ) ) )
            int alt64=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA64_1 = input.LA(2);

                if ( (synpred27_InternalSiddhiParser()) ) {
                    alt64=1;
                }
                else if ( (synpred28_InternalSiddhiParser()) ) {
                    alt64=2;
                }
                else if ( (synpred29_InternalSiddhiParser()) ) {
                    alt64=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;
                }
                }
                break;
            case Every:
                {
                int LA64_2 = input.LA(2);

                if ( (synpred28_InternalSiddhiParser()) ) {
                    alt64=2;
                }
                else if ( (synpred29_InternalSiddhiParser()) ) {
                    alt64=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 2, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
                {
                int LA64_3 = input.LA(2);

                if ( (synpred28_InternalSiddhiParser()) ) {
                    alt64=2;
                }
                else if ( (synpred29_InternalSiddhiParser()) ) {
                    alt64=3;
                }
                else if ( (true) ) {
                    alt64=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 3, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA64_4 = input.LA(2);

                if ( (synpred28_InternalSiddhiParser()) ) {
                    alt64=2;
                }
                else if ( (synpred29_InternalSiddhiParser()) ) {
                    alt64=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 4, input);

                    throw nvae;
                }
                }
                break;
            case From:
                {
                alt64=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalSiddhiParser.g:4928:4: ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) )
                    {
                    // InternalSiddhiParser.g:4928:4: ( ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream ) )
                    // InternalSiddhiParser.g:4929:5: ( ( ruleJoinStream ) )=> (lv_js_1_0= ruleJoinStream )
                    {
                    // InternalSiddhiParser.g:4933:5: (lv_js_1_0= ruleJoinStream )
                    // InternalSiddhiParser.g:4934:6: lv_js_1_0= ruleJoinStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getJsJoinStreamParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_js_1_0=ruleJoinStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"js",
                      							lv_js_1_0,
                      							"org.xtext.example.siddhi.Siddhi.JoinStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:4952:4: ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) )
                    {
                    // InternalSiddhiParser.g:4952:4: ( ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream ) )
                    // InternalSiddhiParser.g:4953:5: ( ( ruleSequenceStream ) )=> (lv_seqSrcChanin_2_0= ruleSequenceStream )
                    {
                    // InternalSiddhiParser.g:4957:5: (lv_seqSrcChanin_2_0= ruleSequenceStream )
                    // InternalSiddhiParser.g:4958:6: lv_seqSrcChanin_2_0= ruleSequenceStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getSeqSrcChaninSequenceStreamParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_seqSrcChanin_2_0=ruleSequenceStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"seqSrcChanin",
                      							lv_seqSrcChanin_2_0,
                      							"org.xtext.example.siddhi.Siddhi.SequenceStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:4976:4: ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) )
                    {
                    // InternalSiddhiParser.g:4976:4: ( ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream ) )
                    // InternalSiddhiParser.g:4977:5: ( ( rulePatternStream ) )=> (lv_ps_3_0= rulePatternStream )
                    {
                    // InternalSiddhiParser.g:4981:5: (lv_ps_3_0= rulePatternStream )
                    // InternalSiddhiParser.g:4982:6: lv_ps_3_0= rulePatternStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getPsPatternStreamParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ps_3_0=rulePatternStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"ps",
                      							lv_ps_3_0,
                      							"org.xtext.example.siddhi.Siddhi.PatternStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:5000:4: ( (lv_anonStream_4_0= ruleAnonymousStream ) )
                    {
                    // InternalSiddhiParser.g:5000:4: ( (lv_anonStream_4_0= ruleAnonymousStream ) )
                    // InternalSiddhiParser.g:5001:5: (lv_anonStream_4_0= ruleAnonymousStream )
                    {
                    // InternalSiddhiParser.g:5001:5: (lv_anonStream_4_0= ruleAnonymousStream )
                    // InternalSiddhiParser.g:5002:6: lv_anonStream_4_0= ruleAnonymousStream
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryInputAccess().getAnonStreamAnonymousStreamParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_anonStream_4_0=ruleAnonymousStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryInputRule());
                      						}
                      						set(
                      							current,
                      							"anonStream",
                      							lv_anonStream_4_0,
                      							"org.xtext.example.siddhi.Siddhi.AnonymousStream");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleQueryInput_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleQueryInput"


    // $ANTLR start "entryRuleSequenceStream"
    // InternalSiddhiParser.g:5024:1: entryRuleSequenceStream returns [EObject current=null] : iv_ruleSequenceStream= ruleSequenceStream EOF ;
    public final EObject entryRuleSequenceStream() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceStream_StartIndex = input.index();
        EObject iv_ruleSequenceStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return current; }
            // InternalSiddhiParser.g:5024:55: (iv_ruleSequenceStream= ruleSequenceStream EOF )
            // InternalSiddhiParser.g:5025:2: iv_ruleSequenceStream= ruleSequenceStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceStream=ruleSequenceStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRuleSequenceStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceStream"


    // $ANTLR start "ruleSequenceStream"
    // InternalSiddhiParser.g:5031:1: ruleSequenceStream returns [EObject current=null] : ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) ) ;
    public final EObject ruleSequenceStream() throws RecognitionException {
        EObject current = null;
        int ruleSequenceStream_StartIndex = input.index();
        EObject lv_everySequenceSourceChain_0_0 = null;

        EObject lv_everyAbsentSequenceSourceChain_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return current; }
            // InternalSiddhiParser.g:5037:2: ( ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) ) )
            // InternalSiddhiParser.g:5038:2: ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) )
            {
            // InternalSiddhiParser.g:5038:2: ( ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) ) | ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) ) )
            int alt65=2;
            switch ( input.LA(1) ) {
            case Every:
                {
                int LA65_1 = input.LA(2);

                if ( (synpred30_InternalSiddhiParser()) ) {
                    alt65=1;
                }
                else if ( (synpred31_InternalSiddhiParser()) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA65_2 = input.LA(2);

                if ( (synpred30_InternalSiddhiParser()) ) {
                    alt65=1;
                }
                else if ( (synpred31_InternalSiddhiParser()) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 2, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
                {
                int LA65_3 = input.LA(2);

                if ( (synpred30_InternalSiddhiParser()) ) {
                    alt65=1;
                }
                else if ( (synpred31_InternalSiddhiParser()) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 3, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA65_4 = input.LA(2);

                if ( (synpred30_InternalSiddhiParser()) ) {
                    alt65=1;
                }
                else if ( (synpred31_InternalSiddhiParser()) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalSiddhiParser.g:5039:3: ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) )
                    {
                    // InternalSiddhiParser.g:5039:3: ( ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain ) )
                    // InternalSiddhiParser.g:5040:4: ( ( ruleEverySequenceSourceChain ) )=> (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:5044:4: (lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain )
                    // InternalSiddhiParser.g:5045:5: lv_everySequenceSourceChain_0_0= ruleEverySequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceStreamAccess().getEverySequenceSourceChainEverySequenceSourceChainParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everySequenceSourceChain_0_0=ruleEverySequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSequenceStreamRule());
                      					}
                      					set(
                      						current,
                      						"everySequenceSourceChain",
                      						lv_everySequenceSourceChain_0_0,
                      						"org.xtext.example.siddhi.Siddhi.EverySequenceSourceChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:5063:3: ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) )
                    {
                    // InternalSiddhiParser.g:5063:3: ( ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain ) )
                    // InternalSiddhiParser.g:5064:4: ( ( ruleEveryAbsentSequenceSourceChain ) )=> (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:5068:4: (lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain )
                    // InternalSiddhiParser.g:5069:5: lv_everyAbsentSequenceSourceChain_1_0= ruleEveryAbsentSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceStreamAccess().getEveryAbsentSequenceSourceChainEveryAbsentSequenceSourceChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everyAbsentSequenceSourceChain_1_0=ruleEveryAbsentSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSequenceStreamRule());
                      					}
                      					set(
                      						current,
                      						"everyAbsentSequenceSourceChain",
                      						lv_everyAbsentSequenceSourceChain_1_0,
                      						"org.xtext.example.siddhi.Siddhi.EveryAbsentSequenceSourceChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, ruleSequenceStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceStream"


    // $ANTLR start "entryRuleEverySequenceSourceChain"
    // InternalSiddhiParser.g:5090:1: entryRuleEverySequenceSourceChain returns [EObject current=null] : iv_ruleEverySequenceSourceChain= ruleEverySequenceSourceChain EOF ;
    public final EObject entryRuleEverySequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleEverySequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleEverySequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return current; }
            // InternalSiddhiParser.g:5090:65: (iv_ruleEverySequenceSourceChain= ruleEverySequenceSourceChain EOF )
            // InternalSiddhiParser.g:5091:2: iv_ruleEverySequenceSourceChain= ruleEverySequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEverySequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEverySequenceSourceChain=ruleEverySequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEverySequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuleEverySequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEverySequenceSourceChain"


    // $ANTLR start "ruleEverySequenceSourceChain"
    // InternalSiddhiParser.g:5097:1: ruleEverySequenceSourceChain returns [EObject current=null] : ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) ) ;
    public final EObject ruleEverySequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleEverySequenceSourceChain_StartIndex = input.index();
        Token otherlv_3=null;
        EObject this_EVERY_0 = null;

        EObject lv_seqSource_1_0 = null;

        EObject lv_wt_2_0 = null;

        EObject lv_ssc_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return current; }
            // InternalSiddhiParser.g:5103:2: ( ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) ) )
            // InternalSiddhiParser.g:5104:2: ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) )
            {
            // InternalSiddhiParser.g:5104:2: ( ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) ) )
            // InternalSiddhiParser.g:5105:3: ( ( ( ruleEVERY )? ( ( ruleSequenceSource ) ) ( ( ruleWithinTime ) )? Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) )
            {
            // InternalSiddhiParser.g:5127:3: ( (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) ) )
            // InternalSiddhiParser.g:5128:4: (this_EVERY_0= ruleEVERY )? ( (lv_seqSource_1_0= ruleSequenceSource ) ) ( (lv_wt_2_0= ruleWithinTime ) )? otherlv_3= Comma ( (lv_ssc_4_0= ruleSequenceSourceChain ) )
            {
            // InternalSiddhiParser.g:5128:4: (this_EVERY_0= ruleEVERY )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Every) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSiddhiParser.g:5129:5: this_EVERY_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getEVERYParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    this_EVERY_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_EVERY_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:5138:4: ( (lv_seqSource_1_0= ruleSequenceSource ) )
            // InternalSiddhiParser.g:5139:5: (lv_seqSource_1_0= ruleSequenceSource )
            {
            // InternalSiddhiParser.g:5139:5: (lv_seqSource_1_0= ruleSequenceSource )
            // InternalSiddhiParser.g:5140:6: lv_seqSource_1_0= ruleSequenceSource
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getSeqSourceSequenceSourceParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_seqSource_1_0=ruleSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEverySequenceSourceChainRule());
              						}
              						set(
              							current,
              							"seqSource",
              							lv_seqSource_1_0,
              							"org.xtext.example.siddhi.Siddhi.SequenceSource");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSiddhiParser.g:5157:4: ( (lv_wt_2_0= ruleWithinTime ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Within) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSiddhiParser.g:5158:5: (lv_wt_2_0= ruleWithinTime )
                    {
                    // InternalSiddhiParser.g:5158:5: (lv_wt_2_0= ruleWithinTime )
                    // InternalSiddhiParser.g:5159:6: lv_wt_2_0= ruleWithinTime
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getWtWithinTimeParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_wt_2_0=ruleWithinTime();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEverySequenceSourceChainRule());
                      						}
                      						set(
                      							current,
                      							"wt",
                      							lv_wt_2_0,
                      							"org.xtext.example.siddhi.Siddhi.WithinTime");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getEverySequenceSourceChainAccess().getCommaKeyword_0_3());
              			
            }
            // InternalSiddhiParser.g:5180:4: ( (lv_ssc_4_0= ruleSequenceSourceChain ) )
            // InternalSiddhiParser.g:5181:5: (lv_ssc_4_0= ruleSequenceSourceChain )
            {
            // InternalSiddhiParser.g:5181:5: (lv_ssc_4_0= ruleSequenceSourceChain )
            // InternalSiddhiParser.g:5182:6: lv_ssc_4_0= ruleSequenceSourceChain
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEverySequenceSourceChainAccess().getSscSequenceSourceChainParserRuleCall_0_4_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ssc_4_0=ruleSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEverySequenceSourceChainRule());
              						}
              						set(
              							current,
              							"ssc",
              							lv_ssc_4_0,
              							"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruleEverySequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEverySequenceSourceChain"


    // $ANTLR start "entryRuleEveryAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:5204:1: entryRuleEveryAbsentSequenceSourceChain returns [EObject current=null] : iv_ruleEveryAbsentSequenceSourceChain= ruleEveryAbsentSequenceSourceChain EOF ;
    public final EObject entryRuleEveryAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryAbsentSequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleEveryAbsentSequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return current; }
            // InternalSiddhiParser.g:5204:71: (iv_ruleEveryAbsentSequenceSourceChain= ruleEveryAbsentSequenceSourceChain EOF )
            // InternalSiddhiParser.g:5205:2: iv_ruleEveryAbsentSequenceSourceChain= ruleEveryAbsentSequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryAbsentSequenceSourceChain=ruleEveryAbsentSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryAbsentSequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuleEveryAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryAbsentSequenceSourceChain"


    // $ANTLR start "ruleEveryAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:5211:1: ruleEveryAbsentSequenceSourceChain returns [EObject current=null] : ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) ) ;
    public final EObject ruleEveryAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleEveryAbsentSequenceSourceChain_StartIndex = input.index();
        Token otherlv_2=null;
        EObject this_EVERY_0 = null;

        EObject lv_absSeqSrcChain_1_0 = null;

        EObject lv_seqSrcChain_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return current; }
            // InternalSiddhiParser.g:5217:2: ( ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) ) )
            // InternalSiddhiParser.g:5218:2: ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) )
            {
            // InternalSiddhiParser.g:5218:2: ( ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) ) )
            // InternalSiddhiParser.g:5219:3: ( ( ( ruleEVERY )? ( ( ruleAbsentSequenceSourceChain ) ) Comma ( ( ruleSequenceSourceChain ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) )
            {
            // InternalSiddhiParser.g:5236:3: ( (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) ) )
            // InternalSiddhiParser.g:5237:4: (this_EVERY_0= ruleEVERY )? ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) ) otherlv_2= Comma ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) )
            {
            // InternalSiddhiParser.g:5237:4: (this_EVERY_0= ruleEVERY )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==Every) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSiddhiParser.g:5238:5: this_EVERY_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getEVERYParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    this_EVERY_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_EVERY_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:5247:4: ( (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain ) )
            // InternalSiddhiParser.g:5248:5: (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain )
            {
            // InternalSiddhiParser.g:5248:5: (lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain )
            // InternalSiddhiParser.g:5249:6: lv_absSeqSrcChain_1_0= ruleAbsentSequenceSourceChain
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getAbsSeqSrcChainAbsentSequenceSourceChainParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_absSeqSrcChain_1_0=ruleAbsentSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEveryAbsentSequenceSourceChainRule());
              						}
              						set(
              							current,
              							"absSeqSrcChain",
              							lv_absSeqSrcChain_1_0,
              							"org.xtext.example.siddhi.Siddhi.AbsentSequenceSourceChain");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getEveryAbsentSequenceSourceChainAccess().getCommaKeyword_0_2());
              			
            }
            // InternalSiddhiParser.g:5270:4: ( (lv_seqSrcChain_3_0= ruleSequenceSourceChain ) )
            // InternalSiddhiParser.g:5271:5: (lv_seqSrcChain_3_0= ruleSequenceSourceChain )
            {
            // InternalSiddhiParser.g:5271:5: (lv_seqSrcChain_3_0= ruleSequenceSourceChain )
            // InternalSiddhiParser.g:5272:6: lv_seqSrcChain_3_0= ruleSequenceSourceChain
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getSeqSrcChainSequenceSourceChainParserRuleCall_0_3_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_seqSrcChain_3_0=ruleSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEveryAbsentSequenceSourceChainRule());
              						}
              						set(
              							current,
              							"seqSrcChain",
              							lv_seqSrcChain_3_0,
              							"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruleEveryAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryAbsentSequenceSourceChain"


    // $ANTLR start "entryRuleAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:5294:1: entryRuleAbsentSequenceSourceChain returns [EObject current=null] : iv_ruleAbsentSequenceSourceChain= ruleAbsentSequenceSourceChain EOF ;
    public final EObject entryRuleAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleAbsentSequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleAbsentSequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return current; }
            // InternalSiddhiParser.g:5294:66: (iv_ruleAbsentSequenceSourceChain= ruleAbsentSequenceSourceChain EOF )
            // InternalSiddhiParser.g:5295:2: iv_ruleAbsentSequenceSourceChain= ruleAbsentSequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbsentSequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAbsentSequenceSourceChain=ruleAbsentSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbsentSequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAbsentSequenceSourceChain"


    // $ANTLR start "ruleAbsentSequenceSourceChain"
    // InternalSiddhiParser.g:5301:1: ruleAbsentSequenceSourceChain returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) ) ;
    public final EObject ruleAbsentSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleAbsentSequenceSourceChain_StartIndex = input.index();
        EObject lv_absentSequenceSourceChain_1_0 = null;

        EObject lv_wt5_3_0 = null;

        EObject lv_basicAbsentPatternSource_4_0 = null;

        EObject lv_leftAbsentSequenceSource_5_0 = null;

        EObject lv_rightAbsentSequenceSource_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return current; }
            // InternalSiddhiParser.g:5307:2: ( ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) ) )
            // InternalSiddhiParser.g:5308:2: ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) )
            {
            // InternalSiddhiParser.g:5308:2: ( ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) ) | ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) | ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) ) | ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) ) )
            int alt70=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA70_1 = input.LA(2);

                if ( (synpred34_InternalSiddhiParser()) ) {
                    alt70=1;
                }
                else if ( (synpred36_InternalSiddhiParser()) ) {
                    alt70=3;
                }
                else if ( (synpred37_InternalSiddhiParser()) ) {
                    alt70=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA70_2 = input.LA(2);

                if ( (synpred35_InternalSiddhiParser()) ) {
                    alt70=2;
                }
                else if ( (synpred36_InternalSiddhiParser()) ) {
                    alt70=3;
                }
                else if ( (synpred37_InternalSiddhiParser()) ) {
                    alt70=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA70_3 = input.LA(2);

                if ( (synpred36_InternalSiddhiParser()) ) {
                    alt70=3;
                }
                else if ( (synpred37_InternalSiddhiParser()) ) {
                    alt70=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalSiddhiParser.g:5309:3: ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:5309:3: ( ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:5310:4: ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:5325:4: ( ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:5326:5: ruleOPEN_PAR ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( (lv_wt5_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:5333:5: ( (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain ) )
                    // InternalSiddhiParser.g:5334:6: (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:5334:6: (lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain )
                    // InternalSiddhiParser.g:5335:7: lv_absentSequenceSourceChain_1_0= ruleAbsentSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getAbsentSequenceSourceChainAbsentSequenceSourceChainParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_absentSequenceSourceChain_1_0=ruleAbsentSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      							}
                      							set(
                      								current,
                      								"absentSequenceSourceChain",
                      								lv_absentSequenceSourceChain_1_0,
                      								"org.xtext.example.siddhi.Siddhi.AbsentSequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:5359:5: ( (lv_wt5_3_0= ruleWithinTime ) )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==Within) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalSiddhiParser.g:5360:6: (lv_wt5_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:5360:6: (lv_wt5_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:5361:7: lv_wt5_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getWt5WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt5_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                              							}
                              							set(
                              								current,
                              								"wt5",
                              								lv_wt5_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:5381:3: ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:5381:3: ( ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5382:4: ( ( ruleBasicAbsentPatternSource ) )=> (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5386:4: (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5387:5: lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_4_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      					}
                      					set(
                      						current,
                      						"basicAbsentPatternSource",
                      						lv_basicAbsentPatternSource_4_0,
                      						"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:5405:3: ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:5405:3: ( ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:5406:4: ( ( ruleLeftAbsentSequenceSource ) )=> (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:5410:4: (lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource )
                    // InternalSiddhiParser.g:5411:5: lv_leftAbsentSequenceSource_5_0= ruleLeftAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_leftAbsentSequenceSource_5_0=ruleLeftAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      					}
                      					set(
                      						current,
                      						"leftAbsentSequenceSource",
                      						lv_leftAbsentSequenceSource_5_0,
                      						"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:5429:3: ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:5429:3: ( ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:5430:4: ( ( ruleRightAbsentSequenceSource ) )=> (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:5434:4: (lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource )
                    // InternalSiddhiParser.g:5435:5: lv_rightAbsentSequenceSource_6_0= ruleRightAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentSequenceSourceChainAccess().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_rightAbsentSequenceSource_6_0=ruleRightAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbsentSequenceSourceChainRule());
                      					}
                      					set(
                      						current,
                      						"rightAbsentSequenceSource",
                      						lv_rightAbsentSequenceSource_6_0,
                      						"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleAbsentSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAbsentSequenceSourceChain"


    // $ANTLR start "entryRuleLeftAbsentSequenceSource"
    // InternalSiddhiParser.g:5456:1: entryRuleLeftAbsentSequenceSource returns [EObject current=null] : iv_ruleLeftAbsentSequenceSource= ruleLeftAbsentSequenceSource EOF ;
    public final EObject entryRuleLeftAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentSequenceSource_StartIndex = input.index();
        EObject iv_ruleLeftAbsentSequenceSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return current; }
            // InternalSiddhiParser.g:5456:65: (iv_ruleLeftAbsentSequenceSource= ruleLeftAbsentSequenceSource EOF )
            // InternalSiddhiParser.g:5457:2: iv_ruleLeftAbsentSequenceSource= ruleLeftAbsentSequenceSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentSequenceSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentSequenceSource=ruleLeftAbsentSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentSequenceSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleLeftAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentSequenceSource"


    // $ANTLR start "ruleLeftAbsentSequenceSource"
    // InternalSiddhiParser.g:5463:1: ruleLeftAbsentSequenceSource returns [EObject current=null] : (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* ) ;
    public final EObject ruleLeftAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentSequenceSource_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_LeftAbsentSequenceSource1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return current; }
            // InternalSiddhiParser.g:5469:2: ( (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:5470:2: (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:5470:2: (this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )* )
            // InternalSiddhiParser.g:5471:3: this_LeftAbsentSequenceSource1_0= ruleLeftAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_34);
            this_LeftAbsentSequenceSource1_0=ruleLeftAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentSequenceSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:5479:3: ( ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==Comma) ) {
                    int LA71_1 = input.LA(2);

                    if ( (synpred38_InternalSiddhiParser()) ) {
                        alt71=1;
                    }


                }


                switch (alt71) {
            	case 1 :
            	    // InternalSiddhiParser.g:5480:4: ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:5495:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) ) )
            	    // InternalSiddhiParser.g:5496:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:5496:5: ()
            	    // InternalSiddhiParser.g:5497:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSourceLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:5503:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:5504:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:5504:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:5505:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getLeftAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:5517:5: ( (lv_right_3_0= ruleLeftAbsentSequenceSource1 ) )
            	    // InternalSiddhiParser.g:5518:6: (lv_right_3_0= ruleLeftAbsentSequenceSource1 )
            	    {
            	    // InternalSiddhiParser.g:5518:6: (lv_right_3_0= ruleLeftAbsentSequenceSource1 )
            	    // InternalSiddhiParser.g:5519:7: lv_right_3_0= ruleLeftAbsentSequenceSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSourceAccess().getRightLeftAbsentSequenceSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_right_3_0=ruleLeftAbsentSequenceSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleLeftAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentSequenceSource"


    // $ANTLR start "entryRuleLeftAbsentSequenceSource1"
    // InternalSiddhiParser.g:5542:1: entryRuleLeftAbsentSequenceSource1 returns [EObject current=null] : iv_ruleLeftAbsentSequenceSource1= ruleLeftAbsentSequenceSource1 EOF ;
    public final EObject entryRuleLeftAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentSequenceSource1_StartIndex = input.index();
        EObject iv_ruleLeftAbsentSequenceSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return current; }
            // InternalSiddhiParser.g:5542:66: (iv_ruleLeftAbsentSequenceSource1= ruleLeftAbsentSequenceSource1 EOF )
            // InternalSiddhiParser.g:5543:2: iv_ruleLeftAbsentSequenceSource1= ruleLeftAbsentSequenceSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentSequenceSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentSequenceSource1=ruleLeftAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentSequenceSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRuleLeftAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentSequenceSource1"


    // $ANTLR start "ruleLeftAbsentSequenceSource1"
    // InternalSiddhiParser.g:5549:1: ruleLeftAbsentSequenceSource1 returns [EObject current=null] : (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* ) ;
    public final EObject ruleLeftAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentSequenceSource1_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_LeftAbsentSequenceSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return current; }
            // InternalSiddhiParser.g:5555:2: ( (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* ) )
            // InternalSiddhiParser.g:5556:2: (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* )
            {
            // InternalSiddhiParser.g:5556:2: (this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )* )
            // InternalSiddhiParser.g:5557:3: this_LeftAbsentSequenceSource2_0= ruleLeftAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_34);
            this_LeftAbsentSequenceSource2_0=ruleLeftAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentSequenceSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:5565:3: ( ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==Comma) ) {
                    int LA72_1 = input.LA(2);

                    if ( (synpred39_InternalSiddhiParser()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalSiddhiParser.g:5566:4: ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) )
            	    {
            	    // InternalSiddhiParser.g:5581:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) ) )
            	    // InternalSiddhiParser.g:5582:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleBasicAbsentPatternSource ) )
            	    {
            	    // InternalSiddhiParser.g:5582:5: ()
            	    // InternalSiddhiParser.g:5583:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:5589:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:5590:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:5590:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:5591:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_76); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getLeftAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:5603:5: ( (lv_right_3_0= ruleBasicAbsentPatternSource ) )
            	    // InternalSiddhiParser.g:5604:6: (lv_right_3_0= ruleBasicAbsentPatternSource )
            	    {
            	    // InternalSiddhiParser.g:5604:6: (lv_right_3_0= ruleBasicAbsentPatternSource )
            	    // InternalSiddhiParser.g:5605:7: lv_right_3_0= ruleBasicAbsentPatternSource
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource1Access().getRightBasicAbsentPatternSourceParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_right_3_0=ruleBasicAbsentPatternSource();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, ruleLeftAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentSequenceSource1"


    // $ANTLR start "entryRuleLeftAbsentSequenceSource2"
    // InternalSiddhiParser.g:5628:1: entryRuleLeftAbsentSequenceSource2 returns [EObject current=null] : iv_ruleLeftAbsentSequenceSource2= ruleLeftAbsentSequenceSource2 EOF ;
    public final EObject entryRuleLeftAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentSequenceSource2_StartIndex = input.index();
        EObject iv_ruleLeftAbsentSequenceSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return current; }
            // InternalSiddhiParser.g:5628:66: (iv_ruleLeftAbsentSequenceSource2= ruleLeftAbsentSequenceSource2 EOF )
            // InternalSiddhiParser.g:5629:2: iv_ruleLeftAbsentSequenceSource2= ruleLeftAbsentSequenceSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentSequenceSource2=ruleLeftAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentSequenceSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRuleLeftAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentSequenceSource2"


    // $ANTLR start "ruleLeftAbsentSequenceSource2"
    // InternalSiddhiParser.g:5635:1: ruleLeftAbsentSequenceSource2 returns [EObject current=null] : ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) ) ;
    public final EObject ruleLeftAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentSequenceSource2_StartIndex = input.index();
        Token lv_comma_5_0=null;
        Token lv_comma_8_0=null;
        AntlrDatatypeRuleToken lv_op_0_0 = null;

        EObject lv_leftAbsentSequenceSource_1_0 = null;

        AntlrDatatypeRuleToken lv_cp_2_0 = null;

        EObject lv_wt6_3_0 = null;

        EObject lv_basicAbsentPatternSource_4_0 = null;

        EObject lv_sequenceSourceChain_6_0 = null;

        EObject lv_sequenceSourceChain_7_0 = null;

        EObject lv_leftAbsentSequenceSource_9_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return current; }
            // InternalSiddhiParser.g:5641:2: ( ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) ) )
            // InternalSiddhiParser.g:5642:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:5642:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) ) )
            int alt74=3;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==LeftParenthesis) ) {
                int LA74_1 = input.LA(2);

                if ( (synpred40_InternalSiddhiParser()) ) {
                    alt74=1;
                }
                else if ( (synpred42_InternalSiddhiParser()) ) {
                    alt74=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA74_0==Not) ) {
                int LA74_2 = input.LA(2);

                if ( (synpred41_InternalSiddhiParser()) ) {
                    alt74=2;
                }
                else if ( (synpred42_InternalSiddhiParser()) ) {
                    alt74=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA74_0==RULE_ID) && (synpred42_InternalSiddhiParser())) {
                alt74=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalSiddhiParser.g:5643:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:5643:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:5644:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:5667:4: ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:5668:5: ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt6_3_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:5668:5: ( (lv_op_0_0= ruleOPEN_PAR ) )
                    // InternalSiddhiParser.g:5669:6: (lv_op_0_0= ruleOPEN_PAR )
                    {
                    // InternalSiddhiParser.g:5669:6: (lv_op_0_0= ruleOPEN_PAR )
                    // InternalSiddhiParser.g:5670:7: lv_op_0_0= ruleOPEN_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_op_0_0=ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"op",
                      								lv_op_0_0,
                      								"org.xtext.example.siddhi.Siddhi.OPEN_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5687:5: ( (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:5688:6: (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:5688:6: (lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource )
                    // InternalSiddhiParser.g:5689:7: lv_leftAbsentSequenceSource_1_0= ruleLeftAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_leftAbsentSequenceSource_1_0=ruleLeftAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsentSequenceSource",
                      								lv_leftAbsentSequenceSource_1_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5706:5: ( (lv_cp_2_0= ruleCLOSE_PAR ) )
                    // InternalSiddhiParser.g:5707:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:5707:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:5708:7: lv_cp_2_0= ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_cp_2_0=ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"cp",
                      								lv_cp_2_0,
                      								"org.xtext.example.siddhi.Siddhi.CLOSE_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5725:5: ( (lv_wt6_3_0= ruleWithinTime ) )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==Within) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalSiddhiParser.g:5726:6: (lv_wt6_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:5726:6: (lv_wt6_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:5727:7: lv_wt6_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getWt6WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt6_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                              							}
                              							set(
                              								current,
                              								"wt6",
                              								lv_wt6_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:5747:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) )
                    {
                    // InternalSiddhiParser.g:5747:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) ) )
                    // InternalSiddhiParser.g:5748:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) )
                    {
                    // InternalSiddhiParser.g:5766:4: ( ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) ) )
                    // InternalSiddhiParser.g:5767:5: ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) )
                    {
                    // InternalSiddhiParser.g:5767:5: ( (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:5768:6: (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:5768:6: (lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:5769:7: lv_basicAbsentPatternSource_4_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_basicAbsentPatternSource_4_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_4_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5786:5: ( (lv_comma_5_0= Comma ) )
                    // InternalSiddhiParser.g:5787:6: (lv_comma_5_0= Comma )
                    {
                    // InternalSiddhiParser.g:5787:6: (lv_comma_5_0= Comma )
                    // InternalSiddhiParser.g:5788:7: lv_comma_5_0= Comma
                    {
                    lv_comma_5_0=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_comma_5_0, grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							setWithLastConsumed(current, "comma", lv_comma_5_0, ",");
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5800:5: ( (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain ) )
                    // InternalSiddhiParser.g:5801:6: (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:5801:6: (lv_sequenceSourceChain_6_0= ruleSequenceSourceChain )
                    // InternalSiddhiParser.g:5802:7: lv_sequenceSourceChain_6_0= ruleSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sequenceSourceChain_6_0=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"sequenceSourceChain",
                      								lv_sequenceSourceChain_6_0,
                      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:5822:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:5822:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) ) )
                    // InternalSiddhiParser.g:5823:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )=> ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) )
                    {
                    // InternalSiddhiParser.g:5841:4: ( ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) ) )
                    // InternalSiddhiParser.g:5842:5: ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) ) ( (lv_comma_8_0= Comma ) ) ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:5842:5: ( (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain ) )
                    // InternalSiddhiParser.g:5843:6: (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:5843:6: (lv_sequenceSourceChain_7_0= ruleSequenceSourceChain )
                    // InternalSiddhiParser.g:5844:7: lv_sequenceSourceChain_7_0= ruleSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_sequenceSourceChain_7_0=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"sequenceSourceChain",
                      								lv_sequenceSourceChain_7_0,
                      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5861:5: ( (lv_comma_8_0= Comma ) )
                    // InternalSiddhiParser.g:5862:6: (lv_comma_8_0= Comma )
                    {
                    // InternalSiddhiParser.g:5862:6: (lv_comma_8_0= Comma )
                    // InternalSiddhiParser.g:5863:7: lv_comma_8_0= Comma
                    {
                    lv_comma_8_0=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_comma_8_0, grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_2_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							setWithLastConsumed(current, "comma", lv_comma_8_0, ",");
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:5875:5: ( (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:5876:6: (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:5876:6: (lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource )
                    // InternalSiddhiParser.g:5877:7: lv_leftAbsentSequenceSource_9_0= ruleLeftAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_leftAbsentSequenceSource_9_0=ruleLeftAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsentSequenceSource",
                      								lv_leftAbsentSequenceSource_9_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, ruleLeftAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentSequenceSource2"


    // $ANTLR start "entryRuleRightAbsentSequenceSource"
    // InternalSiddhiParser.g:5900:1: entryRuleRightAbsentSequenceSource returns [EObject current=null] : iv_ruleRightAbsentSequenceSource= ruleRightAbsentSequenceSource EOF ;
    public final EObject entryRuleRightAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentSequenceSource_StartIndex = input.index();
        EObject iv_ruleRightAbsentSequenceSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }
            // InternalSiddhiParser.g:5900:66: (iv_ruleRightAbsentSequenceSource= ruleRightAbsentSequenceSource EOF )
            // InternalSiddhiParser.g:5901:2: iv_ruleRightAbsentSequenceSource= ruleRightAbsentSequenceSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentSequenceSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentSequenceSource=ruleRightAbsentSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentSequenceSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleRightAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentSequenceSource"


    // $ANTLR start "ruleRightAbsentSequenceSource"
    // InternalSiddhiParser.g:5907:1: ruleRightAbsentSequenceSource returns [EObject current=null] : (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* ) ;
    public final EObject ruleRightAbsentSequenceSource() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentSequenceSource_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_RightAbsentSequenceSource1_0 = null;

        EObject lv_right1_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }
            // InternalSiddhiParser.g:5913:2: ( (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:5914:2: (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:5914:2: (this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )* )
            // InternalSiddhiParser.g:5915:3: this_RightAbsentSequenceSource1_0= ruleRightAbsentSequenceSource1 ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_34);
            this_RightAbsentSequenceSource1_0=ruleRightAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentSequenceSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:5923:3: ( ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==Comma) ) {
                    int LA75_1 = input.LA(2);

                    if ( (synpred43_InternalSiddhiParser()) ) {
                        alt75=1;
                    }


                }


                switch (alt75) {
            	case 1 :
            	    // InternalSiddhiParser.g:5924:4: ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:5939:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) ) )
            	    // InternalSiddhiParser.g:5940:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:5940:5: ()
            	    // InternalSiddhiParser.g:5941:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSourceLeft1Action_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:5947:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:5948:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:5948:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:5949:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getRightAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentSequenceSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:5961:5: ( (lv_right1_3_0= ruleRightAbsentSequenceSource1 ) )
            	    // InternalSiddhiParser.g:5962:6: (lv_right1_3_0= ruleRightAbsentSequenceSource1 )
            	    {
            	    // InternalSiddhiParser.g:5962:6: (lv_right1_3_0= ruleRightAbsentSequenceSource1 )
            	    // InternalSiddhiParser.g:5963:7: lv_right1_3_0= ruleRightAbsentSequenceSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentSequenceSourceAccess().getRight1RightAbsentSequenceSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_right1_3_0=ruleRightAbsentSequenceSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right1",
            	      								lv_right1_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, ruleRightAbsentSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentSequenceSource"


    // $ANTLR start "entryRuleRightAbsentSequenceSource1"
    // InternalSiddhiParser.g:5986:1: entryRuleRightAbsentSequenceSource1 returns [EObject current=null] : iv_ruleRightAbsentSequenceSource1= ruleRightAbsentSequenceSource1 EOF ;
    public final EObject entryRuleRightAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentSequenceSource1_StartIndex = input.index();
        EObject iv_ruleRightAbsentSequenceSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return current; }
            // InternalSiddhiParser.g:5986:67: (iv_ruleRightAbsentSequenceSource1= ruleRightAbsentSequenceSource1 EOF )
            // InternalSiddhiParser.g:5987:2: iv_ruleRightAbsentSequenceSource1= ruleRightAbsentSequenceSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentSequenceSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentSequenceSource1=ruleRightAbsentSequenceSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentSequenceSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleRightAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentSequenceSource1"


    // $ANTLR start "ruleRightAbsentSequenceSource1"
    // InternalSiddhiParser.g:5993:1: ruleRightAbsentSequenceSource1 returns [EObject current=null] : (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* ) ;
    public final EObject ruleRightAbsentSequenceSource1() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentSequenceSource1_StartIndex = input.index();
        Token lv_comm_2_0=null;
        EObject this_RightAbsentSequenceSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return current; }
            // InternalSiddhiParser.g:5999:2: ( (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* ) )
            // InternalSiddhiParser.g:6000:2: (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* )
            {
            // InternalSiddhiParser.g:6000:2: (this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )* )
            // InternalSiddhiParser.g:6001:3: this_RightAbsentSequenceSource2_0= ruleRightAbsentSequenceSource2 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_34);
            this_RightAbsentSequenceSource2_0=ruleRightAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentSequenceSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6009:3: ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==Comma) ) {
                    int LA76_1 = input.LA(2);

                    if ( (synpred44_InternalSiddhiParser()) ) {
                        alt76=1;
                    }


                }


                switch (alt76) {
            	case 1 :
            	    // InternalSiddhiParser.g:6010:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )=> ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) )
            	    {
            	    // InternalSiddhiParser.g:6025:4: ( () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) ) )
            	    // InternalSiddhiParser.g:6026:5: () ( (lv_comm_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain ) )
            	    {
            	    // InternalSiddhiParser.g:6026:5: ()
            	    // InternalSiddhiParser.g:6027:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:6033:5: ( (lv_comm_2_0= Comma ) )
            	    // InternalSiddhiParser.g:6034:6: (lv_comm_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:6034:6: (lv_comm_2_0= Comma )
            	    // InternalSiddhiParser.g:6035:7: lv_comm_2_0= Comma
            	    {
            	    lv_comm_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_comm_2_0, grammarAccess.getRightAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentSequenceSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "comm", lv_comm_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:6047:5: ( (lv_right_3_0= ruleSequenceSourceChain ) )
            	    // InternalSiddhiParser.g:6048:6: (lv_right_3_0= ruleSequenceSourceChain )
            	    {
            	    // InternalSiddhiParser.g:6048:6: (lv_right_3_0= ruleSequenceSourceChain )
            	    // InternalSiddhiParser.g:6049:7: lv_right_3_0= ruleSequenceSourceChain
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource1Access().getRightSequenceSourceChainParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_right_3_0=ruleSequenceSourceChain();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleRightAbsentSequenceSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentSequenceSource1"


    // $ANTLR start "entryRuleRightAbsentSequenceSource2"
    // InternalSiddhiParser.g:6072:1: entryRuleRightAbsentSequenceSource2 returns [EObject current=null] : iv_ruleRightAbsentSequenceSource2= ruleRightAbsentSequenceSource2 EOF ;
    public final EObject entryRuleRightAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentSequenceSource2_StartIndex = input.index();
        EObject iv_ruleRightAbsentSequenceSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return current; }
            // InternalSiddhiParser.g:6072:67: (iv_ruleRightAbsentSequenceSource2= ruleRightAbsentSequenceSource2 EOF )
            // InternalSiddhiParser.g:6073:2: iv_ruleRightAbsentSequenceSource2= ruleRightAbsentSequenceSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentSequenceSource2=ruleRightAbsentSequenceSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentSequenceSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRuleRightAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentSequenceSource2"


    // $ANTLR start "ruleRightAbsentSequenceSource2"
    // InternalSiddhiParser.g:6079:1: ruleRightAbsentSequenceSource2 returns [EObject current=null] : ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) ) ;
    public final EObject ruleRightAbsentSequenceSource2() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentSequenceSource2_StartIndex = input.index();
        Token lv_comma_5_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_op_0_0 = null;

        EObject lv_rightAbsentSequenceSource_1_0 = null;

        AntlrDatatypeRuleToken lv_cp_2_0 = null;

        EObject lv_wt7_3_0 = null;

        EObject lv_sequenceSourceChain_4_0 = null;

        EObject lv_basicAbsentPatternSource_6_0 = null;

        EObject lv_basicAbsentPatternSource_7_0 = null;

        EObject lv_rightAbsentSequenceSource_9_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return current; }
            // InternalSiddhiParser.g:6085:2: ( ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) ) )
            // InternalSiddhiParser.g:6086:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:6086:2: ( ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) ) )
            int alt78=3;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==LeftParenthesis) ) {
                int LA78_1 = input.LA(2);

                if ( (synpred45_InternalSiddhiParser()) ) {
                    alt78=1;
                }
                else if ( (synpred46_InternalSiddhiParser()) ) {
                    alt78=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA78_0==RULE_ID) && (synpred46_InternalSiddhiParser())) {
                alt78=2;
            }
            else if ( (LA78_0==Not) ) {
                int LA78_3 = input.LA(2);

                if ( (synpred46_InternalSiddhiParser()) ) {
                    alt78=2;
                }
                else if ( (synpred47_InternalSiddhiParser()) ) {
                    alt78=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 3, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalSiddhiParser.g:6087:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:6087:3: ( ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:6088:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )=> ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:6111:4: ( ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:6112:5: ( (lv_op_0_0= ruleOPEN_PAR ) ) ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) ) ( (lv_cp_2_0= ruleCLOSE_PAR ) ) ( (lv_wt7_3_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:6112:5: ( (lv_op_0_0= ruleOPEN_PAR ) )
                    // InternalSiddhiParser.g:6113:6: (lv_op_0_0= ruleOPEN_PAR )
                    {
                    // InternalSiddhiParser.g:6113:6: (lv_op_0_0= ruleOPEN_PAR )
                    // InternalSiddhiParser.g:6114:7: lv_op_0_0= ruleOPEN_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_op_0_0=ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"op",
                      								lv_op_0_0,
                      								"org.xtext.example.siddhi.Siddhi.OPEN_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:6131:5: ( (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:6132:6: (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:6132:6: (lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource )
                    // InternalSiddhiParser.g:6133:7: lv_rightAbsentSequenceSource_1_0= ruleRightAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_rightAbsentSequenceSource_1_0=ruleRightAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsentSequenceSource",
                      								lv_rightAbsentSequenceSource_1_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:6150:5: ( (lv_cp_2_0= ruleCLOSE_PAR ) )
                    // InternalSiddhiParser.g:6151:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:6151:6: (lv_cp_2_0= ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:6152:7: lv_cp_2_0= ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_cp_2_0=ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"cp",
                      								lv_cp_2_0,
                      								"org.xtext.example.siddhi.Siddhi.CLOSE_PAR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:6169:5: ( (lv_wt7_3_0= ruleWithinTime ) )?
                    int alt77=2;
                    int LA77_0 = input.LA(1);

                    if ( (LA77_0==Within) ) {
                        alt77=1;
                    }
                    switch (alt77) {
                        case 1 :
                            // InternalSiddhiParser.g:6170:6: (lv_wt7_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:6170:6: (lv_wt7_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:6171:7: lv_wt7_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getWt7WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt7_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                              							}
                              							set(
                              								current,
                              								"wt7",
                              								lv_wt7_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6191:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:6191:3: ( ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:6192:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:6210:4: ( ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:6211:5: ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) ) ( (lv_comma_5_0= Comma ) ) ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:6211:5: ( (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain ) )
                    // InternalSiddhiParser.g:6212:6: (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain )
                    {
                    // InternalSiddhiParser.g:6212:6: (lv_sequenceSourceChain_4_0= ruleSequenceSourceChain )
                    // InternalSiddhiParser.g:6213:7: lv_sequenceSourceChain_4_0= ruleSequenceSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_sequenceSourceChain_4_0=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"sequenceSourceChain",
                      								lv_sequenceSourceChain_4_0,
                      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:6230:5: ( (lv_comma_5_0= Comma ) )
                    // InternalSiddhiParser.g:6231:6: (lv_comma_5_0= Comma )
                    {
                    // InternalSiddhiParser.g:6231:6: (lv_comma_5_0= Comma )
                    // InternalSiddhiParser.g:6232:7: lv_comma_5_0= Comma
                    {
                    lv_comma_5_0=(Token)match(input,Comma,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_comma_5_0, grammarAccess.getRightAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							setWithLastConsumed(current, "comma", lv_comma_5_0, ",");
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:6244:5: ( (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:6245:6: (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6245:6: (lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:6246:7: lv_basicAbsentPatternSource_6_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_6_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_6_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:6266:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:6266:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) ) )
                    // InternalSiddhiParser.g:6267:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) )
                    {
                    // InternalSiddhiParser.g:6281:4: ( ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) ) )
                    // InternalSiddhiParser.g:6282:5: ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) ) otherlv_8= Comma ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) )
                    {
                    // InternalSiddhiParser.g:6282:5: ( (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:6283:6: (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:6283:6: (lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:6284:7: lv_basicAbsentPatternSource_7_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_basicAbsentPatternSource_7_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_7_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getRightAbsentSequenceSource2Access().getCommaKeyword_2_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:6305:5: ( (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource ) )
                    // InternalSiddhiParser.g:6306:6: (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource )
                    {
                    // InternalSiddhiParser.g:6306:6: (lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource )
                    // InternalSiddhiParser.g:6307:7: lv_rightAbsentSequenceSource_9_0= ruleRightAbsentSequenceSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_rightAbsentSequenceSource_9_0=ruleRightAbsentSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentSequenceSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsentSequenceSource",
                      								lv_rightAbsentSequenceSource_9_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentSequenceSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, ruleRightAbsentSequenceSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentSequenceSource2"


    // $ANTLR start "entryRuleSequenceSourceChain"
    // InternalSiddhiParser.g:6330:1: entryRuleSequenceSourceChain returns [EObject current=null] : iv_ruleSequenceSourceChain= ruleSequenceSourceChain EOF ;
    public final EObject entryRuleSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceSourceChain_StartIndex = input.index();
        EObject iv_ruleSequenceSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return current; }
            // InternalSiddhiParser.g:6330:60: (iv_ruleSequenceSourceChain= ruleSequenceSourceChain EOF )
            // InternalSiddhiParser.g:6331:2: iv_ruleSequenceSourceChain= ruleSequenceSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceSourceChain=ruleSequenceSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, entryRuleSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceSourceChain"


    // $ANTLR start "ruleSequenceSourceChain"
    // InternalSiddhiParser.g:6337:1: ruleSequenceSourceChain returns [EObject current=null] : (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* ) ;
    public final EObject ruleSequenceSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleSequenceSourceChain_StartIndex = input.index();
        Token lv_op_2_0=null;
        EObject this_SequenceSourceChain1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return current; }
            // InternalSiddhiParser.g:6343:2: ( (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* ) )
            // InternalSiddhiParser.g:6344:2: (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:6344:2: (this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )* )
            // InternalSiddhiParser.g:6345:3: this_SequenceSourceChain1_0= ruleSequenceSourceChain1 ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChain1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_34);
            this_SequenceSourceChain1_0=ruleSequenceSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SequenceSourceChain1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6353:3: ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )*
            loop79:
            do {
                int alt79=2;
                alt79 = dfa79.predict(input);
                switch (alt79) {
            	case 1 :
            	    // InternalSiddhiParser.g:6354:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:6369:4: ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) )
            	    // InternalSiddhiParser.g:6370:5: () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) )
            	    {
            	    // InternalSiddhiParser.g:6370:5: ()
            	    // InternalSiddhiParser.g:6371:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChainLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:6377:5: ( (lv_op_2_0= Comma ) )
            	    // InternalSiddhiParser.g:6378:6: (lv_op_2_0= Comma )
            	    {
            	    // InternalSiddhiParser.g:6378:6: (lv_op_2_0= Comma )
            	    // InternalSiddhiParser.g:6379:7: lv_op_2_0= Comma
            	    {
            	    lv_op_2_0=(Token)match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_op_2_0, grammarAccess.getSequenceSourceChainAccess().getOpCommaKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getSequenceSourceChainRule());
            	      							}
            	      							setWithLastConsumed(current, "op", lv_op_2_0, ",");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:6391:5: ( (lv_right_3_0= ruleSequenceSourceChain1 ) )
            	    // InternalSiddhiParser.g:6392:6: (lv_right_3_0= ruleSequenceSourceChain1 )
            	    {
            	    // InternalSiddhiParser.g:6392:6: (lv_right_3_0= ruleSequenceSourceChain1 )
            	    // InternalSiddhiParser.g:6393:7: lv_right_3_0= ruleSequenceSourceChain1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSequenceSourceChainAccess().getRightSequenceSourceChain1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_right_3_0=ruleSequenceSourceChain1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSequenceSourceChainRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.SequenceSourceChain1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, ruleSequenceSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceSourceChain"


    // $ANTLR start "entryRuleSequenceSourceChain1"
    // InternalSiddhiParser.g:6416:1: entryRuleSequenceSourceChain1 returns [EObject current=null] : iv_ruleSequenceSourceChain1= ruleSequenceSourceChain1 EOF ;
    public final EObject entryRuleSequenceSourceChain1() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceSourceChain1_StartIndex = input.index();
        EObject iv_ruleSequenceSourceChain1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return current; }
            // InternalSiddhiParser.g:6416:61: (iv_ruleSequenceSourceChain1= ruleSequenceSourceChain1 EOF )
            // InternalSiddhiParser.g:6417:2: iv_ruleSequenceSourceChain1= ruleSequenceSourceChain1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceSourceChain1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceSourceChain1=ruleSequenceSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceSourceChain1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, entryRuleSequenceSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceSourceChain1"


    // $ANTLR start "ruleSequenceSourceChain1"
    // InternalSiddhiParser.g:6423:1: ruleSequenceSourceChain1 returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) ) ;
    public final EObject ruleSequenceSourceChain1() throws RecognitionException {
        EObject current = null;
        int ruleSequenceSourceChain1_StartIndex = input.index();
        EObject this_SequenceSourceChain_1 = null;

        EObject lv_wt1_3_0 = null;

        EObject this_SequenceSource_4 = null;

        EObject lv_wt_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return current; }
            // InternalSiddhiParser.g:6429:2: ( ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) ) )
            // InternalSiddhiParser.g:6430:2: ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            {
            // InternalSiddhiParser.g:6430:2: ( ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) ) | (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==LeftParenthesis) ) {
                int LA82_1 = input.LA(2);

                if ( (synpred49_InternalSiddhiParser()) ) {
                    alt82=1;
                }
                else if ( (true) ) {
                    alt82=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA82_0==Not||LA82_0==RULE_ID) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalSiddhiParser.g:6431:3: ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:6431:3: ( ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:6432:4: ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:6443:4: ( ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:6444:5: ruleOPEN_PAR this_SequenceSourceChain_1= ruleSequenceSourceChain ruleCLOSE_PAR ( (lv_wt1_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceChainParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    this_SequenceSourceChain_1=ruleSequenceSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_SequenceSourceChain_1;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:6466:5: ( (lv_wt1_3_0= ruleWithinTime ) )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==Within) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // InternalSiddhiParser.g:6467:6: (lv_wt1_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:6467:6: (lv_wt1_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:6468:7: lv_wt1_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getWt1WithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt1_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSequenceSourceChain1Rule());
                              							}
                              							add(
                              								current,
                              								"wt1",
                              								lv_wt1_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6488:3: (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:6488:3: (this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:6489:4: this_SequenceSource_4= ruleSequenceSource ( (lv_wt_5_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    this_SequenceSource_4=ruleSequenceSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SequenceSource_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:6497:4: ( (lv_wt_5_0= ruleWithinTime ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==Within) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalSiddhiParser.g:6498:5: (lv_wt_5_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:6498:5: (lv_wt_5_0= ruleWithinTime )
                            // InternalSiddhiParser.g:6499:6: lv_wt_5_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSequenceSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_5_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSequenceSourceChain1Rule());
                              						}
                              						set(
                              							current,
                              							"wt",
                              							lv_wt_5_0,
                              							"org.xtext.example.siddhi.Siddhi.WithinTime");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, ruleSequenceSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceSourceChain1"


    // $ANTLR start "entryRuleSequenceSource"
    // InternalSiddhiParser.g:6521:1: entryRuleSequenceSource returns [EObject current=null] : iv_ruleSequenceSource= ruleSequenceSource EOF ;
    public final EObject entryRuleSequenceSource() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceSource_StartIndex = input.index();
        EObject iv_ruleSequenceSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return current; }
            // InternalSiddhiParser.g:6521:55: (iv_ruleSequenceSource= ruleSequenceSource EOF )
            // InternalSiddhiParser.g:6522:2: iv_ruleSequenceSource= ruleSequenceSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceSource=ruleSequenceSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, entryRuleSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceSource"


    // $ANTLR start "ruleSequenceSource"
    // InternalSiddhiParser.g:6528:1: ruleSequenceSource returns [EObject current=null] : ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) ) ;
    public final EObject ruleSequenceSource() throws RecognitionException {
        EObject current = null;
        int ruleSequenceSource_StartIndex = input.index();
        EObject this_LogicalStatefulSource_0 = null;

        EObject this_SequenceCollectionStatefulSource_1 = null;

        EObject this_StandardStatefulSource_2 = null;

        EObject this_LogicalAbsentStatefulSource_3 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return current; }
            // InternalSiddhiParser.g:6534:2: ( ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) ) )
            // InternalSiddhiParser.g:6535:2: ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) )
            {
            // InternalSiddhiParser.g:6535:2: ( ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource ) | ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource ) | ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource ) | ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource ) )
            int alt83=4;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_ID) ) {
                int LA83_1 = input.LA(2);

                if ( (synpred50_InternalSiddhiParser()) ) {
                    alt83=1;
                }
                else if ( (synpred51_InternalSiddhiParser()) ) {
                    alt83=2;
                }
                else if ( (synpred52_InternalSiddhiParser()) ) {
                    alt83=3;
                }
                else if ( (synpred53_InternalSiddhiParser()) ) {
                    alt83=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 83, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA83_0==LeftParenthesis) && (synpred53_InternalSiddhiParser())) {
                alt83=4;
            }
            else if ( (LA83_0==Not) && (synpred53_InternalSiddhiParser())) {
                alt83=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // InternalSiddhiParser.g:6536:3: ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource )
                    {
                    // InternalSiddhiParser.g:6536:3: ( ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource )
                    // InternalSiddhiParser.g:6537:4: ( ruleLogicalStatefulSource )=>this_LogicalStatefulSource_0= ruleLogicalStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getLogicalStatefulSourceParserRuleCall_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LogicalStatefulSource_0=ruleLogicalStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LogicalStatefulSource_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6548:3: ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource )
                    {
                    // InternalSiddhiParser.g:6548:3: ( ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource )
                    // InternalSiddhiParser.g:6549:4: ( ruleSequenceCollectionStatefulSource )=>this_SequenceCollectionStatefulSource_1= ruleSequenceCollectionStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getSequenceCollectionStatefulSourceParserRuleCall_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SequenceCollectionStatefulSource_1=ruleSequenceCollectionStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SequenceCollectionStatefulSource_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:6560:3: ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:6560:3: ( ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:6561:4: ( ruleStandardStatefulSource )=>this_StandardStatefulSource_2= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getStandardStatefulSourceParserRuleCall_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StandardStatefulSource_2=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StandardStatefulSource_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:6572:3: ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource )
                    {
                    // InternalSiddhiParser.g:6572:3: ( ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource )
                    // InternalSiddhiParser.g:6573:4: ( ruleLogicalAbsentStatefulSource )=>this_LogicalAbsentStatefulSource_3= ruleLogicalAbsentStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSequenceSourceAccess().getLogicalAbsentStatefulSourceParserRuleCall_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LogicalAbsentStatefulSource_3=ruleLogicalAbsentStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LogicalAbsentStatefulSource_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, ruleSequenceSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceSource"


    // $ANTLR start "entryRuleSequenceCollectionStatefulSource"
    // InternalSiddhiParser.g:6587:1: entryRuleSequenceCollectionStatefulSource returns [EObject current=null] : iv_ruleSequenceCollectionStatefulSource= ruleSequenceCollectionStatefulSource EOF ;
    public final EObject entryRuleSequenceCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceCollectionStatefulSource_StartIndex = input.index();
        EObject iv_ruleSequenceCollectionStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return current; }
            // InternalSiddhiParser.g:6587:73: (iv_ruleSequenceCollectionStatefulSource= ruleSequenceCollectionStatefulSource EOF )
            // InternalSiddhiParser.g:6588:2: iv_ruleSequenceCollectionStatefulSource= ruleSequenceCollectionStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceCollectionStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSequenceCollectionStatefulSource=ruleSequenceCollectionStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceCollectionStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, entryRuleSequenceCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceCollectionStatefulSource"


    // $ANTLR start "ruleSequenceCollectionStatefulSource"
    // InternalSiddhiParser.g:6594:1: ruleSequenceCollectionStatefulSource returns [EObject current=null] : (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) ) ;
    public final EObject ruleSequenceCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleSequenceCollectionStatefulSource_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_zero_or_more_4_0=null;
        Token lv_zero_or_one_5_0=null;
        Token lv_one_or_more_6_0=null;
        EObject this_StandardStatefulSource_0 = null;

        EObject lv_coll_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return current; }
            // InternalSiddhiParser.g:6600:2: ( (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) ) )
            // InternalSiddhiParser.g:6601:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) )
            {
            // InternalSiddhiParser.g:6601:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) ) )
            // InternalSiddhiParser.g:6602:3: this_StandardStatefulSource_0= ruleStandardStatefulSource ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_77);
            this_StandardStatefulSource_0=ruleStandardStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StandardStatefulSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6610:3: ( (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) | ( (lv_zero_or_more_4_0= Asterisk ) ) | ( (lv_zero_or_one_5_0= QuestionMark ) ) | ( (lv_one_or_more_6_0= PlusSign ) ) )
            int alt84=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt84=1;
                }
                break;
            case Asterisk:
                {
                alt84=2;
                }
                break;
            case QuestionMark:
                {
                alt84=3;
                }
                break;
            case PlusSign:
                {
                alt84=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalSiddhiParser.g:6611:4: (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
                    {
                    // InternalSiddhiParser.g:6611:4: (otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
                    // InternalSiddhiParser.g:6612:5: otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSequenceCollectionStatefulSourceAccess().getLessThanSignKeyword_1_0_0());
                      				
                    }
                    // InternalSiddhiParser.g:6616:5: ( (lv_coll_2_0= ruleCollect ) )
                    // InternalSiddhiParser.g:6617:6: (lv_coll_2_0= ruleCollect )
                    {
                    // InternalSiddhiParser.g:6617:6: (lv_coll_2_0= ruleCollect )
                    // InternalSiddhiParser.g:6618:7: lv_coll_2_0= ruleCollect
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSequenceCollectionStatefulSourceAccess().getCollCollectParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_79);
                    lv_coll_2_0=ruleCollect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"coll",
                      								lv_coll_2_0,
                      								"org.xtext.example.siddhi.Siddhi.Collect");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSequenceCollectionStatefulSourceAccess().getGreaterThanSignKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6641:4: ( (lv_zero_or_more_4_0= Asterisk ) )
                    {
                    // InternalSiddhiParser.g:6641:4: ( (lv_zero_or_more_4_0= Asterisk ) )
                    // InternalSiddhiParser.g:6642:5: (lv_zero_or_more_4_0= Asterisk )
                    {
                    // InternalSiddhiParser.g:6642:5: (lv_zero_or_more_4_0= Asterisk )
                    // InternalSiddhiParser.g:6643:6: lv_zero_or_more_4_0= Asterisk
                    {
                    lv_zero_or_more_4_0=(Token)match(input,Asterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_zero_or_more_4_0, grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAsteriskKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      						}
                      						setWithLastConsumed(current, "zero_or_more", lv_zero_or_more_4_0, "*");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:6656:4: ( (lv_zero_or_one_5_0= QuestionMark ) )
                    {
                    // InternalSiddhiParser.g:6656:4: ( (lv_zero_or_one_5_0= QuestionMark ) )
                    // InternalSiddhiParser.g:6657:5: (lv_zero_or_one_5_0= QuestionMark )
                    {
                    // InternalSiddhiParser.g:6657:5: (lv_zero_or_one_5_0= QuestionMark )
                    // InternalSiddhiParser.g:6658:6: lv_zero_or_one_5_0= QuestionMark
                    {
                    lv_zero_or_one_5_0=(Token)match(input,QuestionMark,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_zero_or_one_5_0, grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneQuestionMarkKeyword_1_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      						}
                      						setWithLastConsumed(current, "zero_or_one", lv_zero_or_one_5_0, "?");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:6671:4: ( (lv_one_or_more_6_0= PlusSign ) )
                    {
                    // InternalSiddhiParser.g:6671:4: ( (lv_one_or_more_6_0= PlusSign ) )
                    // InternalSiddhiParser.g:6672:5: (lv_one_or_more_6_0= PlusSign )
                    {
                    // InternalSiddhiParser.g:6672:5: (lv_one_or_more_6_0= PlusSign )
                    // InternalSiddhiParser.g:6673:6: lv_one_or_more_6_0= PlusSign
                    {
                    lv_one_or_more_6_0=(Token)match(input,PlusSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_one_or_more_6_0, grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_morePlusSignKeyword_1_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSequenceCollectionStatefulSourceRule());
                      						}
                      						setWithLastConsumed(current, "one_or_more", lv_one_or_more_6_0, "+");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, ruleSequenceCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceCollectionStatefulSource"


    // $ANTLR start "entryRuleAnonymousStream"
    // InternalSiddhiParser.g:6690:1: entryRuleAnonymousStream returns [EObject current=null] : iv_ruleAnonymousStream= ruleAnonymousStream EOF ;
    public final EObject entryRuleAnonymousStream() throws RecognitionException {
        EObject current = null;
        int entryRuleAnonymousStream_StartIndex = input.index();
        EObject iv_ruleAnonymousStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return current; }
            // InternalSiddhiParser.g:6690:56: (iv_ruleAnonymousStream= ruleAnonymousStream EOF )
            // InternalSiddhiParser.g:6691:2: iv_ruleAnonymousStream= ruleAnonymousStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnonymousStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnonymousStream=ruleAnonymousStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnonymousStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, entryRuleAnonymousStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAnonymousStream"


    // $ANTLR start "ruleAnonymousStream"
    // InternalSiddhiParser.g:6697:1: ruleAnonymousStream returns [EObject current=null] : ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) ) ;
    public final EObject ruleAnonymousStream() throws RecognitionException {
        EObject current = null;
        int ruleAnonymousStream_StartIndex = input.index();
        EObject this_AnonymousStream_1 = null;

        EObject this_FROM_3 = null;

        EObject lv_qi_4_0 = null;

        EObject lv_qs_5_0 = null;

        EObject lv_out_rate_6_0 = null;

        EObject this_RETURN_7 = null;

        EObject lv_op_event_type_8_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return current; }
            // InternalSiddhiParser.g:6703:2: ( ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) ) )
            // InternalSiddhiParser.g:6704:2: ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) )
            {
            // InternalSiddhiParser.g:6704:2: ( ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR ) | (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? ) )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==LeftParenthesis) ) {
                alt88=1;
            }
            else if ( (LA88_0==From) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalSiddhiParser.g:6705:3: ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:6705:3: ( ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:6706:4: ruleOPEN_PAR this_AnonymousStream_1= ruleAnonymousStream ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getOPEN_PARParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getAnonymousStreamParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    this_AnonymousStream_1=ruleAnonymousStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_AnonymousStream_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getCLOSE_PARParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6730:3: (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? )
                    {
                    // InternalSiddhiParser.g:6730:3: (this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )? )
                    // InternalSiddhiParser.g:6731:4: this_FROM_3= ruleFROM[$current] ( (lv_qi_4_0= ruleQueryInput ) ) ( (lv_qs_5_0= ruleQuerySection ) )? ( (lv_out_rate_6_0= ruleOutputRate ) )? this_RETURN_7= ruleRETURN[$current] ( (lv_op_event_type_8_0= ruleOutputEventType ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAnonymousStreamRule());
                      				}
                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getFROMParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    this_FROM_3=ruleFROM(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FROM_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:6742:4: ( (lv_qi_4_0= ruleQueryInput ) )
                    // InternalSiddhiParser.g:6743:5: (lv_qi_4_0= ruleQueryInput )
                    {
                    // InternalSiddhiParser.g:6743:5: (lv_qi_4_0= ruleQueryInput )
                    // InternalSiddhiParser.g:6744:6: lv_qi_4_0= ruleQueryInput
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getQiQueryInputParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    lv_qi_4_0=ruleQueryInput();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                      						}
                      						set(
                      							current,
                      							"qi",
                      							lv_qi_4_0,
                      							"org.xtext.example.siddhi.Siddhi.QueryInput");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:6761:4: ( (lv_qs_5_0= ruleQuerySection ) )?
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( (LA85_0==Select) ) {
                        alt85=1;
                    }
                    switch (alt85) {
                        case 1 :
                            // InternalSiddhiParser.g:6762:5: (lv_qs_5_0= ruleQuerySection )
                            {
                            // InternalSiddhiParser.g:6762:5: (lv_qs_5_0= ruleQuerySection )
                            // InternalSiddhiParser.g:6763:6: lv_qs_5_0= ruleQuerySection
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getQsQuerySectionParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_81);
                            lv_qs_5_0=ruleQuerySection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                              						}
                              						set(
                              							current,
                              							"qs",
                              							lv_qs_5_0,
                              							"org.xtext.example.siddhi.Siddhi.QuerySection");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:6780:4: ( (lv_out_rate_6_0= ruleOutputRate ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==Output) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalSiddhiParser.g:6781:5: (lv_out_rate_6_0= ruleOutputRate )
                            {
                            // InternalSiddhiParser.g:6781:5: (lv_out_rate_6_0= ruleOutputRate )
                            // InternalSiddhiParser.g:6782:6: lv_out_rate_6_0= ruleOutputRate
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getOut_rateOutputRateParserRuleCall_1_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_25);
                            lv_out_rate_6_0=ruleOutputRate();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                              						}
                              						set(
                              							current,
                              							"out_rate",
                              							lv_out_rate_6_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputRate");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAnonymousStreamRule());
                      				}
                      				newCompositeNode(grammarAccess.getAnonymousStreamAccess().getRETURNParserRuleCall_1_4());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_61);
                    this_RETURN_7=ruleRETURN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RETURN_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:6810:4: ( (lv_op_event_type_8_0= ruleOutputEventType ) )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( ((LA87_0>=Current && LA87_0<=Expired)||LA87_0==Events||LA87_0==All) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // InternalSiddhiParser.g:6811:5: (lv_op_event_type_8_0= ruleOutputEventType )
                            {
                            // InternalSiddhiParser.g:6811:5: (lv_op_event_type_8_0= ruleOutputEventType )
                            // InternalSiddhiParser.g:6812:6: lv_op_event_type_8_0= ruleOutputEventType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnonymousStreamAccess().getOp_event_typeOutputEventTypeParserRuleCall_1_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_op_event_type_8_0=ruleOutputEventType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnonymousStreamRule());
                              						}
                              						set(
                              							current,
                              							"op_event_type",
                              							lv_op_event_type_8_0,
                              							"org.xtext.example.siddhi.Siddhi.OutputEventType");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, ruleAnonymousStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAnonymousStream"


    // $ANTLR start "entryRulePatternStream"
    // InternalSiddhiParser.g:6834:1: entryRulePatternStream returns [EObject current=null] : iv_rulePatternStream= rulePatternStream EOF ;
    public final EObject entryRulePatternStream() throws RecognitionException {
        EObject current = null;
        int entryRulePatternStream_StartIndex = input.index();
        EObject iv_rulePatternStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return current; }
            // InternalSiddhiParser.g:6834:54: (iv_rulePatternStream= rulePatternStream EOF )
            // InternalSiddhiParser.g:6835:2: iv_rulePatternStream= rulePatternStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternStream=rulePatternStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, entryRulePatternStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternStream"


    // $ANTLR start "rulePatternStream"
    // InternalSiddhiParser.g:6841:1: rulePatternStream returns [EObject current=null] : ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) ) ;
    public final EObject rulePatternStream() throws RecognitionException {
        EObject current = null;
        int rulePatternStream_StartIndex = input.index();
        EObject this_EveryPatternSourceChain_0 = null;

        EObject this_AbsentPatternSourceChain_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return current; }
            // InternalSiddhiParser.g:6847:2: ( ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) ) )
            // InternalSiddhiParser.g:6848:2: ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) )
            {
            // InternalSiddhiParser.g:6848:2: ( ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain ) | ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain ) )
            int alt89=2;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA89_1 = input.LA(2);

                if ( (synpred54_InternalSiddhiParser()) ) {
                    alt89=1;
                }
                else if ( (synpred55_InternalSiddhiParser()) ) {
                    alt89=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA89_2 = input.LA(2);

                if ( (synpred54_InternalSiddhiParser()) ) {
                    alt89=1;
                }
                else if ( (synpred55_InternalSiddhiParser()) ) {
                    alt89=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 2, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA89_3 = input.LA(2);

                if ( (synpred54_InternalSiddhiParser()) ) {
                    alt89=1;
                }
                else if ( (synpred55_InternalSiddhiParser()) ) {
                    alt89=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 3, input);

                    throw nvae;
                }
                }
                break;
            case Every:
                {
                int LA89_4 = input.LA(2);

                if ( (synpred54_InternalSiddhiParser()) ) {
                    alt89=1;
                }
                else if ( (synpred55_InternalSiddhiParser()) ) {
                    alt89=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }

            switch (alt89) {
                case 1 :
                    // InternalSiddhiParser.g:6849:3: ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:6849:3: ( ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:6850:4: ( ruleEveryPatternSourceChain )=>this_EveryPatternSourceChain_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPatternStreamAccess().getEveryPatternSourceChainParserRuleCall_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EveryPatternSourceChain_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EveryPatternSourceChain_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:6861:3: ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:6861:3: ( ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain )
                    // InternalSiddhiParser.g:6862:4: ( ruleAbsentPatternSourceChain )=>this_AbsentPatternSourceChain_1= ruleAbsentPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPatternStreamAccess().getAbsentPatternSourceChainParserRuleCall_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AbsentPatternSourceChain_1=ruleAbsentPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_AbsentPatternSourceChain_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, rulePatternStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternStream"


    // $ANTLR start "entryRuleEveryPatternSourceChain"
    // InternalSiddhiParser.g:6876:1: entryRuleEveryPatternSourceChain returns [EObject current=null] : iv_ruleEveryPatternSourceChain= ruleEveryPatternSourceChain EOF ;
    public final EObject entryRuleEveryPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryPatternSourceChain_StartIndex = input.index();
        EObject iv_ruleEveryPatternSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return current; }
            // InternalSiddhiParser.g:6876:64: (iv_ruleEveryPatternSourceChain= ruleEveryPatternSourceChain EOF )
            // InternalSiddhiParser.g:6877:2: iv_ruleEveryPatternSourceChain= ruleEveryPatternSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryPatternSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryPatternSourceChain=ruleEveryPatternSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryPatternSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, entryRuleEveryPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryPatternSourceChain"


    // $ANTLR start "ruleEveryPatternSourceChain"
    // InternalSiddhiParser.g:6883:1: ruleEveryPatternSourceChain returns [EObject current=null] : (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* ) ;
    public final EObject ruleEveryPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleEveryPatternSourceChain_StartIndex = input.index();
        Token lv_op_2_0=null;
        EObject this_EveryPatternSourceChain1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return current; }
            // InternalSiddhiParser.g:6889:2: ( (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* ) )
            // InternalSiddhiParser.g:6890:2: (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:6890:2: (this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )* )
            // InternalSiddhiParser.g:6891:3: this_EveryPatternSourceChain1_0= ruleEveryPatternSourceChain1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChain1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_82);
            this_EveryPatternSourceChain1_0=ruleEveryPatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EveryPatternSourceChain1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:6899:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )*
            loop90:
            do {
                int alt90=2;
                alt90 = dfa90.predict(input);
                switch (alt90) {
            	case 1 :
            	    // InternalSiddhiParser.g:6900:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:6915:4: ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) )
            	    // InternalSiddhiParser.g:6916:5: () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) )
            	    {
            	    // InternalSiddhiParser.g:6916:5: ()
            	    // InternalSiddhiParser.g:6917:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChainLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:6923:5: ( (lv_op_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:6924:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:6924:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:6925:7: lv_op_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_op_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_op_2_0, grammarAccess.getEveryPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getEveryPatternSourceChainRule());
            	      							}
            	      							setWithLastConsumed(current, "op", lv_op_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:6937:5: ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) )
            	    // InternalSiddhiParser.g:6938:6: (lv_right_3_0= ruleEveryPatternSourceChain1 )
            	    {
            	    // InternalSiddhiParser.g:6938:6: (lv_right_3_0= ruleEveryPatternSourceChain1 )
            	    // InternalSiddhiParser.g:6939:7: lv_right_3_0= ruleEveryPatternSourceChain1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getEveryPatternSourceChainAccess().getRightEveryPatternSourceChain1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_right_3_0=ruleEveryPatternSourceChain1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getEveryPatternSourceChainRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, ruleEveryPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryPatternSourceChain"


    // $ANTLR start "entryRuleEveryPatternSourceChain1"
    // InternalSiddhiParser.g:6962:1: entryRuleEveryPatternSourceChain1 returns [EObject current=null] : iv_ruleEveryPatternSourceChain1= ruleEveryPatternSourceChain1 EOF ;
    public final EObject entryRuleEveryPatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryPatternSourceChain1_StartIndex = input.index();
        EObject iv_ruleEveryPatternSourceChain1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return current; }
            // InternalSiddhiParser.g:6962:65: (iv_ruleEveryPatternSourceChain1= ruleEveryPatternSourceChain1 EOF )
            // InternalSiddhiParser.g:6963:2: iv_ruleEveryPatternSourceChain1= ruleEveryPatternSourceChain1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryPatternSourceChain1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryPatternSourceChain1=ruleEveryPatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryPatternSourceChain1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, entryRuleEveryPatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryPatternSourceChain1"


    // $ANTLR start "ruleEveryPatternSourceChain1"
    // InternalSiddhiParser.g:6969:1: ruleEveryPatternSourceChain1 returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) ) ;
    public final EObject ruleEveryPatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int ruleEveryPatternSourceChain1_StartIndex = input.index();
        EObject lv_eps_1_0 = null;

        EObject lv_wt_3_0 = null;

        EObject lv_psc_4_0 = null;

        EObject lv_every_5_0 = null;

        EObject lv_psc_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return current; }
            // InternalSiddhiParser.g:6975:2: ( ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) ) )
            // InternalSiddhiParser.g:6976:2: ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) )
            {
            // InternalSiddhiParser.g:6976:2: ( ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( (lv_psc_4_0= rulePatternSourceChain ) ) | ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) ) )
            int alt92=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA92_1 = input.LA(2);

                if ( (synpred57_InternalSiddhiParser()) ) {
                    alt92=1;
                }
                else if ( (true) ) {
                    alt92=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 92, 1, input);

                    throw nvae;
                }
                }
                break;
            case Not:
            case RULE_ID:
                {
                alt92=2;
                }
                break;
            case Every:
                {
                alt92=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }

            switch (alt92) {
                case 1 :
                    // InternalSiddhiParser.g:6977:3: ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:6977:3: ( ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:6978:4: ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:6993:4: ( ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:6994:5: ruleOPEN_PAR ( (lv_eps_1_0= ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7001:5: ( (lv_eps_1_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:7002:6: (lv_eps_1_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:7002:6: (lv_eps_1_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:7003:7: lv_eps_1_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getEpsEveryPatternSourceChainParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_eps_1_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      							}
                      							set(
                      								current,
                      								"eps",
                      								lv_eps_1_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7027:5: ( (lv_wt_3_0= ruleWithinTime ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==Within) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalSiddhiParser.g:7028:6: (lv_wt_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:7028:6: (lv_wt_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:7029:7: lv_wt_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                              							}
                              							set(
                              								current,
                              								"wt",
                              								lv_wt_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7049:3: ( (lv_psc_4_0= rulePatternSourceChain ) )
                    {
                    // InternalSiddhiParser.g:7049:3: ( (lv_psc_4_0= rulePatternSourceChain ) )
                    // InternalSiddhiParser.g:7050:4: (lv_psc_4_0= rulePatternSourceChain )
                    {
                    // InternalSiddhiParser.g:7050:4: (lv_psc_4_0= rulePatternSourceChain )
                    // InternalSiddhiParser.g:7051:5: lv_psc_4_0= rulePatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_psc_4_0=rulePatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      					}
                      					set(
                      						current,
                      						"psc",
                      						lv_psc_4_0,
                      						"org.xtext.example.siddhi.Siddhi.PatternSourceChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:7069:3: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) )
                    {
                    // InternalSiddhiParser.g:7069:3: ( ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) ) )
                    // InternalSiddhiParser.g:7070:4: ( (lv_every_5_0= ruleEVERY ) ) ( (lv_psc_6_0= rulePatternSourceChain1 ) )
                    {
                    // InternalSiddhiParser.g:7070:4: ( (lv_every_5_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:7071:5: (lv_every_5_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:7071:5: (lv_every_5_0= ruleEVERY )
                    // InternalSiddhiParser.g:7072:6: lv_every_5_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getEveryEVERYParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_every_5_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      						}
                      						set(
                      							current,
                      							"every",
                      							lv_every_5_0,
                      							"org.xtext.example.siddhi.Siddhi.EVERY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7089:4: ( (lv_psc_6_0= rulePatternSourceChain1 ) )
                    // InternalSiddhiParser.g:7090:5: (lv_psc_6_0= rulePatternSourceChain1 )
                    {
                    // InternalSiddhiParser.g:7090:5: (lv_psc_6_0= rulePatternSourceChain1 )
                    // InternalSiddhiParser.g:7091:6: lv_psc_6_0= rulePatternSourceChain1
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChain1ParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_psc_6_0=rulePatternSourceChain1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEveryPatternSourceChain1Rule());
                      						}
                      						set(
                      							current,
                      							"psc",
                      							lv_psc_6_0,
                      							"org.xtext.example.siddhi.Siddhi.PatternSourceChain1");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, ruleEveryPatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryPatternSourceChain1"


    // $ANTLR start "entryRulePatternSourceChain"
    // InternalSiddhiParser.g:7113:1: entryRulePatternSourceChain returns [EObject current=null] : iv_rulePatternSourceChain= rulePatternSourceChain EOF ;
    public final EObject entryRulePatternSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRulePatternSourceChain_StartIndex = input.index();
        EObject iv_rulePatternSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return current; }
            // InternalSiddhiParser.g:7113:59: (iv_rulePatternSourceChain= rulePatternSourceChain EOF )
            // InternalSiddhiParser.g:7114:2: iv_rulePatternSourceChain= rulePatternSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternSourceChain=rulePatternSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, entryRulePatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternSourceChain"


    // $ANTLR start "rulePatternSourceChain"
    // InternalSiddhiParser.g:7120:1: rulePatternSourceChain returns [EObject current=null] : (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* ) ;
    public final EObject rulePatternSourceChain() throws RecognitionException {
        EObject current = null;
        int rulePatternSourceChain_StartIndex = input.index();
        Token lv_op_2_0=null;
        EObject this_PatternSourceChain1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return current; }
            // InternalSiddhiParser.g:7126:2: ( (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* ) )
            // InternalSiddhiParser.g:7127:2: (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:7127:2: (this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )* )
            // InternalSiddhiParser.g:7128:3: this_PatternSourceChain1_0= rulePatternSourceChain1 ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPatternSourceChainAccess().getPatternSourceChain1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_82);
            this_PatternSourceChain1_0=rulePatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PatternSourceChain1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:7136:3: ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )*
            loop93:
            do {
                int alt93=2;
                alt93 = dfa93.predict(input);
                switch (alt93) {
            	case 1 :
            	    // InternalSiddhiParser.g:7137:4: ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:7138:4: ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) )
            	    // InternalSiddhiParser.g:7139:5: () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) )
            	    {
            	    // InternalSiddhiParser.g:7139:5: ()
            	    // InternalSiddhiParser.g:7140:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getPatternSourceChainAccess().getPatternSourceChainLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:7146:5: ( (lv_op_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:7147:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:7147:6: (lv_op_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:7148:7: lv_op_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_op_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_op_2_0, grammarAccess.getPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getPatternSourceChainRule());
            	      							}
            	      							setWithLastConsumed(current, "op", lv_op_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:7160:5: ( (lv_right_3_0= rulePatternSourceChain1 ) )
            	    // InternalSiddhiParser.g:7161:6: (lv_right_3_0= rulePatternSourceChain1 )
            	    {
            	    // InternalSiddhiParser.g:7161:6: (lv_right_3_0= rulePatternSourceChain1 )
            	    // InternalSiddhiParser.g:7162:7: lv_right_3_0= rulePatternSourceChain1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPatternSourceChainAccess().getRightPatternSourceChain1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_right_3_0=rulePatternSourceChain1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPatternSourceChainRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.PatternSourceChain1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, rulePatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternSourceChain"


    // $ANTLR start "entryRulePatternSourceChain1"
    // InternalSiddhiParser.g:7185:1: entryRulePatternSourceChain1 returns [EObject current=null] : iv_rulePatternSourceChain1= rulePatternSourceChain1 EOF ;
    public final EObject entryRulePatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int entryRulePatternSourceChain1_StartIndex = input.index();
        EObject iv_rulePatternSourceChain1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return current; }
            // InternalSiddhiParser.g:7185:60: (iv_rulePatternSourceChain1= rulePatternSourceChain1 EOF )
            // InternalSiddhiParser.g:7186:2: iv_rulePatternSourceChain1= rulePatternSourceChain1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternSourceChain1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternSourceChain1=rulePatternSourceChain1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternSourceChain1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, entryRulePatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternSourceChain1"


    // $ANTLR start "rulePatternSourceChain1"
    // InternalSiddhiParser.g:7192:1: rulePatternSourceChain1 returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) ) ;
    public final EObject rulePatternSourceChain1() throws RecognitionException {
        EObject current = null;
        int rulePatternSourceChain1_StartIndex = input.index();
        EObject lv_psc_2_1_0 = null;

        EObject lv_wt_3_0 = null;

        EObject lv_ps_4_0 = null;

        EObject lv_wt_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return current; }
            // InternalSiddhiParser.g:7198:2: ( ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) ) )
            // InternalSiddhiParser.g:7199:2: ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            {
            // InternalSiddhiParser.g:7199:2: ( ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) ) | ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? ) )
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==LeftParenthesis) ) {
                int LA96_1 = input.LA(2);

                if ( (synpred59_InternalSiddhiParser()) ) {
                    alt96=1;
                }
                else if ( (true) ) {
                    alt96=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA96_0==Not||LA96_0==RULE_ID) ) {
                alt96=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // InternalSiddhiParser.g:7200:3: ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:7200:3: ( ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:7201:4: ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:7216:4: ( ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:7217:5: ruleOPEN_PAR ( (lv_psc_2_1_0= rulePatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt_3_0= ruleWithinTime ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7224:5: ( (lv_psc_2_1_0= rulePatternSourceChain ) )
                    // InternalSiddhiParser.g:7225:6: (lv_psc_2_1_0= rulePatternSourceChain )
                    {
                    // InternalSiddhiParser.g:7225:6: (lv_psc_2_1_0= rulePatternSourceChain )
                    // InternalSiddhiParser.g:7226:7: lv_psc_2_1_0= rulePatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPatternSourceChain1Access().getPsc_2PatternSourceChainParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_psc_2_1_0=rulePatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                      							}
                      							set(
                      								current,
                      								"psc_2",
                      								lv_psc_2_1_0,
                      								"org.xtext.example.siddhi.Siddhi.PatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7250:5: ( (lv_wt_3_0= ruleWithinTime ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==Within) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalSiddhiParser.g:7251:6: (lv_wt_3_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:7251:6: (lv_wt_3_0= ruleWithinTime )
                            // InternalSiddhiParser.g:7252:7: lv_wt_3_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_3_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                              							}
                              							set(
                              								current,
                              								"wt",
                              								lv_wt_3_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7272:3: ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:7272:3: ( ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:7273:4: ( (lv_ps_4_0= rulePatternSource ) ) ( (lv_wt_5_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:7273:4: ( (lv_ps_4_0= rulePatternSource ) )
                    // InternalSiddhiParser.g:7274:5: (lv_ps_4_0= rulePatternSource )
                    {
                    // InternalSiddhiParser.g:7274:5: (lv_ps_4_0= rulePatternSource )
                    // InternalSiddhiParser.g:7275:6: lv_ps_4_0= rulePatternSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPatternSourceChain1Access().getPsPatternSourceParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_ps_4_0=rulePatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                      						}
                      						set(
                      							current,
                      							"ps",
                      							lv_ps_4_0,
                      							"org.xtext.example.siddhi.Siddhi.PatternSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7292:4: ( (lv_wt_5_0= ruleWithinTime ) )?
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==Within) ) {
                        alt95=1;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalSiddhiParser.g:7293:5: (lv_wt_5_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:7293:5: (lv_wt_5_0= ruleWithinTime )
                            // InternalSiddhiParser.g:7294:6: lv_wt_5_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt_5_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPatternSourceChain1Rule());
                              						}
                              						set(
                              							current,
                              							"wt",
                              							lv_wt_5_0,
                              							"org.xtext.example.siddhi.Siddhi.WithinTime");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, rulePatternSourceChain1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternSourceChain1"


    // $ANTLR start "entryRulePatternSource"
    // InternalSiddhiParser.g:7316:1: entryRulePatternSource returns [EObject current=null] : iv_rulePatternSource= rulePatternSource EOF ;
    public final EObject entryRulePatternSource() throws RecognitionException {
        EObject current = null;
        int entryRulePatternSource_StartIndex = input.index();
        EObject iv_rulePatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return current; }
            // InternalSiddhiParser.g:7316:54: (iv_rulePatternSource= rulePatternSource EOF )
            // InternalSiddhiParser.g:7317:2: iv_rulePatternSource= rulePatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternSource=rulePatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, entryRulePatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternSource"


    // $ANTLR start "rulePatternSource"
    // InternalSiddhiParser.g:7323:1: rulePatternSource returns [EObject current=null] : ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) ) ;
    public final EObject rulePatternSource() throws RecognitionException {
        EObject current = null;
        int rulePatternSource_StartIndex = input.index();
        EObject lv_lss_0_0 = null;

        EObject lv_pss_1_0 = null;

        EObject lv_stdss_2_0 = null;

        EObject lv_logicalAbsStatefulSrc_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return current; }
            // InternalSiddhiParser.g:7329:2: ( ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) ) )
            // InternalSiddhiParser.g:7330:2: ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) )
            {
            // InternalSiddhiParser.g:7330:2: ( ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) ) | ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) ) | ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) ) | ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) ) )
            int alt97=4;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_ID) ) {
                int LA97_1 = input.LA(2);

                if ( (synpred60_InternalSiddhiParser()) ) {
                    alt97=1;
                }
                else if ( (synpred61_InternalSiddhiParser()) ) {
                    alt97=2;
                }
                else if ( (synpred62_InternalSiddhiParser()) ) {
                    alt97=3;
                }
                else if ( (synpred63_InternalSiddhiParser()) ) {
                    alt97=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA97_0==LeftParenthesis) && (synpred63_InternalSiddhiParser())) {
                alt97=4;
            }
            else if ( (LA97_0==Not) && (synpred63_InternalSiddhiParser())) {
                alt97=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // InternalSiddhiParser.g:7331:3: ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:7331:3: ( ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource ) )
                    // InternalSiddhiParser.g:7332:4: ( ( ruleLogicalStatefulSource ) )=> (lv_lss_0_0= ruleLogicalStatefulSource )
                    {
                    // InternalSiddhiParser.g:7336:4: (lv_lss_0_0= ruleLogicalStatefulSource )
                    // InternalSiddhiParser.g:7337:5: lv_lss_0_0= ruleLogicalStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getLssLogicalStatefulSourceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_lss_0_0=ruleLogicalStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"lss",
                      						lv_lss_0_0,
                      						"org.xtext.example.siddhi.Siddhi.LogicalStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7355:3: ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:7355:3: ( ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource ) )
                    // InternalSiddhiParser.g:7356:4: ( ( rulePatternCollectionStatefulSource ) )=> (lv_pss_1_0= rulePatternCollectionStatefulSource )
                    {
                    // InternalSiddhiParser.g:7360:4: (lv_pss_1_0= rulePatternCollectionStatefulSource )
                    // InternalSiddhiParser.g:7361:5: lv_pss_1_0= rulePatternCollectionStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getPssPatternCollectionStatefulSourceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_pss_1_0=rulePatternCollectionStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"pss",
                      						lv_pss_1_0,
                      						"org.xtext.example.siddhi.Siddhi.PatternCollectionStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:7379:3: ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:7379:3: ( ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:7380:4: ( ( ruleStandardStatefulSource ) )=> (lv_stdss_2_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:7384:4: (lv_stdss_2_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:7385:5: lv_stdss_2_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getStdssStandardStatefulSourceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdss_2_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"stdss",
                      						lv_stdss_2_0,
                      						"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:7403:3: ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:7403:3: ( ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource ) )
                    // InternalSiddhiParser.g:7404:4: ( ( ruleLogicalAbsentStatefulSource ) )=> (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource )
                    {
                    // InternalSiddhiParser.g:7408:4: (lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource )
                    // InternalSiddhiParser.g:7409:5: lv_logicalAbsStatefulSrc_3_0= ruleLogicalAbsentStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_logicalAbsStatefulSrc_3_0=ruleLogicalAbsentStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternSourceRule());
                      					}
                      					set(
                      						current,
                      						"logicalAbsStatefulSrc",
                      						lv_logicalAbsStatefulSrc_3_0,
                      						"org.xtext.example.siddhi.Siddhi.LogicalAbsentStatefulSource");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, rulePatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternSource"


    // $ANTLR start "entryRuleLogicalStatefulSource"
    // InternalSiddhiParser.g:7430:1: entryRuleLogicalStatefulSource returns [EObject current=null] : iv_ruleLogicalStatefulSource= ruleLogicalStatefulSource EOF ;
    public final EObject entryRuleLogicalStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLogicalStatefulSource_StartIndex = input.index();
        EObject iv_ruleLogicalStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return current; }
            // InternalSiddhiParser.g:7430:62: (iv_ruleLogicalStatefulSource= ruleLogicalStatefulSource EOF )
            // InternalSiddhiParser.g:7431:2: iv_ruleLogicalStatefulSource= ruleLogicalStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalStatefulSource=ruleLogicalStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, entryRuleLogicalStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalStatefulSource"


    // $ANTLR start "ruleLogicalStatefulSource"
    // InternalSiddhiParser.g:7437:1: ruleLogicalStatefulSource returns [EObject current=null] : ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) ) ;
    public final EObject ruleLogicalStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleLogicalStatefulSource_StartIndex = input.index();
        EObject lv_stdSource_0_0 = null;

        EObject lv_and_1_0 = null;

        EObject lv_stdSource_2_0 = null;

        EObject lv_stdSource_3_0 = null;

        EObject lv_or_4_0 = null;

        EObject lv_stdSource_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return current; }
            // InternalSiddhiParser.g:7443:2: ( ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) ) )
            // InternalSiddhiParser.g:7444:2: ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) )
            {
            // InternalSiddhiParser.g:7444:2: ( ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) ) )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_ID) ) {
                int LA98_1 = input.LA(2);

                if ( (synpred64_InternalSiddhiParser()) ) {
                    alt98=1;
                }
                else if ( (synpred65_InternalSiddhiParser()) ) {
                    alt98=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 98, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // InternalSiddhiParser.g:7445:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:7445:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:7446:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) ) ( (lv_stdSource_2_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:7446:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) ) )
                    // InternalSiddhiParser.g:7447:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )=> ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) )
                    {
                    // InternalSiddhiParser.g:7460:5: ( ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) ) )
                    // InternalSiddhiParser.g:7461:6: ( (lv_stdSource_0_0= ruleStandardStatefulSource ) ) ( (lv_and_1_0= ruleAND ) )
                    {
                    // InternalSiddhiParser.g:7461:6: ( (lv_stdSource_0_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:7462:7: (lv_stdSource_0_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:7462:7: (lv_stdSource_0_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:7463:8: lv_stdSource_0_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_stdSource_0_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								add(
                      									current,
                      									"stdSource",
                      									lv_stdSource_0_0,
                      									"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7480:6: ( (lv_and_1_0= ruleAND ) )
                    // InternalSiddhiParser.g:7481:7: (lv_and_1_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:7481:7: (lv_and_1_0= ruleAND )
                    // InternalSiddhiParser.g:7482:8: lv_and_1_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getAndANDParserRuleCall_0_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_and_1_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"and",
                      									lv_and_1_0,
                      									"org.xtext.example.siddhi.Siddhi.AND");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:7501:4: ( (lv_stdSource_2_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:7502:5: (lv_stdSource_2_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:7502:5: (lv_stdSource_2_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:7503:6: lv_stdSource_2_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_2_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      						}
                      						add(
                      							current,
                      							"stdSource",
                      							lv_stdSource_2_0,
                      							"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7522:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:7522:3: ( ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:7523:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) ) ( (lv_stdSource_5_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:7523:4: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) ) )
                    // InternalSiddhiParser.g:7524:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) )
                    {
                    // InternalSiddhiParser.g:7537:5: ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) ) )
                    // InternalSiddhiParser.g:7538:6: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_or_4_0= ruleOR ) )
                    {
                    // InternalSiddhiParser.g:7538:6: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:7539:7: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:7539:7: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:7540:8: lv_stdSource_3_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    lv_stdSource_3_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								add(
                      									current,
                      									"stdSource",
                      									lv_stdSource_3_0,
                      									"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7557:6: ( (lv_or_4_0= ruleOR ) )
                    // InternalSiddhiParser.g:7558:7: (lv_or_4_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:7558:7: (lv_or_4_0= ruleOR )
                    // InternalSiddhiParser.g:7559:8: lv_or_4_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getOrORParserRuleCall_1_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_or_4_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"or",
                      									lv_or_4_0,
                      									"org.xtext.example.siddhi.Siddhi.OR");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:7578:4: ( (lv_stdSource_5_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:7579:5: (lv_stdSource_5_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:7579:5: (lv_stdSource_5_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:7580:6: lv_stdSource_5_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_5_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalStatefulSourceRule());
                      						}
                      						add(
                      							current,
                      							"stdSource",
                      							lv_stdSource_5_0,
                      							"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, ruleLogicalStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLogicalStatefulSource"


    // $ANTLR start "entryRulePatternCollectionStatefulSource"
    // InternalSiddhiParser.g:7602:1: entryRulePatternCollectionStatefulSource returns [EObject current=null] : iv_rulePatternCollectionStatefulSource= rulePatternCollectionStatefulSource EOF ;
    public final EObject entryRulePatternCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRulePatternCollectionStatefulSource_StartIndex = input.index();
        EObject iv_rulePatternCollectionStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return current; }
            // InternalSiddhiParser.g:7602:72: (iv_rulePatternCollectionStatefulSource= rulePatternCollectionStatefulSource EOF )
            // InternalSiddhiParser.g:7603:2: iv_rulePatternCollectionStatefulSource= rulePatternCollectionStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternCollectionStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternCollectionStatefulSource=rulePatternCollectionStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternCollectionStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, entryRulePatternCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePatternCollectionStatefulSource"


    // $ANTLR start "rulePatternCollectionStatefulSource"
    // InternalSiddhiParser.g:7609:1: rulePatternCollectionStatefulSource returns [EObject current=null] : (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) ;
    public final EObject rulePatternCollectionStatefulSource() throws RecognitionException {
        EObject current = null;
        int rulePatternCollectionStatefulSource_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_StandardStatefulSource_0 = null;

        EObject lv_coll_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return current; }
            // InternalSiddhiParser.g:7615:2: ( (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign ) )
            // InternalSiddhiParser.g:7616:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
            {
            // InternalSiddhiParser.g:7616:2: (this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign )
            // InternalSiddhiParser.g:7617:3: this_StandardStatefulSource_0= ruleStandardStatefulSource otherlv_1= LessThanSign ( (lv_coll_2_0= ruleCollect ) ) otherlv_3= GreaterThanSign
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPatternCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_85);
            this_StandardStatefulSource_0=ruleStandardStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StandardStatefulSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPatternCollectionStatefulSourceAccess().getLessThanSignKeyword_1());
              		
            }
            // InternalSiddhiParser.g:7629:3: ( (lv_coll_2_0= ruleCollect ) )
            // InternalSiddhiParser.g:7630:4: (lv_coll_2_0= ruleCollect )
            {
            // InternalSiddhiParser.g:7630:4: (lv_coll_2_0= ruleCollect )
            // InternalSiddhiParser.g:7631:5: lv_coll_2_0= ruleCollect
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPatternCollectionStatefulSourceAccess().getCollCollectParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_79);
            lv_coll_2_0=ruleCollect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPatternCollectionStatefulSourceRule());
              					}
              					set(
              						current,
              						"coll",
              						lv_coll_2_0,
              						"org.xtext.example.siddhi.Siddhi.Collect");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPatternCollectionStatefulSourceAccess().getGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, rulePatternCollectionStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePatternCollectionStatefulSource"


    // $ANTLR start "entryRuleCollect"
    // InternalSiddhiParser.g:7656:1: entryRuleCollect returns [EObject current=null] : iv_ruleCollect= ruleCollect EOF ;
    public final EObject entryRuleCollect() throws RecognitionException {
        EObject current = null;
        int entryRuleCollect_StartIndex = input.index();
        EObject iv_ruleCollect = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return current; }
            // InternalSiddhiParser.g:7656:48: (iv_ruleCollect= ruleCollect EOF )
            // InternalSiddhiParser.g:7657:2: iv_ruleCollect= ruleCollect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollect=ruleCollect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, entryRuleCollect_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCollect"


    // $ANTLR start "ruleCollect"
    // InternalSiddhiParser.g:7663:1: ruleCollect returns [EObject current=null] : ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) ) ;
    public final EObject ruleCollect() throws RecognitionException {
        EObject current = null;
        int ruleCollect_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_start_1_0 = null;

        AntlrDatatypeRuleToken lv_end_3_0 = null;

        AntlrDatatypeRuleToken lv_start_4_0 = null;

        AntlrDatatypeRuleToken lv_end_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return current; }
            // InternalSiddhiParser.g:7669:2: ( ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) ) )
            // InternalSiddhiParser.g:7670:2: ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) )
            {
            // InternalSiddhiParser.g:7670:2: ( () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL ) )
            // InternalSiddhiParser.g:7671:3: () ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL )
            {
            // InternalSiddhiParser.g:7671:3: ()
            // InternalSiddhiParser.g:7672:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCollectAccess().getCollectAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:7678:3: ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL )
            int alt99=4;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalSiddhiParser.g:7679:4: ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) )
                    {
                    // InternalSiddhiParser.g:7679:4: ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) )
                    // InternalSiddhiParser.g:7680:5: ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) )
                    {
                    // InternalSiddhiParser.g:7680:5: ( (lv_start_1_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:7681:6: (lv_start_1_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:7681:6: (lv_start_1_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:7682:7: lv_start_1_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_start_1_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"start",
                      								lv_start_1_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getCollectAccess().getColonKeyword_1_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:7703:5: ( (lv_end_3_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:7704:6: (lv_end_3_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:7704:6: (lv_end_3_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:7705:7: lv_end_3_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_end_3_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"end",
                      								lv_end_3_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7724:4: ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon )
                    {
                    // InternalSiddhiParser.g:7724:4: ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon )
                    // InternalSiddhiParser.g:7725:5: ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon
                    {
                    // InternalSiddhiParser.g:7725:5: ( (lv_start_4_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:7726:6: (lv_start_4_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:7726:6: (lv_start_4_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:7727:7: lv_start_4_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_start_4_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"start",
                      								lv_start_4_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Colon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getCollectAccess().getColonKeyword_1_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:7750:4: (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) )
                    {
                    // InternalSiddhiParser.g:7750:4: (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) )
                    // InternalSiddhiParser.g:7751:5: otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) )
                    {
                    otherlv_6=(Token)match(input,Colon,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getCollectAccess().getColonKeyword_1_2_0());
                      				
                    }
                    // InternalSiddhiParser.g:7755:5: ( (lv_end_7_0= ruleINT_LITERAL ) )
                    // InternalSiddhiParser.g:7756:6: (lv_end_7_0= ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:7756:6: (lv_end_7_0= ruleINT_LITERAL )
                    // InternalSiddhiParser.g:7757:7: lv_end_7_0= ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_end_7_0=ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectRule());
                      							}
                      							set(
                      								current,
                      								"end",
                      								lv_end_7_0,
                      								"org.xtext.example.siddhi.Siddhi.INT_LITERAL");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:7776:4: ruleINT_LITERAL
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getCollectAccess().getINT_LITERALParserRuleCall_1_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, ruleCollect_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCollect"


    // $ANTLR start "entryRuleLogicalAbsentStatefulSource"
    // InternalSiddhiParser.g:7788:1: entryRuleLogicalAbsentStatefulSource returns [EObject current=null] : iv_ruleLogicalAbsentStatefulSource= ruleLogicalAbsentStatefulSource EOF ;
    public final EObject entryRuleLogicalAbsentStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLogicalAbsentStatefulSource_StartIndex = input.index();
        EObject iv_ruleLogicalAbsentStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return current; }
            // InternalSiddhiParser.g:7788:68: (iv_ruleLogicalAbsentStatefulSource= ruleLogicalAbsentStatefulSource EOF )
            // InternalSiddhiParser.g:7789:2: iv_ruleLogicalAbsentStatefulSource= ruleLogicalAbsentStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAbsentStatefulSource=ruleLogicalAbsentStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAbsentStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, entryRuleLogicalAbsentStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAbsentStatefulSource"


    // $ANTLR start "ruleLogicalAbsentStatefulSource"
    // InternalSiddhiParser.g:7795:1: ruleLogicalAbsentStatefulSource returns [EObject current=null] : ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) ) ;
    public final EObject ruleLogicalAbsentStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleLogicalAbsentStatefulSource_StartIndex = input.index();
        EObject lv_logicalAbsStatefulSrc_1_0 = null;

        EObject lv_stdSource_3_0 = null;

        EObject lv_and_4_0 = null;

        EObject lv_not_5_0 = null;

        EObject lv_bs_6_0 = null;

        EObject this_NOT_7 = null;

        EObject lv_bs_8_0 = null;

        EObject lv_and_9_0 = null;

        EObject lv_stdSource_10_0 = null;

        EObject lv_stdSource_11_0 = null;

        EObject lv_and_12_0 = null;

        EObject lv_basicAbsentPatternSource1_13_0 = null;

        EObject lv_basicAbsentPatternSource1_14_0 = null;

        EObject lv_and_15_0 = null;

        EObject lv_stdSource_16_0 = null;

        EObject lv_basicAbsentPatternSource2_17_0 = null;

        EObject lv_and_18_0 = null;

        EObject lv_basicAbsentPatternSource_19_0 = null;

        EObject lv_stdSource_20_0 = null;

        EObject lv_o_21_0 = null;

        EObject lv_basicAbsentPatternSource1_22_0 = null;

        EObject lv_basicAbsentPatternSource1_23_0 = null;

        EObject lv_o_24_0 = null;

        EObject lv_stdSource_25_0 = null;

        EObject lv_basicAbsentPatternSource2_26_0 = null;

        EObject lv_o_27_0 = null;

        EObject lv_basicAbsentPatternSource_28_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return current; }
            // InternalSiddhiParser.g:7801:2: ( ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) ) )
            // InternalSiddhiParser.g:7802:2: ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:7802:2: ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) )
            int alt100=9;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalSiddhiParser.g:7803:3: ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )
                    {
                    // InternalSiddhiParser.g:7803:3: ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )
                    // InternalSiddhiParser.g:7804:4: ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:7814:4: ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:7815:5: ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOPEN_PARParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:7822:5: ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) )
                    // InternalSiddhiParser.g:7823:6: (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource )
                    {
                    // InternalSiddhiParser.g:7823:6: (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource )
                    // InternalSiddhiParser.g:7824:7: lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_logicalAbsStatefulSrc_1_0=ruleLogicalAbsentStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"logicalAbsStatefulSrc",
                      								lv_logicalAbsStatefulSrc_1_0,
                      								"org.xtext.example.siddhi.Siddhi.LogicalAbsentStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getCLOSE_PARParserRuleCall_0_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:7851:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:7851:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) )
                    // InternalSiddhiParser.g:7852:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) )
                    {
                    // InternalSiddhiParser.g:7875:4: ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) )
                    // InternalSiddhiParser.g:7876:5: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) )
                    {
                    // InternalSiddhiParser.g:7876:5: ( (lv_stdSource_3_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:7877:6: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:7877:6: (lv_stdSource_3_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:7878:7: lv_stdSource_3_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_stdSource_3_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_3_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7895:5: ( (lv_and_4_0= ruleAND ) )
                    // InternalSiddhiParser.g:7896:6: (lv_and_4_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:7896:6: (lv_and_4_0= ruleAND )
                    // InternalSiddhiParser.g:7897:7: lv_and_4_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_and_4_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_4_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7914:5: ( (lv_not_5_0= ruleNOT ) )
                    // InternalSiddhiParser.g:7915:6: (lv_not_5_0= ruleNOT )
                    {
                    // InternalSiddhiParser.g:7915:6: (lv_not_5_0= ruleNOT )
                    // InternalSiddhiParser.g:7916:7: lv_not_5_0= ruleNOT
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNotNOTParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_not_5_0=ruleNOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"not",
                      								lv_not_5_0,
                      								"org.xtext.example.siddhi.Siddhi.NOT");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7933:5: ( (lv_bs_6_0= ruleBasicSource ) )
                    // InternalSiddhiParser.g:7934:6: (lv_bs_6_0= ruleBasicSource )
                    {
                    // InternalSiddhiParser.g:7934:6: (lv_bs_6_0= ruleBasicSource )
                    // InternalSiddhiParser.g:7935:7: lv_bs_6_0= ruleBasicSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_bs_6_0=ruleBasicSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"bs",
                      								lv_bs_6_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:7955:3: ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:7955:3: ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:7956:4: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:7956:4: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) )
                    // InternalSiddhiParser.g:7957:5: ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) )
                    {
                    // InternalSiddhiParser.g:7971:5: (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) )
                    // InternalSiddhiParser.g:7972:6: this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) )
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNOTParserRuleCall_2_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    this_NOT_7=ruleNOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						current = this_NOT_7;
                      						afterParserOrEnumRuleCall();
                      					
                    }
                    // InternalSiddhiParser.g:7980:6: ( (lv_bs_8_0= ruleBasicSource ) )
                    // InternalSiddhiParser.g:7981:7: (lv_bs_8_0= ruleBasicSource )
                    {
                    // InternalSiddhiParser.g:7981:7: (lv_bs_8_0= ruleBasicSource )
                    // InternalSiddhiParser.g:7982:8: lv_bs_8_0= ruleBasicSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_bs_8_0=ruleBasicSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"bs",
                      									lv_bs_8_0,
                      									"org.xtext.example.siddhi.Siddhi.BasicSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:7999:6: ( (lv_and_9_0= ruleAND ) )
                    // InternalSiddhiParser.g:8000:7: (lv_and_9_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:8000:7: (lv_and_9_0= ruleAND )
                    // InternalSiddhiParser.g:8001:8: lv_and_9_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_2_0_0_2_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_and_9_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      								}
                      								set(
                      									current,
                      									"and",
                      									lv_and_9_0,
                      									"org.xtext.example.siddhi.Siddhi.AND");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:8020:4: ( (lv_stdSource_10_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:8021:5: (lv_stdSource_10_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:8021:5: (lv_stdSource_10_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:8022:6: lv_stdSource_10_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_10_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      						}
                      						set(
                      							current,
                      							"stdSource",
                      							lv_stdSource_10_0,
                      							"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:8041:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8041:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:8042:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:8060:4: ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:8061:5: ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:8061:5: ( (lv_stdSource_11_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:8062:6: (lv_stdSource_11_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:8062:6: (lv_stdSource_11_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:8063:7: lv_stdSource_11_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_3_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_stdSource_11_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_11_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8080:5: ( (lv_and_12_0= ruleAND ) )
                    // InternalSiddhiParser.g:8081:6: (lv_and_12_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:8081:6: (lv_and_12_0= ruleAND )
                    // InternalSiddhiParser.g:8082:7: lv_and_12_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_and_12_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_12_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8099:5: ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8100:6: (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8100:6: (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8101:7: lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_3_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource1_13_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_13_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:8121:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8121:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) )
                    // InternalSiddhiParser.g:8122:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:8140:4: ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:8141:5: ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:8141:5: ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8142:6: (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8142:6: (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8143:7: lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_basicAbsentPatternSource1_14_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_14_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8160:5: ( (lv_and_15_0= ruleAND ) )
                    // InternalSiddhiParser.g:8161:6: (lv_and_15_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:8161:6: (lv_and_15_0= ruleAND )
                    // InternalSiddhiParser.g:8162:7: lv_and_15_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_and_15_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_15_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8179:5: ( (lv_stdSource_16_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:8180:6: (lv_stdSource_16_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:8180:6: (lv_stdSource_16_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:8181:7: lv_stdSource_16_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_4_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_16_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_16_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:8201:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8201:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:8202:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:8220:4: ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:8221:5: ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:8221:5: ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8222:6: (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8222:6: (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8223:7: lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_5_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_basicAbsentPatternSource2_17_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource2",
                      								lv_basicAbsentPatternSource2_17_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8240:5: ( (lv_and_18_0= ruleAND ) )
                    // InternalSiddhiParser.g:8241:6: (lv_and_18_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:8241:6: (lv_and_18_0= ruleAND )
                    // InternalSiddhiParser.g:8242:7: lv_and_18_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_and_18_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"and",
                      								lv_and_18_0,
                      								"org.xtext.example.siddhi.Siddhi.AND");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8259:5: ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8260:6: (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8260:6: (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8261:7: lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_5_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_19_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_19_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:8281:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8281:3: ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:8282:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:8300:4: ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:8301:5: ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:8301:5: ( (lv_stdSource_20_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:8302:6: (lv_stdSource_20_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:8302:6: (lv_stdSource_20_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:8303:7: lv_stdSource_20_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_6_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    lv_stdSource_20_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_20_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8320:5: ( (lv_o_21_0= ruleOR ) )
                    // InternalSiddhiParser.g:8321:6: (lv_o_21_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:8321:6: (lv_o_21_0= ruleOR )
                    // InternalSiddhiParser.g:8322:7: lv_o_21_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_6_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_o_21_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"o",
                      								lv_o_21_0,
                      								"org.xtext.example.siddhi.Siddhi.OR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8339:5: ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8340:6: (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8340:6: (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8341:7: lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_6_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource1_22_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_22_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalSiddhiParser.g:8361:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8361:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) )
                    // InternalSiddhiParser.g:8362:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) )
                    {
                    // InternalSiddhiParser.g:8380:4: ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) )
                    // InternalSiddhiParser.g:8381:5: ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) )
                    {
                    // InternalSiddhiParser.g:8381:5: ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8382:6: (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8382:6: (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8383:7: lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_7_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    lv_basicAbsentPatternSource1_23_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource1",
                      								lv_basicAbsentPatternSource1_23_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8400:5: ( (lv_o_24_0= ruleOR ) )
                    // InternalSiddhiParser.g:8401:6: (lv_o_24_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:8401:6: (lv_o_24_0= ruleOR )
                    // InternalSiddhiParser.g:8402:7: lv_o_24_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_o_24_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"o",
                      								lv_o_24_0,
                      								"org.xtext.example.siddhi.Siddhi.OR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8419:5: ( (lv_stdSource_25_0= ruleStandardStatefulSource ) )
                    // InternalSiddhiParser.g:8420:6: (lv_stdSource_25_0= ruleStandardStatefulSource )
                    {
                    // InternalSiddhiParser.g:8420:6: (lv_stdSource_25_0= ruleStandardStatefulSource )
                    // InternalSiddhiParser.g:8421:7: lv_stdSource_25_0= ruleStandardStatefulSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_7_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stdSource_25_0=ruleStandardStatefulSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"stdSource",
                      								lv_stdSource_25_0,
                      								"org.xtext.example.siddhi.Siddhi.StandardStatefulSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalSiddhiParser.g:8441:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:8441:3: ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:8442:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:8460:4: ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:8461:5: ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:8461:5: ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8462:6: (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8462:6: (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8463:7: lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_8_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    lv_basicAbsentPatternSource2_26_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource2",
                      								lv_basicAbsentPatternSource2_26_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8480:5: ( (lv_o_27_0= ruleOR ) )
                    // InternalSiddhiParser.g:8481:6: (lv_o_27_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:8481:6: (lv_o_27_0= ruleOR )
                    // InternalSiddhiParser.g:8482:7: lv_o_27_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_8_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_o_27_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"o",
                      								lv_o_27_0,
                      								"org.xtext.example.siddhi.Siddhi.OR");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:8499:5: ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) )
                    // InternalSiddhiParser.g:8500:6: (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8500:6: (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource )
                    // InternalSiddhiParser.g:8501:7: lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_8_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basicAbsentPatternSource_28_0=ruleBasicAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAbsentStatefulSourceRule());
                      							}
                      							set(
                      								current,
                      								"basicAbsentPatternSource",
                      								lv_basicAbsentPatternSource_28_0,
                      								"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, ruleLogicalAbsentStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAbsentStatefulSource"


    // $ANTLR start "entryRuleAbsentPatternSourceChain"
    // InternalSiddhiParser.g:8524:1: entryRuleAbsentPatternSourceChain returns [EObject current=null] : iv_ruleAbsentPatternSourceChain= ruleAbsentPatternSourceChain EOF ;
    public final EObject entryRuleAbsentPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int entryRuleAbsentPatternSourceChain_StartIndex = input.index();
        EObject iv_ruleAbsentPatternSourceChain = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return current; }
            // InternalSiddhiParser.g:8524:65: (iv_ruleAbsentPatternSourceChain= ruleAbsentPatternSourceChain EOF )
            // InternalSiddhiParser.g:8525:2: iv_ruleAbsentPatternSourceChain= ruleAbsentPatternSourceChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbsentPatternSourceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAbsentPatternSourceChain=ruleAbsentPatternSourceChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbsentPatternSourceChain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, entryRuleAbsentPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAbsentPatternSourceChain"


    // $ANTLR start "ruleAbsentPatternSourceChain"
    // InternalSiddhiParser.g:8531:1: ruleAbsentPatternSourceChain returns [EObject current=null] : ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) ) ;
    public final EObject ruleAbsentPatternSourceChain() throws RecognitionException {
        EObject current = null;
        int ruleAbsentPatternSourceChain_StartIndex = input.index();
        EObject this_EVERY_0 = null;

        EObject lv_absentPatternSrcChain_2_0 = null;

        EObject lv_wt1_4_0 = null;

        EObject this_EveryAbsentPatternSource_5 = null;

        EObject this_LeftAbsentPatternSource_6 = null;

        EObject this_RightAbsentPatternSource_7 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return current; }
            // InternalSiddhiParser.g:8537:2: ( ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) ) )
            // InternalSiddhiParser.g:8538:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) )
            {
            // InternalSiddhiParser.g:8538:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) ) | this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource | ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource ) | ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource ) )
            int alt103=4;
            switch ( input.LA(1) ) {
            case Every:
                {
                int LA103_1 = input.LA(2);

                if ( (synpred75_InternalSiddhiParser()) ) {
                    alt103=1;
                }
                else if ( (true) ) {
                    alt103=2;
                }
                else if ( (synpred76_InternalSiddhiParser()) ) {
                    alt103=3;
                }
                else if ( (synpred77_InternalSiddhiParser()) ) {
                    alt103=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 1, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
                {
                int LA103_2 = input.LA(2);

                if ( (synpred75_InternalSiddhiParser()) ) {
                    alt103=1;
                }
                else if ( (synpred76_InternalSiddhiParser()) ) {
                    alt103=3;
                }
                else if ( (synpred77_InternalSiddhiParser()) ) {
                    alt103=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 2, input);

                    throw nvae;
                }
                }
                break;
            case Not:
                {
                int LA103_3 = input.LA(2);

                if ( (true) ) {
                    alt103=2;
                }
                else if ( (synpred76_InternalSiddhiParser()) ) {
                    alt103=3;
                }
                else if ( (synpred77_InternalSiddhiParser()) ) {
                    alt103=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA103_4 = input.LA(2);

                if ( (synpred76_InternalSiddhiParser()) ) {
                    alt103=3;
                }
                else if ( (synpred77_InternalSiddhiParser()) ) {
                    alt103=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }

            switch (alt103) {
                case 1 :
                    // InternalSiddhiParser.g:8539:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:8539:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:8540:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:8558:4: ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:8559:5: (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( (lv_wt1_4_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:8559:5: (this_EVERY_0= ruleEVERY )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==Every) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalSiddhiParser.g:8560:6: this_EVERY_0= ruleEVERY
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getEVERYParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            this_EVERY_0=ruleEVERY();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVERY_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getOPEN_PARParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:8576:5: ( (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain ) )
                    // InternalSiddhiParser.g:8577:6: (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:8577:6: (lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain )
                    // InternalSiddhiParser.g:8578:7: lv_absentPatternSrcChain_2_0= ruleAbsentPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getAbsentPatternSrcChainAbsentPatternSourceChainParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_absentPatternSrcChain_2_0=ruleAbsentPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAbsentPatternSourceChainRule());
                      							}
                      							set(
                      								current,
                      								"absentPatternSrcChain",
                      								lv_absentPatternSrcChain_2_0,
                      								"org.xtext.example.siddhi.Siddhi.AbsentPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_3());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:8602:5: ( (lv_wt1_4_0= ruleWithinTime ) )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==Within) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            // InternalSiddhiParser.g:8603:6: (lv_wt1_4_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:8603:6: (lv_wt1_4_0= ruleWithinTime )
                            // InternalSiddhiParser.g:8604:7: lv_wt1_4_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getWt1WithinTimeParserRuleCall_0_0_4_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt1_4_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAbsentPatternSourceChainRule());
                              							}
                              							set(
                              								current,
                              								"wt1",
                              								lv_wt1_4_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:8624:3: this_EveryAbsentPatternSource_5= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getEveryAbsentPatternSourceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EveryAbsentPatternSource_5=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EveryAbsentPatternSource_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:8633:3: ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8633:3: ( ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource )
                    // InternalSiddhiParser.g:8634:4: ( ruleLeftAbsentPatternSource )=>this_LeftAbsentPatternSource_6= ruleLeftAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getLeftAbsentPatternSourceParserRuleCall_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LeftAbsentPatternSource_6=ruleLeftAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LeftAbsentPatternSource_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:8645:3: ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:8645:3: ( ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource )
                    // InternalSiddhiParser.g:8646:4: ( ruleRightAbsentPatternSource )=>this_RightAbsentPatternSource_7= ruleRightAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAbsentPatternSourceChainAccess().getRightAbsentPatternSourceParserRuleCall_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RightAbsentPatternSource_7=ruleRightAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RightAbsentPatternSource_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, ruleAbsentPatternSourceChain_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAbsentPatternSourceChain"


    // $ANTLR start "entryRuleEveryAbsentPatternSource"
    // InternalSiddhiParser.g:8660:1: entryRuleEveryAbsentPatternSource returns [EObject current=null] : iv_ruleEveryAbsentPatternSource= ruleEveryAbsentPatternSource EOF ;
    public final EObject entryRuleEveryAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleEveryAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleEveryAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return current; }
            // InternalSiddhiParser.g:8660:65: (iv_ruleEveryAbsentPatternSource= ruleEveryAbsentPatternSource EOF )
            // InternalSiddhiParser.g:8661:2: iv_ruleEveryAbsentPatternSource= ruleEveryAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryAbsentPatternSource=ruleEveryAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, entryRuleEveryAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryAbsentPatternSource"


    // $ANTLR start "ruleEveryAbsentPatternSource"
    // InternalSiddhiParser.g:8667:1: ruleEveryAbsentPatternSource returns [EObject current=null] : ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) ) ;
    public final EObject ruleEveryAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleEveryAbsentPatternSource_StartIndex = input.index();
        EObject this_EVERY_0 = null;

        EObject lv_basicAbsentPS_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return current; }
            // InternalSiddhiParser.g:8673:2: ( ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) ) )
            // InternalSiddhiParser.g:8674:2: ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) )
            {
            // InternalSiddhiParser.g:8674:2: ( ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) ) )
            // InternalSiddhiParser.g:8675:3: ( ( ( ruleEVERY )? ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) )
            {
            // InternalSiddhiParser.g:8686:3: ( (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) ) )
            // InternalSiddhiParser.g:8687:4: (this_EVERY_0= ruleEVERY )? ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) )
            {
            // InternalSiddhiParser.g:8687:4: (this_EVERY_0= ruleEVERY )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==Every) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSiddhiParser.g:8688:5: this_EVERY_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEveryAbsentPatternSourceAccess().getEVERYParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    this_EVERY_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_EVERY_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:8697:4: ( (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource ) )
            // InternalSiddhiParser.g:8698:5: (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource )
            {
            // InternalSiddhiParser.g:8698:5: (lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource )
            // InternalSiddhiParser.g:8699:6: lv_basicAbsentPS_1_0= ruleBasicAbsentPatternSource
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEveryAbsentPatternSourceAccess().getBasicAbsentPSBasicAbsentPatternSourceParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_basicAbsentPS_1_0=ruleBasicAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEveryAbsentPatternSourceRule());
              						}
              						set(
              							current,
              							"basicAbsentPS",
              							lv_basicAbsentPS_1_0,
              							"org.xtext.example.siddhi.Siddhi.BasicAbsentPatternSource");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, ruleEveryAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEveryAbsentPatternSource"


    // $ANTLR start "entryRuleBasicAbsentPatternSource"
    // InternalSiddhiParser.g:8721:1: entryRuleBasicAbsentPatternSource returns [EObject current=null] : iv_ruleBasicAbsentPatternSource= ruleBasicAbsentPatternSource EOF ;
    public final EObject entryRuleBasicAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleBasicAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return current; }
            // InternalSiddhiParser.g:8721:65: (iv_ruleBasicAbsentPatternSource= ruleBasicAbsentPatternSource EOF )
            // InternalSiddhiParser.g:8722:2: iv_ruleBasicAbsentPatternSource= ruleBasicAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicAbsentPatternSource=ruleBasicAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, entryRuleBasicAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicAbsentPatternSource"


    // $ANTLR start "ruleBasicAbsentPatternSource"
    // InternalSiddhiParser.g:8728:1: ruleBasicAbsentPatternSource returns [EObject current=null] : ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) ) ;
    public final EObject ruleBasicAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleBasicAbsentPatternSource_StartIndex = input.index();
        EObject this_NOT_0 = null;

        EObject lv_basicSrc_1_0 = null;

        EObject lv_ft_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return current; }
            // InternalSiddhiParser.g:8734:2: ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) ) )
            // InternalSiddhiParser.g:8735:2: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) )
            {
            // InternalSiddhiParser.g:8735:2: ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) ) )
            // InternalSiddhiParser.g:8736:3: ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleForTime ) ) ) )=> (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) )
            {
            // InternalSiddhiParser.g:8750:3: (this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) ) )
            // InternalSiddhiParser.g:8751:4: this_NOT_0= ruleNOT ( (lv_basicSrc_1_0= ruleBasicSource ) ) ( (lv_ft_2_0= ruleForTime ) )
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBasicAbsentPatternSourceAccess().getNOTParserRuleCall_0_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_9);
            this_NOT_0=ruleNOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_NOT_0;
              				afterParserOrEnumRuleCall();
              			
            }
            // InternalSiddhiParser.g:8759:4: ( (lv_basicSrc_1_0= ruleBasicSource ) )
            // InternalSiddhiParser.g:8760:5: (lv_basicSrc_1_0= ruleBasicSource )
            {
            // InternalSiddhiParser.g:8760:5: (lv_basicSrc_1_0= ruleBasicSource )
            // InternalSiddhiParser.g:8761:6: lv_basicSrc_1_0= ruleBasicSource
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getBasicAbsentPatternSourceAccess().getBasicSrcBasicSourceParserRuleCall_0_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_86);
            lv_basicSrc_1_0=ruleBasicSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getBasicAbsentPatternSourceRule());
              						}
              						set(
              							current,
              							"basicSrc",
              							lv_basicSrc_1_0,
              							"org.xtext.example.siddhi.Siddhi.BasicSource");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSiddhiParser.g:8778:4: ( (lv_ft_2_0= ruleForTime ) )
            // InternalSiddhiParser.g:8779:5: (lv_ft_2_0= ruleForTime )
            {
            // InternalSiddhiParser.g:8779:5: (lv_ft_2_0= ruleForTime )
            // InternalSiddhiParser.g:8780:6: lv_ft_2_0= ruleForTime
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getBasicAbsentPatternSourceAccess().getFtForTimeParserRuleCall_0_2_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ft_2_0=ruleForTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getBasicAbsentPatternSourceRule());
              						}
              						set(
              							current,
              							"ft",
              							lv_ft_2_0,
              							"org.xtext.example.siddhi.Siddhi.ForTime");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, ruleBasicAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicAbsentPatternSource"


    // $ANTLR start "entryRuleForTime"
    // InternalSiddhiParser.g:8802:1: entryRuleForTime returns [EObject current=null] : iv_ruleForTime= ruleForTime EOF ;
    public final EObject entryRuleForTime() throws RecognitionException {
        EObject current = null;
        int entryRuleForTime_StartIndex = input.index();
        EObject iv_ruleForTime = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return current; }
            // InternalSiddhiParser.g:8802:48: (iv_ruleForTime= ruleForTime EOF )
            // InternalSiddhiParser.g:8803:2: iv_ruleForTime= ruleForTime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForTimeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleForTime=ruleForTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForTime; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, entryRuleForTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleForTime"


    // $ANTLR start "ruleForTime"
    // InternalSiddhiParser.g:8809:1: ruleForTime returns [EObject current=null] : (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) ;
    public final EObject ruleForTime() throws RecognitionException {
        EObject current = null;
        int ruleForTime_StartIndex = input.index();
        EObject this_FOR_0 = null;

        EObject lv_tv_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return current; }
            // InternalSiddhiParser.g:8815:2: ( (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) )
            // InternalSiddhiParser.g:8816:2: (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            {
            // InternalSiddhiParser.g:8816:2: (this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            // InternalSiddhiParser.g:8817:3: this_FOR_0= ruleFOR[$current] ( (lv_tv_1_0= ruleTimeValue ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getForTimeRule());
              			}
              			newCompositeNode(grammarAccess.getForTimeAccess().getFORParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_21);
            this_FOR_0=ruleFOR(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FOR_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:8828:3: ( (lv_tv_1_0= ruleTimeValue ) )
            // InternalSiddhiParser.g:8829:4: (lv_tv_1_0= ruleTimeValue )
            {
            // InternalSiddhiParser.g:8829:4: (lv_tv_1_0= ruleTimeValue )
            // InternalSiddhiParser.g:8830:5: lv_tv_1_0= ruleTimeValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForTimeAccess().getTvTimeValueParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_tv_1_0=ruleTimeValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForTimeRule());
              					}
              					set(
              						current,
              						"tv",
              						lv_tv_1_0,
              						"org.xtext.example.siddhi.Siddhi.TimeValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, ruleForTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleForTime"


    // $ANTLR start "entryRuleLeftAbsentPatternSource"
    // InternalSiddhiParser.g:8851:1: entryRuleLeftAbsentPatternSource returns [EObject current=null] : iv_ruleLeftAbsentPatternSource= ruleLeftAbsentPatternSource EOF ;
    public final EObject entryRuleLeftAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleLeftAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return current; }
            // InternalSiddhiParser.g:8851:64: (iv_ruleLeftAbsentPatternSource= ruleLeftAbsentPatternSource EOF )
            // InternalSiddhiParser.g:8852:2: iv_ruleLeftAbsentPatternSource= ruleLeftAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentPatternSource=ruleLeftAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, entryRuleLeftAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentPatternSource"


    // $ANTLR start "ruleLeftAbsentPatternSource"
    // InternalSiddhiParser.g:8858:1: ruleLeftAbsentPatternSource returns [EObject current=null] : (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* ) ;
    public final EObject ruleLeftAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentPatternSource_StartIndex = input.index();
        Token lv_fb1_2_0=null;
        EObject this_LeftAbsentPatternSource1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return current; }
            // InternalSiddhiParser.g:8864:2: ( (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:8865:2: (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:8865:2: (this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )* )
            // InternalSiddhiParser.g:8866:3: this_LeftAbsentPatternSource1_0= ruleLeftAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_82);
            this_LeftAbsentPatternSource1_0=ruleLeftAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentPatternSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:8874:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==HyphenMinusGreaterThanSign) ) {
                    int LA105_2 = input.LA(2);

                    if ( (synpred80_InternalSiddhiParser()) ) {
                        alt105=1;
                    }


                }


                switch (alt105) {
            	case 1 :
            	    // InternalSiddhiParser.g:8875:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:8890:4: ( () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) ) )
            	    // InternalSiddhiParser.g:8891:5: () ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:8891:5: ()
            	    // InternalSiddhiParser.g:8892:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSourceLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:8898:5: ( (lv_fb1_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:8899:6: (lv_fb1_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:8899:6: (lv_fb1_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:8900:7: lv_fb1_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb1_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb1_2_0, grammarAccess.getLeftAbsentPatternSourceAccess().getFb1HyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentPatternSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "fb1", lv_fb1_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:8912:5: ( (lv_right_3_0= ruleLeftAbsentPatternSource1 ) )
            	    // InternalSiddhiParser.g:8913:6: (lv_right_3_0= ruleLeftAbsentPatternSource1 )
            	    {
            	    // InternalSiddhiParser.g:8913:6: (lv_right_3_0= ruleLeftAbsentPatternSource1 )
            	    // InternalSiddhiParser.g:8914:7: lv_right_3_0= ruleLeftAbsentPatternSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentPatternSourceAccess().getRightLeftAbsentPatternSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_right_3_0=ruleLeftAbsentPatternSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.LeftAbsentPatternSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, ruleLeftAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentPatternSource"


    // $ANTLR start "entryRuleLeftAbsentPatternSource1"
    // InternalSiddhiParser.g:8937:1: entryRuleLeftAbsentPatternSource1 returns [EObject current=null] : iv_ruleLeftAbsentPatternSource1= ruleLeftAbsentPatternSource1 EOF ;
    public final EObject entryRuleLeftAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentPatternSource1_StartIndex = input.index();
        EObject iv_ruleLeftAbsentPatternSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return current; }
            // InternalSiddhiParser.g:8937:65: (iv_ruleLeftAbsentPatternSource1= ruleLeftAbsentPatternSource1 EOF )
            // InternalSiddhiParser.g:8938:2: iv_ruleLeftAbsentPatternSource1= ruleLeftAbsentPatternSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentPatternSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentPatternSource1=ruleLeftAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentPatternSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, entryRuleLeftAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentPatternSource1"


    // $ANTLR start "ruleLeftAbsentPatternSource1"
    // InternalSiddhiParser.g:8944:1: ruleLeftAbsentPatternSource1 returns [EObject current=null] : (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) ;
    public final EObject ruleLeftAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentPatternSource1_StartIndex = input.index();
        Token lv_fb_2_0=null;
        EObject this_LeftAbsentPatternSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return current; }
            // InternalSiddhiParser.g:8950:2: ( (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) )
            // InternalSiddhiParser.g:8951:2: (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            {
            // InternalSiddhiParser.g:8951:2: (this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            // InternalSiddhiParser.g:8952:3: this_LeftAbsentPatternSource2_0= ruleLeftAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_82);
            this_LeftAbsentPatternSource2_0=ruleLeftAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LeftAbsentPatternSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:8960:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==HyphenMinusGreaterThanSign) ) {
                    int LA106_1 = input.LA(2);

                    if ( (synpred81_InternalSiddhiParser()) ) {
                        alt106=1;
                    }


                }


                switch (alt106) {
            	case 1 :
            	    // InternalSiddhiParser.g:8961:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    {
            	    // InternalSiddhiParser.g:8976:4: ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    // InternalSiddhiParser.g:8977:5: () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    {
            	    // InternalSiddhiParser.g:8977:5: ()
            	    // InternalSiddhiParser.g:8978:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:8984:5: ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:8985:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:8985:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:8986:7: lv_fb_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_87); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb_2_0, grammarAccess.getLeftAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getLeftAbsentPatternSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "fb", lv_fb_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:8998:5: ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    // InternalSiddhiParser.g:8999:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    {
            	    // InternalSiddhiParser.g:8999:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    // InternalSiddhiParser.g:9000:7: lv_right_3_0= ruleEveryAbsentPatternSource
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_right_3_0=ruleEveryAbsentPatternSource();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, ruleLeftAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentPatternSource1"


    // $ANTLR start "entryRuleLeftAbsentPatternSource2"
    // InternalSiddhiParser.g:9023:1: entryRuleLeftAbsentPatternSource2 returns [EObject current=null] : iv_ruleLeftAbsentPatternSource2= ruleLeftAbsentPatternSource2 EOF ;
    public final EObject entryRuleLeftAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleLeftAbsentPatternSource2_StartIndex = input.index();
        EObject iv_ruleLeftAbsentPatternSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return current; }
            // InternalSiddhiParser.g:9023:65: (iv_ruleLeftAbsentPatternSource2= ruleLeftAbsentPatternSource2 EOF )
            // InternalSiddhiParser.g:9024:2: iv_ruleLeftAbsentPatternSource2= ruleLeftAbsentPatternSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLeftAbsentPatternSource2=ruleLeftAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftAbsentPatternSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, entryRuleLeftAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLeftAbsentPatternSource2"


    // $ANTLR start "ruleLeftAbsentPatternSource2"
    // InternalSiddhiParser.g:9030:1: ruleLeftAbsentPatternSource2 returns [EObject current=null] : ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) ) ;
    public final EObject ruleLeftAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int ruleLeftAbsentPatternSource2_StartIndex = input.index();
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject this_EVERY_0 = null;

        EObject lv_leftAbsPS_2_0 = null;

        EObject lv_wt2_4_0 = null;

        EObject lv_everyAbsPS_5_0 = null;

        EObject lv_everyPSC_7_0 = null;

        EObject lv_everyPSC_8_0 = null;

        EObject lv_leftAbsPatternSrc_10_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return current; }
            // InternalSiddhiParser.g:9036:2: ( ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) ) )
            // InternalSiddhiParser.g:9037:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:9037:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) ) )
            int alt109=3;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==Every) ) {
                int LA109_1 = input.LA(2);

                if ( (synpred82_InternalSiddhiParser()) ) {
                    alt109=1;
                }
                else if ( (synpred83_InternalSiddhiParser()) ) {
                    alt109=2;
                }
                else if ( (synpred84_InternalSiddhiParser()) ) {
                    alt109=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 109, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA109_0==LeftParenthesis) ) {
                int LA109_2 = input.LA(2);

                if ( (synpred82_InternalSiddhiParser()) ) {
                    alt109=1;
                }
                else if ( (synpred84_InternalSiddhiParser()) ) {
                    alt109=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 109, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA109_0==Not) ) {
                int LA109_3 = input.LA(2);

                if ( (synpred83_InternalSiddhiParser()) ) {
                    alt109=2;
                }
                else if ( (synpred84_InternalSiddhiParser()) ) {
                    alt109=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 109, 3, input);

                    throw nvae;
                }
            }
            else if ( (LA109_0==RULE_ID) && (synpred84_InternalSiddhiParser())) {
                alt109=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalSiddhiParser.g:9038:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:9038:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:9039:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:9057:4: ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:9058:5: (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt2_4_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:9058:5: (this_EVERY_0= ruleEVERY )?
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==Every) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            // InternalSiddhiParser.g:9059:6: this_EVERY_0= ruleEVERY
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            this_EVERY_0=ruleEVERY();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVERY_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:9075:5: ( (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource ) )
                    // InternalSiddhiParser.g:9076:6: (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:9076:6: (lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource )
                    // InternalSiddhiParser.g:9077:7: lv_leftAbsPS_2_0= ruleLeftAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPSLeftAbsentPatternSourceParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_leftAbsPS_2_0=ruleLeftAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsPS",
                      								lv_leftAbsPS_2_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:9101:5: ( (lv_wt2_4_0= ruleWithinTime ) )?
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==Within) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            // InternalSiddhiParser.g:9102:6: (lv_wt2_4_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:9102:6: (lv_wt2_4_0= ruleWithinTime )
                            // InternalSiddhiParser.g:9103:7: lv_wt2_4_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getWt2WithinTimeParserRuleCall_0_0_4_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt2_4_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                              							}
                              							add(
                              								current,
                              								"wt2",
                              								lv_wt2_4_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:9123:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) )
                    {
                    // InternalSiddhiParser.g:9123:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) ) )
                    // InternalSiddhiParser.g:9124:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )=> ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) )
                    {
                    // InternalSiddhiParser.g:9138:4: ( ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) ) )
                    // InternalSiddhiParser.g:9139:5: ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) )
                    {
                    // InternalSiddhiParser.g:9139:5: ( (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource ) )
                    // InternalSiddhiParser.g:9140:6: (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:9140:6: (lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource )
                    // InternalSiddhiParser.g:9141:7: lv_everyAbsPS_5_0= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEveryAbsPSEveryAbsentPatternSourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_everyAbsPS_5_0=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyAbsPS",
                      								lv_everyAbsPS_5_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:9162:5: ( (lv_everyPSC_7_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:9163:6: (lv_everyPSC_7_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:9163:6: (lv_everyPSC_7_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:9164:7: lv_everyPSC_7_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everyPSC_7_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyPSC",
                      								lv_everyPSC_7_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:9184:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:9184:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:9185:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:9199:4: ( ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:9200:5: ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:9200:5: ( (lv_everyPSC_8_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:9201:6: (lv_everyPSC_8_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:9201:6: (lv_everyPSC_8_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:9202:7: lv_everyPSC_8_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_everyPSC_8_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyPSC",
                      								lv_everyPSC_8_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:9223:5: ( (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource ) )
                    // InternalSiddhiParser.g:9224:6: (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:9224:6: (lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource )
                    // InternalSiddhiParser.g:9225:7: lv_leftAbsPatternSrc_10_0= ruleLeftAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPatternSrcLeftAbsentPatternSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_leftAbsPatternSrc_10_0=ruleLeftAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLeftAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"leftAbsPatternSrc",
                      								lv_leftAbsPatternSrc_10_0,
                      								"org.xtext.example.siddhi.Siddhi.LeftAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, ruleLeftAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLeftAbsentPatternSource2"


    // $ANTLR start "entryRuleRightAbsentPatternSource"
    // InternalSiddhiParser.g:9248:1: entryRuleRightAbsentPatternSource returns [EObject current=null] : iv_ruleRightAbsentPatternSource= ruleRightAbsentPatternSource EOF ;
    public final EObject entryRuleRightAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentPatternSource_StartIndex = input.index();
        EObject iv_ruleRightAbsentPatternSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return current; }
            // InternalSiddhiParser.g:9248:65: (iv_ruleRightAbsentPatternSource= ruleRightAbsentPatternSource EOF )
            // InternalSiddhiParser.g:9249:2: iv_ruleRightAbsentPatternSource= ruleRightAbsentPatternSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentPatternSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentPatternSource=ruleRightAbsentPatternSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentPatternSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, entryRuleRightAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentPatternSource"


    // $ANTLR start "ruleRightAbsentPatternSource"
    // InternalSiddhiParser.g:9255:1: ruleRightAbsentPatternSource returns [EObject current=null] : (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* ) ;
    public final EObject ruleRightAbsentPatternSource() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentPatternSource_StartIndex = input.index();
        Token lv_fb2_2_0=null;
        EObject this_RightAbsentPatternSource1_0 = null;

        EObject lv_right1_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return current; }
            // InternalSiddhiParser.g:9261:2: ( (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* ) )
            // InternalSiddhiParser.g:9262:2: (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* )
            {
            // InternalSiddhiParser.g:9262:2: (this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )* )
            // InternalSiddhiParser.g:9263:3: this_RightAbsentPatternSource1_0= ruleRightAbsentPatternSource1 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSource1ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_82);
            this_RightAbsentPatternSource1_0=ruleRightAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentPatternSource1_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:9271:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==HyphenMinusGreaterThanSign) ) {
                    int LA110_2 = input.LA(2);

                    if ( (synpred85_InternalSiddhiParser()) ) {
                        alt110=1;
                    }


                }


                switch (alt110) {
            	case 1 :
            	    // InternalSiddhiParser.g:9272:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )=> ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) )
            	    {
            	    // InternalSiddhiParser.g:9287:4: ( () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) ) )
            	    // InternalSiddhiParser.g:9288:5: () ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) )
            	    {
            	    // InternalSiddhiParser.g:9288:5: ()
            	    // InternalSiddhiParser.g:9289:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSourceLeft1Action_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:9295:5: ( (lv_fb2_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:9296:6: (lv_fb2_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:9296:6: (lv_fb2_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:9297:7: lv_fb2_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb2_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb2_2_0, grammarAccess.getRightAbsentPatternSourceAccess().getFb2HyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentPatternSourceRule());
            	      							}
            	      							setWithLastConsumed(current, "fb2", lv_fb2_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:9309:5: ( (lv_right1_3_0= ruleRightAbsentPatternSource1 ) )
            	    // InternalSiddhiParser.g:9310:6: (lv_right1_3_0= ruleRightAbsentPatternSource1 )
            	    {
            	    // InternalSiddhiParser.g:9310:6: (lv_right1_3_0= ruleRightAbsentPatternSource1 )
            	    // InternalSiddhiParser.g:9311:7: lv_right1_3_0= ruleRightAbsentPatternSource1
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentPatternSourceAccess().getRight1RightAbsentPatternSource1ParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_right1_3_0=ruleRightAbsentPatternSource1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSourceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right1",
            	      								lv_right1_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.RightAbsentPatternSource1");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, ruleRightAbsentPatternSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentPatternSource"


    // $ANTLR start "entryRuleRightAbsentPatternSource1"
    // InternalSiddhiParser.g:9334:1: entryRuleRightAbsentPatternSource1 returns [EObject current=null] : iv_ruleRightAbsentPatternSource1= ruleRightAbsentPatternSource1 EOF ;
    public final EObject entryRuleRightAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentPatternSource1_StartIndex = input.index();
        EObject iv_ruleRightAbsentPatternSource1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return current; }
            // InternalSiddhiParser.g:9334:66: (iv_ruleRightAbsentPatternSource1= ruleRightAbsentPatternSource1 EOF )
            // InternalSiddhiParser.g:9335:2: iv_ruleRightAbsentPatternSource1= ruleRightAbsentPatternSource1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentPatternSource1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentPatternSource1=ruleRightAbsentPatternSource1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentPatternSource1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, entryRuleRightAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentPatternSource1"


    // $ANTLR start "ruleRightAbsentPatternSource1"
    // InternalSiddhiParser.g:9341:1: ruleRightAbsentPatternSource1 returns [EObject current=null] : (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) ;
    public final EObject ruleRightAbsentPatternSource1() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentPatternSource1_StartIndex = input.index();
        Token lv_fb_2_0=null;
        EObject this_RightAbsentPatternSource2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return current; }
            // InternalSiddhiParser.g:9347:2: ( (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* ) )
            // InternalSiddhiParser.g:9348:2: (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            {
            // InternalSiddhiParser.g:9348:2: (this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )* )
            // InternalSiddhiParser.g:9349:3: this_RightAbsentPatternSource2_0= ruleRightAbsentPatternSource2 ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource2ParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_82);
            this_RightAbsentPatternSource2_0=ruleRightAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RightAbsentPatternSource2_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:9357:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) ) )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==HyphenMinusGreaterThanSign) ) {
                    int LA111_1 = input.LA(2);

                    if ( (synpred86_InternalSiddhiParser()) ) {
                        alt111=1;
                    }


                }


                switch (alt111) {
            	case 1 :
            	    // InternalSiddhiParser.g:9358:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    {
            	    // InternalSiddhiParser.g:9373:4: ( () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) ) )
            	    // InternalSiddhiParser.g:9374:5: () ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    {
            	    // InternalSiddhiParser.g:9374:5: ()
            	    // InternalSiddhiParser.g:9375:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource1LeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:9381:5: ( (lv_fb_2_0= HyphenMinusGreaterThanSign ) )
            	    // InternalSiddhiParser.g:9382:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    {
            	    // InternalSiddhiParser.g:9382:6: (lv_fb_2_0= HyphenMinusGreaterThanSign )
            	    // InternalSiddhiParser.g:9383:7: lv_fb_2_0= HyphenMinusGreaterThanSign
            	    {
            	    lv_fb_2_0=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_87); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_fb_2_0, grammarAccess.getRightAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getRightAbsentPatternSource1Rule());
            	      							}
            	      							setWithLastConsumed(current, "fb", lv_fb_2_0, "->");
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:9395:5: ( (lv_right_3_0= ruleEveryAbsentPatternSource ) )
            	    // InternalSiddhiParser.g:9396:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    {
            	    // InternalSiddhiParser.g:9396:6: (lv_right_3_0= ruleEveryAbsentPatternSource )
            	    // InternalSiddhiParser.g:9397:7: lv_right_3_0= ruleEveryAbsentPatternSource
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRightAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_right_3_0=ruleEveryAbsentPatternSource();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource1Rule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, ruleRightAbsentPatternSource1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentPatternSource1"


    // $ANTLR start "entryRuleRightAbsentPatternSource2"
    // InternalSiddhiParser.g:9420:1: entryRuleRightAbsentPatternSource2 returns [EObject current=null] : iv_ruleRightAbsentPatternSource2= ruleRightAbsentPatternSource2 EOF ;
    public final EObject entryRuleRightAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int entryRuleRightAbsentPatternSource2_StartIndex = input.index();
        EObject iv_ruleRightAbsentPatternSource2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return current; }
            // InternalSiddhiParser.g:9420:66: (iv_ruleRightAbsentPatternSource2= ruleRightAbsentPatternSource2 EOF )
            // InternalSiddhiParser.g:9421:2: iv_ruleRightAbsentPatternSource2= ruleRightAbsentPatternSource2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRightAbsentPatternSource2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRightAbsentPatternSource2=ruleRightAbsentPatternSource2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRightAbsentPatternSource2; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, entryRuleRightAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleRightAbsentPatternSource2"


    // $ANTLR start "ruleRightAbsentPatternSource2"
    // InternalSiddhiParser.g:9427:1: ruleRightAbsentPatternSource2 returns [EObject current=null] : ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) ) ;
    public final EObject ruleRightAbsentPatternSource2() throws RecognitionException {
        EObject current = null;
        int ruleRightAbsentPatternSource2_StartIndex = input.index();
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject this_EVERY_0 = null;

        EObject lv_rightAbsPS_2_0 = null;

        EObject lv_wt3_4_0 = null;

        EObject lv_everyPSC1_5_0 = null;

        EObject lv_everyAbsPS1_7_0 = null;

        EObject lv_everyAbsPS1_8_0 = null;

        EObject lv_rightAbsPS_10_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return current; }
            // InternalSiddhiParser.g:9433:2: ( ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) ) )
            // InternalSiddhiParser.g:9434:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) )
            {
            // InternalSiddhiParser.g:9434:2: ( ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) ) | ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) ) )
            int alt114=3;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Every) ) {
                int LA114_1 = input.LA(2);

                if ( (synpred87_InternalSiddhiParser()) ) {
                    alt114=1;
                }
                else if ( (synpred88_InternalSiddhiParser()) ) {
                    alt114=2;
                }
                else if ( (synpred89_InternalSiddhiParser()) ) {
                    alt114=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA114_0==LeftParenthesis) ) {
                int LA114_2 = input.LA(2);

                if ( (synpred87_InternalSiddhiParser()) ) {
                    alt114=1;
                }
                else if ( (synpred88_InternalSiddhiParser()) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA114_0==RULE_ID) && (synpred88_InternalSiddhiParser())) {
                alt114=2;
            }
            else if ( (LA114_0==Not) ) {
                int LA114_4 = input.LA(2);

                if ( (synpred88_InternalSiddhiParser()) ) {
                    alt114=2;
                }
                else if ( (synpred89_InternalSiddhiParser()) ) {
                    alt114=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 4, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalSiddhiParser.g:9435:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) )
                    {
                    // InternalSiddhiParser.g:9435:3: ( ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? ) )
                    // InternalSiddhiParser.g:9436:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )=> ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? )
                    {
                    // InternalSiddhiParser.g:9454:4: ( (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )? )
                    // InternalSiddhiParser.g:9455:5: (this_EVERY_0= ruleEVERY )? ruleOPEN_PAR ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( (lv_wt3_4_0= ruleWithinTime ) )?
                    {
                    // InternalSiddhiParser.g:9455:5: (this_EVERY_0= ruleEVERY )?
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==Every) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            // InternalSiddhiParser.g:9456:6: this_EVERY_0= ruleEVERY
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            this_EVERY_0=ruleEVERY();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_EVERY_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:9472:5: ( (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource ) )
                    // InternalSiddhiParser.g:9473:6: (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:9473:6: (lv_rightAbsPS_2_0= ruleRightAbsentPatternSource )
                    // InternalSiddhiParser.g:9474:7: lv_rightAbsPS_2_0= ruleRightAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_rightAbsPS_2_0=ruleRightAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsPS",
                      								lv_rightAbsPS_2_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalSiddhiParser.g:9498:5: ( (lv_wt3_4_0= ruleWithinTime ) )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==Within) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalSiddhiParser.g:9499:6: (lv_wt3_4_0= ruleWithinTime )
                            {
                            // InternalSiddhiParser.g:9499:6: (lv_wt3_4_0= ruleWithinTime )
                            // InternalSiddhiParser.g:9500:7: lv_wt3_4_0= ruleWithinTime
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getWt3WithinTimeParserRuleCall_0_0_4_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_wt3_4_0=ruleWithinTime();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                              							}
                              							add(
                              								current,
                              								"wt3",
                              								lv_wt3_4_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTime");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:9520:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:9520:3: ( ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:9521:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )=> ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:9535:4: ( ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:9536:5: ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) ) otherlv_6= HyphenMinusGreaterThanSign ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:9536:5: ( (lv_everyPSC1_5_0= ruleEveryPatternSourceChain ) )
                    // InternalSiddhiParser.g:9537:6: (lv_everyPSC1_5_0= ruleEveryPatternSourceChain )
                    {
                    // InternalSiddhiParser.g:9537:6: (lv_everyPSC1_5_0= ruleEveryPatternSourceChain )
                    // InternalSiddhiParser.g:9538:7: lv_everyPSC1_5_0= ruleEveryPatternSourceChain
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEveryPSC1EveryPatternSourceChainParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_everyPSC1_5_0=ruleEveryPatternSourceChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyPSC1",
                      								lv_everyPSC1_5_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryPatternSourceChain");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:9559:5: ( (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource ) )
                    // InternalSiddhiParser.g:9560:6: (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:9560:6: (lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource )
                    // InternalSiddhiParser.g:9561:7: lv_everyAbsPS1_7_0= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_everyAbsPS1_7_0=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyAbsPS1",
                      								lv_everyAbsPS1_7_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:9581:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) )
                    {
                    // InternalSiddhiParser.g:9581:3: ( ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) ) )
                    // InternalSiddhiParser.g:9582:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )=> ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) )
                    {
                    // InternalSiddhiParser.g:9596:4: ( ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) ) )
                    // InternalSiddhiParser.g:9597:5: ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) ) otherlv_9= HyphenMinusGreaterThanSign ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) )
                    {
                    // InternalSiddhiParser.g:9597:5: ( (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource ) )
                    // InternalSiddhiParser.g:9598:6: (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:9598:6: (lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource )
                    // InternalSiddhiParser.g:9599:7: lv_everyAbsPS1_8_0= ruleEveryAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_everyAbsPS1_8_0=ruleEveryAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"everyAbsPS1",
                      								lv_everyAbsPS1_8_0,
                      								"org.xtext.example.siddhi.Siddhi.EveryAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1());
                      				
                    }
                    // InternalSiddhiParser.g:9620:5: ( (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource ) )
                    // InternalSiddhiParser.g:9621:6: (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource )
                    {
                    // InternalSiddhiParser.g:9621:6: (lv_rightAbsPS_10_0= ruleRightAbsentPatternSource )
                    // InternalSiddhiParser.g:9622:7: lv_rightAbsPS_10_0= ruleRightAbsentPatternSource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_2_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_rightAbsPS_10_0=ruleRightAbsentPatternSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRightAbsentPatternSource2Rule());
                      							}
                      							set(
                      								current,
                      								"rightAbsPS",
                      								lv_rightAbsPS_10_0,
                      								"org.xtext.example.siddhi.Siddhi.RightAbsentPatternSource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, ruleRightAbsentPatternSource2_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRightAbsentPatternSource2"


    // $ANTLR start "entryRuleJoinStream"
    // InternalSiddhiParser.g:9645:1: entryRuleJoinStream returns [EObject current=null] : iv_ruleJoinStream= ruleJoinStream EOF ;
    public final EObject entryRuleJoinStream() throws RecognitionException {
        EObject current = null;
        int entryRuleJoinStream_StartIndex = input.index();
        EObject iv_ruleJoinStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return current; }
            // InternalSiddhiParser.g:9645:51: (iv_ruleJoinStream= ruleJoinStream EOF )
            // InternalSiddhiParser.g:9646:2: iv_ruleJoinStream= ruleJoinStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJoinStream=ruleJoinStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJoinStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, entryRuleJoinStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleJoinStream"


    // $ANTLR start "ruleJoinStream"
    // InternalSiddhiParser.g:9652:1: ruleJoinStream returns [EObject current=null] : ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) ) ( (lv_right_source_9_0= ruleJoinSource ) ) ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )? ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_16_0= rulejoins ) ) ( (lv_right_source_17_0= ruleJoinSource ) ) ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )? ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_22= ruleStandardStream ) ) ;
    public final EObject ruleJoinStream() throws RecognitionException {
        EObject current = null;
        int ruleJoinStream_StartIndex = input.index();
        EObject lv_left_source_0_0 = null;

        EObject lv_right_source_1_0 = null;

        EObject lv_right_uni_2_0 = null;

        EObject lv_on_3_0 = null;

        EObject lv_expr_4_0 = null;

        EObject lv_wtr_5_0 = null;

        EObject lv_p_6_0 = null;

        EObject lv_left_source_7_0 = null;

        EObject lv_join_8_0 = null;

        EObject lv_right_source_9_0 = null;

        EObject lv_on_10_0 = null;

        EObject lv_expr_11_0 = null;

        EObject lv_wtr_12_0 = null;

        EObject lv_p_13_0 = null;

        EObject lv_left_source_14_0 = null;

        EObject lv_left_uni_15_0 = null;

        EObject lv_join_16_0 = null;

        EObject lv_right_source_17_0 = null;

        EObject lv_on_18_0 = null;

        EObject lv_expr_19_0 = null;

        EObject lv_wtr_20_0 = null;

        EObject lv_p_21_0 = null;

        EObject this_StandardStream_22 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return current; }
            // InternalSiddhiParser.g:9658:2: ( ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) ) ( (lv_right_source_9_0= ruleJoinSource ) ) ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )? ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_16_0= rulejoins ) ) ( (lv_right_source_17_0= ruleJoinSource ) ) ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )? ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_22= ruleStandardStream ) ) )
            // InternalSiddhiParser.g:9659:2: ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) ) ( (lv_right_source_9_0= ruleJoinSource ) ) ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )? ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_16_0= rulejoins ) ) ( (lv_right_source_17_0= ruleJoinSource ) ) ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )? ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_22= ruleStandardStream ) )
            {
            // InternalSiddhiParser.g:9659:2: ( ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) ) ( (lv_right_source_9_0= ruleJoinSource ) ) ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )? ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )? ) | ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_16_0= rulejoins ) ) ( (lv_right_source_17_0= ruleJoinSource ) ) ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )? ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )? ) | ( ( ruleStandardStream )=>this_StandardStream_22= ruleStandardStream ) )
            int alt121=4;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_ID) ) {
                int LA121_1 = input.LA(2);

                if ( (synpred90_InternalSiddhiParser()) ) {
                    alt121=1;
                }
                else if ( (synpred91_InternalSiddhiParser()) ) {
                    alt121=2;
                }
                else if ( (synpred92_InternalSiddhiParser()) ) {
                    alt121=3;
                }
                else if ( (synpred93_InternalSiddhiParser()) ) {
                    alt121=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 121, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalSiddhiParser.g:9660:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )? )
                    {
                    // InternalSiddhiParser.g:9660:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )? )
                    // InternalSiddhiParser.g:9661:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) ) ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) ) ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )? ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )?
                    {
                    // InternalSiddhiParser.g:9661:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) ) )
                    // InternalSiddhiParser.g:9662:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )=> ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) )
                    {
                    // InternalSiddhiParser.g:9675:5: ( ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) ) )
                    // InternalSiddhiParser.g:9676:6: ( (lv_left_source_0_0= ruleJoinSource ) ) ( (lv_right_source_1_0= ruleJoinSource ) )
                    {
                    // InternalSiddhiParser.g:9676:6: ( (lv_left_source_0_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:9677:7: (lv_left_source_0_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:9677:7: (lv_left_source_0_0= ruleJoinSource )
                    // InternalSiddhiParser.g:9678:8: lv_left_source_0_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_0_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_left_source_0_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_source",
                      									lv_left_source_0_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9695:6: ( (lv_right_source_1_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:9696:7: (lv_right_source_1_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:9696:7: (lv_right_source_1_0= ruleJoinSource )
                    // InternalSiddhiParser.g:9697:8: lv_right_source_1_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_0_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_right_source_1_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"right_source",
                      									lv_right_source_1_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:9716:4: ( (lv_right_uni_2_0= ruleUNIDIRECTIONAL ) )
                    // InternalSiddhiParser.g:9717:5: (lv_right_uni_2_0= ruleUNIDIRECTIONAL )
                    {
                    // InternalSiddhiParser.g:9717:5: (lv_right_uni_2_0= ruleUNIDIRECTIONAL )
                    // InternalSiddhiParser.g:9718:6: lv_right_uni_2_0= ruleUNIDIRECTIONAL
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_uniUNIDIRECTIONALParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    lv_right_uni_2_0=ruleUNIDIRECTIONAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"right_uni",
                      							lv_right_uni_2_0,
                      							"org.xtext.example.siddhi.Siddhi.UNIDIRECTIONAL");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9735:4: ( ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) ) )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==On) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalSiddhiParser.g:9736:5: ( (lv_on_3_0= ruleON ) ) ( (lv_expr_4_0= ruleExpression ) )
                            {
                            // InternalSiddhiParser.g:9736:5: ( (lv_on_3_0= ruleON ) )
                            // InternalSiddhiParser.g:9737:6: (lv_on_3_0= ruleON )
                            {
                            // InternalSiddhiParser.g:9737:6: (lv_on_3_0= ruleON )
                            // InternalSiddhiParser.g:9738:7: lv_on_3_0= ruleON
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_44);
                            lv_on_3_0=ruleON();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"on",
                              								lv_on_3_0,
                              								"org.xtext.example.siddhi.Siddhi.ON");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:9755:5: ( (lv_expr_4_0= ruleExpression ) )
                            // InternalSiddhiParser.g:9756:6: (lv_expr_4_0= ruleExpression )
                            {
                            // InternalSiddhiParser.g:9756:6: (lv_expr_4_0= ruleExpression )
                            // InternalSiddhiParser.g:9757:7: lv_expr_4_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_75);
                            lv_expr_4_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"expr",
                              								lv_expr_4_0,
                              								"org.xtext.example.siddhi.Siddhi.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:9775:4: ( ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) ) )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==Within) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // InternalSiddhiParser.g:9776:5: ( (lv_wtr_5_0= ruleWithinTimeRange ) ) ( (lv_p_6_0= rulePer1 ) )
                            {
                            // InternalSiddhiParser.g:9776:5: ( (lv_wtr_5_0= ruleWithinTimeRange ) )
                            // InternalSiddhiParser.g:9777:6: (lv_wtr_5_0= ruleWithinTimeRange )
                            {
                            // InternalSiddhiParser.g:9777:6: (lv_wtr_5_0= ruleWithinTimeRange )
                            // InternalSiddhiParser.g:9778:7: lv_wtr_5_0= ruleWithinTimeRange
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getWtrWithinTimeRangeParserRuleCall_0_3_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_91);
                            lv_wtr_5_0=ruleWithinTimeRange();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"wtr",
                              								lv_wtr_5_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTimeRange");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:9795:5: ( (lv_p_6_0= rulePer1 ) )
                            // InternalSiddhiParser.g:9796:6: (lv_p_6_0= rulePer1 )
                            {
                            // InternalSiddhiParser.g:9796:6: (lv_p_6_0= rulePer1 )
                            // InternalSiddhiParser.g:9797:7: lv_p_6_0= rulePer1
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getPPer1ParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_p_6_0=rulePer1();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"p",
                              								lv_p_6_0,
                              								"org.xtext.example.siddhi.Siddhi.Per1");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:9817:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) ) ( (lv_right_source_9_0= ruleJoinSource ) ) ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )? ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )? )
                    {
                    // InternalSiddhiParser.g:9817:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) ) ( (lv_right_source_9_0= ruleJoinSource ) ) ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )? ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )? )
                    // InternalSiddhiParser.g:9818:4: ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) ) ( (lv_right_source_9_0= ruleJoinSource ) ) ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )? ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )?
                    {
                    // InternalSiddhiParser.g:9818:4: ( ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) ) )
                    // InternalSiddhiParser.g:9819:5: ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )=> ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) )
                    {
                    // InternalSiddhiParser.g:9832:5: ( ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) ) )
                    // InternalSiddhiParser.g:9833:6: ( (lv_left_source_7_0= ruleJoinSource ) ) ( (lv_join_8_0= rulejoins ) )
                    {
                    // InternalSiddhiParser.g:9833:6: ( (lv_left_source_7_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:9834:7: (lv_left_source_7_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:9834:7: (lv_left_source_7_0= ruleJoinSource )
                    // InternalSiddhiParser.g:9835:8: lv_left_source_7_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_1_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_92);
                    lv_left_source_7_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_source",
                      									lv_left_source_7_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9852:6: ( (lv_join_8_0= rulejoins ) )
                    // InternalSiddhiParser.g:9853:7: (lv_join_8_0= rulejoins )
                    {
                    // InternalSiddhiParser.g:9853:7: (lv_join_8_0= rulejoins )
                    // InternalSiddhiParser.g:9854:8: lv_join_8_0= rulejoins
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_1_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_join_8_0=rulejoins();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"join",
                      									lv_join_8_0,
                      									"org.xtext.example.siddhi.Siddhi.joins");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:9873:4: ( (lv_right_source_9_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:9874:5: (lv_right_source_9_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:9874:5: (lv_right_source_9_0= ruleJoinSource )
                    // InternalSiddhiParser.g:9875:6: lv_right_source_9_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    lv_right_source_9_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"right_source",
                      							lv_right_source_9_0,
                      							"org.xtext.example.siddhi.Siddhi.JoinSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:9892:4: ( ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) ) )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==On) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalSiddhiParser.g:9893:5: ( (lv_on_10_0= ruleON ) ) ( (lv_expr_11_0= ruleExpression ) )
                            {
                            // InternalSiddhiParser.g:9893:5: ( (lv_on_10_0= ruleON ) )
                            // InternalSiddhiParser.g:9894:6: (lv_on_10_0= ruleON )
                            {
                            // InternalSiddhiParser.g:9894:6: (lv_on_10_0= ruleON )
                            // InternalSiddhiParser.g:9895:7: lv_on_10_0= ruleON
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_1_2_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_44);
                            lv_on_10_0=ruleON();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"on",
                              								lv_on_10_0,
                              								"org.xtext.example.siddhi.Siddhi.ON");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:9912:5: ( (lv_expr_11_0= ruleExpression ) )
                            // InternalSiddhiParser.g:9913:6: (lv_expr_11_0= ruleExpression )
                            {
                            // InternalSiddhiParser.g:9913:6: (lv_expr_11_0= ruleExpression )
                            // InternalSiddhiParser.g:9914:7: lv_expr_11_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_1_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_75);
                            lv_expr_11_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"expr",
                              								lv_expr_11_0,
                              								"org.xtext.example.siddhi.Siddhi.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:9932:4: ( ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) ) )?
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==Within) ) {
                        alt118=1;
                    }
                    switch (alt118) {
                        case 1 :
                            // InternalSiddhiParser.g:9933:5: ( (lv_wtr_12_0= ruleWithinTimeRange ) ) ( (lv_p_13_0= rulePer1 ) )
                            {
                            // InternalSiddhiParser.g:9933:5: ( (lv_wtr_12_0= ruleWithinTimeRange ) )
                            // InternalSiddhiParser.g:9934:6: (lv_wtr_12_0= ruleWithinTimeRange )
                            {
                            // InternalSiddhiParser.g:9934:6: (lv_wtr_12_0= ruleWithinTimeRange )
                            // InternalSiddhiParser.g:9935:7: lv_wtr_12_0= ruleWithinTimeRange
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getWtrWithinTimeRangeParserRuleCall_1_3_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_91);
                            lv_wtr_12_0=ruleWithinTimeRange();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"wtr",
                              								lv_wtr_12_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTimeRange");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:9952:5: ( (lv_p_13_0= rulePer1 ) )
                            // InternalSiddhiParser.g:9953:6: (lv_p_13_0= rulePer1 )
                            {
                            // InternalSiddhiParser.g:9953:6: (lv_p_13_0= rulePer1 )
                            // InternalSiddhiParser.g:9954:7: lv_p_13_0= rulePer1
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getPPer1ParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_p_13_0=rulePer1();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"p",
                              								lv_p_13_0,
                              								"org.xtext.example.siddhi.Siddhi.Per1");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:9974:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_16_0= rulejoins ) ) ( (lv_right_source_17_0= ruleJoinSource ) ) ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )? ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )? )
                    {
                    // InternalSiddhiParser.g:9974:3: ( ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_16_0= rulejoins ) ) ( (lv_right_source_17_0= ruleJoinSource ) ) ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )? ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )? )
                    // InternalSiddhiParser.g:9975:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) ) ( (lv_join_16_0= rulejoins ) ) ( (lv_right_source_17_0= ruleJoinSource ) ) ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )? ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )?
                    {
                    // InternalSiddhiParser.g:9975:4: ( ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) ) )
                    // InternalSiddhiParser.g:9976:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )=> ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) )
                    {
                    // InternalSiddhiParser.g:9989:5: ( ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) ) )
                    // InternalSiddhiParser.g:9990:6: ( (lv_left_source_14_0= ruleJoinSource ) ) ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) )
                    {
                    // InternalSiddhiParser.g:9990:6: ( (lv_left_source_14_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:9991:7: (lv_left_source_14_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:9991:7: (lv_left_source_14_0= ruleJoinSource )
                    // InternalSiddhiParser.g:9992:8: lv_left_source_14_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_left_source_14_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_source",
                      									lv_left_source_14_0,
                      									"org.xtext.example.siddhi.Siddhi.JoinSource");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSiddhiParser.g:10009:6: ( (lv_left_uni_15_0= ruleUNIDIRECTIONAL ) )
                    // InternalSiddhiParser.g:10010:7: (lv_left_uni_15_0= ruleUNIDIRECTIONAL )
                    {
                    // InternalSiddhiParser.g:10010:7: (lv_left_uni_15_0= ruleUNIDIRECTIONAL )
                    // InternalSiddhiParser.g:10011:8: lv_left_uni_15_0= ruleUNIDIRECTIONAL
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getJoinStreamAccess().getLeft_uniUNIDIRECTIONALParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_92);
                    lv_left_uni_15_0=ruleUNIDIRECTIONAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      								}
                      								set(
                      									current,
                      									"left_uni",
                      									lv_left_uni_15_0,
                      									"org.xtext.example.siddhi.Siddhi.UNIDIRECTIONAL");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalSiddhiParser.g:10030:4: ( (lv_join_16_0= rulejoins ) )
                    // InternalSiddhiParser.g:10031:5: (lv_join_16_0= rulejoins )
                    {
                    // InternalSiddhiParser.g:10031:5: (lv_join_16_0= rulejoins )
                    // InternalSiddhiParser.g:10032:6: lv_join_16_0= rulejoins
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_join_16_0=rulejoins();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"join",
                      							lv_join_16_0,
                      							"org.xtext.example.siddhi.Siddhi.joins");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:10049:4: ( (lv_right_source_17_0= ruleJoinSource ) )
                    // InternalSiddhiParser.g:10050:5: (lv_right_source_17_0= ruleJoinSource )
                    {
                    // InternalSiddhiParser.g:10050:5: (lv_right_source_17_0= ruleJoinSource )
                    // InternalSiddhiParser.g:10051:6: lv_right_source_17_0= ruleJoinSource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    lv_right_source_17_0=ruleJoinSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                      						}
                      						set(
                      							current,
                      							"right_source",
                      							lv_right_source_17_0,
                      							"org.xtext.example.siddhi.Siddhi.JoinSource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:10068:4: ( ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) ) )?
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==On) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalSiddhiParser.g:10069:5: ( (lv_on_18_0= ruleON ) ) ( (lv_expr_19_0= ruleExpression ) )
                            {
                            // InternalSiddhiParser.g:10069:5: ( (lv_on_18_0= ruleON ) )
                            // InternalSiddhiParser.g:10070:6: (lv_on_18_0= ruleON )
                            {
                            // InternalSiddhiParser.g:10070:6: (lv_on_18_0= ruleON )
                            // InternalSiddhiParser.g:10071:7: lv_on_18_0= ruleON
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_2_3_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_44);
                            lv_on_18_0=ruleON();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"on",
                              								lv_on_18_0,
                              								"org.xtext.example.siddhi.Siddhi.ON");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:10088:5: ( (lv_expr_19_0= ruleExpression ) )
                            // InternalSiddhiParser.g:10089:6: (lv_expr_19_0= ruleExpression )
                            {
                            // InternalSiddhiParser.g:10089:6: (lv_expr_19_0= ruleExpression )
                            // InternalSiddhiParser.g:10090:7: lv_expr_19_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_75);
                            lv_expr_19_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"expr",
                              								lv_expr_19_0,
                              								"org.xtext.example.siddhi.Siddhi.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:10108:4: ( ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) ) )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==Within) ) {
                        alt120=1;
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalSiddhiParser.g:10109:5: ( (lv_wtr_20_0= ruleWithinTimeRange ) ) ( (lv_p_21_0= rulePer1 ) )
                            {
                            // InternalSiddhiParser.g:10109:5: ( (lv_wtr_20_0= ruleWithinTimeRange ) )
                            // InternalSiddhiParser.g:10110:6: (lv_wtr_20_0= ruleWithinTimeRange )
                            {
                            // InternalSiddhiParser.g:10110:6: (lv_wtr_20_0= ruleWithinTimeRange )
                            // InternalSiddhiParser.g:10111:7: lv_wtr_20_0= ruleWithinTimeRange
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getWtrWithinTimeRangeParserRuleCall_2_4_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_91);
                            lv_wtr_20_0=ruleWithinTimeRange();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"wtr",
                              								lv_wtr_20_0,
                              								"org.xtext.example.siddhi.Siddhi.WithinTimeRange");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:10128:5: ( (lv_p_21_0= rulePer1 ) )
                            // InternalSiddhiParser.g:10129:6: (lv_p_21_0= rulePer1 )
                            {
                            // InternalSiddhiParser.g:10129:6: (lv_p_21_0= rulePer1 )
                            // InternalSiddhiParser.g:10130:7: lv_p_21_0= rulePer1
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getJoinStreamAccess().getPPer1ParserRuleCall_2_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_p_21_0=rulePer1();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getJoinStreamRule());
                              							}
                              							set(
                              								current,
                              								"p",
                              								lv_p_21_0,
                              								"org.xtext.example.siddhi.Siddhi.Per1");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:10150:3: ( ( ruleStandardStream )=>this_StandardStream_22= ruleStandardStream )
                    {
                    // InternalSiddhiParser.g:10150:3: ( ( ruleStandardStream )=>this_StandardStream_22= ruleStandardStream )
                    // InternalSiddhiParser.g:10151:4: ( ruleStandardStream )=>this_StandardStream_22= ruleStandardStream
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJoinStreamAccess().getStandardStreamParserRuleCall_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StandardStream_22=ruleStandardStream();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StandardStream_22;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, ruleJoinStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleJoinStream"


    // $ANTLR start "entryRuleWithinTimeRange"
    // InternalSiddhiParser.g:10165:1: entryRuleWithinTimeRange returns [EObject current=null] : iv_ruleWithinTimeRange= ruleWithinTimeRange EOF ;
    public final EObject entryRuleWithinTimeRange() throws RecognitionException {
        EObject current = null;
        int entryRuleWithinTimeRange_StartIndex = input.index();
        EObject iv_ruleWithinTimeRange = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return current; }
            // InternalSiddhiParser.g:10165:56: (iv_ruleWithinTimeRange= ruleWithinTimeRange EOF )
            // InternalSiddhiParser.g:10166:2: iv_ruleWithinTimeRange= ruleWithinTimeRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWithinTimeRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWithinTimeRange=ruleWithinTimeRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWithinTimeRange; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, entryRuleWithinTimeRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWithinTimeRange"


    // $ANTLR start "ruleWithinTimeRange"
    // InternalSiddhiParser.g:10172:1: ruleWithinTimeRange returns [EObject current=null] : (this_WITHIN_0= ruleWITHIN[$current] ( (lv_startPattern_1_0= ruleExpression ) ) (otherlv_2= Comma ( (lv_endPattern_3_0= ruleExpression ) ) )? ) ;
    public final EObject ruleWithinTimeRange() throws RecognitionException {
        EObject current = null;
        int ruleWithinTimeRange_StartIndex = input.index();
        Token otherlv_2=null;
        EObject this_WITHIN_0 = null;

        EObject lv_startPattern_1_0 = null;

        EObject lv_endPattern_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return current; }
            // InternalSiddhiParser.g:10178:2: ( (this_WITHIN_0= ruleWITHIN[$current] ( (lv_startPattern_1_0= ruleExpression ) ) (otherlv_2= Comma ( (lv_endPattern_3_0= ruleExpression ) ) )? ) )
            // InternalSiddhiParser.g:10179:2: (this_WITHIN_0= ruleWITHIN[$current] ( (lv_startPattern_1_0= ruleExpression ) ) (otherlv_2= Comma ( (lv_endPattern_3_0= ruleExpression ) ) )? )
            {
            // InternalSiddhiParser.g:10179:2: (this_WITHIN_0= ruleWITHIN[$current] ( (lv_startPattern_1_0= ruleExpression ) ) (otherlv_2= Comma ( (lv_endPattern_3_0= ruleExpression ) ) )? )
            // InternalSiddhiParser.g:10180:3: this_WITHIN_0= ruleWITHIN[$current] ( (lv_startPattern_1_0= ruleExpression ) ) (otherlv_2= Comma ( (lv_endPattern_3_0= ruleExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getWithinTimeRangeRule());
              			}
              			newCompositeNode(grammarAccess.getWithinTimeRangeAccess().getWITHINParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_44);
            this_WITHIN_0=ruleWITHIN(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WITHIN_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:10191:3: ( (lv_startPattern_1_0= ruleExpression ) )
            // InternalSiddhiParser.g:10192:4: (lv_startPattern_1_0= ruleExpression )
            {
            // InternalSiddhiParser.g:10192:4: (lv_startPattern_1_0= ruleExpression )
            // InternalSiddhiParser.g:10193:5: lv_startPattern_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWithinTimeRangeAccess().getStartPatternExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_startPattern_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWithinTimeRangeRule());
              					}
              					set(
              						current,
              						"startPattern",
              						lv_startPattern_1_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:10210:3: (otherlv_2= Comma ( (lv_endPattern_3_0= ruleExpression ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==Comma) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSiddhiParser.g:10211:4: otherlv_2= Comma ( (lv_endPattern_3_0= ruleExpression ) )
                    {
                    otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getWithinTimeRangeAccess().getCommaKeyword_2_0());
                      			
                    }
                    // InternalSiddhiParser.g:10215:4: ( (lv_endPattern_3_0= ruleExpression ) )
                    // InternalSiddhiParser.g:10216:5: (lv_endPattern_3_0= ruleExpression )
                    {
                    // InternalSiddhiParser.g:10216:5: (lv_endPattern_3_0= ruleExpression )
                    // InternalSiddhiParser.g:10217:6: lv_endPattern_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWithinTimeRangeAccess().getEndPatternExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_endPattern_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWithinTimeRangeRule());
                      						}
                      						set(
                      							current,
                      							"endPattern",
                      							lv_endPattern_3_0,
                      							"org.xtext.example.siddhi.Siddhi.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, ruleWithinTimeRange_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWithinTimeRange"


    // $ANTLR start "entryRulePer1"
    // InternalSiddhiParser.g:10239:1: entryRulePer1 returns [EObject current=null] : iv_rulePer1= rulePer1 EOF ;
    public final EObject entryRulePer1() throws RecognitionException {
        EObject current = null;
        int entryRulePer1_StartIndex = input.index();
        EObject iv_rulePer1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return current; }
            // InternalSiddhiParser.g:10239:45: (iv_rulePer1= rulePer1 EOF )
            // InternalSiddhiParser.g:10240:2: iv_rulePer1= rulePer1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPer1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePer1=rulePer1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePer1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, entryRulePer1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePer1"


    // $ANTLR start "rulePer1"
    // InternalSiddhiParser.g:10246:1: rulePer1 returns [EObject current=null] : (this_PER_0= rulePER[$current] ( (lv_exp_1_0= ruleExpression ) ) ) ;
    public final EObject rulePer1() throws RecognitionException {
        EObject current = null;
        int rulePer1_StartIndex = input.index();
        EObject this_PER_0 = null;

        EObject lv_exp_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return current; }
            // InternalSiddhiParser.g:10252:2: ( (this_PER_0= rulePER[$current] ( (lv_exp_1_0= ruleExpression ) ) ) )
            // InternalSiddhiParser.g:10253:2: (this_PER_0= rulePER[$current] ( (lv_exp_1_0= ruleExpression ) ) )
            {
            // InternalSiddhiParser.g:10253:2: (this_PER_0= rulePER[$current] ( (lv_exp_1_0= ruleExpression ) ) )
            // InternalSiddhiParser.g:10254:3: this_PER_0= rulePER[$current] ( (lv_exp_1_0= ruleExpression ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPer1Rule());
              			}
              			newCompositeNode(grammarAccess.getPer1Access().getPERParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_44);
            this_PER_0=rulePER(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PER_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:10265:3: ( (lv_exp_1_0= ruleExpression ) )
            // InternalSiddhiParser.g:10266:4: (lv_exp_1_0= ruleExpression )
            {
            // InternalSiddhiParser.g:10266:4: (lv_exp_1_0= ruleExpression )
            // InternalSiddhiParser.g:10267:5: lv_exp_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPer1Access().getExpExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_exp_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPer1Rule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, rulePer1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePer1"


    // $ANTLR start "entryRuleJoinSource"
    // InternalSiddhiParser.g:10288:1: entryRuleJoinSource returns [EObject current=null] : iv_ruleJoinSource= ruleJoinSource EOF ;
    public final EObject entryRuleJoinSource() throws RecognitionException {
        EObject current = null;
        int entryRuleJoinSource_StartIndex = input.index();
        EObject iv_ruleJoinSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return current; }
            // InternalSiddhiParser.g:10288:51: (iv_ruleJoinSource= ruleJoinSource EOF )
            // InternalSiddhiParser.g:10289:2: iv_ruleJoinSource= ruleJoinSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJoinSource=ruleJoinSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJoinSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, entryRuleJoinSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleJoinSource"


    // $ANTLR start "ruleJoinSource"
    // InternalSiddhiParser.g:10295:1: ruleJoinSource returns [EObject current=null] : (this_MainSource_0= ruleMainSource ( (lv_window_1_0= ruleWin ) )? ( ( (lv_a_2_0= ruleAS ) ) ( (lv_strAlias_3_0= ruleStreamAlias ) ) )? ) ;
    public final EObject ruleJoinSource() throws RecognitionException {
        EObject current = null;
        int ruleJoinSource_StartIndex = input.index();
        EObject this_MainSource_0 = null;

        EObject lv_window_1_0 = null;

        EObject lv_a_2_0 = null;

        EObject lv_strAlias_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return current; }
            // InternalSiddhiParser.g:10301:2: ( (this_MainSource_0= ruleMainSource ( (lv_window_1_0= ruleWin ) )? ( ( (lv_a_2_0= ruleAS ) ) ( (lv_strAlias_3_0= ruleStreamAlias ) ) )? ) )
            // InternalSiddhiParser.g:10302:2: (this_MainSource_0= ruleMainSource ( (lv_window_1_0= ruleWin ) )? ( ( (lv_a_2_0= ruleAS ) ) ( (lv_strAlias_3_0= ruleStreamAlias ) ) )? )
            {
            // InternalSiddhiParser.g:10302:2: (this_MainSource_0= ruleMainSource ( (lv_window_1_0= ruleWin ) )? ( ( (lv_a_2_0= ruleAS ) ) ( (lv_strAlias_3_0= ruleStreamAlias ) ) )? )
            // InternalSiddhiParser.g:10303:3: this_MainSource_0= ruleMainSource ( (lv_window_1_0= ruleWin ) )? ( ( (lv_a_2_0= ruleAS ) ) ( (lv_strAlias_3_0= ruleStreamAlias ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getJoinSourceAccess().getMainSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_93);
            this_MainSource_0=ruleMainSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MainSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:10311:3: ( (lv_window_1_0= ruleWin ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==NumberSign) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSiddhiParser.g:10312:4: (lv_window_1_0= ruleWin )
                    {
                    // InternalSiddhiParser.g:10312:4: (lv_window_1_0= ruleWin )
                    // InternalSiddhiParser.g:10313:5: lv_window_1_0= ruleWin
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJoinSourceAccess().getWindowWinParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_window_1_0=ruleWin();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJoinSourceRule());
                      					}
                      					set(
                      						current,
                      						"window",
                      						lv_window_1_0,
                      						"org.xtext.example.siddhi.Siddhi.Win");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:10330:3: ( ( (lv_a_2_0= ruleAS ) ) ( (lv_strAlias_3_0= ruleStreamAlias ) ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==As) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSiddhiParser.g:10331:4: ( (lv_a_2_0= ruleAS ) ) ( (lv_strAlias_3_0= ruleStreamAlias ) )
                    {
                    // InternalSiddhiParser.g:10331:4: ( (lv_a_2_0= ruleAS ) )
                    // InternalSiddhiParser.g:10332:5: (lv_a_2_0= ruleAS )
                    {
                    // InternalSiddhiParser.g:10332:5: (lv_a_2_0= ruleAS )
                    // InternalSiddhiParser.g:10333:6: lv_a_2_0= ruleAS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinSourceAccess().getAASParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_a_2_0=ruleAS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinSourceRule());
                      						}
                      						set(
                      							current,
                      							"a",
                      							lv_a_2_0,
                      							"org.xtext.example.siddhi.Siddhi.AS");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:10350:4: ( (lv_strAlias_3_0= ruleStreamAlias ) )
                    // InternalSiddhiParser.g:10351:5: (lv_strAlias_3_0= ruleStreamAlias )
                    {
                    // InternalSiddhiParser.g:10351:5: (lv_strAlias_3_0= ruleStreamAlias )
                    // InternalSiddhiParser.g:10352:6: lv_strAlias_3_0= ruleStreamAlias
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinSourceAccess().getStrAliasStreamAliasParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_strAlias_3_0=ruleStreamAlias();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJoinSourceRule());
                      						}
                      						set(
                      							current,
                      							"strAlias",
                      							lv_strAlias_3_0,
                      							"org.xtext.example.siddhi.Siddhi.StreamAlias");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, ruleJoinSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleJoinSource"


    // $ANTLR start "entryRuleStreamAlias"
    // InternalSiddhiParser.g:10374:1: entryRuleStreamAlias returns [EObject current=null] : iv_ruleStreamAlias= ruleStreamAlias EOF ;
    public final EObject entryRuleStreamAlias() throws RecognitionException {
        EObject current = null;
        int entryRuleStreamAlias_StartIndex = input.index();
        EObject iv_ruleStreamAlias = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return current; }
            // InternalSiddhiParser.g:10374:52: (iv_ruleStreamAlias= ruleStreamAlias EOF )
            // InternalSiddhiParser.g:10375:2: iv_ruleStreamAlias= ruleStreamAlias EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStreamAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStreamAlias=ruleStreamAlias();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStreamAlias; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, entryRuleStreamAlias_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStreamAlias"


    // $ANTLR start "ruleStreamAlias"
    // InternalSiddhiParser.g:10381:1: ruleStreamAlias returns [EObject current=null] : ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) ) ;
    public final EObject ruleStreamAlias() throws RecognitionException {
        EObject current = null;
        int ruleStreamAlias_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_nam_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return current; }
            // InternalSiddhiParser.g:10387:2: ( ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) ) )
            // InternalSiddhiParser.g:10388:2: ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) )
            {
            // InternalSiddhiParser.g:10388:2: ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) )
            int alt125=2;
            alt125 = dfa125.predict(input);
            switch (alt125) {
                case 1 :
                    // InternalSiddhiParser.g:10389:3: ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) )
                    {
                    // InternalSiddhiParser.g:10389:3: ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) )
                    // InternalSiddhiParser.g:10390:4: ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) )
                    {
                    // InternalSiddhiParser.g:10396:4: ( (lv_name_0_0= ruleIdNew ) )
                    // InternalSiddhiParser.g:10397:5: (lv_name_0_0= ruleIdNew )
                    {
                    // InternalSiddhiParser.g:10397:5: (lv_name_0_0= ruleIdNew )
                    // InternalSiddhiParser.g:10398:6: lv_name_0_0= ruleIdNew
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStreamAliasAccess().getNameIdNewParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_name_0_0=ruleIdNew();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStreamAliasRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.xtext.example.siddhi.Siddhi.IdNew");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10417:3: ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) )
                    {
                    // InternalSiddhiParser.g:10417:3: ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) )
                    // InternalSiddhiParser.g:10418:4: ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) )
                    {
                    // InternalSiddhiParser.g:10424:4: ( (lv_nam_1_0= ruleName ) )
                    // InternalSiddhiParser.g:10425:5: (lv_nam_1_0= ruleName )
                    {
                    // InternalSiddhiParser.g:10425:5: (lv_nam_1_0= ruleName )
                    // InternalSiddhiParser.g:10426:6: lv_nam_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStreamAliasAccess().getNamNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_nam_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStreamAliasRule());
                      						}
                      						set(
                      							current,
                      							"nam",
                      							lv_nam_1_0,
                      							"org.xtext.example.siddhi.Siddhi.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, ruleStreamAlias_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStreamAlias"


    // $ANTLR start "entryRuleWithinTime"
    // InternalSiddhiParser.g:10448:1: entryRuleWithinTime returns [EObject current=null] : iv_ruleWithinTime= ruleWithinTime EOF ;
    public final EObject entryRuleWithinTime() throws RecognitionException {
        EObject current = null;
        int entryRuleWithinTime_StartIndex = input.index();
        EObject iv_ruleWithinTime = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return current; }
            // InternalSiddhiParser.g:10448:51: (iv_ruleWithinTime= ruleWithinTime EOF )
            // InternalSiddhiParser.g:10449:2: iv_ruleWithinTime= ruleWithinTime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWithinTimeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWithinTime=ruleWithinTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWithinTime; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, entryRuleWithinTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWithinTime"


    // $ANTLR start "ruleWithinTime"
    // InternalSiddhiParser.g:10455:1: ruleWithinTime returns [EObject current=null] : (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) ;
    public final EObject ruleWithinTime() throws RecognitionException {
        EObject current = null;
        int ruleWithinTime_StartIndex = input.index();
        EObject this_WITHIN_0 = null;

        EObject lv_tv_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return current; }
            // InternalSiddhiParser.g:10461:2: ( (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) ) )
            // InternalSiddhiParser.g:10462:2: (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            {
            // InternalSiddhiParser.g:10462:2: (this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) ) )
            // InternalSiddhiParser.g:10463:3: this_WITHIN_0= ruleWITHIN[$current] ( (lv_tv_1_0= ruleTimeValue ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getWithinTimeRule());
              			}
              			newCompositeNode(grammarAccess.getWithinTimeAccess().getWITHINParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_21);
            this_WITHIN_0=ruleWITHIN(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WITHIN_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:10474:3: ( (lv_tv_1_0= ruleTimeValue ) )
            // InternalSiddhiParser.g:10475:4: (lv_tv_1_0= ruleTimeValue )
            {
            // InternalSiddhiParser.g:10475:4: (lv_tv_1_0= ruleTimeValue )
            // InternalSiddhiParser.g:10476:5: lv_tv_1_0= ruleTimeValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWithinTimeAccess().getTvTimeValueParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_tv_1_0=ruleTimeValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWithinTimeRule());
              					}
              					set(
              						current,
              						"tv",
              						lv_tv_1_0,
              						"org.xtext.example.siddhi.Siddhi.TimeValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, ruleWithinTime_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWithinTime"


    // $ANTLR start "entryRulejoins"
    // InternalSiddhiParser.g:10497:1: entryRulejoins returns [EObject current=null] : iv_rulejoins= rulejoins EOF ;
    public final EObject entryRulejoins() throws RecognitionException {
        EObject current = null;
        int entryRulejoins_StartIndex = input.index();
        EObject iv_rulejoins = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return current; }
            // InternalSiddhiParser.g:10497:46: (iv_rulejoins= rulejoins EOF )
            // InternalSiddhiParser.g:10498:2: iv_rulejoins= rulejoins EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulejoins=rulejoins();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulejoins; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, entryRulejoins_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulejoins"


    // $ANTLR start "rulejoins"
    // InternalSiddhiParser.g:10504:1: rulejoins returns [EObject current=null] : ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) ) ;
    public final EObject rulejoins() throws RecognitionException {
        EObject current = null;
        int rulejoins_StartIndex = input.index();
        EObject this_LEFT_1 = null;

        EObject this_OUTER_2 = null;

        EObject this_JOIN_3 = null;

        EObject this_RIGHT_5 = null;

        EObject this_OUTER_6 = null;

        EObject this_JOIN_7 = null;

        EObject this_FULL_9 = null;

        EObject this_OUTER_10 = null;

        EObject this_JOIN_11 = null;

        EObject this_OUTER_13 = null;

        EObject this_JOIN_14 = null;

        EObject this_INNER_16 = null;

        EObject this_JOIN_17 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return current; }
            // InternalSiddhiParser.g:10510:2: ( ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) ) )
            // InternalSiddhiParser.g:10511:2: ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) )
            {
            // InternalSiddhiParser.g:10511:2: ( ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] ) | ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] ) | ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] ) | ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] ) | ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] ) )
            int alt127=5;
            switch ( input.LA(1) ) {
            case Left:
                {
                alt127=1;
                }
                break;
            case Right:
                {
                alt127=2;
                }
                break;
            case Full:
                {
                alt127=3;
                }
                break;
            case Outer:
                {
                alt127=4;
                }
                break;
            case Inner:
            case Join:
                {
                alt127=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }

            switch (alt127) {
                case 1 :
                    // InternalSiddhiParser.g:10512:3: ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:10512:3: ( () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:10513:4: () this_LEFT_1= ruleLEFT[$current] this_OUTER_2= ruleOUTER[$current] this_JOIN_3= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:10513:4: ()
                    // InternalSiddhiParser.g:10514:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getLEFTParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    this_LEFT_1=ruleLEFT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LEFT_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    this_OUTER_2=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_0_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_3=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10555:3: ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:10555:3: ( () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:10556:4: () this_RIGHT_5= ruleRIGHT[$current] this_OUTER_6= ruleOUTER[$current] this_JOIN_7= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:10556:4: ()
                    // InternalSiddhiParser.g:10557:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getRIGHTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    this_RIGHT_5=ruleRIGHT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RIGHT_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    this_OUTER_6=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_1_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_7=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:10598:3: ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:10598:3: ( () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:10599:4: () this_FULL_9= ruleFULL[$current] this_OUTER_10= ruleOUTER[$current] this_JOIN_11= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:10599:4: ()
                    // InternalSiddhiParser.g:10600:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getFULLParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    this_FULL_9=ruleFULL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FULL_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    this_OUTER_10=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_2_3());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_11=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:10641:3: ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:10641:3: ( () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:10642:4: () this_OUTER_13= ruleOUTER[$current] this_JOIN_14= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:10642:4: ()
                    // InternalSiddhiParser.g:10643:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_3_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    this_OUTER_13=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_3_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_14=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_14;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:10673:3: ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:10673:3: ( () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:10674:4: () (this_INNER_16= ruleINNER[$current] )? this_JOIN_17= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:10674:4: ()
                    // InternalSiddhiParser.g:10675:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getJoinsAccess().getJoinsAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:10681:4: (this_INNER_16= ruleINNER[$current] )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==Inner) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // InternalSiddhiParser.g:10682:5: this_INNER_16= ruleINNER[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getJoinsRule());
                              					}
                              					newCompositeNode(grammarAccess.getJoinsAccess().getINNERParserRuleCall_4_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_96);
                            this_INNER_16=ruleINNER(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_INNER_16;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getJoinsRule());
                      				}
                      				newCompositeNode(grammarAccess.getJoinsAccess().getJOINParserRuleCall_4_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_17=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_17;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, rulejoins_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulejoins"


    // $ANTLR start "entryRuleStandardStream"
    // InternalSiddhiParser.g:10710:1: entryRuleStandardStream returns [EObject current=null] : iv_ruleStandardStream= ruleStandardStream EOF ;
    public final EObject entryRuleStandardStream() throws RecognitionException {
        EObject current = null;
        int entryRuleStandardStream_StartIndex = input.index();
        EObject iv_ruleStandardStream = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return current; }
            // InternalSiddhiParser.g:10710:55: (iv_ruleStandardStream= ruleStandardStream EOF )
            // InternalSiddhiParser.g:10711:2: iv_ruleStandardStream= ruleStandardStream EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardStreamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStandardStream=ruleStandardStream();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardStream; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, entryRuleStandardStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardStream"


    // $ANTLR start "ruleStandardStream"
    // InternalSiddhiParser.g:10717:1: ruleStandardStream returns [EObject current=null] : (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) ) ;
    public final EObject ruleStandardStream() throws RecognitionException {
        EObject current = null;
        int ruleStandardStream_StartIndex = input.index();
        EObject this_MainSource_0 = null;

        EObject lv_postWindowHandlers_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return current; }
            // InternalSiddhiParser.g:10723:2: ( (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) ) )
            // InternalSiddhiParser.g:10724:2: (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) )
            {
            // InternalSiddhiParser.g:10724:2: (this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? ) )
            // InternalSiddhiParser.g:10725:3: this_MainSource_0= ruleMainSource ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getStandardStreamAccess().getMainSourceParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_97);
            this_MainSource_0=ruleMainSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MainSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:10733:3: ( ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            // InternalSiddhiParser.g:10734:4: ( ( ( ruleBasicSourceStreamHandlers ) )? )=> ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )?
            {
            // InternalSiddhiParser.g:10740:4: ( (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==NumberSign||LA128_0==LeftSquareBracket) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSiddhiParser.g:10741:5: (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers )
                    {
                    // InternalSiddhiParser.g:10741:5: (lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers )
                    // InternalSiddhiParser.g:10742:6: lv_postWindowHandlers_1_0= ruleBasicSourceStreamHandlers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStandardStreamAccess().getPostWindowHandlersBasicSourceStreamHandlersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_postWindowHandlers_1_0=ruleBasicSourceStreamHandlers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStandardStreamRule());
                      						}
                      						set(
                      							current,
                      							"postWindowHandlers",
                      							lv_postWindowHandlers_1_0,
                      							"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandlers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, ruleStandardStream_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStandardStream"


    // $ANTLR start "entryRuleMainSource"
    // InternalSiddhiParser.g:10764:1: entryRuleMainSource returns [EObject current=null] : iv_ruleMainSource= ruleMainSource EOF ;
    public final EObject entryRuleMainSource() throws RecognitionException {
        EObject current = null;
        int entryRuleMainSource_StartIndex = input.index();
        EObject iv_ruleMainSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return current; }
            // InternalSiddhiParser.g:10764:51: (iv_ruleMainSource= ruleMainSource EOF )
            // InternalSiddhiParser.g:10765:2: iv_ruleMainSource= ruleMainSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMainSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMainSource=ruleMainSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMainSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, entryRuleMainSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMainSource"


    // $ANTLR start "ruleMainSource"
    // InternalSiddhiParser.g:10771:1: ruleMainSource returns [EObject current=null] : ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) ) ;
    public final EObject ruleMainSource() throws RecognitionException {
        EObject current = null;
        int ruleMainSource_StartIndex = input.index();
        EObject lv_src_0_0 = null;

        EObject lv_basicSSh_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return current; }
            // InternalSiddhiParser.g:10777:2: ( ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) ) )
            // InternalSiddhiParser.g:10778:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) )
            {
            // InternalSiddhiParser.g:10778:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) ) )
            // InternalSiddhiParser.g:10779:3: ( (lv_src_0_0= ruleSource ) ) ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) )
            {
            // InternalSiddhiParser.g:10779:3: ( (lv_src_0_0= ruleSource ) )
            // InternalSiddhiParser.g:10780:4: (lv_src_0_0= ruleSource )
            {
            // InternalSiddhiParser.g:10780:4: (lv_src_0_0= ruleSource )
            // InternalSiddhiParser.g:10781:5: lv_src_0_0= ruleSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMainSourceAccess().getSrcSourceParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_98);
            lv_src_0_0=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMainSourceRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_0_0,
              						"org.xtext.example.siddhi.Siddhi.Source");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:10798:3: ( (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 ) )
            // InternalSiddhiParser.g:10799:4: (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 )
            {
            // InternalSiddhiParser.g:10799:4: (lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1 )
            // InternalSiddhiParser.g:10800:5: lv_basicSSh_1_0= ruleBasicSourceStreamHandlers1
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMainSourceAccess().getBasicSShBasicSourceStreamHandlers1ParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_basicSSh_1_0=ruleBasicSourceStreamHandlers1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMainSourceRule());
              					}
              					set(
              						current,
              						"basicSSh",
              						lv_basicSSh_1_0,
              						"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandlers1");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, ruleMainSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMainSource"


    // $ANTLR start "entryRuleBasicSourceStreamHandlers"
    // InternalSiddhiParser.g:10821:1: entryRuleBasicSourceStreamHandlers returns [EObject current=null] : iv_ruleBasicSourceStreamHandlers= ruleBasicSourceStreamHandlers EOF ;
    public final EObject entryRuleBasicSourceStreamHandlers() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSourceStreamHandlers_StartIndex = input.index();
        EObject iv_ruleBasicSourceStreamHandlers = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return current; }
            // InternalSiddhiParser.g:10821:66: (iv_ruleBasicSourceStreamHandlers= ruleBasicSourceStreamHandlers EOF )
            // InternalSiddhiParser.g:10822:2: iv_ruleBasicSourceStreamHandlers= ruleBasicSourceStreamHandlers EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceStreamHandlersRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSourceStreamHandlers=ruleBasicSourceStreamHandlers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSourceStreamHandlers; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, entryRuleBasicSourceStreamHandlers_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSourceStreamHandlers"


    // $ANTLR start "ruleBasicSourceStreamHandlers"
    // InternalSiddhiParser.g:10828:1: ruleBasicSourceStreamHandlers returns [EObject current=null] : ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+ ;
    public final EObject ruleBasicSourceStreamHandlers() throws RecognitionException {
        EObject current = null;
        int ruleBasicSourceStreamHandlers_StartIndex = input.index();
        EObject lv_basicSsHandler_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return current; }
            // InternalSiddhiParser.g:10834:2: ( ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+ )
            // InternalSiddhiParser.g:10835:2: ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+
            {
            // InternalSiddhiParser.g:10835:2: ( (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler ) )+
            int cnt129=0;
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==NumberSign||LA129_0==LeftSquareBracket) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalSiddhiParser.g:10836:3: (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler )
            	    {
            	    // InternalSiddhiParser.g:10836:3: (lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler )
            	    // InternalSiddhiParser.g:10837:4: lv_basicSsHandler_0_0= ruleBasicSourceStreamHandler
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerBasicSourceStreamHandlerParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_basicSsHandler_0_0=ruleBasicSourceStreamHandler();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlersRule());
            	      				}
            	      				add(
            	      					current,
            	      					"basicSsHandler",
            	      					lv_basicSsHandler_0_0,
            	      					"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandler");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt129 >= 1 ) break loop129;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(129, input);
                        throw eee;
                }
                cnt129++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, ruleBasicSourceStreamHandlers_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSourceStreamHandlers"


    // $ANTLR start "entryRuleBasicSourceStreamHandlers1"
    // InternalSiddhiParser.g:10857:1: entryRuleBasicSourceStreamHandlers1 returns [EObject current=null] : iv_ruleBasicSourceStreamHandlers1= ruleBasicSourceStreamHandlers1 EOF ;
    public final EObject entryRuleBasicSourceStreamHandlers1() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSourceStreamHandlers1_StartIndex = input.index();
        EObject iv_ruleBasicSourceStreamHandlers1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return current; }
            // InternalSiddhiParser.g:10857:67: (iv_ruleBasicSourceStreamHandlers1= ruleBasicSourceStreamHandlers1 EOF )
            // InternalSiddhiParser.g:10858:2: iv_ruleBasicSourceStreamHandlers1= ruleBasicSourceStreamHandlers1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSourceStreamHandlers1=ruleBasicSourceStreamHandlers1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSourceStreamHandlers1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, entryRuleBasicSourceStreamHandlers1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSourceStreamHandlers1"


    // $ANTLR start "ruleBasicSourceStreamHandlers1"
    // InternalSiddhiParser.g:10864:1: ruleBasicSourceStreamHandlers1 returns [EObject current=null] : ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? ) ;
    public final EObject ruleBasicSourceStreamHandlers1() throws RecognitionException {
        EObject current = null;
        int ruleBasicSourceStreamHandlers1_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_exp_3_0 = null;

        EObject lv_fo_6_0 = null;

        EObject this_WINDOW_8 = null;

        EObject lv_func_op_10_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return current; }
            // InternalSiddhiParser.g:10870:2: ( ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? ) )
            // InternalSiddhiParser.g:10871:2: ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? )
            {
            // InternalSiddhiParser.g:10871:2: ( () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )? )
            // InternalSiddhiParser.g:10872:3: () ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )? ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )?
            {
            // InternalSiddhiParser.g:10872:3: ()
            // InternalSiddhiParser.g:10873:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBasicSourceStreamHandlers1Access().getBasicSourceStreamHandlers1Action_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:10879:3: ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )?
            int alt131=3;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // InternalSiddhiParser.g:10880:4: ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
                    {
                    // InternalSiddhiParser.g:10880:4: ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
                    // InternalSiddhiParser.g:10881:5: ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
                    {
                    // InternalSiddhiParser.g:10894:5: ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
                    // InternalSiddhiParser.g:10895:6: (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS
                    {
                    // InternalSiddhiParser.g:10895:6: (otherlv_1= NumberSign )?
                    int alt130=2;
                    int LA130_0 = input.LA(1);

                    if ( (LA130_0==NumberSign) ) {
                        alt130=1;
                    }
                    switch (alt130) {
                        case 1 :
                            // InternalSiddhiParser.g:10896:7: otherlv_1= NumberSign
                            {
                            otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_1, grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_0_0_0());
                              						
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getOPEN_SQARE_BRACKETSParserRuleCall_1_0_0_1());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    ruleOPEN_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }
                    // InternalSiddhiParser.g:10908:6: ( (lv_exp_3_0= ruleExpression ) )
                    // InternalSiddhiParser.g:10909:7: (lv_exp_3_0= ruleExpression )
                    {
                    // InternalSiddhiParser.g:10909:7: (lv_exp_3_0= ruleExpression )
                    // InternalSiddhiParser.g:10910:8: lv_exp_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getExpExpressionParserRuleCall_1_0_0_2_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_exp_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      								}
                      								set(
                      									current,
                      									"exp",
                      									lv_exp_3_0,
                      									"org.xtext.example.siddhi.Siddhi.Expression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getCLOSE_SQARE_BRACKETSParserRuleCall_1_0_0_3());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_99);
                    ruleCLOSE_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:10937:4: ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) )
                    {
                    // InternalSiddhiParser.g:10937:4: ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) )
                    // InternalSiddhiParser.g:10938:5: ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) )
                    {
                    // InternalSiddhiParser.g:10947:5: (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) )
                    // InternalSiddhiParser.g:10948:6: otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) )
                    {
                    otherlv_5=(Token)match(input,NumberSign,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_5, grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_1_0_0());
                      					
                    }
                    // InternalSiddhiParser.g:10952:6: ( (lv_fo_6_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:10953:7: (lv_fo_6_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:10953:7: (lv_fo_6_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:10954:8: lv_fo_6_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getFoFunctionOperationParserRuleCall_1_1_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_99);
                    lv_fo_6_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      								}
                      								set(
                      									current,
                      									"fo",
                      									lv_fo_6_0,
                      									"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:10974:3: ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )?
            int alt132=2;
            alt132 = dfa132.predict(input);
            switch (alt132) {
                case 1 :
                    // InternalSiddhiParser.g:10975:4: ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) )
                    {
                    // InternalSiddhiParser.g:10986:4: (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) )
                    // InternalSiddhiParser.g:10987:5: otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) )
                    {
                    otherlv_7=(Token)match(input,NumberSign,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_2_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      					}
                      					newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getWINDOWParserRuleCall_2_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    this_WINDOW_8=ruleWINDOW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_WINDOW_8;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_9=(Token)match(input,FullStop,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getBasicSourceStreamHandlers1Access().getFullStopKeyword_2_0_2());
                      				
                    }
                    // InternalSiddhiParser.g:11006:5: ( (lv_func_op_10_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:11007:6: (lv_func_op_10_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:11007:6: (lv_func_op_10_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:11008:7: lv_func_op_10_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBasicSourceStreamHandlers1Access().getFunc_opFunctionOperationParserRuleCall_2_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_func_op_10_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlers1Rule());
                      							}
                      							set(
                      								current,
                      								"func_op",
                      								lv_func_op_10_0,
                      								"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, ruleBasicSourceStreamHandlers1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSourceStreamHandlers1"


    // $ANTLR start "entryRuleBasicSourceStreamHandler"
    // InternalSiddhiParser.g:11031:1: entryRuleBasicSourceStreamHandler returns [EObject current=null] : iv_ruleBasicSourceStreamHandler= ruleBasicSourceStreamHandler EOF ;
    public final EObject entryRuleBasicSourceStreamHandler() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSourceStreamHandler_StartIndex = input.index();
        EObject iv_ruleBasicSourceStreamHandler = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return current; }
            // InternalSiddhiParser.g:11031:65: (iv_ruleBasicSourceStreamHandler= ruleBasicSourceStreamHandler EOF )
            // InternalSiddhiParser.g:11032:2: iv_ruleBasicSourceStreamHandler= ruleBasicSourceStreamHandler EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceStreamHandlerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSourceStreamHandler=ruleBasicSourceStreamHandler();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSourceStreamHandler; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, entryRuleBasicSourceStreamHandler_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSourceStreamHandler"


    // $ANTLR start "ruleBasicSourceStreamHandler"
    // InternalSiddhiParser.g:11038:1: ruleBasicSourceStreamHandler returns [EObject current=null] : ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) ) ;
    public final EObject ruleBasicSourceStreamHandler() throws RecognitionException {
        EObject current = null;
        int ruleBasicSourceStreamHandler_StartIndex = input.index();
        EObject lv_fil_0_0 = null;

        EObject lv_sf_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return current; }
            // InternalSiddhiParser.g:11044:2: ( ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) ) )
            // InternalSiddhiParser.g:11045:2: ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) )
            {
            // InternalSiddhiParser.g:11045:2: ( ( (lv_fil_0_0= ruleFilter ) ) | ( (lv_sf_1_0= ruleStreamFunction ) ) )
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==NumberSign) ) {
                int LA133_1 = input.LA(2);

                if ( (LA133_1==LeftSquareBracket) ) {
                    alt133=1;
                }
                else if ( ((LA133_1>=Unidirectional && LA133_1<=Milliseconds)||LA133_1==Millisecond||LA133_1==Partition||(LA133_1>=Millisec && LA133_1<=Seconds)||(LA133_1>=Define && LA133_1<=Null)||(LA133_1>=True && LA133_1<=Year)||(LA133_1>=All && LA133_1<=And)||(LA133_1>=Day && LA133_1<=Not)||(LA133_1>=Raw && LA133_1<=Sec)||LA133_1==As||LA133_1==By||(LA133_1>=Is && LA133_1<=Or)||LA133_1==RULE_ID) ) {
                    alt133=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 133, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA133_0==LeftSquareBracket) ) {
                alt133=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }
            switch (alt133) {
                case 1 :
                    // InternalSiddhiParser.g:11046:3: ( (lv_fil_0_0= ruleFilter ) )
                    {
                    // InternalSiddhiParser.g:11046:3: ( (lv_fil_0_0= ruleFilter ) )
                    // InternalSiddhiParser.g:11047:4: (lv_fil_0_0= ruleFilter )
                    {
                    // InternalSiddhiParser.g:11047:4: (lv_fil_0_0= ruleFilter )
                    // InternalSiddhiParser.g:11048:5: lv_fil_0_0= ruleFilter
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicSourceStreamHandlerAccess().getFilFilterParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_fil_0_0=ruleFilter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlerRule());
                      					}
                      					set(
                      						current,
                      						"fil",
                      						lv_fil_0_0,
                      						"org.xtext.example.siddhi.Siddhi.Filter");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:11066:3: ( (lv_sf_1_0= ruleStreamFunction ) )
                    {
                    // InternalSiddhiParser.g:11066:3: ( (lv_sf_1_0= ruleStreamFunction ) )
                    // InternalSiddhiParser.g:11067:4: (lv_sf_1_0= ruleStreamFunction )
                    {
                    // InternalSiddhiParser.g:11067:4: (lv_sf_1_0= ruleStreamFunction )
                    // InternalSiddhiParser.g:11068:5: lv_sf_1_0= ruleStreamFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicSourceStreamHandlerAccess().getSfStreamFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sf_1_0=ruleStreamFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicSourceStreamHandlerRule());
                      					}
                      					set(
                      						current,
                      						"sf",
                      						lv_sf_1_0,
                      						"org.xtext.example.siddhi.Siddhi.StreamFunction");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, ruleBasicSourceStreamHandler_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSourceStreamHandler"


    // $ANTLR start "entryRuleFilter"
    // InternalSiddhiParser.g:11089:1: entryRuleFilter returns [EObject current=null] : iv_ruleFilter= ruleFilter EOF ;
    public final EObject entryRuleFilter() throws RecognitionException {
        EObject current = null;
        int entryRuleFilter_StartIndex = input.index();
        EObject iv_ruleFilter = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return current; }
            // InternalSiddhiParser.g:11089:47: (iv_ruleFilter= ruleFilter EOF )
            // InternalSiddhiParser.g:11090:2: iv_ruleFilter= ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFilter=ruleFilter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, entryRuleFilter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalSiddhiParser.g:11096:1: ruleFilter returns [EObject current=null] : ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ;
    public final EObject ruleFilter() throws RecognitionException {
        EObject current = null;
        int ruleFilter_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return current; }
            // InternalSiddhiParser.g:11102:2: ( ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
            // InternalSiddhiParser.g:11103:2: ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
            {
            // InternalSiddhiParser.g:11103:2: ( (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
            // InternalSiddhiParser.g:11104:3: (otherlv_0= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_2_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS
            {
            // InternalSiddhiParser.g:11104:3: (otherlv_0= NumberSign )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==NumberSign) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSiddhiParser.g:11105:4: otherlv_0= NumberSign
                    {
                    otherlv_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFilterAccess().getNumberSignKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFilterAccess().getOPEN_SQARE_BRACKETSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_44);
            ruleOPEN_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11117:3: ( (lv_exp_2_0= ruleExpression ) )
            // InternalSiddhiParser.g:11118:4: (lv_exp_2_0= ruleExpression )
            {
            // InternalSiddhiParser.g:11118:4: (lv_exp_2_0= ruleExpression )
            // InternalSiddhiParser.g:11119:5: lv_exp_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterAccess().getExpExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_24);
            lv_exp_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.xtext.example.siddhi.Siddhi.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFilterAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, ruleFilter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleStreamFunction"
    // InternalSiddhiParser.g:11147:1: entryRuleStreamFunction returns [EObject current=null] : iv_ruleStreamFunction= ruleStreamFunction EOF ;
    public final EObject entryRuleStreamFunction() throws RecognitionException {
        EObject current = null;
        int entryRuleStreamFunction_StartIndex = input.index();
        EObject iv_ruleStreamFunction = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return current; }
            // InternalSiddhiParser.g:11147:55: (iv_ruleStreamFunction= ruleStreamFunction EOF )
            // InternalSiddhiParser.g:11148:2: iv_ruleStreamFunction= ruleStreamFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStreamFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStreamFunction=ruleStreamFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStreamFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, entryRuleStreamFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStreamFunction"


    // $ANTLR start "ruleStreamFunction"
    // InternalSiddhiParser.g:11154:1: ruleStreamFunction returns [EObject current=null] : (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) ) ;
    public final EObject ruleStreamFunction() throws RecognitionException {
        EObject current = null;
        int ruleStreamFunction_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_fo_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return current; }
            // InternalSiddhiParser.g:11160:2: ( (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) ) )
            // InternalSiddhiParser.g:11161:2: (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) )
            {
            // InternalSiddhiParser.g:11161:2: (otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) ) )
            // InternalSiddhiParser.g:11162:3: otherlv_0= NumberSign ( (lv_fo_1_0= ruleFunctionOperation ) )
            {
            otherlv_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStreamFunctionAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSiddhiParser.g:11166:3: ( (lv_fo_1_0= ruleFunctionOperation ) )
            // InternalSiddhiParser.g:11167:4: (lv_fo_1_0= ruleFunctionOperation )
            {
            // InternalSiddhiParser.g:11167:4: (lv_fo_1_0= ruleFunctionOperation )
            // InternalSiddhiParser.g:11168:5: lv_fo_1_0= ruleFunctionOperation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStreamFunctionAccess().getFoFunctionOperationParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_fo_1_0=ruleFunctionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStreamFunctionRule());
              					}
              					set(
              						current,
              						"fo",
              						lv_fo_1_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionOperation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, ruleStreamFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStreamFunction"


    // $ANTLR start "entryRuleWin"
    // InternalSiddhiParser.g:11189:1: entryRuleWin returns [EObject current=null] : iv_ruleWin= ruleWin EOF ;
    public final EObject entryRuleWin() throws RecognitionException {
        EObject current = null;
        int entryRuleWin_StartIndex = input.index();
        EObject iv_ruleWin = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return current; }
            // InternalSiddhiParser.g:11189:44: (iv_ruleWin= ruleWin EOF )
            // InternalSiddhiParser.g:11190:2: iv_ruleWin= ruleWin EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWinRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWin=ruleWin();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWin; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, entryRuleWin_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWin"


    // $ANTLR start "ruleWin"
    // InternalSiddhiParser.g:11196:1: ruleWin returns [EObject current=null] : (otherlv_0= NumberSign this_WINDOW_1= ruleWINDOW[$current] otherlv_2= FullStop ( (lv_func_op_3_0= ruleFunctionOperation ) ) ) ;
    public final EObject ruleWin() throws RecognitionException {
        EObject current = null;
        int ruleWin_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_WINDOW_1 = null;

        EObject lv_func_op_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return current; }
            // InternalSiddhiParser.g:11202:2: ( (otherlv_0= NumberSign this_WINDOW_1= ruleWINDOW[$current] otherlv_2= FullStop ( (lv_func_op_3_0= ruleFunctionOperation ) ) ) )
            // InternalSiddhiParser.g:11203:2: (otherlv_0= NumberSign this_WINDOW_1= ruleWINDOW[$current] otherlv_2= FullStop ( (lv_func_op_3_0= ruleFunctionOperation ) ) )
            {
            // InternalSiddhiParser.g:11203:2: (otherlv_0= NumberSign this_WINDOW_1= ruleWINDOW[$current] otherlv_2= FullStop ( (lv_func_op_3_0= ruleFunctionOperation ) ) )
            // InternalSiddhiParser.g:11204:3: otherlv_0= NumberSign this_WINDOW_1= ruleWINDOW[$current] otherlv_2= FullStop ( (lv_func_op_3_0= ruleFunctionOperation ) )
            {
            otherlv_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getWinAccess().getNumberSignKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getWinRule());
              			}
              			newCompositeNode(grammarAccess.getWinAccess().getWINDOWParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_100);
            this_WINDOW_1=ruleWINDOW(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WINDOW_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getWinAccess().getFullStopKeyword_2());
              		
            }
            // InternalSiddhiParser.g:11223:3: ( (lv_func_op_3_0= ruleFunctionOperation ) )
            // InternalSiddhiParser.g:11224:4: (lv_func_op_3_0= ruleFunctionOperation )
            {
            // InternalSiddhiParser.g:11224:4: (lv_func_op_3_0= ruleFunctionOperation )
            // InternalSiddhiParser.g:11225:5: lv_func_op_3_0= ruleFunctionOperation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWinAccess().getFunc_opFunctionOperationParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_func_op_3_0=ruleFunctionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWinRule());
              					}
              					set(
              						current,
              						"func_op",
              						lv_func_op_3_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionOperation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, ruleWin_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWin"


    // $ANTLR start "entryRuleExpression"
    // InternalSiddhiParser.g:11246:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleExpression_StartIndex = input.index();
        EObject iv_ruleExpression = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return current; }
            // InternalSiddhiParser.g:11246:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSiddhiParser.g:11247:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, entryRuleExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSiddhiParser.g:11253:1: ruleExpression returns [EObject current=null] : this_MathOperation_0= ruleMathOperation ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;
        int ruleExpression_StartIndex = input.index();
        EObject this_MathOperation_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return current; }
            // InternalSiddhiParser.g:11259:2: (this_MathOperation_0= ruleMathOperation )
            // InternalSiddhiParser.g:11260:2: this_MathOperation_0= ruleMathOperation
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getMathOperationParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MathOperation_0=ruleMathOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_MathOperation_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, ruleExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleMathOperation"
    // InternalSiddhiParser.g:11271:1: entryRuleMathOperation returns [EObject current=null] : iv_ruleMathOperation= ruleMathOperation EOF ;
    public final EObject entryRuleMathOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathOperation_StartIndex = input.index();
        EObject iv_ruleMathOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return current; }
            // InternalSiddhiParser.g:11271:54: (iv_ruleMathOperation= ruleMathOperation EOF )
            // InternalSiddhiParser.g:11272:2: iv_ruleMathOperation= ruleMathOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathOperation=ruleMathOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, entryRuleMathOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathOperation"


    // $ANTLR start "ruleMathOperation"
    // InternalSiddhiParser.g:11278:1: ruleMathOperation returns [EObject current=null] : ( (lv_mlo_0_0= ruleMathLogicalOperation ) ) ;
    public final EObject ruleMathOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathOperation_StartIndex = input.index();
        EObject lv_mlo_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return current; }
            // InternalSiddhiParser.g:11284:2: ( ( (lv_mlo_0_0= ruleMathLogicalOperation ) ) )
            // InternalSiddhiParser.g:11285:2: ( (lv_mlo_0_0= ruleMathLogicalOperation ) )
            {
            // InternalSiddhiParser.g:11285:2: ( (lv_mlo_0_0= ruleMathLogicalOperation ) )
            // InternalSiddhiParser.g:11286:3: (lv_mlo_0_0= ruleMathLogicalOperation )
            {
            // InternalSiddhiParser.g:11286:3: (lv_mlo_0_0= ruleMathLogicalOperation )
            // InternalSiddhiParser.g:11287:4: lv_mlo_0_0= ruleMathLogicalOperation
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMathOperationAccess().getMloMathLogicalOperationParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_mlo_0_0=ruleMathLogicalOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getMathOperationRule());
              				}
              				set(
              					current,
              					"mlo",
              					lv_mlo_0_0,
              					"org.xtext.example.siddhi.Siddhi.MathLogicalOperation");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, ruleMathOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathOperation"


    // $ANTLR start "entryRuleMathLogicalOperation"
    // InternalSiddhiParser.g:11307:1: entryRuleMathLogicalOperation returns [EObject current=null] : iv_ruleMathLogicalOperation= ruleMathLogicalOperation EOF ;
    public final EObject entryRuleMathLogicalOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathLogicalOperation_StartIndex = input.index();
        EObject iv_ruleMathLogicalOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return current; }
            // InternalSiddhiParser.g:11307:61: (iv_ruleMathLogicalOperation= ruleMathLogicalOperation EOF )
            // InternalSiddhiParser.g:11308:2: iv_ruleMathLogicalOperation= ruleMathLogicalOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathLogicalOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathLogicalOperation=ruleMathLogicalOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathLogicalOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, entryRuleMathLogicalOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathLogicalOperation"


    // $ANTLR start "ruleMathLogicalOperation"
    // InternalSiddhiParser.g:11314:1: ruleMathLogicalOperation returns [EObject current=null] : (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* ) ;
    public final EObject ruleMathLogicalOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathLogicalOperation_StartIndex = input.index();
        EObject this_MathInOperation_0 = null;

        EObject lv_and_2_0 = null;

        EObject lv_or_3_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return current; }
            // InternalSiddhiParser.g:11320:2: ( (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11321:2: (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11321:2: (this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )* )
            // InternalSiddhiParser.g:11322:3: this_MathInOperation_0= ruleMathInOperation ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getMathInOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_101);
            this_MathInOperation_0=ruleMathInOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathInOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11330:3: ( ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==Or) ) {
                    int LA136_2 = input.LA(2);

                    if ( (synpred100_InternalSiddhiParser()) ) {
                        alt136=1;
                    }


                }
                else if ( (LA136_0==And) ) {
                    int LA136_3 = input.LA(2);

                    if ( (synpred100_InternalSiddhiParser()) ) {
                        alt136=1;
                    }


                }


                switch (alt136) {
            	case 1 :
            	    // InternalSiddhiParser.g:11331:4: ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )=> ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11354:4: ( () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) ) )
            	    // InternalSiddhiParser.g:11355:5: () ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) ) ( (lv_right_4_0= ruleMathInOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11355:5: ()
            	    // InternalSiddhiParser.g:11356:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathLogicalOperationAccess().getMathLogicalOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11362:5: ( ( (lv_and_2_0= ruleAND ) ) | ( (lv_or_3_0= ruleOR ) ) )
            	    int alt135=2;
            	    int LA135_0 = input.LA(1);

            	    if ( (LA135_0==And) ) {
            	        alt135=1;
            	    }
            	    else if ( (LA135_0==Or) ) {
            	        alt135=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 135, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt135) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11363:6: ( (lv_and_2_0= ruleAND ) )
            	            {
            	            // InternalSiddhiParser.g:11363:6: ( (lv_and_2_0= ruleAND ) )
            	            // InternalSiddhiParser.g:11364:7: (lv_and_2_0= ruleAND )
            	            {
            	            // InternalSiddhiParser.g:11364:7: (lv_and_2_0= ruleAND )
            	            // InternalSiddhiParser.g:11365:8: lv_and_2_0= ruleAND
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getAndANDParserRuleCall_1_0_1_0_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_44);
            	            lv_and_2_0=ruleAND();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getMathLogicalOperationRule());
            	              								}
            	              								set(
            	              									current,
            	              									"and",
            	              									lv_and_2_0,
            	              									"org.xtext.example.siddhi.Siddhi.AND");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11383:6: ( (lv_or_3_0= ruleOR ) )
            	            {
            	            // InternalSiddhiParser.g:11383:6: ( (lv_or_3_0= ruleOR ) )
            	            // InternalSiddhiParser.g:11384:7: (lv_or_3_0= ruleOR )
            	            {
            	            // InternalSiddhiParser.g:11384:7: (lv_or_3_0= ruleOR )
            	            // InternalSiddhiParser.g:11385:8: lv_or_3_0= ruleOR
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getOrORParserRuleCall_1_0_1_1_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_44);
            	            lv_or_3_0=ruleOR();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getMathLogicalOperationRule());
            	              								}
            	              								set(
            	              									current,
            	              									"or",
            	              									lv_or_3_0,
            	              									"org.xtext.example.siddhi.Siddhi.OR");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11403:5: ( (lv_right_4_0= ruleMathInOperation ) )
            	    // InternalSiddhiParser.g:11404:6: (lv_right_4_0= ruleMathInOperation )
            	    {
            	    // InternalSiddhiParser.g:11404:6: (lv_right_4_0= ruleMathInOperation )
            	    // InternalSiddhiParser.g:11405:7: lv_right_4_0= ruleMathInOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathLogicalOperationAccess().getRightMathInOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_101);
            	    lv_right_4_0=ruleMathInOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathLogicalOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_4_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathInOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, ruleMathLogicalOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathLogicalOperation"


    // $ANTLR start "entryRuleMathInOperation"
    // InternalSiddhiParser.g:11428:1: entryRuleMathInOperation returns [EObject current=null] : iv_ruleMathInOperation= ruleMathInOperation EOF ;
    public final EObject entryRuleMathInOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathInOperation_StartIndex = input.index();
        EObject iv_ruleMathInOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return current; }
            // InternalSiddhiParser.g:11428:56: (iv_ruleMathInOperation= ruleMathInOperation EOF )
            // InternalSiddhiParser.g:11429:2: iv_ruleMathInOperation= ruleMathInOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathInOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathInOperation=ruleMathInOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathInOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, entryRuleMathInOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathInOperation"


    // $ANTLR start "ruleMathInOperation"
    // InternalSiddhiParser.g:11435:1: ruleMathInOperation returns [EObject current=null] : (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) ) )* ) ;
    public final EObject ruleMathInOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathInOperation_StartIndex = input.index();
        EObject this_MathGtLtOperation_0 = null;

        EObject lv_in_2_0 = null;

        EObject lv_name_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return current; }
            // InternalSiddhiParser.g:11441:2: ( (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) ) )* ) )
            // InternalSiddhiParser.g:11442:2: (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) ) )* )
            {
            // InternalSiddhiParser.g:11442:2: (this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) ) )* )
            // InternalSiddhiParser.g:11443:3: this_MathGtLtOperation_0= ruleMathGtLtOperation ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathInOperationAccess().getMathGtLtOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_102);
            this_MathGtLtOperation_0=ruleMathGtLtOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathGtLtOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11451:3: ( ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==In) ) {
                    int LA137_2 = input.LA(2);

                    if ( (synpred101_InternalSiddhiParser()) ) {
                        alt137=1;
                    }


                }


                switch (alt137) {
            	case 1 :
            	    // InternalSiddhiParser.g:11452:4: ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )=> ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) )
            	    {
            	    // InternalSiddhiParser.g:11467:4: ( () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) ) )
            	    // InternalSiddhiParser.g:11468:5: () ( (lv_in_2_0= ruleIN ) ) ( (lv_name_3_0= ruleName ) )
            	    {
            	    // InternalSiddhiParser.g:11468:5: ()
            	    // InternalSiddhiParser.g:11469:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathInOperationAccess().getMathInOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11475:5: ( (lv_in_2_0= ruleIN ) )
            	    // InternalSiddhiParser.g:11476:6: (lv_in_2_0= ruleIN )
            	    {
            	    // InternalSiddhiParser.g:11476:6: (lv_in_2_0= ruleIN )
            	    // InternalSiddhiParser.g:11477:7: lv_in_2_0= ruleIN
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathInOperationAccess().getInINParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_in_2_0=ruleIN();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathInOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"in",
            	      								lv_in_2_0,
            	      								"org.xtext.example.siddhi.Siddhi.IN");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSiddhiParser.g:11494:5: ( (lv_name_3_0= ruleName ) )
            	    // InternalSiddhiParser.g:11495:6: (lv_name_3_0= ruleName )
            	    {
            	    // InternalSiddhiParser.g:11495:6: (lv_name_3_0= ruleName )
            	    // InternalSiddhiParser.g:11496:7: lv_name_3_0= ruleName
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathInOperationAccess().getNameNameParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_102);
            	    lv_name_3_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathInOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"name",
            	      								lv_name_3_0,
            	      								"org.xtext.example.siddhi.Siddhi.Name");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, ruleMathInOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathInOperation"


    // $ANTLR start "entryRuleMathGtLtOperation"
    // InternalSiddhiParser.g:11519:1: entryRuleMathGtLtOperation returns [EObject current=null] : iv_ruleMathGtLtOperation= ruleMathGtLtOperation EOF ;
    public final EObject entryRuleMathGtLtOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathGtLtOperation_StartIndex = input.index();
        EObject iv_ruleMathGtLtOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return current; }
            // InternalSiddhiParser.g:11519:58: (iv_ruleMathGtLtOperation= ruleMathGtLtOperation EOF )
            // InternalSiddhiParser.g:11520:2: iv_ruleMathGtLtOperation= ruleMathGtLtOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathGtLtOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathGtLtOperation=ruleMathGtLtOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathGtLtOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, entryRuleMathGtLtOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathGtLtOperation"


    // $ANTLR start "ruleMathGtLtOperation"
    // InternalSiddhiParser.g:11526:1: ruleMathGtLtOperation returns [EObject current=null] : (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) ) )* ) ;
    public final EObject ruleMathGtLtOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathGtLtOperation_StartIndex = input.index();
        Token lv_gt_eq_2_0=null;
        Token lv_lt_eq_3_0=null;
        Token lv_gt_4_0=null;
        Token lv_lt_5_0=null;
        EObject this_MathEqualOperation_0 = null;

        EObject lv_right_6_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return current; }
            // InternalSiddhiParser.g:11532:2: ( (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11533:2: (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11533:2: (this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) ) )* )
            // InternalSiddhiParser.g:11534:3: this_MathEqualOperation_0= ruleMathEqualOperation ( ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathGtLtOperationAccess().getMathEqualOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_103);
            this_MathEqualOperation_0=ruleMathEqualOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathEqualOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11542:3: ( ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) ) )*
            loop139:
            do {
                int alt139=2;
                switch ( input.LA(1) ) {
                case GreaterThanSignEqualsSign:
                    {
                    int LA139_2 = input.LA(2);

                    if ( (synpred102_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;
                case LessThanSignEqualsSign:
                    {
                    int LA139_3 = input.LA(2);

                    if ( (synpred102_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;
                case GreaterThanSign:
                    {
                    int LA139_4 = input.LA(2);

                    if ( (synpred102_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;
                case LessThanSign:
                    {
                    int LA139_5 = input.LA(2);

                    if ( (synpred102_InternalSiddhiParser()) ) {
                        alt139=1;
                    }


                    }
                    break;

                }

                switch (alt139) {
            	case 1 :
            	    // InternalSiddhiParser.g:11543:4: ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )=> ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11578:4: ( () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) ) )
            	    // InternalSiddhiParser.g:11579:5: () ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) ) ( (lv_right_6_0= ruleMathGtLtOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11579:5: ()
            	    // InternalSiddhiParser.g:11580:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathGtLtOperationAccess().getMathGtLtOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11586:5: ( ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) ) | ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) ) | ( (lv_gt_4_0= GreaterThanSign ) ) | ( (lv_lt_5_0= LessThanSign ) ) )
            	    int alt138=4;
            	    switch ( input.LA(1) ) {
            	    case GreaterThanSignEqualsSign:
            	        {
            	        alt138=1;
            	        }
            	        break;
            	    case LessThanSignEqualsSign:
            	        {
            	        alt138=2;
            	        }
            	        break;
            	    case GreaterThanSign:
            	        {
            	        alt138=3;
            	        }
            	        break;
            	    case LessThanSign:
            	        {
            	        alt138=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 138, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt138) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11587:6: ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) )
            	            {
            	            // InternalSiddhiParser.g:11587:6: ( (lv_gt_eq_2_0= GreaterThanSignEqualsSign ) )
            	            // InternalSiddhiParser.g:11588:7: (lv_gt_eq_2_0= GreaterThanSignEqualsSign )
            	            {
            	            // InternalSiddhiParser.g:11588:7: (lv_gt_eq_2_0= GreaterThanSignEqualsSign )
            	            // InternalSiddhiParser.g:11589:8: lv_gt_eq_2_0= GreaterThanSignEqualsSign
            	            {
            	            lv_gt_eq_2_0=(Token)match(input,GreaterThanSignEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_gt_eq_2_0, grammarAccess.getMathGtLtOperationAccess().getGt_eqGreaterThanSignEqualsSignKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "gt_eq", lv_gt_eq_2_0, ">=");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11602:6: ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) )
            	            {
            	            // InternalSiddhiParser.g:11602:6: ( (lv_lt_eq_3_0= LessThanSignEqualsSign ) )
            	            // InternalSiddhiParser.g:11603:7: (lv_lt_eq_3_0= LessThanSignEqualsSign )
            	            {
            	            // InternalSiddhiParser.g:11603:7: (lv_lt_eq_3_0= LessThanSignEqualsSign )
            	            // InternalSiddhiParser.g:11604:8: lv_lt_eq_3_0= LessThanSignEqualsSign
            	            {
            	            lv_lt_eq_3_0=(Token)match(input,LessThanSignEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_lt_eq_3_0, grammarAccess.getMathGtLtOperationAccess().getLt_eqLessThanSignEqualsSignKeyword_1_0_1_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "lt_eq", lv_lt_eq_3_0, "<=");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalSiddhiParser.g:11617:6: ( (lv_gt_4_0= GreaterThanSign ) )
            	            {
            	            // InternalSiddhiParser.g:11617:6: ( (lv_gt_4_0= GreaterThanSign ) )
            	            // InternalSiddhiParser.g:11618:7: (lv_gt_4_0= GreaterThanSign )
            	            {
            	            // InternalSiddhiParser.g:11618:7: (lv_gt_4_0= GreaterThanSign )
            	            // InternalSiddhiParser.g:11619:8: lv_gt_4_0= GreaterThanSign
            	            {
            	            lv_gt_4_0=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_gt_4_0, grammarAccess.getMathGtLtOperationAccess().getGtGreaterThanSignKeyword_1_0_1_2_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "gt", lv_gt_4_0, ">");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 4 :
            	            // InternalSiddhiParser.g:11632:6: ( (lv_lt_5_0= LessThanSign ) )
            	            {
            	            // InternalSiddhiParser.g:11632:6: ( (lv_lt_5_0= LessThanSign ) )
            	            // InternalSiddhiParser.g:11633:7: (lv_lt_5_0= LessThanSign )
            	            {
            	            // InternalSiddhiParser.g:11633:7: (lv_lt_5_0= LessThanSign )
            	            // InternalSiddhiParser.g:11634:8: lv_lt_5_0= LessThanSign
            	            {
            	            lv_lt_5_0=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_lt_5_0, grammarAccess.getMathGtLtOperationAccess().getLtLessThanSignKeyword_1_0_1_3_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathGtLtOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "lt", lv_lt_5_0, "<");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11647:5: ( (lv_right_6_0= ruleMathGtLtOperation ) )
            	    // InternalSiddhiParser.g:11648:6: (lv_right_6_0= ruleMathGtLtOperation )
            	    {
            	    // InternalSiddhiParser.g:11648:6: (lv_right_6_0= ruleMathGtLtOperation )
            	    // InternalSiddhiParser.g:11649:7: lv_right_6_0= ruleMathGtLtOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathGtLtOperationAccess().getRightMathGtLtOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_103);
            	    lv_right_6_0=ruleMathGtLtOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathGtLtOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_6_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathGtLtOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, ruleMathGtLtOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathGtLtOperation"


    // $ANTLR start "entryRuleMathEqualOperation"
    // InternalSiddhiParser.g:11672:1: entryRuleMathEqualOperation returns [EObject current=null] : iv_ruleMathEqualOperation= ruleMathEqualOperation EOF ;
    public final EObject entryRuleMathEqualOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathEqualOperation_StartIndex = input.index();
        EObject iv_ruleMathEqualOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return current; }
            // InternalSiddhiParser.g:11672:59: (iv_ruleMathEqualOperation= ruleMathEqualOperation EOF )
            // InternalSiddhiParser.g:11673:2: iv_ruleMathEqualOperation= ruleMathEqualOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathEqualOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathEqualOperation=ruleMathEqualOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathEqualOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, entryRuleMathEqualOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathEqualOperation"


    // $ANTLR start "ruleMathEqualOperation"
    // InternalSiddhiParser.g:11679:1: ruleMathEqualOperation returns [EObject current=null] : (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* ) ;
    public final EObject ruleMathEqualOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathEqualOperation_StartIndex = input.index();
        Token lv_eq_2_0=null;
        Token lv_not_eq_3_0=null;
        EObject this_MathAddsubOperation_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return current; }
            // InternalSiddhiParser.g:11685:2: ( (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11686:2: (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11686:2: (this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )* )
            // InternalSiddhiParser.g:11687:3: this_MathAddsubOperation_0= ruleMathAddsubOperation ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathEqualOperationAccess().getMathAddsubOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_104);
            this_MathAddsubOperation_0=ruleMathAddsubOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathAddsubOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11695:3: ( ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) ) )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==EqualsSignEqualsSign) ) {
                    int LA141_2 = input.LA(2);

                    if ( (synpred103_InternalSiddhiParser()) ) {
                        alt141=1;
                    }


                }
                else if ( (LA141_0==ExclamationMarkEqualsSign) ) {
                    int LA141_3 = input.LA(2);

                    if ( (synpred103_InternalSiddhiParser()) ) {
                        alt141=1;
                    }


                }


                switch (alt141) {
            	case 1 :
            	    // InternalSiddhiParser.g:11696:4: ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )=> ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11719:4: ( () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) ) )
            	    // InternalSiddhiParser.g:11720:5: () ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) ) ( (lv_right_4_0= ruleMathAddsubOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11720:5: ()
            	    // InternalSiddhiParser.g:11721:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathEqualOperationAccess().getMathEqualOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11727:5: ( ( (lv_eq_2_0= EqualsSignEqualsSign ) ) | ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) ) )
            	    int alt140=2;
            	    int LA140_0 = input.LA(1);

            	    if ( (LA140_0==EqualsSignEqualsSign) ) {
            	        alt140=1;
            	    }
            	    else if ( (LA140_0==ExclamationMarkEqualsSign) ) {
            	        alt140=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 140, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt140) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11728:6: ( (lv_eq_2_0= EqualsSignEqualsSign ) )
            	            {
            	            // InternalSiddhiParser.g:11728:6: ( (lv_eq_2_0= EqualsSignEqualsSign ) )
            	            // InternalSiddhiParser.g:11729:7: (lv_eq_2_0= EqualsSignEqualsSign )
            	            {
            	            // InternalSiddhiParser.g:11729:7: (lv_eq_2_0= EqualsSignEqualsSign )
            	            // InternalSiddhiParser.g:11730:8: lv_eq_2_0= EqualsSignEqualsSign
            	            {
            	            lv_eq_2_0=(Token)match(input,EqualsSignEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_eq_2_0, grammarAccess.getMathEqualOperationAccess().getEqEqualsSignEqualsSignKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathEqualOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "eq", lv_eq_2_0, "==");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11743:6: ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) )
            	            {
            	            // InternalSiddhiParser.g:11743:6: ( (lv_not_eq_3_0= ExclamationMarkEqualsSign ) )
            	            // InternalSiddhiParser.g:11744:7: (lv_not_eq_3_0= ExclamationMarkEqualsSign )
            	            {
            	            // InternalSiddhiParser.g:11744:7: (lv_not_eq_3_0= ExclamationMarkEqualsSign )
            	            // InternalSiddhiParser.g:11745:8: lv_not_eq_3_0= ExclamationMarkEqualsSign
            	            {
            	            lv_not_eq_3_0=(Token)match(input,ExclamationMarkEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_not_eq_3_0, grammarAccess.getMathEqualOperationAccess().getNot_eqExclamationMarkEqualsSignKeyword_1_0_1_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathEqualOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "not_eq", lv_not_eq_3_0, "!=");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11758:5: ( (lv_right_4_0= ruleMathAddsubOperation ) )
            	    // InternalSiddhiParser.g:11759:6: (lv_right_4_0= ruleMathAddsubOperation )
            	    {
            	    // InternalSiddhiParser.g:11759:6: (lv_right_4_0= ruleMathAddsubOperation )
            	    // InternalSiddhiParser.g:11760:7: lv_right_4_0= ruleMathAddsubOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathEqualOperationAccess().getRightMathAddsubOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_right_4_0=ruleMathAddsubOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathEqualOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_4_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathAddsubOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, ruleMathEqualOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathEqualOperation"


    // $ANTLR start "entryRuleMathAddsubOperation"
    // InternalSiddhiParser.g:11783:1: entryRuleMathAddsubOperation returns [EObject current=null] : iv_ruleMathAddsubOperation= ruleMathAddsubOperation EOF ;
    public final EObject entryRuleMathAddsubOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathAddsubOperation_StartIndex = input.index();
        EObject iv_ruleMathAddsubOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return current; }
            // InternalSiddhiParser.g:11783:60: (iv_ruleMathAddsubOperation= ruleMathAddsubOperation EOF )
            // InternalSiddhiParser.g:11784:2: iv_ruleMathAddsubOperation= ruleMathAddsubOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathAddsubOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathAddsubOperation=ruleMathAddsubOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathAddsubOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, entryRuleMathAddsubOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathAddsubOperation"


    // $ANTLR start "ruleMathAddsubOperation"
    // InternalSiddhiParser.g:11790:1: ruleMathAddsubOperation returns [EObject current=null] : (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* ) ;
    public final EObject ruleMathAddsubOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathAddsubOperation_StartIndex = input.index();
        Token lv_add_2_0=null;
        Token lv_substract_3_0=null;
        EObject this_MathDivmulOperation_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return current; }
            // InternalSiddhiParser.g:11796:2: ( (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* ) )
            // InternalSiddhiParser.g:11797:2: (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* )
            {
            // InternalSiddhiParser.g:11797:2: (this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )* )
            // InternalSiddhiParser.g:11798:3: this_MathDivmulOperation_0= ruleMathDivmulOperation ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathAddsubOperationAccess().getMathDivmulOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_105);
            this_MathDivmulOperation_0=ruleMathDivmulOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathDivmulOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11806:3: ( ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) ) )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==PlusSign) ) {
                    int LA143_2 = input.LA(2);

                    if ( (synpred104_InternalSiddhiParser()) ) {
                        alt143=1;
                    }


                }
                else if ( (LA143_0==HyphenMinus) ) {
                    int LA143_3 = input.LA(2);

                    if ( (synpred104_InternalSiddhiParser()) ) {
                        alt143=1;
                    }


                }


                switch (alt143) {
            	case 1 :
            	    // InternalSiddhiParser.g:11807:4: ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )=> ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) )
            	    {
            	    // InternalSiddhiParser.g:11830:4: ( () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) ) )
            	    // InternalSiddhiParser.g:11831:5: () ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) ) ( (lv_right_4_0= ruleMathDivmulOperation ) )
            	    {
            	    // InternalSiddhiParser.g:11831:5: ()
            	    // InternalSiddhiParser.g:11832:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathAddsubOperationAccess().getMathAddsubOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11838:5: ( ( (lv_add_2_0= PlusSign ) ) | ( (lv_substract_3_0= HyphenMinus ) ) )
            	    int alt142=2;
            	    int LA142_0 = input.LA(1);

            	    if ( (LA142_0==PlusSign) ) {
            	        alt142=1;
            	    }
            	    else if ( (LA142_0==HyphenMinus) ) {
            	        alt142=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 142, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt142) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11839:6: ( (lv_add_2_0= PlusSign ) )
            	            {
            	            // InternalSiddhiParser.g:11839:6: ( (lv_add_2_0= PlusSign ) )
            	            // InternalSiddhiParser.g:11840:7: (lv_add_2_0= PlusSign )
            	            {
            	            // InternalSiddhiParser.g:11840:7: (lv_add_2_0= PlusSign )
            	            // InternalSiddhiParser.g:11841:8: lv_add_2_0= PlusSign
            	            {
            	            lv_add_2_0=(Token)match(input,PlusSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_add_2_0, grammarAccess.getMathAddsubOperationAccess().getAddPlusSignKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathAddsubOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "add", lv_add_2_0, "+");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11854:6: ( (lv_substract_3_0= HyphenMinus ) )
            	            {
            	            // InternalSiddhiParser.g:11854:6: ( (lv_substract_3_0= HyphenMinus ) )
            	            // InternalSiddhiParser.g:11855:7: (lv_substract_3_0= HyphenMinus )
            	            {
            	            // InternalSiddhiParser.g:11855:7: (lv_substract_3_0= HyphenMinus )
            	            // InternalSiddhiParser.g:11856:8: lv_substract_3_0= HyphenMinus
            	            {
            	            lv_substract_3_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_substract_3_0, grammarAccess.getMathAddsubOperationAccess().getSubstractHyphenMinusKeyword_1_0_1_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathAddsubOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "substract", lv_substract_3_0, "-");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:11869:5: ( (lv_right_4_0= ruleMathDivmulOperation ) )
            	    // InternalSiddhiParser.g:11870:6: (lv_right_4_0= ruleMathDivmulOperation )
            	    {
            	    // InternalSiddhiParser.g:11870:6: (lv_right_4_0= ruleMathDivmulOperation )
            	    // InternalSiddhiParser.g:11871:7: lv_right_4_0= ruleMathDivmulOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathAddsubOperationAccess().getRightMathDivmulOperationParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_right_4_0=ruleMathDivmulOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathAddsubOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_4_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathDivmulOperation");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, ruleMathAddsubOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathAddsubOperation"


    // $ANTLR start "entryRuleMathDivmulOperation"
    // InternalSiddhiParser.g:11894:1: entryRuleMathDivmulOperation returns [EObject current=null] : iv_ruleMathDivmulOperation= ruleMathDivmulOperation EOF ;
    public final EObject entryRuleMathDivmulOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleMathDivmulOperation_StartIndex = input.index();
        EObject iv_ruleMathDivmulOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return current; }
            // InternalSiddhiParser.g:11894:60: (iv_ruleMathDivmulOperation= ruleMathDivmulOperation EOF )
            // InternalSiddhiParser.g:11895:2: iv_ruleMathDivmulOperation= ruleMathDivmulOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathDivmulOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathDivmulOperation=ruleMathDivmulOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathDivmulOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, entryRuleMathDivmulOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathDivmulOperation"


    // $ANTLR start "ruleMathDivmulOperation"
    // InternalSiddhiParser.g:11901:1: ruleMathDivmulOperation returns [EObject current=null] : (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* ) ;
    public final EObject ruleMathDivmulOperation() throws RecognitionException {
        EObject current = null;
        int ruleMathDivmulOperation_StartIndex = input.index();
        Token lv_multiply_2_0=null;
        Token lv_devide_3_0=null;
        Token lv_mod_4_0=null;
        EObject this_MathOtherOperations_0 = null;

        EObject lv_right_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return current; }
            // InternalSiddhiParser.g:11907:2: ( (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* ) )
            // InternalSiddhiParser.g:11908:2: (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* )
            {
            // InternalSiddhiParser.g:11908:2: (this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )* )
            // InternalSiddhiParser.g:11909:3: this_MathOtherOperations_0= ruleMathOtherOperations ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMathDivmulOperationAccess().getMathOtherOperationsParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_106);
            this_MathOtherOperations_0=ruleMathOtherOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MathOtherOperations_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:11917:3: ( ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) ) )*
            loop145:
            do {
                int alt145=2;
                switch ( input.LA(1) ) {
                case Asterisk:
                    {
                    int LA145_2 = input.LA(2);

                    if ( (synpred105_InternalSiddhiParser()) ) {
                        alt145=1;
                    }


                    }
                    break;
                case Solidus:
                    {
                    int LA145_3 = input.LA(2);

                    if ( (synpred105_InternalSiddhiParser()) ) {
                        alt145=1;
                    }


                    }
                    break;
                case PercentSign:
                    {
                    int LA145_4 = input.LA(2);

                    if ( (synpred105_InternalSiddhiParser()) ) {
                        alt145=1;
                    }


                    }
                    break;

                }

                switch (alt145) {
            	case 1 :
            	    // InternalSiddhiParser.g:11918:4: ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )=> ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) )
            	    {
            	    // InternalSiddhiParser.g:11947:4: ( () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) ) )
            	    // InternalSiddhiParser.g:11948:5: () ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) ) ( (lv_right_5_0= ruleMathOtherOperations ) )
            	    {
            	    // InternalSiddhiParser.g:11948:5: ()
            	    // InternalSiddhiParser.g:11949:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMathDivmulOperationAccess().getMathDivmulOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSiddhiParser.g:11955:5: ( ( (lv_multiply_2_0= Asterisk ) ) | ( (lv_devide_3_0= Solidus ) ) | ( (lv_mod_4_0= PercentSign ) ) )
            	    int alt144=3;
            	    switch ( input.LA(1) ) {
            	    case Asterisk:
            	        {
            	        alt144=1;
            	        }
            	        break;
            	    case Solidus:
            	        {
            	        alt144=2;
            	        }
            	        break;
            	    case PercentSign:
            	        {
            	        alt144=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 144, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt144) {
            	        case 1 :
            	            // InternalSiddhiParser.g:11956:6: ( (lv_multiply_2_0= Asterisk ) )
            	            {
            	            // InternalSiddhiParser.g:11956:6: ( (lv_multiply_2_0= Asterisk ) )
            	            // InternalSiddhiParser.g:11957:7: (lv_multiply_2_0= Asterisk )
            	            {
            	            // InternalSiddhiParser.g:11957:7: (lv_multiply_2_0= Asterisk )
            	            // InternalSiddhiParser.g:11958:8: lv_multiply_2_0= Asterisk
            	            {
            	            lv_multiply_2_0=(Token)match(input,Asterisk,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_multiply_2_0, grammarAccess.getMathDivmulOperationAccess().getMultiplyAsteriskKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathDivmulOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "multiply", lv_multiply_2_0, "*");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSiddhiParser.g:11971:6: ( (lv_devide_3_0= Solidus ) )
            	            {
            	            // InternalSiddhiParser.g:11971:6: ( (lv_devide_3_0= Solidus ) )
            	            // InternalSiddhiParser.g:11972:7: (lv_devide_3_0= Solidus )
            	            {
            	            // InternalSiddhiParser.g:11972:7: (lv_devide_3_0= Solidus )
            	            // InternalSiddhiParser.g:11973:8: lv_devide_3_0= Solidus
            	            {
            	            lv_devide_3_0=(Token)match(input,Solidus,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_devide_3_0, grammarAccess.getMathDivmulOperationAccess().getDevideSolidusKeyword_1_0_1_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathDivmulOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "devide", lv_devide_3_0, "/");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalSiddhiParser.g:11986:6: ( (lv_mod_4_0= PercentSign ) )
            	            {
            	            // InternalSiddhiParser.g:11986:6: ( (lv_mod_4_0= PercentSign ) )
            	            // InternalSiddhiParser.g:11987:7: (lv_mod_4_0= PercentSign )
            	            {
            	            // InternalSiddhiParser.g:11987:7: (lv_mod_4_0= PercentSign )
            	            // InternalSiddhiParser.g:11988:8: lv_mod_4_0= PercentSign
            	            {
            	            lv_mod_4_0=(Token)match(input,PercentSign,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_mod_4_0, grammarAccess.getMathDivmulOperationAccess().getModPercentSignKeyword_1_0_1_2_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMathDivmulOperationRule());
            	              								}
            	              								setWithLastConsumed(current, "mod", lv_mod_4_0, "%");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSiddhiParser.g:12001:5: ( (lv_right_5_0= ruleMathOtherOperations ) )
            	    // InternalSiddhiParser.g:12002:6: (lv_right_5_0= ruleMathOtherOperations )
            	    {
            	    // InternalSiddhiParser.g:12002:6: (lv_right_5_0= ruleMathOtherOperations )
            	    // InternalSiddhiParser.g:12003:7: lv_right_5_0= ruleMathOtherOperations
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getMathDivmulOperationAccess().getRightMathOtherOperationsParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_right_5_0=ruleMathOtherOperations();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getMathDivmulOperationRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_5_0,
            	      								"org.xtext.example.siddhi.Siddhi.MathOtherOperations");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, ruleMathDivmulOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathDivmulOperation"


    // $ANTLR start "entryRuleMathOtherOperations"
    // InternalSiddhiParser.g:12026:1: entryRuleMathOtherOperations returns [EObject current=null] : iv_ruleMathOtherOperations= ruleMathOtherOperations EOF ;
    public final EObject entryRuleMathOtherOperations() throws RecognitionException {
        EObject current = null;
        int entryRuleMathOtherOperations_StartIndex = input.index();
        EObject iv_ruleMathOtherOperations = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return current; }
            // InternalSiddhiParser.g:12026:60: (iv_ruleMathOtherOperations= ruleMathOtherOperations EOF )
            // InternalSiddhiParser.g:12027:2: iv_ruleMathOtherOperations= ruleMathOtherOperations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathOtherOperationsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMathOtherOperations=ruleMathOtherOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathOtherOperations; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, entryRuleMathOtherOperations_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMathOtherOperations"


    // $ANTLR start "ruleMathOtherOperations"
    // InternalSiddhiParser.g:12033:1: ruleMathOtherOperations returns [EObject current=null] : ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_lit_7_0= ruleLiteral ) ) ) ;
    public final EObject ruleMathOtherOperations() throws RecognitionException {
        EObject current = null;
        int ruleMathOtherOperations_StartIndex = input.index();
        EObject lv_not_1_0 = null;

        EObject lv_op_2_0 = null;

        EObject lv_op_4_0 = null;

        EObject this_NullCheck_6 = null;

        EObject lv_lit_7_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return current; }
            // InternalSiddhiParser.g:12039:2: ( ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_lit_7_0= ruleLiteral ) ) ) )
            // InternalSiddhiParser.g:12040:2: ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_lit_7_0= ruleLiteral ) ) )
            {
            // InternalSiddhiParser.g:12040:2: ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_lit_7_0= ruleLiteral ) ) )
            int alt146=4;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // InternalSiddhiParser.g:12041:3: ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) )
                    {
                    // InternalSiddhiParser.g:12041:3: ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) )
                    // InternalSiddhiParser.g:12042:4: ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) )
                    {
                    // InternalSiddhiParser.g:12057:4: ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) )
                    // InternalSiddhiParser.g:12058:5: () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) )
                    {
                    // InternalSiddhiParser.g:12058:5: ()
                    // InternalSiddhiParser.g:12059:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getMathOtherOperationsAccess().getNotOperationAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:12065:5: ( (lv_not_1_0= ruleNOT ) )
                    // InternalSiddhiParser.g:12066:6: (lv_not_1_0= ruleNOT )
                    {
                    // InternalSiddhiParser.g:12066:6: (lv_not_1_0= ruleNOT )
                    // InternalSiddhiParser.g:12067:7: lv_not_1_0= ruleNOT
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getNotNOTParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_not_1_0=ruleNOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      							}
                      							set(
                      								current,
                      								"not",
                      								lv_not_1_0,
                      								"org.xtext.example.siddhi.Siddhi.NOT");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:12084:5: ( (lv_op_2_0= ruleMathOperation ) )
                    // InternalSiddhiParser.g:12085:6: (lv_op_2_0= ruleMathOperation )
                    {
                    // InternalSiddhiParser.g:12085:6: (lv_op_2_0= ruleMathOperation )
                    // InternalSiddhiParser.g:12086:7: lv_op_2_0= ruleMathOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_op_2_0=ruleMathOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      							}
                      							set(
                      								current,
                      								"op",
                      								lv_op_2_0,
                      								"org.xtext.example.siddhi.Siddhi.MathOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12106:3: ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR )
                    {
                    // InternalSiddhiParser.g:12106:3: ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR )
                    // InternalSiddhiParser.g:12107:4: ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getOPEN_PARParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    ruleOPEN_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:12114:4: ( (lv_op_4_0= ruleMathOperation ) )
                    // InternalSiddhiParser.g:12115:5: (lv_op_4_0= ruleMathOperation )
                    {
                    // InternalSiddhiParser.g:12115:5: (lv_op_4_0= ruleMathOperation )
                    // InternalSiddhiParser.g:12116:6: lv_op_4_0= ruleMathOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_op_4_0=ruleMathOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_4_0,
                      							"org.xtext.example.siddhi.Siddhi.MathOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getCLOSE_PARParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_PAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:12142:3: ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck )
                    {
                    // InternalSiddhiParser.g:12142:3: ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck )
                    // InternalSiddhiParser.g:12143:4: ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getNullCheckParserRuleCall_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullCheck_6=ruleNullCheck();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_NullCheck_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:12154:3: ( (lv_lit_7_0= ruleLiteral ) )
                    {
                    // InternalSiddhiParser.g:12154:3: ( (lv_lit_7_0= ruleLiteral ) )
                    // InternalSiddhiParser.g:12155:4: (lv_lit_7_0= ruleLiteral )
                    {
                    // InternalSiddhiParser.g:12155:4: (lv_lit_7_0= ruleLiteral )
                    // InternalSiddhiParser.g:12156:5: lv_lit_7_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMathOtherOperationsAccess().getLitLiteralParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_lit_7_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMathOtherOperationsRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_7_0,
                      						"org.xtext.example.siddhi.Siddhi.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, ruleMathOtherOperations_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMathOtherOperations"


    // $ANTLR start "entryRuleNullCheck"
    // InternalSiddhiParser.g:12177:1: entryRuleNullCheck returns [EObject current=null] : iv_ruleNullCheck= ruleNullCheck EOF ;
    public final EObject entryRuleNullCheck() throws RecognitionException {
        EObject current = null;
        int entryRuleNullCheck_StartIndex = input.index();
        EObject iv_ruleNullCheck = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return current; }
            // InternalSiddhiParser.g:12177:50: (iv_ruleNullCheck= ruleNullCheck EOF )
            // InternalSiddhiParser.g:12178:2: iv_ruleNullCheck= ruleNullCheck EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCheckRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullCheck=ruleNullCheck();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCheck; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, entryRuleNullCheck_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCheck"


    // $ANTLR start "ruleNullCheck"
    // InternalSiddhiParser.g:12184:1: ruleNullCheck returns [EObject current=null] : ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] ) ;
    public final EObject ruleNullCheck() throws RecognitionException {
        EObject current = null;
        int ruleNullCheck_StartIndex = input.index();
        EObject lv_stream_ref_0_0 = null;

        EObject lv_attr_ref_1_0 = null;

        EObject lv_fo_2_0 = null;

        EObject this_IS_3 = null;

        EObject this_NULL_4 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return current; }
            // InternalSiddhiParser.g:12190:2: ( ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] ) )
            // InternalSiddhiParser.g:12191:2: ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] )
            {
            // InternalSiddhiParser.g:12191:2: ( ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current] )
            // InternalSiddhiParser.g:12192:3: ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( (lv_fo_2_0= ruleFunctionOperation ) ) ) this_IS_3= ruleIS[$current] this_NULL_4= ruleNULL[$current]
            {
            // InternalSiddhiParser.g:12192:3: ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( (lv_fo_2_0= ruleFunctionOperation ) ) )
            int alt147=3;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    // InternalSiddhiParser.g:12193:4: ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) )
                    {
                    // InternalSiddhiParser.g:12193:4: ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) )
                    // InternalSiddhiParser.g:12194:5: ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference )
                    {
                    // InternalSiddhiParser.g:12198:5: (lv_stream_ref_0_0= ruleStreamReference )
                    // InternalSiddhiParser.g:12199:6: lv_stream_ref_0_0= ruleStreamReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNullCheckAccess().getStream_refStreamReferenceParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_stream_ref_0_0=ruleStreamReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNullCheckRule());
                      						}
                      						set(
                      							current,
                      							"stream_ref",
                      							lv_stream_ref_0_0,
                      							"org.xtext.example.siddhi.Siddhi.StreamReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12217:4: ( (lv_attr_ref_1_0= ruleAttributeReference ) )
                    {
                    // InternalSiddhiParser.g:12217:4: ( (lv_attr_ref_1_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:12218:5: (lv_attr_ref_1_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:12218:5: (lv_attr_ref_1_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:12219:6: lv_attr_ref_1_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNullCheckAccess().getAttr_refAttributeReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_attr_ref_1_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNullCheckRule());
                      						}
                      						set(
                      							current,
                      							"attr_ref",
                      							lv_attr_ref_1_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:12237:4: ( (lv_fo_2_0= ruleFunctionOperation ) )
                    {
                    // InternalSiddhiParser.g:12237:4: ( (lv_fo_2_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:12238:5: (lv_fo_2_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:12238:5: (lv_fo_2_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:12239:6: lv_fo_2_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNullCheckAccess().getFoFunctionOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_fo_2_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNullCheckRule());
                      						}
                      						set(
                      							current,
                      							"fo",
                      							lv_fo_2_0,
                      							"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNullCheckRule());
              			}
              			newCompositeNode(grammarAccess.getNullCheckAccess().getISParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_108);
            this_IS_3=ruleIS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_IS_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNullCheckRule());
              			}
              			newCompositeNode(grammarAccess.getNullCheckAccess().getNULLParserRuleCall_2());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_NULL_4=ruleNULL(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NULL_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, ruleNullCheck_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNullCheck"


    // $ANTLR start "entryRuleStreamReference"
    // InternalSiddhiParser.g:12283:1: entryRuleStreamReference returns [EObject current=null] : iv_ruleStreamReference= ruleStreamReference EOF ;
    public final EObject entryRuleStreamReference() throws RecognitionException {
        EObject current = null;
        int entryRuleStreamReference_StartIndex = input.index();
        EObject iv_ruleStreamReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return current; }
            // InternalSiddhiParser.g:12283:56: (iv_ruleStreamReference= ruleStreamReference EOF )
            // InternalSiddhiParser.g:12284:2: iv_ruleStreamReference= ruleStreamReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStreamReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStreamReference=ruleStreamReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStreamReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, entryRuleStreamReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStreamReference"


    // $ANTLR start "ruleStreamReference"
    // InternalSiddhiParser.g:12290:1: ruleStreamReference returns [EObject current=null] : ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ) ;
    public final EObject ruleStreamReference() throws RecognitionException {
        EObject current = null;
        int ruleStreamReference_StartIndex = input.index();
        Token lv_hash_0_0=null;
        EObject lv_name_1_0 = null;

        EObject lv_aatr_index_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return current; }
            // InternalSiddhiParser.g:12296:2: ( ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ) )
            // InternalSiddhiParser.g:12297:2: ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )
            {
            // InternalSiddhiParser.g:12297:2: ( ( (lv_hash_0_0= NumberSign ) )? ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )
            // InternalSiddhiParser.g:12298:3: ( (lv_hash_0_0= NumberSign ) )? ( (lv_name_1_0= ruleName ) ) ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
            {
            // InternalSiddhiParser.g:12298:3: ( (lv_hash_0_0= NumberSign ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==NumberSign) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSiddhiParser.g:12299:4: (lv_hash_0_0= NumberSign )
                    {
                    // InternalSiddhiParser.g:12299:4: (lv_hash_0_0= NumberSign )
                    // InternalSiddhiParser.g:12300:5: lv_hash_0_0= NumberSign
                    {
                    lv_hash_0_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hash_0_0, grammarAccess.getStreamReferenceAccess().getHashNumberSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStreamReferenceRule());
                      					}
                      					setWithLastConsumed(current, "hash", lv_hash_0_0, "#");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSiddhiParser.g:12312:3: ( (lv_name_1_0= ruleName ) )
            // InternalSiddhiParser.g:12313:4: (lv_name_1_0= ruleName )
            {
            // InternalSiddhiParser.g:12313:4: (lv_name_1_0= ruleName )
            // InternalSiddhiParser.g:12314:5: lv_name_1_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStreamReferenceAccess().getNameNameParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_name_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStreamReferenceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.siddhi.Siddhi.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:12331:3: ( ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==LeftSquareBracket) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSiddhiParser.g:12332:4: ruleOPEN_SQARE_BRACKETS ( (lv_aatr_index_3_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getStreamReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    ruleOPEN_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:12339:4: ( (lv_aatr_index_3_0= ruleAttributeIndex ) )
                    // InternalSiddhiParser.g:12340:5: (lv_aatr_index_3_0= ruleAttributeIndex )
                    {
                    // InternalSiddhiParser.g:12340:5: (lv_aatr_index_3_0= ruleAttributeIndex )
                    // InternalSiddhiParser.g:12341:6: lv_aatr_index_3_0= ruleAttributeIndex
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStreamReferenceAccess().getAatr_indexAttributeIndexParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_aatr_index_3_0=ruleAttributeIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStreamReferenceRule());
                      						}
                      						set(
                      							current,
                      							"aatr_index",
                      							lv_aatr_index_3_0,
                      							"org.xtext.example.siddhi.Siddhi.AttributeIndex");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getStreamReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCLOSE_SQARE_BRACKETS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, ruleStreamReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStreamReference"


    // $ANTLR start "entryRuleLiteral"
    // InternalSiddhiParser.g:12370:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteral_StartIndex = input.index();
        EObject iv_ruleLiteral = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return current; }
            // InternalSiddhiParser.g:12370:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalSiddhiParser.g:12371:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, entryRuleLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalSiddhiParser.g:12377:1: ruleLiteral returns [EObject current=null] : ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;
        int ruleLiteral_StartIndex = input.index();
        EObject lv_const_val_0_0 = null;

        EObject lv_fo_1_0 = null;

        EObject lv_attrRef_2_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return current; }
            // InternalSiddhiParser.g:12383:2: ( ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) ) )
            // InternalSiddhiParser.g:12384:2: ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) )
            {
            // InternalSiddhiParser.g:12384:2: ( ( (lv_const_val_0_0= ruleConstantValue ) ) | ( (lv_fo_1_0= ruleFunctionOperation ) ) | ( (lv_attrRef_2_0= ruleAttributeReference ) ) )
            int alt150=3;
            switch ( input.LA(1) ) {
            case True:
                {
                int LA150_1 = input.LA(2);

                if ( (LA150_1==EOF||(LA150_1>=Define && LA150_1<=Delete)||LA150_1==Insert||(LA150_1>=Output && LA150_1<=Return)||LA150_1==Select||LA150_1==Update||LA150_1==Within||LA150_1==From||LA150_1==And||LA150_1==End||LA150_1==Per||LA150_1==ExclamationMarkEqualsSign||(LA150_1>=LessThanSignEqualsSign && LA150_1<=As)||LA150_1==In||(LA150_1>=Of && LA150_1<=Or)||LA150_1==PercentSign||(LA150_1>=RightParenthesis && LA150_1<=HyphenMinus)||LA150_1==Solidus||(LA150_1>=Semicolon && LA150_1<=LessThanSign)||LA150_1==GreaterThanSign||LA150_1==CommercialAt||LA150_1==RightSquareBracket||LA150_1==RULE_STRING) ) {
                    alt150=1;
                }
                else if ( (LA150_1==LeftParenthesis||LA150_1==Colon) ) {
                    alt150=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 150, 1, input);

                    throw nvae;
                }
                }
                break;
            case False:
                {
                int LA150_2 = input.LA(2);

                if ( (LA150_2==LeftParenthesis||LA150_2==Colon) ) {
                    alt150=2;
                }
                else if ( (LA150_2==EOF||(LA150_2>=Define && LA150_2<=Delete)||LA150_2==Insert||(LA150_2>=Output && LA150_2<=Return)||LA150_2==Select||LA150_2==Update||LA150_2==Within||LA150_2==From||LA150_2==And||LA150_2==End||LA150_2==Per||LA150_2==ExclamationMarkEqualsSign||(LA150_2>=LessThanSignEqualsSign && LA150_2<=As)||LA150_2==In||(LA150_2>=Of && LA150_2<=Or)||LA150_2==PercentSign||(LA150_2>=RightParenthesis && LA150_2<=HyphenMinus)||LA150_2==Solidus||(LA150_2>=Semicolon && LA150_2<=LessThanSign)||LA150_2==GreaterThanSign||LA150_2==CommercialAt||LA150_2==RightSquareBracket||LA150_2==RULE_STRING) ) {
                    alt150=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 150, 2, input);

                    throw nvae;
                }
                }
                break;
            case PlusSign:
            case HyphenMinus:
            case FullStop:
            case RULE_INT:
            case RULE_STRING:
                {
                alt150=1;
                }
                break;
            case RULE_ID:
                {
                int LA150_4 = input.LA(2);

                if ( (LA150_4==LeftParenthesis||LA150_4==Colon) ) {
                    alt150=2;
                }
                else if ( (LA150_4==EOF||(LA150_4>=Define && LA150_4<=Delete)||LA150_4==Insert||(LA150_4>=Output && LA150_4<=Return)||LA150_4==Select||LA150_4==Update||LA150_4==Within||LA150_4==From||LA150_4==Last||LA150_4==And||LA150_4==End||LA150_4==Per||LA150_4==ExclamationMarkEqualsSign||(LA150_4>=LessThanSignEqualsSign && LA150_4<=As)||LA150_4==In||(LA150_4>=Of && LA150_4<=PercentSign)||(LA150_4>=RightParenthesis && LA150_4<=Solidus)||(LA150_4>=Semicolon && LA150_4<=LessThanSign)||LA150_4==GreaterThanSign||LA150_4==CommercialAt||LA150_4==RightSquareBracket||LA150_4==RULE_INT||LA150_4==RULE_STRING) ) {
                    alt150=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 150, 4, input);

                    throw nvae;
                }
                }
                break;
            case Unidirectional:
            case Milliseconds:
            case Millisecond:
            case Partition:
            case Millisec:
            case Snapshot:
            case Current:
            case Expired:
            case Minutes:
            case Seconds:
            case Define:
            case Delete:
            case Double:
            case Events:
            case Having:
            case Insert:
            case Minute:
            case Months:
            case Object:
            case Output:
            case Return:
            case Second:
            case Select:
            case Stream:
            case String:
            case Update:
            case Window:
            case Within:
            case Begin:
            case Every:
            case First:
            case Float:
            case Group:
            case Hours:
            case Inner:
            case Month:
            case Outer:
            case Right:
            case Table:
            case Weeks:
            case Years:
            case Bool:
            case Days:
            case From:
            case Full:
            case Hour:
            case Into:
            case Join:
            case Last:
            case Left:
            case Long:
            case Null:
            case Week:
            case With:
            case Year:
            case All:
            case And:
            case Day:
            case End:
            case For:
            case Int:
            case Min:
            case Not:
            case Raw:
            case Sec:
            case As:
            case By:
            case Is:
            case Of:
            case On:
            case Or:
                {
                alt150=2;
                }
                break;
            case NumberSign:
                {
                alt150=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }

            switch (alt150) {
                case 1 :
                    // InternalSiddhiParser.g:12385:3: ( (lv_const_val_0_0= ruleConstantValue ) )
                    {
                    // InternalSiddhiParser.g:12385:3: ( (lv_const_val_0_0= ruleConstantValue ) )
                    // InternalSiddhiParser.g:12386:4: (lv_const_val_0_0= ruleConstantValue )
                    {
                    // InternalSiddhiParser.g:12386:4: (lv_const_val_0_0= ruleConstantValue )
                    // InternalSiddhiParser.g:12387:5: lv_const_val_0_0= ruleConstantValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getConst_valConstantValueParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_const_val_0_0=ruleConstantValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"const_val",
                      						lv_const_val_0_0,
                      						"org.xtext.example.siddhi.Siddhi.ConstantValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12405:3: ( (lv_fo_1_0= ruleFunctionOperation ) )
                    {
                    // InternalSiddhiParser.g:12405:3: ( (lv_fo_1_0= ruleFunctionOperation ) )
                    // InternalSiddhiParser.g:12406:4: (lv_fo_1_0= ruleFunctionOperation )
                    {
                    // InternalSiddhiParser.g:12406:4: (lv_fo_1_0= ruleFunctionOperation )
                    // InternalSiddhiParser.g:12407:5: lv_fo_1_0= ruleFunctionOperation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getFoFunctionOperationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_fo_1_0=ruleFunctionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"fo",
                      						lv_fo_1_0,
                      						"org.xtext.example.siddhi.Siddhi.FunctionOperation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:12425:3: ( (lv_attrRef_2_0= ruleAttributeReference ) )
                    {
                    // InternalSiddhiParser.g:12425:3: ( (lv_attrRef_2_0= ruleAttributeReference ) )
                    // InternalSiddhiParser.g:12426:4: (lv_attrRef_2_0= ruleAttributeReference )
                    {
                    // InternalSiddhiParser.g:12426:4: (lv_attrRef_2_0= ruleAttributeReference )
                    // InternalSiddhiParser.g:12427:5: lv_attrRef_2_0= ruleAttributeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getAttrRefAttributeReferenceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_attrRef_2_0=ruleAttributeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"attrRef",
                      						lv_attrRef_2_0,
                      						"org.xtext.example.siddhi.Siddhi.AttributeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, ruleLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleAttributeReference"
    // InternalSiddhiParser.g:12448:1: entryRuleAttributeReference returns [EObject current=null] : iv_ruleAttributeReference= ruleAttributeReference EOF ;
    public final EObject entryRuleAttributeReference() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeReference_StartIndex = input.index();
        EObject iv_ruleAttributeReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return current; }
            // InternalSiddhiParser.g:12448:59: (iv_ruleAttributeReference= ruleAttributeReference EOF )
            // InternalSiddhiParser.g:12449:2: iv_ruleAttributeReference= ruleAttributeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeReference=ruleAttributeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, entryRuleAttributeReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeReference"


    // $ANTLR start "ruleAttributeReference"
    // InternalSiddhiParser.g:12455:1: ruleAttributeReference returns [EObject current=null] : ( ( ( ( () ( ( ruleIdNew ) ) ) )=> ( () ( (lv_name_1_0= ruleIdNew ) ) ) ) | ( () ( (lv_hash1_3_0= NumberSign ) )? ( (lv_name1_4_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) ) ) | ( ( ( ( ruleFeaturesOrOutAttrReference ) ) )=> ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) ) ) ;
    public final EObject ruleAttributeReference() throws RecognitionException {
        EObject current = null;
        int ruleAttributeReference_StartIndex = input.index();
        Token lv_hash1_3_0=null;
        Token lv_hash2_7_0=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_name1_4_0 = null;

        EObject lv_OPEN_SQARE_BRACKETSattribute_index1_5_0 = null;

        EObject lv_name2_8_0 = null;

        EObject lv_OPEN_SQARE_BRACKETSattribute_index2_9_0 = null;

        EObject lv_featuresOrAttrRef_12_0 = null;

        EObject lv_featuresOrAttrRef_13_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return current; }
            // InternalSiddhiParser.g:12461:2: ( ( ( ( ( () ( ( ruleIdNew ) ) ) )=> ( () ( (lv_name_1_0= ruleIdNew ) ) ) ) | ( () ( (lv_hash1_3_0= NumberSign ) )? ( (lv_name1_4_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) ) ) | ( ( ( ( ruleFeaturesOrOutAttrReference ) ) )=> ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) ) ) )
            // InternalSiddhiParser.g:12462:2: ( ( ( ( () ( ( ruleIdNew ) ) ) )=> ( () ( (lv_name_1_0= ruleIdNew ) ) ) ) | ( () ( (lv_hash1_3_0= NumberSign ) )? ( (lv_name1_4_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) ) ) | ( ( ( ( ruleFeaturesOrOutAttrReference ) ) )=> ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) ) )
            {
            // InternalSiddhiParser.g:12462:2: ( ( ( ( () ( ( ruleIdNew ) ) ) )=> ( () ( (lv_name_1_0= ruleIdNew ) ) ) ) | ( () ( (lv_hash1_3_0= NumberSign ) )? ( (lv_name1_4_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) ) ) | ( ( ( ( ruleFeaturesOrOutAttrReference ) ) )=> ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) ) )
            int alt155=3;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==RULE_ID) ) {
                int LA155_1 = input.LA(2);

                if ( (LA155_1==Last||LA155_1==NumberSign||LA155_1==FullStop||LA155_1==RULE_INT) ) {
                    alt155=2;
                }
                else if ( (synpred109_InternalSiddhiParser()) ) {
                    alt155=1;
                }
                else if ( (synpred110_InternalSiddhiParser()) ) {
                    alt155=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 155, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA155_0==NumberSign) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // InternalSiddhiParser.g:12463:3: ( ( ( () ( ( ruleIdNew ) ) ) )=> ( () ( (lv_name_1_0= ruleIdNew ) ) ) )
                    {
                    // InternalSiddhiParser.g:12463:3: ( ( ( () ( ( ruleIdNew ) ) ) )=> ( () ( (lv_name_1_0= ruleIdNew ) ) ) )
                    // InternalSiddhiParser.g:12464:4: ( ( () ( ( ruleIdNew ) ) ) )=> ( () ( (lv_name_1_0= ruleIdNew ) ) )
                    {
                    // InternalSiddhiParser.g:12474:4: ( () ( (lv_name_1_0= ruleIdNew ) ) )
                    // InternalSiddhiParser.g:12475:5: () ( (lv_name_1_0= ruleIdNew ) )
                    {
                    // InternalSiddhiParser.g:12475:5: ()
                    // InternalSiddhiParser.g:12476:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getAttributeReferenceAccess().getAttributeReferenceAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:12482:5: ( (lv_name_1_0= ruleIdNew ) )
                    // InternalSiddhiParser.g:12483:6: (lv_name_1_0= ruleIdNew )
                    {
                    // InternalSiddhiParser.g:12483:6: (lv_name_1_0= ruleIdNew )
                    // InternalSiddhiParser.g:12484:7: lv_name_1_0= ruleIdNew
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAttributeReferenceAccess().getNameIdNewParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_name_1_0=ruleIdNew();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                      							}
                      							set(
                      								current,
                      								"name",
                      								lv_name_1_0,
                      								"org.xtext.example.siddhi.Siddhi.IdNew");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12504:3: ( () ( (lv_hash1_3_0= NumberSign ) )? ( (lv_name1_4_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) ) )
                    {
                    // InternalSiddhiParser.g:12504:3: ( () ( (lv_hash1_3_0= NumberSign ) )? ( (lv_name1_4_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) ) )
                    // InternalSiddhiParser.g:12505:4: () ( (lv_hash1_3_0= NumberSign ) )? ( (lv_name1_4_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )? otherlv_11= FullStop ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) )
                    {
                    // InternalSiddhiParser.g:12505:4: ()
                    // InternalSiddhiParser.g:12506:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeReferenceAccess().getAttributeReferenceAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12512:4: ( (lv_hash1_3_0= NumberSign ) )?
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==NumberSign) ) {
                        alt151=1;
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalSiddhiParser.g:12513:5: (lv_hash1_3_0= NumberSign )
                            {
                            // InternalSiddhiParser.g:12513:5: (lv_hash1_3_0= NumberSign )
                            // InternalSiddhiParser.g:12514:6: lv_hash1_3_0= NumberSign
                            {
                            lv_hash1_3_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_hash1_3_0, grammarAccess.getAttributeReferenceAccess().getHash1NumberSignKeyword_1_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAttributeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "hash1", lv_hash1_3_0, "#");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:12526:4: ( (lv_name1_4_0= ruleSourceOrEventReference ) )
                    // InternalSiddhiParser.g:12527:5: (lv_name1_4_0= ruleSourceOrEventReference )
                    {
                    // InternalSiddhiParser.g:12527:5: (lv_name1_4_0= ruleSourceOrEventReference )
                    // InternalSiddhiParser.g:12528:6: lv_name1_4_0= ruleSourceOrEventReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getName1SourceOrEventReferenceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_name1_4_0=ruleSourceOrEventReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"name1",
                      							lv_name1_4_0,
                      							"org.xtext.example.siddhi.Siddhi.SourceOrEventReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:12545:4: ( ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( (LA152_0==Last||LA152_0==RULE_INT) ) {
                        alt152=1;
                    }
                    switch (alt152) {
                        case 1 :
                            // InternalSiddhiParser.g:12546:5: ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS
                            {
                            // InternalSiddhiParser.g:12546:5: ( (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex ) )
                            // InternalSiddhiParser.g:12547:6: (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex )
                            {
                            // InternalSiddhiParser.g:12547:6: (lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex )
                            // InternalSiddhiParser.g:12548:7: lv_OPEN_SQARE_BRACKETSattribute_index1_5_0= ruleAttributeIndex
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSattribute_index1AttributeIndexParserRuleCall_1_3_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_OPEN_SQARE_BRACKETSattribute_index1_5_0=ruleAttributeIndex();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                              							}
                              							set(
                              								current,
                              								"OPEN_SQARE_BRACKETSattribute_index1",
                              								lv_OPEN_SQARE_BRACKETSattribute_index1_5_0,
                              								"org.xtext.example.siddhi.Siddhi.AttributeIndex");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_1_3_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_112);
                            ruleCLOSE_SQARE_BRACKETS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalSiddhiParser.g:12573:4: ( ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )? )?
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( (LA154_0==NumberSign) ) {
                        alt154=1;
                    }
                    switch (alt154) {
                        case 1 :
                            // InternalSiddhiParser.g:12574:5: ( (lv_hash2_7_0= NumberSign ) ) ( (lv_name2_8_0= ruleSourceOrEventReference ) ) ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
                            {
                            // InternalSiddhiParser.g:12574:5: ( (lv_hash2_7_0= NumberSign ) )
                            // InternalSiddhiParser.g:12575:6: (lv_hash2_7_0= NumberSign )
                            {
                            // InternalSiddhiParser.g:12575:6: (lv_hash2_7_0= NumberSign )
                            // InternalSiddhiParser.g:12576:7: lv_hash2_7_0= NumberSign
                            {
                            lv_hash2_7_0=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_hash2_7_0, grammarAccess.getAttributeReferenceAccess().getHash2NumberSignKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAttributeReferenceRule());
                              							}
                              							setWithLastConsumed(current, "hash2", lv_hash2_7_0, "#");
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:12588:5: ( (lv_name2_8_0= ruleSourceOrEventReference ) )
                            // InternalSiddhiParser.g:12589:6: (lv_name2_8_0= ruleSourceOrEventReference )
                            {
                            // InternalSiddhiParser.g:12589:6: (lv_name2_8_0= ruleSourceOrEventReference )
                            // InternalSiddhiParser.g:12590:7: lv_name2_8_0= ruleSourceOrEventReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAttributeReferenceAccess().getName2SourceOrEventReferenceParserRuleCall_1_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_name2_8_0=ruleSourceOrEventReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                              							}
                              							set(
                              								current,
                              								"name2",
                              								lv_name2_8_0,
                              								"org.xtext.example.siddhi.Siddhi.SourceOrEventReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:12607:5: ( ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS )?
                            int alt153=2;
                            int LA153_0 = input.LA(1);

                            if ( (LA153_0==Last||LA153_0==RULE_INT) ) {
                                alt153=1;
                            }
                            switch (alt153) {
                                case 1 :
                                    // InternalSiddhiParser.g:12608:6: ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) ) ruleCLOSE_SQARE_BRACKETS
                                    {
                                    // InternalSiddhiParser.g:12608:6: ( (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex ) )
                                    // InternalSiddhiParser.g:12609:7: (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex )
                                    {
                                    // InternalSiddhiParser.g:12609:7: (lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex )
                                    // InternalSiddhiParser.g:12610:8: lv_OPEN_SQARE_BRACKETSattribute_index2_9_0= ruleAttributeIndex
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSattribute_index2AttributeIndexParserRuleCall_1_4_2_0_0());
                                      							
                                    }
                                    pushFollow(FollowSets000.FOLLOW_24);
                                    lv_OPEN_SQARE_BRACKETSattribute_index2_9_0=ruleAttributeIndex();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                                      								}
                                      								set(
                                      									current,
                                      									"OPEN_SQARE_BRACKETSattribute_index2",
                                      									lv_OPEN_SQARE_BRACKETSattribute_index2_9_0,
                                      									"org.xtext.example.siddhi.Siddhi.AttributeIndex");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }

                                    if ( state.backtracking==0 ) {

                                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_1_4_2_1());
                                      					
                                    }
                                    pushFollow(FollowSets000.FOLLOW_100);
                                    ruleCLOSE_SQARE_BRACKETS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						afterParserOrEnumRuleCall();
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,FullStop,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getAttributeReferenceAccess().getFullStopKeyword_1_5());
                      			
                    }
                    // InternalSiddhiParser.g:12640:4: ( (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference ) )
                    // InternalSiddhiParser.g:12641:5: (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference )
                    {
                    // InternalSiddhiParser.g:12641:5: (lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference )
                    // InternalSiddhiParser.g:12642:6: lv_featuresOrAttrRef_12_0= ruleFeaturesOrOutAttrReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getFeaturesOrAttrRefFeaturesOrOutAttrReferenceParserRuleCall_1_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_featuresOrAttrRef_12_0=ruleFeaturesOrOutAttrReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"featuresOrAttrRef",
                      							lv_featuresOrAttrRef_12_0,
                      							"org.xtext.example.siddhi.Siddhi.FeaturesOrOutAttrReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:12661:3: ( ( ( ( ruleFeaturesOrOutAttrReference ) ) )=> ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) )
                    {
                    // InternalSiddhiParser.g:12661:3: ( ( ( ( ruleFeaturesOrOutAttrReference ) ) )=> ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) ) )
                    // InternalSiddhiParser.g:12662:4: ( ( ( ruleFeaturesOrOutAttrReference ) ) )=> ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) )
                    {
                    // InternalSiddhiParser.g:12668:4: ( (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference ) )
                    // InternalSiddhiParser.g:12669:5: (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference )
                    {
                    // InternalSiddhiParser.g:12669:5: (lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference )
                    // InternalSiddhiParser.g:12670:6: lv_featuresOrAttrRef_13_0= ruleFeaturesOrOutAttrReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAttributeReferenceAccess().getFeaturesOrAttrRefFeaturesOrOutAttrReferenceParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_featuresOrAttrRef_13_0=ruleFeaturesOrOutAttrReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAttributeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"featuresOrAttrRef",
                      							lv_featuresOrAttrRef_13_0,
                      							"org.xtext.example.siddhi.Siddhi.FeaturesOrOutAttrReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, ruleAttributeReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeReference"


    // $ANTLR start "entryRuleFeaturesOrOutAttrReference"
    // InternalSiddhiParser.g:12692:1: entryRuleFeaturesOrOutAttrReference returns [EObject current=null] : iv_ruleFeaturesOrOutAttrReference= ruleFeaturesOrOutAttrReference EOF ;
    public final EObject entryRuleFeaturesOrOutAttrReference() throws RecognitionException {
        EObject current = null;
        int entryRuleFeaturesOrOutAttrReference_StartIndex = input.index();
        EObject iv_ruleFeaturesOrOutAttrReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return current; }
            // InternalSiddhiParser.g:12692:67: (iv_ruleFeaturesOrOutAttrReference= ruleFeaturesOrOutAttrReference EOF )
            // InternalSiddhiParser.g:12693:2: iv_ruleFeaturesOrOutAttrReference= ruleFeaturesOrOutAttrReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeaturesOrOutAttrReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFeaturesOrOutAttrReference=ruleFeaturesOrOutAttrReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeaturesOrOutAttrReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, entryRuleFeaturesOrOutAttrReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFeaturesOrOutAttrReference"


    // $ANTLR start "ruleFeaturesOrOutAttrReference"
    // InternalSiddhiParser.g:12699:1: ruleFeaturesOrOutAttrReference returns [EObject current=null] : ( ( ruleIdNew ) ) ;
    public final EObject ruleFeaturesOrOutAttrReference() throws RecognitionException {
        EObject current = null;
        int ruleFeaturesOrOutAttrReference_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return current; }
            // InternalSiddhiParser.g:12705:2: ( ( ( ruleIdNew ) ) )
            // InternalSiddhiParser.g:12706:2: ( ( ruleIdNew ) )
            {
            // InternalSiddhiParser.g:12706:2: ( ( ruleIdNew ) )
            // InternalSiddhiParser.g:12707:3: ( ruleIdNew )
            {
            // InternalSiddhiParser.g:12707:3: ( ruleIdNew )
            // InternalSiddhiParser.g:12708:4: ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeaturesOrOutAttrReferenceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefFeaturesOrOutAttrCrossReference_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, ruleFeaturesOrOutAttrReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFeaturesOrOutAttrReference"


    // $ANTLR start "entryRuleStandardStatefulSource"
    // InternalSiddhiParser.g:12725:1: entryRuleStandardStatefulSource returns [EObject current=null] : iv_ruleStandardStatefulSource= ruleStandardStatefulSource EOF ;
    public final EObject entryRuleStandardStatefulSource() throws RecognitionException {
        EObject current = null;
        int entryRuleStandardStatefulSource_StartIndex = input.index();
        EObject iv_ruleStandardStatefulSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return current; }
            // InternalSiddhiParser.g:12725:63: (iv_ruleStandardStatefulSource= ruleStandardStatefulSource EOF )
            // InternalSiddhiParser.g:12726:2: iv_ruleStandardStatefulSource= ruleStandardStatefulSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardStatefulSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStandardStatefulSource=ruleStandardStatefulSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardStatefulSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, entryRuleStandardStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardStatefulSource"


    // $ANTLR start "ruleStandardStatefulSource"
    // InternalSiddhiParser.g:12732:1: ruleStandardStatefulSource returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleIdNew ) ) otherlv_1= EqualsSign )? ( (lv_src_2_0= ruleSource ) ) ( (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers ) )? ) ;
    public final EObject ruleStandardStatefulSource() throws RecognitionException {
        EObject current = null;
        int ruleStandardStatefulSource_StartIndex = input.index();
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_src_2_0 = null;

        EObject lv_basic_ss_handlers_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return current; }
            // InternalSiddhiParser.g:12738:2: ( ( ( ( (lv_name_0_0= ruleIdNew ) ) otherlv_1= EqualsSign )? ( (lv_src_2_0= ruleSource ) ) ( (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers ) )? ) )
            // InternalSiddhiParser.g:12739:2: ( ( ( (lv_name_0_0= ruleIdNew ) ) otherlv_1= EqualsSign )? ( (lv_src_2_0= ruleSource ) ) ( (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers ) )? )
            {
            // InternalSiddhiParser.g:12739:2: ( ( ( (lv_name_0_0= ruleIdNew ) ) otherlv_1= EqualsSign )? ( (lv_src_2_0= ruleSource ) ) ( (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers ) )? )
            // InternalSiddhiParser.g:12740:3: ( ( (lv_name_0_0= ruleIdNew ) ) otherlv_1= EqualsSign )? ( (lv_src_2_0= ruleSource ) ) ( (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers ) )?
            {
            // InternalSiddhiParser.g:12740:3: ( ( (lv_name_0_0= ruleIdNew ) ) otherlv_1= EqualsSign )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==RULE_ID) ) {
                int LA156_1 = input.LA(2);

                if ( (LA156_1==EqualsSign) ) {
                    alt156=1;
                }
            }
            switch (alt156) {
                case 1 :
                    // InternalSiddhiParser.g:12741:4: ( (lv_name_0_0= ruleIdNew ) ) otherlv_1= EqualsSign
                    {
                    // InternalSiddhiParser.g:12741:4: ( (lv_name_0_0= ruleIdNew ) )
                    // InternalSiddhiParser.g:12742:5: (lv_name_0_0= ruleIdNew )
                    {
                    // InternalSiddhiParser.g:12742:5: (lv_name_0_0= ruleIdNew )
                    // InternalSiddhiParser.g:12743:6: lv_name_0_0= ruleIdNew
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStandardStatefulSourceAccess().getNameIdNewParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_name_0_0=ruleIdNew();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStandardStatefulSourceRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.xtext.example.siddhi.Siddhi.IdNew");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStandardStatefulSourceAccess().getEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:12765:3: ( (lv_src_2_0= ruleSource ) )
            // InternalSiddhiParser.g:12766:4: (lv_src_2_0= ruleSource )
            {
            // InternalSiddhiParser.g:12766:4: (lv_src_2_0= ruleSource )
            // InternalSiddhiParser.g:12767:5: lv_src_2_0= ruleSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStandardStatefulSourceAccess().getSrcSourceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_src_2_0=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStandardStatefulSourceRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_2_0,
              						"org.xtext.example.siddhi.Siddhi.Source");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:12784:3: ( (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==NumberSign||LA157_0==LeftSquareBracket) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSiddhiParser.g:12785:4: (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers )
                    {
                    // InternalSiddhiParser.g:12785:4: (lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers )
                    // InternalSiddhiParser.g:12786:5: lv_basic_ss_handlers_3_0= ruleBasicSourceStreamHandlers
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStandardStatefulSourceAccess().getBasic_ss_handlersBasicSourceStreamHandlersParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basic_ss_handlers_3_0=ruleBasicSourceStreamHandlers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStandardStatefulSourceRule());
                      					}
                      					set(
                      						current,
                      						"basic_ss_handlers",
                      						lv_basic_ss_handlers_3_0,
                      						"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandlers");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, ruleStandardStatefulSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStandardStatefulSource"


    // $ANTLR start "entryRuleBasicSource"
    // InternalSiddhiParser.g:12807:1: entryRuleBasicSource returns [EObject current=null] : iv_ruleBasicSource= ruleBasicSource EOF ;
    public final EObject entryRuleBasicSource() throws RecognitionException {
        EObject current = null;
        int entryRuleBasicSource_StartIndex = input.index();
        EObject iv_ruleBasicSource = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return current; }
            // InternalSiddhiParser.g:12807:52: (iv_ruleBasicSource= ruleBasicSource EOF )
            // InternalSiddhiParser.g:12808:2: iv_ruleBasicSource= ruleBasicSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicSourceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBasicSource=ruleBasicSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicSource; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, entryRuleBasicSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicSource"


    // $ANTLR start "ruleBasicSource"
    // InternalSiddhiParser.g:12814:1: ruleBasicSource returns [EObject current=null] : ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? ) ;
    public final EObject ruleBasicSource() throws RecognitionException {
        EObject current = null;
        int ruleBasicSource_StartIndex = input.index();
        EObject lv_src_0_0 = null;

        EObject lv_basic_ss_handlers_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return current; }
            // InternalSiddhiParser.g:12820:2: ( ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? ) )
            // InternalSiddhiParser.g:12821:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            {
            // InternalSiddhiParser.g:12821:2: ( ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )? )
            // InternalSiddhiParser.g:12822:3: ( (lv_src_0_0= ruleSource ) ) ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )?
            {
            // InternalSiddhiParser.g:12822:3: ( (lv_src_0_0= ruleSource ) )
            // InternalSiddhiParser.g:12823:4: (lv_src_0_0= ruleSource )
            {
            // InternalSiddhiParser.g:12823:4: (lv_src_0_0= ruleSource )
            // InternalSiddhiParser.g:12824:5: lv_src_0_0= ruleSource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBasicSourceAccess().getSrcSourceParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_src_0_0=ruleSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBasicSourceRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_0_0,
              						"org.xtext.example.siddhi.Siddhi.Source");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSiddhiParser.g:12841:3: ( (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==NumberSign||LA158_0==LeftSquareBracket) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalSiddhiParser.g:12842:4: (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers )
                    {
                    // InternalSiddhiParser.g:12842:4: (lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers )
                    // InternalSiddhiParser.g:12843:5: lv_basic_ss_handlers_1_0= ruleBasicSourceStreamHandlers
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicSourceAccess().getBasic_ss_handlersBasicSourceStreamHandlersParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_basic_ss_handlers_1_0=ruleBasicSourceStreamHandlers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicSourceRule());
                      					}
                      					set(
                      						current,
                      						"basic_ss_handlers",
                      						lv_basic_ss_handlers_1_0,
                      						"org.xtext.example.siddhi.Siddhi.BasicSourceStreamHandlers");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, ruleBasicSource_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBasicSource"


    // $ANTLR start "entryRuleSourceOrEventReference"
    // InternalSiddhiParser.g:12864:1: entryRuleSourceOrEventReference returns [EObject current=null] : iv_ruleSourceOrEventReference= ruleSourceOrEventReference EOF ;
    public final EObject entryRuleSourceOrEventReference() throws RecognitionException {
        EObject current = null;
        int entryRuleSourceOrEventReference_StartIndex = input.index();
        EObject iv_ruleSourceOrEventReference = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return current; }
            // InternalSiddhiParser.g:12864:63: (iv_ruleSourceOrEventReference= ruleSourceOrEventReference EOF )
            // InternalSiddhiParser.g:12865:2: iv_ruleSourceOrEventReference= ruleSourceOrEventReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSourceOrEventReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSourceOrEventReference=ruleSourceOrEventReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSourceOrEventReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, entryRuleSourceOrEventReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSourceOrEventReference"


    // $ANTLR start "ruleSourceOrEventReference"
    // InternalSiddhiParser.g:12871:1: ruleSourceOrEventReference returns [EObject current=null] : ( ( ruleIdNew ) ) ;
    public final EObject ruleSourceOrEventReference() throws RecognitionException {
        EObject current = null;
        int ruleSourceOrEventReference_StartIndex = input.index();

        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return current; }
            // InternalSiddhiParser.g:12877:2: ( ( ( ruleIdNew ) ) )
            // InternalSiddhiParser.g:12878:2: ( ( ruleIdNew ) )
            {
            // InternalSiddhiParser.g:12878:2: ( ( ruleIdNew ) )
            // InternalSiddhiParser.g:12879:3: ( ruleIdNew )
            {
            // InternalSiddhiParser.g:12879:3: ( ruleIdNew )
            // InternalSiddhiParser.g:12880:4: ruleIdNew
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSourceOrEventReferenceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSourceOrEventReferenceAccess().getNaSource1OrStandardStatefulSourceCrossReference_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, ruleSourceOrEventReference_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSourceOrEventReference"


    // $ANTLR start "entryRuleAttributeIndex"
    // InternalSiddhiParser.g:12897:1: entryRuleAttributeIndex returns [EObject current=null] : iv_ruleAttributeIndex= ruleAttributeIndex EOF ;
    public final EObject entryRuleAttributeIndex() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeIndex_StartIndex = input.index();
        EObject iv_ruleAttributeIndex = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return current; }
            // InternalSiddhiParser.g:12897:55: (iv_ruleAttributeIndex= ruleAttributeIndex EOF )
            // InternalSiddhiParser.g:12898:2: iv_ruleAttributeIndex= ruleAttributeIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeIndexRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeIndex=ruleAttributeIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeIndex; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, entryRuleAttributeIndex_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeIndex"


    // $ANTLR start "ruleAttributeIndex"
    // InternalSiddhiParser.g:12904:1: ruleAttributeIndex returns [EObject current=null] : ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) ) ;
    public final EObject ruleAttributeIndex() throws RecognitionException {
        EObject current = null;
        int ruleAttributeIndex_StartIndex = input.index();
        Token otherlv_4=null;
        EObject this_LAST_3 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return current; }
            // InternalSiddhiParser.g:12910:2: ( ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) ) )
            // InternalSiddhiParser.g:12911:2: ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) )
            {
            // InternalSiddhiParser.g:12911:2: ( ( () ruleINT_LITERAL ) | ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? ) )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==RULE_INT) ) {
                alt160=1;
            }
            else if ( (LA160_0==Last) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }
            switch (alt160) {
                case 1 :
                    // InternalSiddhiParser.g:12912:3: ( () ruleINT_LITERAL )
                    {
                    // InternalSiddhiParser.g:12912:3: ( () ruleINT_LITERAL )
                    // InternalSiddhiParser.g:12913:4: () ruleINT_LITERAL
                    {
                    // InternalSiddhiParser.g:12913:4: ()
                    // InternalSiddhiParser.g:12914:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleINT_LITERAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:12929:3: ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? )
                    {
                    // InternalSiddhiParser.g:12929:3: ( () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )? )
                    // InternalSiddhiParser.g:12930:4: () this_LAST_3= ruleLAST[$current] (otherlv_4= HyphenMinus ruleINT_LITERAL )?
                    {
                    // InternalSiddhiParser.g:12930:4: ()
                    // InternalSiddhiParser.g:12931:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getAttributeIndexRule());
                      				}
                      				newCompositeNode(grammarAccess.getAttributeIndexAccess().getLASTParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    this_LAST_3=ruleLAST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LAST_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSiddhiParser.g:12948:4: (otherlv_4= HyphenMinus ruleINT_LITERAL )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==HyphenMinus) ) {
                        alt159=1;
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalSiddhiParser.g:12949:5: otherlv_4= HyphenMinus ruleINT_LITERAL
                            {
                            otherlv_4=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getAttributeIndexAccess().getHyphenMinusKeyword_1_2_0());
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_1_2_1());
                              				
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            ruleINT_LITERAL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, ruleAttributeIndex_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeIndex"


    // $ANTLR start "entryRuleConstantValue"
    // InternalSiddhiParser.g:12966:1: entryRuleConstantValue returns [EObject current=null] : iv_ruleConstantValue= ruleConstantValue EOF ;
    public final EObject entryRuleConstantValue() throws RecognitionException {
        EObject current = null;
        int entryRuleConstantValue_StartIndex = input.index();
        EObject iv_ruleConstantValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return current; }
            // InternalSiddhiParser.g:12966:54: (iv_ruleConstantValue= ruleConstantValue EOF )
            // InternalSiddhiParser.g:12967:2: iv_ruleConstantValue= ruleConstantValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConstantValue=ruleConstantValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, entryRuleConstantValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantValue"


    // $ANTLR start "ruleConstantValue"
    // InternalSiddhiParser.g:12973:1: ruleConstantValue returns [EObject current=null] : ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) ) ;
    public final EObject ruleConstantValue() throws RecognitionException {
        EObject current = null;
        int ruleConstantValue_StartIndex = input.index();
        EObject lv_bv_1_0 = null;

        EObject lv_sdv_3_0 = null;

        EObject lv_sfv_5_0 = null;

        EObject lv_slv_7_0 = null;

        AntlrDatatypeRuleToken lv_siv_9_0 = null;

        EObject lv_tv_11_0 = null;

        EObject lv_sv_13_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return current; }
            // InternalSiddhiParser.g:12979:2: ( ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) ) )
            // InternalSiddhiParser.g:12980:2: ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) )
            {
            // InternalSiddhiParser.g:12980:2: ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) )
            int alt161=7;
            alt161 = dfa161.predict(input);
            switch (alt161) {
                case 1 :
                    // InternalSiddhiParser.g:12981:3: ( () ( (lv_bv_1_0= ruleBoolValue ) ) )
                    {
                    // InternalSiddhiParser.g:12981:3: ( () ( (lv_bv_1_0= ruleBoolValue ) ) )
                    // InternalSiddhiParser.g:12982:4: () ( (lv_bv_1_0= ruleBoolValue ) )
                    {
                    // InternalSiddhiParser.g:12982:4: ()
                    // InternalSiddhiParser.g:12983:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:12989:4: ( (lv_bv_1_0= ruleBoolValue ) )
                    // InternalSiddhiParser.g:12990:5: (lv_bv_1_0= ruleBoolValue )
                    {
                    // InternalSiddhiParser.g:12990:5: (lv_bv_1_0= ruleBoolValue )
                    // InternalSiddhiParser.g:12991:6: lv_bv_1_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getBvBoolValueParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_bv_1_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"bv",
                      							lv_bv_1_0,
                      							"org.xtext.example.siddhi.Siddhi.BoolValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13010:3: ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) )
                    {
                    // InternalSiddhiParser.g:13010:3: ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) )
                    // InternalSiddhiParser.g:13011:4: () ( (lv_sdv_3_0= ruleSignedDoubleValue ) )
                    {
                    // InternalSiddhiParser.g:13011:4: ()
                    // InternalSiddhiParser.g:13012:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:13018:4: ( (lv_sdv_3_0= ruleSignedDoubleValue ) )
                    // InternalSiddhiParser.g:13019:5: (lv_sdv_3_0= ruleSignedDoubleValue )
                    {
                    // InternalSiddhiParser.g:13019:5: (lv_sdv_3_0= ruleSignedDoubleValue )
                    // InternalSiddhiParser.g:13020:6: lv_sdv_3_0= ruleSignedDoubleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSdvSignedDoubleValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sdv_3_0=ruleSignedDoubleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"sdv",
                      							lv_sdv_3_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedDoubleValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:13039:3: ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) )
                    {
                    // InternalSiddhiParser.g:13039:3: ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) )
                    // InternalSiddhiParser.g:13040:4: () ( (lv_sfv_5_0= ruleSignedFloatValue ) )
                    {
                    // InternalSiddhiParser.g:13040:4: ()
                    // InternalSiddhiParser.g:13041:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:13047:4: ( (lv_sfv_5_0= ruleSignedFloatValue ) )
                    // InternalSiddhiParser.g:13048:5: (lv_sfv_5_0= ruleSignedFloatValue )
                    {
                    // InternalSiddhiParser.g:13048:5: (lv_sfv_5_0= ruleSignedFloatValue )
                    // InternalSiddhiParser.g:13049:6: lv_sfv_5_0= ruleSignedFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSfvSignedFloatValueParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sfv_5_0=ruleSignedFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"sfv",
                      							lv_sfv_5_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedFloatValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:13068:3: ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) )
                    {
                    // InternalSiddhiParser.g:13068:3: ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) )
                    // InternalSiddhiParser.g:13069:4: () ( (lv_slv_7_0= ruleSignedLongValue ) )
                    {
                    // InternalSiddhiParser.g:13069:4: ()
                    // InternalSiddhiParser.g:13070:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:13076:4: ( (lv_slv_7_0= ruleSignedLongValue ) )
                    // InternalSiddhiParser.g:13077:5: (lv_slv_7_0= ruleSignedLongValue )
                    {
                    // InternalSiddhiParser.g:13077:5: (lv_slv_7_0= ruleSignedLongValue )
                    // InternalSiddhiParser.g:13078:6: lv_slv_7_0= ruleSignedLongValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSlvSignedLongValueParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_slv_7_0=ruleSignedLongValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"slv",
                      							lv_slv_7_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedLongValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:13097:3: ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) )
                    {
                    // InternalSiddhiParser.g:13097:3: ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) )
                    // InternalSiddhiParser.g:13098:4: () ( (lv_siv_9_0= ruleSignedIntValue ) )
                    {
                    // InternalSiddhiParser.g:13098:4: ()
                    // InternalSiddhiParser.g:13099:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:13105:4: ( (lv_siv_9_0= ruleSignedIntValue ) )
                    // InternalSiddhiParser.g:13106:5: (lv_siv_9_0= ruleSignedIntValue )
                    {
                    // InternalSiddhiParser.g:13106:5: (lv_siv_9_0= ruleSignedIntValue )
                    // InternalSiddhiParser.g:13107:6: lv_siv_9_0= ruleSignedIntValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSivSignedIntValueParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_siv_9_0=ruleSignedIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"siv",
                      							lv_siv_9_0,
                      							"org.xtext.example.siddhi.Siddhi.SignedIntValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:13126:3: ( () ( (lv_tv_11_0= ruleTimeValue ) ) )
                    {
                    // InternalSiddhiParser.g:13126:3: ( () ( (lv_tv_11_0= ruleTimeValue ) ) )
                    // InternalSiddhiParser.g:13127:4: () ( (lv_tv_11_0= ruleTimeValue ) )
                    {
                    // InternalSiddhiParser.g:13127:4: ()
                    // InternalSiddhiParser.g:13128:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:13134:4: ( (lv_tv_11_0= ruleTimeValue ) )
                    // InternalSiddhiParser.g:13135:5: (lv_tv_11_0= ruleTimeValue )
                    {
                    // InternalSiddhiParser.g:13135:5: (lv_tv_11_0= ruleTimeValue )
                    // InternalSiddhiParser.g:13136:6: lv_tv_11_0= ruleTimeValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getTvTimeValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_tv_11_0=ruleTimeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"tv",
                      							lv_tv_11_0,
                      							"org.xtext.example.siddhi.Siddhi.TimeValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:13155:3: ( () ( (lv_sv_13_0= ruleStringValue ) ) )
                    {
                    // InternalSiddhiParser.g:13155:3: ( () ( (lv_sv_13_0= ruleStringValue ) ) )
                    // InternalSiddhiParser.g:13156:4: () ( (lv_sv_13_0= ruleStringValue ) )
                    {
                    // InternalSiddhiParser.g:13156:4: ()
                    // InternalSiddhiParser.g:13157:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConstantValueAccess().getConstantValueAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:13163:4: ( (lv_sv_13_0= ruleStringValue ) )
                    // InternalSiddhiParser.g:13164:5: (lv_sv_13_0= ruleStringValue )
                    {
                    // InternalSiddhiParser.g:13164:5: (lv_sv_13_0= ruleStringValue )
                    // InternalSiddhiParser.g:13165:6: lv_sv_13_0= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantValueAccess().getSvStringValueParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_sv_13_0=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantValueRule());
                      						}
                      						set(
                      							current,
                      							"sv",
                      							lv_sv_13_0,
                      							"org.xtext.example.siddhi.Siddhi.StringValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, ruleConstantValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstantValue"


    // $ANTLR start "entryRuleFunctionOperation"
    // InternalSiddhiParser.g:13187:1: entryRuleFunctionOperation returns [EObject current=null] : iv_ruleFunctionOperation= ruleFunctionOperation EOF ;
    public final EObject entryRuleFunctionOperation() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionOperation_StartIndex = input.index();
        EObject iv_ruleFunctionOperation = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return current; }
            // InternalSiddhiParser.g:13187:58: (iv_ruleFunctionOperation= ruleFunctionOperation EOF )
            // InternalSiddhiParser.g:13188:2: iv_ruleFunctionOperation= ruleFunctionOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionOperation=ruleFunctionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, entryRuleFunctionOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOperation"


    // $ANTLR start "ruleFunctionOperation"
    // InternalSiddhiParser.g:13194:1: ruleFunctionOperation returns [EObject current=null] : ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR ) ;
    public final EObject ruleFunctionOperation() throws RecognitionException {
        EObject current = null;
        int ruleFunctionOperation_StartIndex = input.index();
        Token otherlv_2=null;
        EObject lv_funcNamespace_1_0 = null;

        EObject lv_funcId_3_0 = null;

        EObject lv_attrList_5_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return current; }
            // InternalSiddhiParser.g:13200:2: ( ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR ) )
            // InternalSiddhiParser.g:13201:2: ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR )
            {
            // InternalSiddhiParser.g:13201:2: ( () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR )
            // InternalSiddhiParser.g:13202:3: () ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )? ( (lv_funcId_3_0= ruleFunctionId ) ) ruleOPEN_PAR ( (lv_attrList_5_0= ruleAttributeList ) )? ruleCLOSE_PAR
            {
            // InternalSiddhiParser.g:13202:3: ()
            // InternalSiddhiParser.g:13203:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionOperationAccess().getFunctionOperationAction_0(),
              					current);
              			
            }

            }

            // InternalSiddhiParser.g:13209:3: ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )?
            int alt162=2;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // InternalSiddhiParser.g:13210:4: ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon
                    {
                    // InternalSiddhiParser.g:13210:4: ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) )
                    // InternalSiddhiParser.g:13211:5: (lv_funcNamespace_1_0= ruleFunctionNamespace )
                    {
                    // InternalSiddhiParser.g:13211:5: (lv_funcNamespace_1_0= ruleFunctionNamespace )
                    // InternalSiddhiParser.g:13212:6: lv_funcNamespace_1_0= ruleFunctionNamespace
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionOperationAccess().getFuncNamespaceFunctionNamespaceParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_funcNamespace_1_0=ruleFunctionNamespace();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionOperationRule());
                      						}
                      						set(
                      							current,
                      							"funcNamespace",
                      							lv_funcNamespace_1_0,
                      							"org.xtext.example.siddhi.Siddhi.FunctionNamespace");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFunctionOperationAccess().getColonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSiddhiParser.g:13234:3: ( (lv_funcId_3_0= ruleFunctionId ) )
            // InternalSiddhiParser.g:13235:4: (lv_funcId_3_0= ruleFunctionId )
            {
            // InternalSiddhiParser.g:13235:4: (lv_funcId_3_0= ruleFunctionId )
            // InternalSiddhiParser.g:13236:5: lv_funcId_3_0= ruleFunctionId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionOperationAccess().getFuncIdFunctionIdParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_funcId_3_0=ruleFunctionId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionOperationRule());
              					}
              					set(
              						current,
              						"funcId",
              						lv_funcId_3_0,
              						"org.xtext.example.siddhi.Siddhi.FunctionId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionOperationAccess().getOPEN_PARParserRuleCall_3());
              		
            }
            pushFollow(FollowSets000.FOLLOW_115);
            ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSiddhiParser.g:13260:3: ( (lv_attrList_5_0= ruleAttributeList ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( ((LA163_0>=Unidirectional && LA163_0<=Milliseconds)||LA163_0==Millisecond||LA163_0==Partition||(LA163_0>=Millisec && LA163_0<=Seconds)||(LA163_0>=Define && LA163_0<=Null)||(LA163_0>=True && LA163_0<=Year)||(LA163_0>=All && LA163_0<=And)||(LA163_0>=Day && LA163_0<=Not)||(LA163_0>=Raw && LA163_0<=Sec)||LA163_0==As||LA163_0==By||(LA163_0>=Is && LA163_0<=NumberSign)||LA163_0==LeftParenthesis||(LA163_0>=Asterisk && LA163_0<=PlusSign)||(LA163_0>=HyphenMinus && LA163_0<=FullStop)||(LA163_0>=RULE_ID && LA163_0<=RULE_INT)||LA163_0==RULE_STRING) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalSiddhiParser.g:13261:4: (lv_attrList_5_0= ruleAttributeList )
                    {
                    // InternalSiddhiParser.g:13261:4: (lv_attrList_5_0= ruleAttributeList )
                    // InternalSiddhiParser.g:13262:5: lv_attrList_5_0= ruleAttributeList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOperationAccess().getAttrListAttributeListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_attrList_5_0=ruleAttributeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOperationRule());
                      					}
                      					set(
                      						current,
                      						"attrList",
                      						lv_attrList_5_0,
                      						"org.xtext.example.siddhi.Siddhi.AttributeList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionOperationAccess().getCLOSE_PARParserRuleCall_5());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, ruleFunctionOperation_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOperation"


    // $ANTLR start "entryRuleFunctionNamespace"
    // InternalSiddhiParser.g:13290:1: entryRuleFunctionNamespace returns [EObject current=null] : iv_ruleFunctionNamespace= ruleFunctionNamespace EOF ;
    public final EObject entryRuleFunctionNamespace() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionNamespace_StartIndex = input.index();
        EObject iv_ruleFunctionNamespace = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return current; }
            // InternalSiddhiParser.g:13290:58: (iv_ruleFunctionNamespace= ruleFunctionNamespace EOF )
            // InternalSiddhiParser.g:13291:2: iv_ruleFunctionNamespace= ruleFunctionNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNamespaceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionNamespace=ruleFunctionNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionNamespace; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, entryRuleFunctionNamespace_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionNamespace"


    // $ANTLR start "ruleFunctionNamespace"
    // InternalSiddhiParser.g:13297:1: ruleFunctionNamespace returns [EObject current=null] : ( (lv_name_0_0= ruleName ) ) ;
    public final EObject ruleFunctionNamespace() throws RecognitionException {
        EObject current = null;
        int ruleFunctionNamespace_StartIndex = input.index();
        EObject lv_name_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return current; }
            // InternalSiddhiParser.g:13303:2: ( ( (lv_name_0_0= ruleName ) ) )
            // InternalSiddhiParser.g:13304:2: ( (lv_name_0_0= ruleName ) )
            {
            // InternalSiddhiParser.g:13304:2: ( (lv_name_0_0= ruleName ) )
            // InternalSiddhiParser.g:13305:3: (lv_name_0_0= ruleName )
            {
            // InternalSiddhiParser.g:13305:3: (lv_name_0_0= ruleName )
            // InternalSiddhiParser.g:13306:4: lv_name_0_0= ruleName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionNamespaceAccess().getNameNameParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionNamespaceRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.xtext.example.siddhi.Siddhi.Name");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, ruleFunctionNamespace_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionNamespace"


    // $ANTLR start "entryRuleFunctionId"
    // InternalSiddhiParser.g:13326:1: entryRuleFunctionId returns [EObject current=null] : iv_ruleFunctionId= ruleFunctionId EOF ;
    public final EObject entryRuleFunctionId() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionId_StartIndex = input.index();
        EObject iv_ruleFunctionId = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return current; }
            // InternalSiddhiParser.g:13326:51: (iv_ruleFunctionId= ruleFunctionId EOF )
            // InternalSiddhiParser.g:13327:2: iv_ruleFunctionId= ruleFunctionId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionIdRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionId=ruleFunctionId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionId; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, entryRuleFunctionId_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionId"


    // $ANTLR start "ruleFunctionId"
    // InternalSiddhiParser.g:13333:1: ruleFunctionId returns [EObject current=null] : ( (lv_name_0_0= ruleName ) ) ;
    public final EObject ruleFunctionId() throws RecognitionException {
        EObject current = null;
        int ruleFunctionId_StartIndex = input.index();
        EObject lv_name_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return current; }
            // InternalSiddhiParser.g:13339:2: ( ( (lv_name_0_0= ruleName ) ) )
            // InternalSiddhiParser.g:13340:2: ( (lv_name_0_0= ruleName ) )
            {
            // InternalSiddhiParser.g:13340:2: ( (lv_name_0_0= ruleName ) )
            // InternalSiddhiParser.g:13341:3: (lv_name_0_0= ruleName )
            {
            // InternalSiddhiParser.g:13341:3: (lv_name_0_0= ruleName )
            // InternalSiddhiParser.g:13342:4: lv_name_0_0= ruleName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionIdAccess().getNameNameParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionIdRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.xtext.example.siddhi.Siddhi.Name");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, ruleFunctionId_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFunctionId"


    // $ANTLR start "entryRuleAttributeList"
    // InternalSiddhiParser.g:13362:1: entryRuleAttributeList returns [EObject current=null] : iv_ruleAttributeList= ruleAttributeList EOF ;
    public final EObject entryRuleAttributeList() throws RecognitionException {
        EObject current = null;
        int entryRuleAttributeList_StartIndex = input.index();
        EObject iv_ruleAttributeList = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return current; }
            // InternalSiddhiParser.g:13362:54: (iv_ruleAttributeList= ruleAttributeList EOF )
            // InternalSiddhiParser.g:13363:2: iv_ruleAttributeList= ruleAttributeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeListRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeList=ruleAttributeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeList; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, entryRuleAttributeList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeList"


    // $ANTLR start "ruleAttributeList"
    // InternalSiddhiParser.g:13369:1: ruleAttributeList returns [EObject current=null] : ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) ) ;
    public final EObject ruleAttributeList() throws RecognitionException {
        EObject current = null;
        int ruleAttributeList_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_attr_1_0 = null;

        EObject lv_attr_3_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return current; }
            // InternalSiddhiParser.g:13375:2: ( ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) ) )
            // InternalSiddhiParser.g:13376:2: ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) )
            {
            // InternalSiddhiParser.g:13376:2: ( ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) ) | ( () otherlv_5= Asterisk ) )
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( ((LA165_0>=Unidirectional && LA165_0<=Milliseconds)||LA165_0==Millisecond||LA165_0==Partition||(LA165_0>=Millisec && LA165_0<=Seconds)||(LA165_0>=Define && LA165_0<=Null)||(LA165_0>=True && LA165_0<=Year)||(LA165_0>=All && LA165_0<=And)||(LA165_0>=Day && LA165_0<=Not)||(LA165_0>=Raw && LA165_0<=Sec)||LA165_0==As||LA165_0==By||(LA165_0>=Is && LA165_0<=NumberSign)||LA165_0==LeftParenthesis||LA165_0==PlusSign||(LA165_0>=HyphenMinus && LA165_0<=FullStop)||(LA165_0>=RULE_ID && LA165_0<=RULE_INT)||LA165_0==RULE_STRING) ) {
                alt165=1;
            }
            else if ( (LA165_0==Asterisk) ) {
                alt165=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;
            }
            switch (alt165) {
                case 1 :
                    // InternalSiddhiParser.g:13377:3: ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) )
                    {
                    // InternalSiddhiParser.g:13377:3: ( () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* ) )
                    // InternalSiddhiParser.g:13378:4: () ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* )
                    {
                    // InternalSiddhiParser.g:13378:4: ()
                    // InternalSiddhiParser.g:13379:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeListAccess().getAttributeListAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:13385:4: ( ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )* )
                    // InternalSiddhiParser.g:13386:5: ( (lv_attr_1_0= ruleAttribute ) ) (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )*
                    {
                    // InternalSiddhiParser.g:13386:5: ( (lv_attr_1_0= ruleAttribute ) )
                    // InternalSiddhiParser.g:13387:6: (lv_attr_1_0= ruleAttribute )
                    {
                    // InternalSiddhiParser.g:13387:6: (lv_attr_1_0= ruleAttribute )
                    // InternalSiddhiParser.g:13388:7: lv_attr_1_0= ruleAttribute
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_attr_1_0=ruleAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAttributeListRule());
                      							}
                      							add(
                      								current,
                      								"attr",
                      								lv_attr_1_0,
                      								"org.xtext.example.siddhi.Siddhi.Attribute");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13405:5: (otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) ) )*
                    loop164:
                    do {
                        int alt164=2;
                        int LA164_0 = input.LA(1);

                        if ( (LA164_0==Comma) ) {
                            alt164=1;
                        }


                        switch (alt164) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:13406:6: otherlv_2= Comma ( (lv_attr_3_0= ruleAttribute ) )
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getAttributeListAccess().getCommaKeyword_0_1_1_0());
                    	      					
                    	    }
                    	    // InternalSiddhiParser.g:13410:6: ( (lv_attr_3_0= ruleAttribute ) )
                    	    // InternalSiddhiParser.g:13411:7: (lv_attr_3_0= ruleAttribute )
                    	    {
                    	    // InternalSiddhiParser.g:13411:7: (lv_attr_3_0= ruleAttribute )
                    	    // InternalSiddhiParser.g:13412:8: lv_attr_3_0= ruleAttribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_34);
                    	    lv_attr_3_0=ruleAttribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getAttributeListRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"attr",
                    	      									lv_attr_3_0,
                    	      									"org.xtext.example.siddhi.Siddhi.Attribute");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop164;
                        }
                    } while (true);


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13433:3: ( () otherlv_5= Asterisk )
                    {
                    // InternalSiddhiParser.g:13433:3: ( () otherlv_5= Asterisk )
                    // InternalSiddhiParser.g:13434:4: () otherlv_5= Asterisk
                    {
                    // InternalSiddhiParser.g:13434:4: ()
                    // InternalSiddhiParser.g:13435:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAttributeListAccess().getAttributeListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,Asterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAttributeListAccess().getAsteriskKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, ruleAttributeList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttributeList"


    // $ANTLR start "entryRuleAttribute"
    // InternalSiddhiParser.g:13450:1: entryRuleAttribute returns [EObject current=null] : iv_ruleAttribute= ruleAttribute EOF ;
    public final EObject entryRuleAttribute() throws RecognitionException {
        EObject current = null;
        int entryRuleAttribute_StartIndex = input.index();
        EObject iv_ruleAttribute = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return current; }
            // InternalSiddhiParser.g:13450:50: (iv_ruleAttribute= ruleAttribute EOF )
            // InternalSiddhiParser.g:13451:2: iv_ruleAttribute= ruleAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttribute=ruleAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttribute; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, entryRuleAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttribute"


    // $ANTLR start "ruleAttribute"
    // InternalSiddhiParser.g:13457:1: ruleAttribute returns [EObject current=null] : ( (lv_mathOp_0_0= ruleMathOperation ) ) ;
    public final EObject ruleAttribute() throws RecognitionException {
        EObject current = null;
        int ruleAttribute_StartIndex = input.index();
        EObject lv_mathOp_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return current; }
            // InternalSiddhiParser.g:13463:2: ( ( (lv_mathOp_0_0= ruleMathOperation ) ) )
            // InternalSiddhiParser.g:13464:2: ( (lv_mathOp_0_0= ruleMathOperation ) )
            {
            // InternalSiddhiParser.g:13464:2: ( (lv_mathOp_0_0= ruleMathOperation ) )
            // InternalSiddhiParser.g:13465:3: (lv_mathOp_0_0= ruleMathOperation )
            {
            // InternalSiddhiParser.g:13465:3: (lv_mathOp_0_0= ruleMathOperation )
            // InternalSiddhiParser.g:13466:4: lv_mathOp_0_0= ruleMathOperation
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAttributeAccess().getMathOpMathOperationParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_mathOp_0_0=ruleMathOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getAttributeRule());
              				}
              				set(
              					current,
              					"mathOp",
              					lv_mathOp_0_0,
              					"org.xtext.example.siddhi.Siddhi.MathOperation");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, ruleAttribute_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttribute"


    // $ANTLR start "entryRuleName"
    // InternalSiddhiParser.g:13486:1: entryRuleName returns [EObject current=null] : iv_ruleName= ruleName EOF ;
    public final EObject entryRuleName() throws RecognitionException {
        EObject current = null;
        int entryRuleName_StartIndex = input.index();
        EObject iv_ruleName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return current; }
            // InternalSiddhiParser.g:13486:45: (iv_ruleName= ruleName EOF )
            // InternalSiddhiParser.g:13487:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, entryRuleName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalSiddhiParser.g:13493:1: ruleName returns [EObject current=null] : ( ( (lv_na_0_0= ruleIdNew ) ) | this_Keyword_1= ruleKeyword ) ;
    public final EObject ruleName() throws RecognitionException {
        EObject current = null;
        int ruleName_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_na_0_0 = null;

        EObject this_Keyword_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return current; }
            // InternalSiddhiParser.g:13499:2: ( ( ( (lv_na_0_0= ruleIdNew ) ) | this_Keyword_1= ruleKeyword ) )
            // InternalSiddhiParser.g:13500:2: ( ( (lv_na_0_0= ruleIdNew ) ) | this_Keyword_1= ruleKeyword )
            {
            // InternalSiddhiParser.g:13500:2: ( ( (lv_na_0_0= ruleIdNew ) ) | this_Keyword_1= ruleKeyword )
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==RULE_ID) ) {
                alt166=1;
            }
            else if ( ((LA166_0>=Unidirectional && LA166_0<=Milliseconds)||LA166_0==Millisecond||LA166_0==Partition||(LA166_0>=Millisec && LA166_0<=Seconds)||(LA166_0>=Define && LA166_0<=Null)||(LA166_0>=True && LA166_0<=Year)||(LA166_0>=All && LA166_0<=And)||(LA166_0>=Day && LA166_0<=Not)||(LA166_0>=Raw && LA166_0<=Sec)||LA166_0==As||LA166_0==By||(LA166_0>=Is && LA166_0<=Or)) ) {
                alt166=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 166, 0, input);

                throw nvae;
            }
            switch (alt166) {
                case 1 :
                    // InternalSiddhiParser.g:13501:3: ( (lv_na_0_0= ruleIdNew ) )
                    {
                    // InternalSiddhiParser.g:13501:3: ( (lv_na_0_0= ruleIdNew ) )
                    // InternalSiddhiParser.g:13502:4: (lv_na_0_0= ruleIdNew )
                    {
                    // InternalSiddhiParser.g:13502:4: (lv_na_0_0= ruleIdNew )
                    // InternalSiddhiParser.g:13503:5: lv_na_0_0= ruleIdNew
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNameAccess().getNaIdNewParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_na_0_0=ruleIdNew();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNameRule());
                      					}
                      					set(
                      						current,
                      						"na",
                      						lv_na_0_0,
                      						"org.xtext.example.siddhi.Siddhi.IdNew");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13521:3: this_Keyword_1= ruleKeyword
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNameAccess().getKeywordParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Keyword_1=ruleKeyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Keyword_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, ruleName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSiddhiParser.g:13533:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;
        int entryRuleBoolValue_StartIndex = input.index();
        EObject iv_ruleBoolValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return current; }
            // InternalSiddhiParser.g:13533:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSiddhiParser.g:13534:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, entryRuleBoolValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSiddhiParser.g:13540:1: ruleBoolValue returns [EObject current=null] : (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;
        int ruleBoolValue_StartIndex = input.index();
        EObject this_TRUE_0 = null;

        EObject this_FALSE_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return current; }
            // InternalSiddhiParser.g:13546:2: ( (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] ) )
            // InternalSiddhiParser.g:13547:2: (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] )
            {
            // InternalSiddhiParser.g:13547:2: (this_TRUE_0= ruleTRUE[$current] | this_FALSE_1= ruleFALSE[$current] )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==True) ) {
                alt167=1;
            }
            else if ( (LA167_0==False) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // InternalSiddhiParser.g:13548:3: this_TRUE_0= ruleTRUE[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getBoolValueRule());
                      			}
                      			newCompositeNode(grammarAccess.getBoolValueAccess().getTRUEParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TRUE_0=ruleTRUE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TRUE_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13560:3: this_FALSE_1= ruleFALSE[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getBoolValueRule());
                      			}
                      			newCompositeNode(grammarAccess.getBoolValueAccess().getFALSEParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FALSE_1=ruleFALSE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FALSE_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, ruleBoolValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleSignedDoubleValue"
    // InternalSiddhiParser.g:13575:1: entryRuleSignedDoubleValue returns [EObject current=null] : iv_ruleSignedDoubleValue= ruleSignedDoubleValue EOF ;
    public final EObject entryRuleSignedDoubleValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedDoubleValue_StartIndex = input.index();
        EObject iv_ruleSignedDoubleValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return current; }
            // InternalSiddhiParser.g:13575:58: (iv_ruleSignedDoubleValue= ruleSignedDoubleValue EOF )
            // InternalSiddhiParser.g:13576:2: iv_ruleSignedDoubleValue= ruleSignedDoubleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedDoubleValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedDoubleValue=ruleSignedDoubleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedDoubleValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, entryRuleSignedDoubleValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedDoubleValue"


    // $ANTLR start "ruleSignedDoubleValue"
    // InternalSiddhiParser.g:13582:1: ruleSignedDoubleValue returns [EObject current=null] : ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL ) ;
    public final EObject ruleSignedDoubleValue() throws RecognitionException {
        EObject current = null;
        int ruleSignedDoubleValue_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject this_DOUBLE_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return current; }
            // InternalSiddhiParser.g:13588:2: ( ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL ) )
            // InternalSiddhiParser.g:13589:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL )
            {
            // InternalSiddhiParser.g:13589:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL )
            // InternalSiddhiParser.g:13590:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_DOUBLE_LITERAL_2= ruleDOUBLE_LITERAL
            {
            // InternalSiddhiParser.g:13590:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )?
            int alt168=3;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==HyphenMinus) ) {
                alt168=1;
            }
            else if ( (LA168_0==PlusSign) ) {
                alt168=2;
            }
            switch (alt168) {
                case 1 :
                    // InternalSiddhiParser.g:13591:4: otherlv_0= HyphenMinus
                    {
                    otherlv_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSignedDoubleValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13596:4: otherlv_1= PlusSign
                    {
                    otherlv_1=(Token)match(input,PlusSign,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSignedDoubleValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedDoubleValueAccess().getDOUBLE_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_DOUBLE_LITERAL_2=ruleDOUBLE_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DOUBLE_LITERAL_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, ruleSignedDoubleValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedDoubleValue"


    // $ANTLR start "entryRuleSignedFloatValue"
    // InternalSiddhiParser.g:13613:1: entryRuleSignedFloatValue returns [EObject current=null] : iv_ruleSignedFloatValue= ruleSignedFloatValue EOF ;
    public final EObject entryRuleSignedFloatValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedFloatValue_StartIndex = input.index();
        EObject iv_ruleSignedFloatValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return current; }
            // InternalSiddhiParser.g:13613:57: (iv_ruleSignedFloatValue= ruleSignedFloatValue EOF )
            // InternalSiddhiParser.g:13614:2: iv_ruleSignedFloatValue= ruleSignedFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedFloatValue=ruleSignedFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, entryRuleSignedFloatValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedFloatValue"


    // $ANTLR start "ruleSignedFloatValue"
    // InternalSiddhiParser.g:13620:1: ruleSignedFloatValue returns [EObject current=null] : ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL ) ;
    public final EObject ruleSignedFloatValue() throws RecognitionException {
        EObject current = null;
        int ruleSignedFloatValue_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject this_FLOAT_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return current; }
            // InternalSiddhiParser.g:13626:2: ( ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL ) )
            // InternalSiddhiParser.g:13627:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL )
            {
            // InternalSiddhiParser.g:13627:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL )
            // InternalSiddhiParser.g:13628:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_FLOAT_LITERAL_2= ruleFLOAT_LITERAL
            {
            // InternalSiddhiParser.g:13628:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )?
            int alt169=3;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==HyphenMinus) ) {
                alt169=1;
            }
            else if ( (LA169_0==PlusSign) ) {
                alt169=2;
            }
            switch (alt169) {
                case 1 :
                    // InternalSiddhiParser.g:13629:4: otherlv_0= HyphenMinus
                    {
                    otherlv_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSignedFloatValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13634:4: otherlv_1= PlusSign
                    {
                    otherlv_1=(Token)match(input,PlusSign,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSignedFloatValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedFloatValueAccess().getFLOAT_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_FLOAT_LITERAL_2=ruleFLOAT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FLOAT_LITERAL_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, ruleSignedFloatValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedFloatValue"


    // $ANTLR start "entryRuleSignedLongValue"
    // InternalSiddhiParser.g:13651:1: entryRuleSignedLongValue returns [EObject current=null] : iv_ruleSignedLongValue= ruleSignedLongValue EOF ;
    public final EObject entryRuleSignedLongValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedLongValue_StartIndex = input.index();
        EObject iv_ruleSignedLongValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return current; }
            // InternalSiddhiParser.g:13651:56: (iv_ruleSignedLongValue= ruleSignedLongValue EOF )
            // InternalSiddhiParser.g:13652:2: iv_ruleSignedLongValue= ruleSignedLongValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedLongValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedLongValue=ruleSignedLongValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedLongValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, entryRuleSignedLongValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedLongValue"


    // $ANTLR start "ruleSignedLongValue"
    // InternalSiddhiParser.g:13658:1: ruleSignedLongValue returns [EObject current=null] : ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL ) ;
    public final EObject ruleSignedLongValue() throws RecognitionException {
        EObject current = null;
        int ruleSignedLongValue_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject this_LONG_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return current; }
            // InternalSiddhiParser.g:13664:2: ( ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL ) )
            // InternalSiddhiParser.g:13665:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL )
            {
            // InternalSiddhiParser.g:13665:2: ( (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL )
            // InternalSiddhiParser.g:13666:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )? this_LONG_LITERAL_2= ruleLONG_LITERAL
            {
            // InternalSiddhiParser.g:13666:3: (otherlv_0= HyphenMinus | otherlv_1= PlusSign )?
            int alt170=3;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==HyphenMinus) ) {
                alt170=1;
            }
            else if ( (LA170_0==PlusSign) ) {
                alt170=2;
            }
            switch (alt170) {
                case 1 :
                    // InternalSiddhiParser.g:13667:4: otherlv_0= HyphenMinus
                    {
                    otherlv_0=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSignedLongValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13672:4: otherlv_1= PlusSign
                    {
                    otherlv_1=(Token)match(input,PlusSign,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSignedLongValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedLongValueAccess().getLONG_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LONG_LITERAL_2=ruleLONG_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LONG_LITERAL_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, ruleSignedLongValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedLongValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSiddhiParser.g:13689:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;
        int entryRuleStringValue_StartIndex = input.index();
        EObject iv_ruleStringValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return current; }
            // InternalSiddhiParser.g:13689:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSiddhiParser.g:13690:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, entryRuleStringValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSiddhiParser.g:13696:1: ruleStringValue returns [EObject current=null] : ( (lv_sl_0_0= ruleSTRING_LITERAL ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;
        int ruleStringValue_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_sl_0_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return current; }
            // InternalSiddhiParser.g:13702:2: ( ( (lv_sl_0_0= ruleSTRING_LITERAL ) ) )
            // InternalSiddhiParser.g:13703:2: ( (lv_sl_0_0= ruleSTRING_LITERAL ) )
            {
            // InternalSiddhiParser.g:13703:2: ( (lv_sl_0_0= ruleSTRING_LITERAL ) )
            // InternalSiddhiParser.g:13704:3: (lv_sl_0_0= ruleSTRING_LITERAL )
            {
            // InternalSiddhiParser.g:13704:3: (lv_sl_0_0= ruleSTRING_LITERAL )
            // InternalSiddhiParser.g:13705:4: lv_sl_0_0= ruleSTRING_LITERAL
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getStringValueAccess().getSlSTRING_LITERALParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_sl_0_0=ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getStringValueRule());
              				}
              				set(
              					current,
              					"sl",
              					lv_sl_0_0,
              					"org.xtext.example.siddhi.Siddhi.STRING_LITERAL");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, ruleStringValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleTimeValue"
    // InternalSiddhiParser.g:13725:1: entryRuleTimeValue returns [EObject current=null] : iv_ruleTimeValue= ruleTimeValue EOF ;
    public final EObject entryRuleTimeValue() throws RecognitionException {
        EObject current = null;
        int entryRuleTimeValue_StartIndex = input.index();
        EObject iv_ruleTimeValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return current; }
            // InternalSiddhiParser.g:13725:50: (iv_ruleTimeValue= ruleTimeValue EOF )
            // InternalSiddhiParser.g:13726:2: iv_ruleTimeValue= ruleTimeValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTimeValue=ruleTimeValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimeValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, entryRuleTimeValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeValue"


    // $ANTLR start "ruleTimeValue"
    // InternalSiddhiParser.g:13732:1: ruleTimeValue returns [EObject current=null] : ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) ) ;
    public final EObject ruleTimeValue() throws RecognitionException {
        EObject current = null;
        int ruleTimeValue_StartIndex = input.index();
        EObject lv_yv_0_0 = null;

        EObject lv_mv_1_0 = null;

        EObject lv_wv_2_0 = null;

        EObject lv_dv_3_0 = null;

        EObject lv_hv_4_0 = null;

        EObject lv_minv_5_0 = null;

        EObject lv_secv_6_0 = null;

        EObject lv_msecv_7_0 = null;

        EObject lv_mv_8_0 = null;

        EObject lv_wv_9_0 = null;

        EObject lv_dv_10_0 = null;

        EObject lv_hv_11_0 = null;

        EObject lv_minv_12_0 = null;

        EObject lv_secv_13_0 = null;

        EObject lv_msecv_14_0 = null;

        EObject lv_wv_15_0 = null;

        EObject lv_dv_16_0 = null;

        EObject lv_hv_17_0 = null;

        EObject lv_minv_18_0 = null;

        EObject lv_secv_19_0 = null;

        EObject lv_msecv_20_0 = null;

        EObject lv_dv_21_0 = null;

        EObject lv_hv_22_0 = null;

        EObject lv_minv_23_0 = null;

        EObject lv_secv_24_0 = null;

        EObject lv_msecv_25_0 = null;

        EObject lv_hv_26_0 = null;

        EObject lv_minv_27_0 = null;

        EObject lv_secv_28_0 = null;

        EObject lv_msecv_29_0 = null;

        EObject lv_minv_30_0 = null;

        EObject lv_secv_31_0 = null;

        EObject lv_msecv_32_0 = null;

        EObject lv_sv_33_0 = null;

        EObject lv_msecv_34_0 = null;

        EObject lv_msecv_35_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return current; }
            // InternalSiddhiParser.g:13738:2: ( ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) ) )
            // InternalSiddhiParser.g:13739:2: ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) )
            {
            // InternalSiddhiParser.g:13739:2: ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) )
            int alt199=8;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    // InternalSiddhiParser.g:13740:3: ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13740:3: ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13741:4: ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13741:4: ( (lv_yv_0_0= ruleYearValue ) )
                    // InternalSiddhiParser.g:13742:5: (lv_yv_0_0= ruleYearValue )
                    {
                    // InternalSiddhiParser.g:13742:5: (lv_yv_0_0= ruleYearValue )
                    // InternalSiddhiParser.g:13743:6: lv_yv_0_0= ruleYearValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getYvYearValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_yv_0_0=ruleYearValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"yv",
                      							lv_yv_0_0,
                      							"org.xtext.example.siddhi.Siddhi.YearValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13760:4: ( (lv_mv_1_0= ruleMonthValue ) )?
                    int alt171=2;
                    alt171 = dfa171.predict(input);
                    switch (alt171) {
                        case 1 :
                            // InternalSiddhiParser.g:13761:5: (lv_mv_1_0= ruleMonthValue )
                            {
                            // InternalSiddhiParser.g:13761:5: (lv_mv_1_0= ruleMonthValue )
                            // InternalSiddhiParser.g:13762:6: lv_mv_1_0= ruleMonthValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_mv_1_0=ruleMonthValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"mv",
                              							lv_mv_1_0,
                              							"org.xtext.example.siddhi.Siddhi.MonthValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13779:4: ( (lv_wv_2_0= ruleWeekValue ) )?
                    int alt172=2;
                    alt172 = dfa172.predict(input);
                    switch (alt172) {
                        case 1 :
                            // InternalSiddhiParser.g:13780:5: (lv_wv_2_0= ruleWeekValue )
                            {
                            // InternalSiddhiParser.g:13780:5: (lv_wv_2_0= ruleWeekValue )
                            // InternalSiddhiParser.g:13781:6: lv_wv_2_0= ruleWeekValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_wv_2_0=ruleWeekValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"wv",
                              							lv_wv_2_0,
                              							"org.xtext.example.siddhi.Siddhi.WeekValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13798:4: ( (lv_dv_3_0= ruleDayValue ) )?
                    int alt173=2;
                    alt173 = dfa173.predict(input);
                    switch (alt173) {
                        case 1 :
                            // InternalSiddhiParser.g:13799:5: (lv_dv_3_0= ruleDayValue )
                            {
                            // InternalSiddhiParser.g:13799:5: (lv_dv_3_0= ruleDayValue )
                            // InternalSiddhiParser.g:13800:6: lv_dv_3_0= ruleDayValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_dv_3_0=ruleDayValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"dv",
                              							lv_dv_3_0,
                              							"org.xtext.example.siddhi.Siddhi.DayValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13817:4: ( (lv_hv_4_0= ruleHourValue ) )?
                    int alt174=2;
                    alt174 = dfa174.predict(input);
                    switch (alt174) {
                        case 1 :
                            // InternalSiddhiParser.g:13818:5: (lv_hv_4_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:13818:5: (lv_hv_4_0= ruleHourValue )
                            // InternalSiddhiParser.g:13819:6: lv_hv_4_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_hv_4_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_4_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13836:4: ( (lv_minv_5_0= ruleMinuteValue ) )?
                    int alt175=2;
                    alt175 = dfa175.predict(input);
                    switch (alt175) {
                        case 1 :
                            // InternalSiddhiParser.g:13837:5: (lv_minv_5_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:13837:5: (lv_minv_5_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:13838:6: lv_minv_5_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_0_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_minv_5_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_5_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13855:4: ( (lv_secv_6_0= ruleSecondValue ) )?
                    int alt176=2;
                    alt176 = dfa176.predict(input);
                    switch (alt176) {
                        case 1 :
                            // InternalSiddhiParser.g:13856:5: (lv_secv_6_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13856:5: (lv_secv_6_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13857:6: lv_secv_6_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_0_6_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_secv_6_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_6_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13874:4: ( (lv_msecv_7_0= ruleMillisecondValue ) )?
                    int alt177=2;
                    int LA177_0 = input.LA(1);

                    if ( (LA177_0==RULE_INT) ) {
                        alt177=1;
                    }
                    switch (alt177) {
                        case 1 :
                            // InternalSiddhiParser.g:13875:5: (lv_msecv_7_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:13875:5: (lv_msecv_7_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:13876:6: lv_msecv_7_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_0_7_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_7_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_7_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:13895:3: ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:13895:3: ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:13896:4: ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:13896:4: ( (lv_mv_8_0= ruleMonthValue ) )
                    // InternalSiddhiParser.g:13897:5: (lv_mv_8_0= ruleMonthValue )
                    {
                    // InternalSiddhiParser.g:13897:5: (lv_mv_8_0= ruleMonthValue )
                    // InternalSiddhiParser.g:13898:6: lv_mv_8_0= ruleMonthValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_mv_8_0=ruleMonthValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"mv",
                      							lv_mv_8_0,
                      							"org.xtext.example.siddhi.Siddhi.MonthValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:13915:4: ( (lv_wv_9_0= ruleWeekValue ) )?
                    int alt178=2;
                    alt178 = dfa178.predict(input);
                    switch (alt178) {
                        case 1 :
                            // InternalSiddhiParser.g:13916:5: (lv_wv_9_0= ruleWeekValue )
                            {
                            // InternalSiddhiParser.g:13916:5: (lv_wv_9_0= ruleWeekValue )
                            // InternalSiddhiParser.g:13917:6: lv_wv_9_0= ruleWeekValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_wv_9_0=ruleWeekValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"wv",
                              							lv_wv_9_0,
                              							"org.xtext.example.siddhi.Siddhi.WeekValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13934:4: ( (lv_dv_10_0= ruleDayValue ) )?
                    int alt179=2;
                    alt179 = dfa179.predict(input);
                    switch (alt179) {
                        case 1 :
                            // InternalSiddhiParser.g:13935:5: (lv_dv_10_0= ruleDayValue )
                            {
                            // InternalSiddhiParser.g:13935:5: (lv_dv_10_0= ruleDayValue )
                            // InternalSiddhiParser.g:13936:6: lv_dv_10_0= ruleDayValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_dv_10_0=ruleDayValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"dv",
                              							lv_dv_10_0,
                              							"org.xtext.example.siddhi.Siddhi.DayValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13953:4: ( (lv_hv_11_0= ruleHourValue ) )?
                    int alt180=2;
                    alt180 = dfa180.predict(input);
                    switch (alt180) {
                        case 1 :
                            // InternalSiddhiParser.g:13954:5: (lv_hv_11_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:13954:5: (lv_hv_11_0= ruleHourValue )
                            // InternalSiddhiParser.g:13955:6: lv_hv_11_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_1_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_hv_11_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_11_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13972:4: ( (lv_minv_12_0= ruleMinuteValue ) )?
                    int alt181=2;
                    alt181 = dfa181.predict(input);
                    switch (alt181) {
                        case 1 :
                            // InternalSiddhiParser.g:13973:5: (lv_minv_12_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:13973:5: (lv_minv_12_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:13974:6: lv_minv_12_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_1_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_minv_12_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_12_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:13991:4: ( (lv_secv_13_0= ruleSecondValue ) )?
                    int alt182=2;
                    alt182 = dfa182.predict(input);
                    switch (alt182) {
                        case 1 :
                            // InternalSiddhiParser.g:13992:5: (lv_secv_13_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:13992:5: (lv_secv_13_0= ruleSecondValue )
                            // InternalSiddhiParser.g:13993:6: lv_secv_13_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_1_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_secv_13_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_13_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14010:4: ( (lv_msecv_14_0= ruleMillisecondValue ) )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==RULE_INT) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // InternalSiddhiParser.g:14011:5: (lv_msecv_14_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:14011:5: (lv_msecv_14_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:14012:6: lv_msecv_14_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_1_6_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_14_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_14_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:14031:3: ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:14031:3: ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:14032:4: ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:14032:4: ( (lv_wv_15_0= ruleWeekValue ) )
                    // InternalSiddhiParser.g:14033:5: (lv_wv_15_0= ruleWeekValue )
                    {
                    // InternalSiddhiParser.g:14033:5: (lv_wv_15_0= ruleWeekValue )
                    // InternalSiddhiParser.g:14034:6: lv_wv_15_0= ruleWeekValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_wv_15_0=ruleWeekValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"wv",
                      							lv_wv_15_0,
                      							"org.xtext.example.siddhi.Siddhi.WeekValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:14051:4: ( (lv_dv_16_0= ruleDayValue ) )?
                    int alt184=2;
                    alt184 = dfa184.predict(input);
                    switch (alt184) {
                        case 1 :
                            // InternalSiddhiParser.g:14052:5: (lv_dv_16_0= ruleDayValue )
                            {
                            // InternalSiddhiParser.g:14052:5: (lv_dv_16_0= ruleDayValue )
                            // InternalSiddhiParser.g:14053:6: lv_dv_16_0= ruleDayValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_2_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_dv_16_0=ruleDayValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"dv",
                              							lv_dv_16_0,
                              							"org.xtext.example.siddhi.Siddhi.DayValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14070:4: ( (lv_hv_17_0= ruleHourValue ) )?
                    int alt185=2;
                    alt185 = dfa185.predict(input);
                    switch (alt185) {
                        case 1 :
                            // InternalSiddhiParser.g:14071:5: (lv_hv_17_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:14071:5: (lv_hv_17_0= ruleHourValue )
                            // InternalSiddhiParser.g:14072:6: lv_hv_17_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_hv_17_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_17_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14089:4: ( (lv_minv_18_0= ruleMinuteValue ) )?
                    int alt186=2;
                    alt186 = dfa186.predict(input);
                    switch (alt186) {
                        case 1 :
                            // InternalSiddhiParser.g:14090:5: (lv_minv_18_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:14090:5: (lv_minv_18_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:14091:6: lv_minv_18_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_2_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_minv_18_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_18_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14108:4: ( (lv_secv_19_0= ruleSecondValue ) )?
                    int alt187=2;
                    alt187 = dfa187.predict(input);
                    switch (alt187) {
                        case 1 :
                            // InternalSiddhiParser.g:14109:5: (lv_secv_19_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:14109:5: (lv_secv_19_0= ruleSecondValue )
                            // InternalSiddhiParser.g:14110:6: lv_secv_19_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_2_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_secv_19_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_19_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14127:4: ( (lv_msecv_20_0= ruleMillisecondValue ) )?
                    int alt188=2;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==RULE_INT) ) {
                        alt188=1;
                    }
                    switch (alt188) {
                        case 1 :
                            // InternalSiddhiParser.g:14128:5: (lv_msecv_20_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:14128:5: (lv_msecv_20_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:14129:6: lv_msecv_20_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_2_5_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_20_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_20_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:14148:3: ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:14148:3: ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:14149:4: ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:14149:4: ( (lv_dv_21_0= ruleDayValue ) )
                    // InternalSiddhiParser.g:14150:5: (lv_dv_21_0= ruleDayValue )
                    {
                    // InternalSiddhiParser.g:14150:5: (lv_dv_21_0= ruleDayValue )
                    // InternalSiddhiParser.g:14151:6: lv_dv_21_0= ruleDayValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_dv_21_0=ruleDayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"dv",
                      							lv_dv_21_0,
                      							"org.xtext.example.siddhi.Siddhi.DayValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:14168:4: ( (lv_hv_22_0= ruleHourValue ) )?
                    int alt189=2;
                    alt189 = dfa189.predict(input);
                    switch (alt189) {
                        case 1 :
                            // InternalSiddhiParser.g:14169:5: (lv_hv_22_0= ruleHourValue )
                            {
                            // InternalSiddhiParser.g:14169:5: (lv_hv_22_0= ruleHourValue )
                            // InternalSiddhiParser.g:14170:6: lv_hv_22_0= ruleHourValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_3_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_hv_22_0=ruleHourValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"hv",
                              							lv_hv_22_0,
                              							"org.xtext.example.siddhi.Siddhi.HourValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14187:4: ( (lv_minv_23_0= ruleMinuteValue ) )?
                    int alt190=2;
                    alt190 = dfa190.predict(input);
                    switch (alt190) {
                        case 1 :
                            // InternalSiddhiParser.g:14188:5: (lv_minv_23_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:14188:5: (lv_minv_23_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:14189:6: lv_minv_23_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_minv_23_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_23_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14206:4: ( (lv_secv_24_0= ruleSecondValue ) )?
                    int alt191=2;
                    alt191 = dfa191.predict(input);
                    switch (alt191) {
                        case 1 :
                            // InternalSiddhiParser.g:14207:5: (lv_secv_24_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:14207:5: (lv_secv_24_0= ruleSecondValue )
                            // InternalSiddhiParser.g:14208:6: lv_secv_24_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_3_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_secv_24_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_24_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14225:4: ( (lv_msecv_25_0= ruleMillisecondValue ) )?
                    int alt192=2;
                    int LA192_0 = input.LA(1);

                    if ( (LA192_0==RULE_INT) ) {
                        alt192=1;
                    }
                    switch (alt192) {
                        case 1 :
                            // InternalSiddhiParser.g:14226:5: (lv_msecv_25_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:14226:5: (lv_msecv_25_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:14227:6: lv_msecv_25_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_3_4_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_25_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_25_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:14246:3: ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:14246:3: ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:14247:4: ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:14247:4: ( (lv_hv_26_0= ruleHourValue ) )
                    // InternalSiddhiParser.g:14248:5: (lv_hv_26_0= ruleHourValue )
                    {
                    // InternalSiddhiParser.g:14248:5: (lv_hv_26_0= ruleHourValue )
                    // InternalSiddhiParser.g:14249:6: lv_hv_26_0= ruleHourValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_hv_26_0=ruleHourValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"hv",
                      							lv_hv_26_0,
                      							"org.xtext.example.siddhi.Siddhi.HourValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:14266:4: ( (lv_minv_27_0= ruleMinuteValue ) )?
                    int alt193=2;
                    alt193 = dfa193.predict(input);
                    switch (alt193) {
                        case 1 :
                            // InternalSiddhiParser.g:14267:5: (lv_minv_27_0= ruleMinuteValue )
                            {
                            // InternalSiddhiParser.g:14267:5: (lv_minv_27_0= ruleMinuteValue )
                            // InternalSiddhiParser.g:14268:6: lv_minv_27_0= ruleMinuteValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_4_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_minv_27_0=ruleMinuteValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"minv",
                              							lv_minv_27_0,
                              							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14285:4: ( (lv_secv_28_0= ruleSecondValue ) )?
                    int alt194=2;
                    alt194 = dfa194.predict(input);
                    switch (alt194) {
                        case 1 :
                            // InternalSiddhiParser.g:14286:5: (lv_secv_28_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:14286:5: (lv_secv_28_0= ruleSecondValue )
                            // InternalSiddhiParser.g:14287:6: lv_secv_28_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_4_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_secv_28_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_28_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14304:4: ( (lv_msecv_29_0= ruleMillisecondValue ) )?
                    int alt195=2;
                    int LA195_0 = input.LA(1);

                    if ( (LA195_0==RULE_INT) ) {
                        alt195=1;
                    }
                    switch (alt195) {
                        case 1 :
                            // InternalSiddhiParser.g:14305:5: (lv_msecv_29_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:14305:5: (lv_msecv_29_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:14306:6: lv_msecv_29_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_4_3_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_29_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_29_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:14325:3: ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:14325:3: ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:14326:4: ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:14326:4: ( (lv_minv_30_0= ruleMinuteValue ) )
                    // InternalSiddhiParser.g:14327:5: (lv_minv_30_0= ruleMinuteValue )
                    {
                    // InternalSiddhiParser.g:14327:5: (lv_minv_30_0= ruleMinuteValue )
                    // InternalSiddhiParser.g:14328:6: lv_minv_30_0= ruleMinuteValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_minv_30_0=ruleMinuteValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"minv",
                      							lv_minv_30_0,
                      							"org.xtext.example.siddhi.Siddhi.MinuteValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:14345:4: ( (lv_secv_31_0= ruleSecondValue ) )?
                    int alt196=2;
                    alt196 = dfa196.predict(input);
                    switch (alt196) {
                        case 1 :
                            // InternalSiddhiParser.g:14346:5: (lv_secv_31_0= ruleSecondValue )
                            {
                            // InternalSiddhiParser.g:14346:5: (lv_secv_31_0= ruleSecondValue )
                            // InternalSiddhiParser.g:14347:6: lv_secv_31_0= ruleSecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_5_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_118);
                            lv_secv_31_0=ruleSecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"secv",
                              							lv_secv_31_0,
                              							"org.xtext.example.siddhi.Siddhi.SecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14364:4: ( (lv_msecv_32_0= ruleMillisecondValue ) )?
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==RULE_INT) ) {
                        alt197=1;
                    }
                    switch (alt197) {
                        case 1 :
                            // InternalSiddhiParser.g:14365:5: (lv_msecv_32_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:14365:5: (lv_msecv_32_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:14366:6: lv_msecv_32_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_5_2_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_32_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_32_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:14385:3: ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? )
                    {
                    // InternalSiddhiParser.g:14385:3: ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? )
                    // InternalSiddhiParser.g:14386:4: ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )?
                    {
                    // InternalSiddhiParser.g:14386:4: ( (lv_sv_33_0= ruleSecondValue ) )
                    // InternalSiddhiParser.g:14387:5: (lv_sv_33_0= ruleSecondValue )
                    {
                    // InternalSiddhiParser.g:14387:5: (lv_sv_33_0= ruleSecondValue )
                    // InternalSiddhiParser.g:14388:6: lv_sv_33_0= ruleSecondValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimeValueAccess().getSvSecondValueParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_sv_33_0=ruleSecondValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      						}
                      						set(
                      							current,
                      							"sv",
                      							lv_sv_33_0,
                      							"org.xtext.example.siddhi.Siddhi.SecondValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:14405:4: ( (lv_msecv_34_0= ruleMillisecondValue ) )?
                    int alt198=2;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==RULE_INT) ) {
                        alt198=1;
                    }
                    switch (alt198) {
                        case 1 :
                            // InternalSiddhiParser.g:14406:5: (lv_msecv_34_0= ruleMillisecondValue )
                            {
                            // InternalSiddhiParser.g:14406:5: (lv_msecv_34_0= ruleMillisecondValue )
                            // InternalSiddhiParser.g:14407:6: lv_msecv_34_0= ruleMillisecondValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_6_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_msecv_34_0=ruleMillisecondValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimeValueRule());
                              						}
                              						set(
                              							current,
                              							"msecv",
                              							lv_msecv_34_0,
                              							"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalSiddhiParser.g:14426:3: ( (lv_msecv_35_0= ruleMillisecondValue ) )
                    {
                    // InternalSiddhiParser.g:14426:3: ( (lv_msecv_35_0= ruleMillisecondValue ) )
                    // InternalSiddhiParser.g:14427:4: (lv_msecv_35_0= ruleMillisecondValue )
                    {
                    // InternalSiddhiParser.g:14427:4: (lv_msecv_35_0= ruleMillisecondValue )
                    // InternalSiddhiParser.g:14428:5: lv_msecv_35_0= ruleMillisecondValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_msecv_35_0=ruleMillisecondValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTimeValueRule());
                      					}
                      					set(
                      						current,
                      						"msecv",
                      						lv_msecv_35_0,
                      						"org.xtext.example.siddhi.Siddhi.MillisecondValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, ruleTimeValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTimeValue"


    // $ANTLR start "entryRuleYearValue"
    // InternalSiddhiParser.g:14449:1: entryRuleYearValue returns [EObject current=null] : iv_ruleYearValue= ruleYearValue EOF ;
    public final EObject entryRuleYearValue() throws RecognitionException {
        EObject current = null;
        int entryRuleYearValue_StartIndex = input.index();
        EObject iv_ruleYearValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return current; }
            // InternalSiddhiParser.g:14449:50: (iv_ruleYearValue= ruleYearValue EOF )
            // InternalSiddhiParser.g:14450:2: iv_ruleYearValue= ruleYearValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYearValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleYearValue=ruleYearValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleYearValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, entryRuleYearValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleYearValue"


    // $ANTLR start "ruleYearValue"
    // InternalSiddhiParser.g:14456:1: ruleYearValue returns [EObject current=null] : ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] ) ;
    public final EObject ruleYearValue() throws RecognitionException {
        EObject current = null;
        int ruleYearValue_StartIndex = input.index();
        EObject this_YEARS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return current; }
            // InternalSiddhiParser.g:14462:2: ( ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] ) )
            // InternalSiddhiParser.g:14463:2: ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] )
            {
            // InternalSiddhiParser.g:14463:2: ( ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current] )
            // InternalSiddhiParser.g:14464:3: ruleINT_LITERAL this_YEARS_1= ruleYEARS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getYearValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_119);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getYearValueRule());
              			}
              			newCompositeNode(grammarAccess.getYearValueAccess().getYEARSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_YEARS_1=ruleYEARS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_YEARS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, ruleYearValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleYearValue"


    // $ANTLR start "entryRuleMonthValue"
    // InternalSiddhiParser.g:14486:1: entryRuleMonthValue returns [EObject current=null] : iv_ruleMonthValue= ruleMonthValue EOF ;
    public final EObject entryRuleMonthValue() throws RecognitionException {
        EObject current = null;
        int entryRuleMonthValue_StartIndex = input.index();
        EObject iv_ruleMonthValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return current; }
            // InternalSiddhiParser.g:14486:51: (iv_ruleMonthValue= ruleMonthValue EOF )
            // InternalSiddhiParser.g:14487:2: iv_ruleMonthValue= ruleMonthValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMonthValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMonthValue=ruleMonthValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMonthValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, entryRuleMonthValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMonthValue"


    // $ANTLR start "ruleMonthValue"
    // InternalSiddhiParser.g:14493:1: ruleMonthValue returns [EObject current=null] : ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] ) ;
    public final EObject ruleMonthValue() throws RecognitionException {
        EObject current = null;
        int ruleMonthValue_StartIndex = input.index();
        EObject this_MONTHS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return current; }
            // InternalSiddhiParser.g:14499:2: ( ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] ) )
            // InternalSiddhiParser.g:14500:2: ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] )
            {
            // InternalSiddhiParser.g:14500:2: ( ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current] )
            // InternalSiddhiParser.g:14501:3: ruleINT_LITERAL this_MONTHS_1= ruleMONTHS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMonthValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_120);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMonthValueRule());
              			}
              			newCompositeNode(grammarAccess.getMonthValueAccess().getMONTHSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MONTHS_1=ruleMONTHS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MONTHS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, ruleMonthValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMonthValue"


    // $ANTLR start "entryRuleWeekValue"
    // InternalSiddhiParser.g:14523:1: entryRuleWeekValue returns [EObject current=null] : iv_ruleWeekValue= ruleWeekValue EOF ;
    public final EObject entryRuleWeekValue() throws RecognitionException {
        EObject current = null;
        int entryRuleWeekValue_StartIndex = input.index();
        EObject iv_ruleWeekValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return current; }
            // InternalSiddhiParser.g:14523:50: (iv_ruleWeekValue= ruleWeekValue EOF )
            // InternalSiddhiParser.g:14524:2: iv_ruleWeekValue= ruleWeekValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWeekValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWeekValue=ruleWeekValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWeekValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, entryRuleWeekValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWeekValue"


    // $ANTLR start "ruleWeekValue"
    // InternalSiddhiParser.g:14530:1: ruleWeekValue returns [EObject current=null] : ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] ) ;
    public final EObject ruleWeekValue() throws RecognitionException {
        EObject current = null;
        int ruleWeekValue_StartIndex = input.index();
        EObject this_WEEKS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return current; }
            // InternalSiddhiParser.g:14536:2: ( ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] ) )
            // InternalSiddhiParser.g:14537:2: ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] )
            {
            // InternalSiddhiParser.g:14537:2: ( ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current] )
            // InternalSiddhiParser.g:14538:3: ruleINT_LITERAL this_WEEKS_1= ruleWEEKS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWeekValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_121);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getWeekValueRule());
              			}
              			newCompositeNode(grammarAccess.getWeekValueAccess().getWEEKSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_WEEKS_1=ruleWEEKS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WEEKS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, ruleWeekValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWeekValue"


    // $ANTLR start "entryRuleDayValue"
    // InternalSiddhiParser.g:14560:1: entryRuleDayValue returns [EObject current=null] : iv_ruleDayValue= ruleDayValue EOF ;
    public final EObject entryRuleDayValue() throws RecognitionException {
        EObject current = null;
        int entryRuleDayValue_StartIndex = input.index();
        EObject iv_ruleDayValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return current; }
            // InternalSiddhiParser.g:14560:49: (iv_ruleDayValue= ruleDayValue EOF )
            // InternalSiddhiParser.g:14561:2: iv_ruleDayValue= ruleDayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDayValue=ruleDayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, entryRuleDayValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDayValue"


    // $ANTLR start "ruleDayValue"
    // InternalSiddhiParser.g:14567:1: ruleDayValue returns [EObject current=null] : ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] ) ;
    public final EObject ruleDayValue() throws RecognitionException {
        EObject current = null;
        int ruleDayValue_StartIndex = input.index();
        EObject this_DAYS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return current; }
            // InternalSiddhiParser.g:14573:2: ( ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] ) )
            // InternalSiddhiParser.g:14574:2: ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] )
            {
            // InternalSiddhiParser.g:14574:2: ( ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current] )
            // InternalSiddhiParser.g:14575:3: ruleINT_LITERAL this_DAYS_1= ruleDAYS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDayValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_122);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDayValueRule());
              			}
              			newCompositeNode(grammarAccess.getDayValueAccess().getDAYSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_DAYS_1=ruleDAYS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DAYS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, ruleDayValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDayValue"


    // $ANTLR start "entryRuleHourValue"
    // InternalSiddhiParser.g:14597:1: entryRuleHourValue returns [EObject current=null] : iv_ruleHourValue= ruleHourValue EOF ;
    public final EObject entryRuleHourValue() throws RecognitionException {
        EObject current = null;
        int entryRuleHourValue_StartIndex = input.index();
        EObject iv_ruleHourValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return current; }
            // InternalSiddhiParser.g:14597:50: (iv_ruleHourValue= ruleHourValue EOF )
            // InternalSiddhiParser.g:14598:2: iv_ruleHourValue= ruleHourValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHourValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHourValue=ruleHourValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHourValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, entryRuleHourValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleHourValue"


    // $ANTLR start "ruleHourValue"
    // InternalSiddhiParser.g:14604:1: ruleHourValue returns [EObject current=null] : ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] ) ;
    public final EObject ruleHourValue() throws RecognitionException {
        EObject current = null;
        int ruleHourValue_StartIndex = input.index();
        EObject this_HOURS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return current; }
            // InternalSiddhiParser.g:14610:2: ( ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] ) )
            // InternalSiddhiParser.g:14611:2: ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] )
            {
            // InternalSiddhiParser.g:14611:2: ( ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current] )
            // InternalSiddhiParser.g:14612:3: ruleINT_LITERAL this_HOURS_1= ruleHOURS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getHourValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_123);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getHourValueRule());
              			}
              			newCompositeNode(grammarAccess.getHourValueAccess().getHOURSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_HOURS_1=ruleHOURS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_HOURS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, ruleHourValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHourValue"


    // $ANTLR start "entryRuleMinuteValue"
    // InternalSiddhiParser.g:14634:1: entryRuleMinuteValue returns [EObject current=null] : iv_ruleMinuteValue= ruleMinuteValue EOF ;
    public final EObject entryRuleMinuteValue() throws RecognitionException {
        EObject current = null;
        int entryRuleMinuteValue_StartIndex = input.index();
        EObject iv_ruleMinuteValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return current; }
            // InternalSiddhiParser.g:14634:52: (iv_ruleMinuteValue= ruleMinuteValue EOF )
            // InternalSiddhiParser.g:14635:2: iv_ruleMinuteValue= ruleMinuteValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMinuteValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMinuteValue=ruleMinuteValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMinuteValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, entryRuleMinuteValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMinuteValue"


    // $ANTLR start "ruleMinuteValue"
    // InternalSiddhiParser.g:14641:1: ruleMinuteValue returns [EObject current=null] : ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] ) ;
    public final EObject ruleMinuteValue() throws RecognitionException {
        EObject current = null;
        int ruleMinuteValue_StartIndex = input.index();
        EObject this_MINUTES_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return current; }
            // InternalSiddhiParser.g:14647:2: ( ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] ) )
            // InternalSiddhiParser.g:14648:2: ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] )
            {
            // InternalSiddhiParser.g:14648:2: ( ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current] )
            // InternalSiddhiParser.g:14649:3: ruleINT_LITERAL this_MINUTES_1= ruleMINUTES[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMinuteValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_124);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMinuteValueRule());
              			}
              			newCompositeNode(grammarAccess.getMinuteValueAccess().getMINUTESParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MINUTES_1=ruleMINUTES(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MINUTES_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, ruleMinuteValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMinuteValue"


    // $ANTLR start "entryRuleSecondValue"
    // InternalSiddhiParser.g:14671:1: entryRuleSecondValue returns [EObject current=null] : iv_ruleSecondValue= ruleSecondValue EOF ;
    public final EObject entryRuleSecondValue() throws RecognitionException {
        EObject current = null;
        int entryRuleSecondValue_StartIndex = input.index();
        EObject iv_ruleSecondValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return current; }
            // InternalSiddhiParser.g:14671:52: (iv_ruleSecondValue= ruleSecondValue EOF )
            // InternalSiddhiParser.g:14672:2: iv_ruleSecondValue= ruleSecondValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSecondValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSecondValue=ruleSecondValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSecondValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, entryRuleSecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSecondValue"


    // $ANTLR start "ruleSecondValue"
    // InternalSiddhiParser.g:14678:1: ruleSecondValue returns [EObject current=null] : ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] ) ;
    public final EObject ruleSecondValue() throws RecognitionException {
        EObject current = null;
        int ruleSecondValue_StartIndex = input.index();
        EObject this_SECONDS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return current; }
            // InternalSiddhiParser.g:14684:2: ( ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] ) )
            // InternalSiddhiParser.g:14685:2: ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] )
            {
            // InternalSiddhiParser.g:14685:2: ( ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current] )
            // InternalSiddhiParser.g:14686:3: ruleINT_LITERAL this_SECONDS_1= ruleSECONDS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSecondValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_125);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSecondValueRule());
              			}
              			newCompositeNode(grammarAccess.getSecondValueAccess().getSECONDSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_SECONDS_1=ruleSECONDS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SECONDS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, ruleSecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSecondValue"


    // $ANTLR start "entryRuleMillisecondValue"
    // InternalSiddhiParser.g:14708:1: entryRuleMillisecondValue returns [EObject current=null] : iv_ruleMillisecondValue= ruleMillisecondValue EOF ;
    public final EObject entryRuleMillisecondValue() throws RecognitionException {
        EObject current = null;
        int entryRuleMillisecondValue_StartIndex = input.index();
        EObject iv_ruleMillisecondValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return current; }
            // InternalSiddhiParser.g:14708:57: (iv_ruleMillisecondValue= ruleMillisecondValue EOF )
            // InternalSiddhiParser.g:14709:2: iv_ruleMillisecondValue= ruleMillisecondValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMillisecondValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMillisecondValue=ruleMillisecondValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMillisecondValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, entryRuleMillisecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMillisecondValue"


    // $ANTLR start "ruleMillisecondValue"
    // InternalSiddhiParser.g:14715:1: ruleMillisecondValue returns [EObject current=null] : ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] ) ;
    public final EObject ruleMillisecondValue() throws RecognitionException {
        EObject current = null;
        int ruleMillisecondValue_StartIndex = input.index();
        EObject this_MILLISECONDS_1 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return current; }
            // InternalSiddhiParser.g:14721:2: ( ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] ) )
            // InternalSiddhiParser.g:14722:2: ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] )
            {
            // InternalSiddhiParser.g:14722:2: ( ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current] )
            // InternalSiddhiParser.g:14723:3: ruleINT_LITERAL this_MILLISECONDS_1= ruleMILLISECONDS[$current]
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMillisecondValueAccess().getINT_LITERALParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_126);
            ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMillisecondValueRule());
              			}
              			newCompositeNode(grammarAccess.getMillisecondValueAccess().getMILLISECONDSParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_MILLISECONDS_1=ruleMILLISECONDS(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MILLISECONDS_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, ruleMillisecondValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMillisecondValue"


    // $ANTLR start "entryRuleSignedIntValue"
    // InternalSiddhiParser.g:14745:1: entryRuleSignedIntValue returns [String current=null] : iv_ruleSignedIntValue= ruleSignedIntValue EOF ;
    public final String entryRuleSignedIntValue() throws RecognitionException {
        String current = null;
        int entryRuleSignedIntValue_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSignedIntValue = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return current; }
            // InternalSiddhiParser.g:14745:54: (iv_ruleSignedIntValue= ruleSignedIntValue EOF )
            // InternalSiddhiParser.g:14746:2: iv_ruleSignedIntValue= ruleSignedIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignedIntValue=ruleSignedIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedIntValue.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, entryRuleSignedIntValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedIntValue"


    // $ANTLR start "ruleSignedIntValue"
    // InternalSiddhiParser.g:14752:1: ruleSignedIntValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL ) ;
    public final AntlrDatatypeRuleToken ruleSignedIntValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSignedIntValue_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_INT_LITERAL_2 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return current; }
            // InternalSiddhiParser.g:14758:2: ( ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL ) )
            // InternalSiddhiParser.g:14759:2: ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL )
            {
            // InternalSiddhiParser.g:14759:2: ( (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL )
            // InternalSiddhiParser.g:14760:3: (kw= HyphenMinus | kw= PlusSign )? this_INT_LITERAL_2= ruleINT_LITERAL
            {
            // InternalSiddhiParser.g:14760:3: (kw= HyphenMinus | kw= PlusSign )?
            int alt200=3;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==HyphenMinus) ) {
                alt200=1;
            }
            else if ( (LA200_0==PlusSign) ) {
                alt200=2;
            }
            switch (alt200) {
                case 1 :
                    // InternalSiddhiParser.g:14761:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSignedIntValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:14767:4: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSignedIntValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedIntValueAccess().getINT_LITERALParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_INT_LITERAL_2=ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_LITERAL_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, ruleSignedIntValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedIntValue"


    // $ANTLR start "entryRuleSTRING_LITERAL"
    // InternalSiddhiParser.g:14787:1: entryRuleSTRING_LITERAL returns [String current=null] : iv_ruleSTRING_LITERAL= ruleSTRING_LITERAL EOF ;
    public final String entryRuleSTRING_LITERAL() throws RecognitionException {
        String current = null;
        int entryRuleSTRING_LITERAL_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSTRING_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return current; }
            // InternalSiddhiParser.g:14787:54: (iv_ruleSTRING_LITERAL= ruleSTRING_LITERAL EOF )
            // InternalSiddhiParser.g:14788:2: iv_ruleSTRING_LITERAL= ruleSTRING_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSTRING_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSTRING_LITERAL=ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSTRING_LITERAL.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, entryRuleSTRING_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_LITERAL"


    // $ANTLR start "ruleSTRING_LITERAL"
    // InternalSiddhiParser.g:14794:1: ruleSTRING_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleSTRING_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSTRING_LITERAL_StartIndex = input.index();
        Token this_STRING_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return current; }
            // InternalSiddhiParser.g:14800:2: (this_STRING_0= RULE_STRING )
            // InternalSiddhiParser.g:14801:2: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_0, grammarAccess.getSTRING_LITERALAccess().getSTRINGTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, ruleSTRING_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_LITERAL"


    // $ANTLR start "entryRuleINT_LITERAL"
    // InternalSiddhiParser.g:14811:1: entryRuleINT_LITERAL returns [String current=null] : iv_ruleINT_LITERAL= ruleINT_LITERAL EOF ;
    public final String entryRuleINT_LITERAL() throws RecognitionException {
        String current = null;
        int entryRuleINT_LITERAL_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleINT_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return current; }
            // InternalSiddhiParser.g:14811:51: (iv_ruleINT_LITERAL= ruleINT_LITERAL EOF )
            // InternalSiddhiParser.g:14812:2: iv_ruleINT_LITERAL= ruleINT_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINT_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleINT_LITERAL=ruleINT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINT_LITERAL.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, entryRuleINT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleINT_LITERAL"


    // $ANTLR start "ruleINT_LITERAL"
    // InternalSiddhiParser.g:14818:1: ruleINT_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DIGIT_0= ruleDIGIT )+ ;
    public final AntlrDatatypeRuleToken ruleINT_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleINT_LITERAL_StartIndex = input.index();
        AntlrDatatypeRuleToken this_DIGIT_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return current; }
            // InternalSiddhiParser.g:14824:2: ( (this_DIGIT_0= ruleDIGIT )+ )
            // InternalSiddhiParser.g:14825:2: (this_DIGIT_0= ruleDIGIT )+
            {
            // InternalSiddhiParser.g:14825:2: (this_DIGIT_0= ruleDIGIT )+
            int cnt201=0;
            loop201:
            do {
                int alt201=2;
                int LA201_0 = input.LA(1);

                if ( (LA201_0==RULE_INT) ) {
                    alt201=1;
                }


                switch (alt201) {
            	case 1 :
            	    // InternalSiddhiParser.g:14826:3: this_DIGIT_0= ruleDIGIT
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getINT_LITERALAccess().getDIGITParserRuleCall());
            	      		
            	    }
            	    pushFollow(FollowSets000.FOLLOW_118);
            	    this_DIGIT_0=ruleDIGIT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_DIGIT_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt201 >= 1 ) break loop201;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(201, input);
                        throw eee;
                }
                cnt201++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, ruleINT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINT_LITERAL"


    // $ANTLR start "entryRuleDOUBLE_LITERAL"
    // InternalSiddhiParser.g:14840:1: entryRuleDOUBLE_LITERAL returns [EObject current=null] : iv_ruleDOUBLE_LITERAL= ruleDOUBLE_LITERAL EOF ;
    public final EObject entryRuleDOUBLE_LITERAL() throws RecognitionException {
        EObject current = null;
        int entryRuleDOUBLE_LITERAL_StartIndex = input.index();
        EObject iv_ruleDOUBLE_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return current; }
            // InternalSiddhiParser.g:14840:55: (iv_ruleDOUBLE_LITERAL= ruleDOUBLE_LITERAL EOF )
            // InternalSiddhiParser.g:14841:2: iv_ruleDOUBLE_LITERAL= ruleDOUBLE_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDOUBLE_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDOUBLE_LITERAL=ruleDOUBLE_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDOUBLE_LITERAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, entryRuleDOUBLE_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDOUBLE_LITERAL"


    // $ANTLR start "ruleDOUBLE_LITERAL"
    // InternalSiddhiParser.g:14847:1: ruleDOUBLE_LITERAL returns [EObject current=null] : ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) ) ;
    public final EObject ruleDOUBLE_LITERAL() throws RecognitionException {
        EObject current = null;
        int ruleDOUBLE_LITERAL_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_20=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_e_4_0 = null;

        EObject lv_d_8_0 = null;

        EObject lv_e_13_0 = null;

        EObject lv_d_17_0 = null;

        EObject lv_e_22_0 = null;

        EObject lv_d_26_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return current; }
            // InternalSiddhiParser.g:14853:2: ( ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) ) )
            // InternalSiddhiParser.g:14854:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) )
            {
            // InternalSiddhiParser.g:14854:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) )
            int alt220=3;
            alt220 = dfa220.predict(input);
            switch (alt220) {
                case 1 :
                    // InternalSiddhiParser.g:14855:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) )
                    {
                    // InternalSiddhiParser.g:14855:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) )
                    // InternalSiddhiParser.g:14856:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) )
                    {
                    // InternalSiddhiParser.g:14890:4: ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) )
                    // InternalSiddhiParser.g:14891:5: () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) )
                    {
                    // InternalSiddhiParser.g:14891:5: ()
                    // InternalSiddhiParser.g:14892:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:14898:5: ( ruleDIGIT )+
                    int cnt202=0;
                    loop202:
                    do {
                        int alt202=2;
                        int LA202_0 = input.LA(1);

                        if ( (LA202_0==RULE_INT) ) {
                            alt202=1;
                        }


                        switch (alt202) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14899:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_1());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_127);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt202 >= 1 ) break loop202;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(202, input);
                                throw eee;
                        }
                        cnt202++;
                    } while (true);

                    // InternalSiddhiParser.g:14907:5: (otherlv_2= FullStop ( ruleDIGIT )* )?
                    int alt204=2;
                    int LA204_0 = input.LA(1);

                    if ( (LA204_0==FullStop) ) {
                        alt204=1;
                    }
                    switch (alt204) {
                        case 1 :
                            // InternalSiddhiParser.g:14908:6: otherlv_2= FullStop ( ruleDIGIT )*
                            {
                            otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_0_0_2_0());
                              					
                            }
                            // InternalSiddhiParser.g:14912:6: ( ruleDIGIT )*
                            loop203:
                            do {
                                int alt203=2;
                                int LA203_0 = input.LA(1);

                                if ( (LA203_0==RULE_INT) ) {
                                    alt203=1;
                                }


                                switch (alt203) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14913:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_2_1());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_127);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop203;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14922:5: ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )?
                    int alt207=2;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==E) ) {
                        alt207=1;
                    }
                    switch (alt207) {
                        case 1 :
                            // InternalSiddhiParser.g:14923:6: ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:14923:6: ( (lv_e_4_0= ruleE ) )
                            // InternalSiddhiParser.g:14924:7: (lv_e_4_0= ruleE )
                            {
                            // InternalSiddhiParser.g:14924:7: (lv_e_4_0= ruleE )
                            // InternalSiddhiParser.g:14925:8: lv_e_4_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_0_0_3_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_117);
                            lv_e_4_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              								}
                              								set(
                              									current,
                              									"e",
                              									lv_e_4_0,
                              									"org.xtext.example.siddhi.Siddhi.E");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSiddhiParser.g:14942:6: (otherlv_5= HyphenMinus | otherlv_6= PlusSign )?
                            int alt205=3;
                            int LA205_0 = input.LA(1);

                            if ( (LA205_0==HyphenMinus) ) {
                                alt205=1;
                            }
                            else if ( (LA205_0==PlusSign) ) {
                                alt205=2;
                            }
                            switch (alt205) {
                                case 1 :
                                    // InternalSiddhiParser.g:14943:7: otherlv_5= HyphenMinus
                                    {
                                    otherlv_5=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:14948:7: otherlv_6= PlusSign
                                    {
                                    otherlv_6=(Token)match(input,PlusSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_6, grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_0_0_3_1_1());
                                      						
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:14953:6: ( ruleDIGIT )+
                            int cnt206=0;
                            loop206:
                            do {
                                int alt206=2;
                                int LA206_0 = input.LA(1);

                                if ( (LA206_0==RULE_INT) ) {
                                    alt206=1;
                                }


                                switch (alt206) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:14954:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_3_2());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_127);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt206 >= 1 ) break loop206;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(206, input);
                                        throw eee;
                                }
                                cnt206++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:14963:5: ( (lv_d_8_0= ruleD ) )
                    // InternalSiddhiParser.g:14964:6: (lv_d_8_0= ruleD )
                    {
                    // InternalSiddhiParser.g:14964:6: (lv_d_8_0= ruleD )
                    // InternalSiddhiParser.g:14965:7: lv_d_8_0= ruleD
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_0_0_4_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_d_8_0=ruleD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                      							}
                      							set(
                      								current,
                      								"d",
                      								lv_d_8_0,
                      								"org.xtext.example.siddhi.Siddhi.D");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:14985:3: ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? )
                    {
                    // InternalSiddhiParser.g:14985:3: ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? )
                    // InternalSiddhiParser.g:14986:4: () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )?
                    {
                    // InternalSiddhiParser.g:14986:4: ()
                    // InternalSiddhiParser.g:14987:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:14993:4: ( ruleDIGIT )+
                    int cnt208=0;
                    loop208:
                    do {
                        int alt208=2;
                        int LA208_0 = input.LA(1);

                        if ( (LA208_0==RULE_INT) ) {
                            alt208=1;
                        }


                        switch (alt208) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:14994:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_128);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt208 >= 1 ) break loop208;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(208, input);
                                throw eee;
                        }
                        cnt208++;
                    } while (true);

                    // InternalSiddhiParser.g:15002:4: (otherlv_11= FullStop ( ruleDIGIT )* )?
                    int alt210=2;
                    int LA210_0 = input.LA(1);

                    if ( (LA210_0==FullStop) ) {
                        alt210=1;
                    }
                    switch (alt210) {
                        case 1 :
                            // InternalSiddhiParser.g:15003:5: otherlv_11= FullStop ( ruleDIGIT )*
                            {
                            otherlv_11=(Token)match(input,FullStop,FollowSets000.FOLLOW_129); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            // InternalSiddhiParser.g:15007:5: ( ruleDIGIT )*
                            loop209:
                            do {
                                int alt209=2;
                                int LA209_0 = input.LA(1);

                                if ( (LA209_0==RULE_INT) ) {
                                    alt209=1;
                                }


                                switch (alt209) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:15008:6: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_2_1());
                            	      					
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_129);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop209;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:15017:4: ( (lv_e_13_0= ruleE ) )
                    // InternalSiddhiParser.g:15018:5: (lv_e_13_0= ruleE )
                    {
                    // InternalSiddhiParser.g:15018:5: (lv_e_13_0= ruleE )
                    // InternalSiddhiParser.g:15019:6: lv_e_13_0= ruleE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_117);
                    lv_e_13_0=ruleE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                      						}
                      						set(
                      							current,
                      							"e",
                      							lv_e_13_0,
                      							"org.xtext.example.siddhi.Siddhi.E");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSiddhiParser.g:15036:4: (otherlv_14= HyphenMinus | otherlv_15= PlusSign )?
                    int alt211=3;
                    int LA211_0 = input.LA(1);

                    if ( (LA211_0==HyphenMinus) ) {
                        alt211=1;
                    }
                    else if ( (LA211_0==PlusSign) ) {
                        alt211=2;
                    }
                    switch (alt211) {
                        case 1 :
                            // InternalSiddhiParser.g:15037:5: otherlv_14= HyphenMinus
                            {
                            otherlv_14=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_14, grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_1_4_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalSiddhiParser.g:15042:5: otherlv_15= PlusSign
                            {
                            otherlv_15=(Token)match(input,PlusSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalSiddhiParser.g:15047:4: ( ruleDIGIT )+
                    int cnt212=0;
                    loop212:
                    do {
                        int alt212=2;
                        int LA212_0 = input.LA(1);

                        if ( (LA212_0==RULE_INT) ) {
                            alt212=1;
                        }


                        switch (alt212) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:15048:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_5());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_130);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt212 >= 1 ) break loop212;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(212, input);
                                throw eee;
                        }
                        cnt212++;
                    } while (true);

                    // InternalSiddhiParser.g:15056:4: ( (lv_d_17_0= ruleD ) )?
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==D) ) {
                        alt213=1;
                    }
                    switch (alt213) {
                        case 1 :
                            // InternalSiddhiParser.g:15057:5: (lv_d_17_0= ruleD )
                            {
                            // InternalSiddhiParser.g:15057:5: (lv_d_17_0= ruleD )
                            // InternalSiddhiParser.g:15058:6: lv_d_17_0= ruleD
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_1_6_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_d_17_0=ruleD();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              						}
                              						set(
                              							current,
                              							"d",
                              							lv_d_17_0,
                              							"org.xtext.example.siddhi.Siddhi.D");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:15077:3: ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) )
                    {
                    // InternalSiddhiParser.g:15077:3: ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) )
                    // InternalSiddhiParser.g:15078:4: ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? )
                    {
                    // InternalSiddhiParser.g:15110:4: ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? )
                    // InternalSiddhiParser.g:15111:5: () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )?
                    {
                    // InternalSiddhiParser.g:15111:5: ()
                    // InternalSiddhiParser.g:15112:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_2_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:15118:5: ( ruleDIGIT )*
                    loop214:
                    do {
                        int alt214=2;
                        int LA214_0 = input.LA(1);

                        if ( (LA214_0==RULE_INT) ) {
                            alt214=1;
                        }


                        switch (alt214) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:15119:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_1());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_131);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop214;
                        }
                    } while (true);

                    otherlv_20=(Token)match(input,FullStop,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_20, grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_2_0_2());
                      				
                    }
                    // InternalSiddhiParser.g:15131:5: ( ruleDIGIT )+
                    int cnt215=0;
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==RULE_INT) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:15132:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_3());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_130);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt215 >= 1 ) break loop215;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(215, input);
                                throw eee;
                        }
                        cnt215++;
                    } while (true);

                    // InternalSiddhiParser.g:15140:5: ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )?
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( (LA218_0==E) ) {
                        alt218=1;
                    }
                    switch (alt218) {
                        case 1 :
                            // InternalSiddhiParser.g:15141:6: ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:15141:6: ( (lv_e_22_0= ruleE ) )
                            // InternalSiddhiParser.g:15142:7: (lv_e_22_0= ruleE )
                            {
                            // InternalSiddhiParser.g:15142:7: (lv_e_22_0= ruleE )
                            // InternalSiddhiParser.g:15143:8: lv_e_22_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_2_0_4_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_117);
                            lv_e_22_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              								}
                              								set(
                              									current,
                              									"e",
                              									lv_e_22_0,
                              									"org.xtext.example.siddhi.Siddhi.E");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSiddhiParser.g:15160:6: (otherlv_23= HyphenMinus | otherlv_24= PlusSign )?
                            int alt216=3;
                            int LA216_0 = input.LA(1);

                            if ( (LA216_0==HyphenMinus) ) {
                                alt216=1;
                            }
                            else if ( (LA216_0==PlusSign) ) {
                                alt216=2;
                            }
                            switch (alt216) {
                                case 1 :
                                    // InternalSiddhiParser.g:15161:7: otherlv_23= HyphenMinus
                                    {
                                    otherlv_23=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_23, grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_2_0_4_1_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:15166:7: otherlv_24= PlusSign
                                    {
                                    otherlv_24=(Token)match(input,PlusSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_24, grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_2_0_4_1_1());
                                      						
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:15171:6: ( ruleDIGIT )+
                            int cnt217=0;
                            loop217:
                            do {
                                int alt217=2;
                                int LA217_0 = input.LA(1);

                                if ( (LA217_0==RULE_INT) ) {
                                    alt217=1;
                                }


                                switch (alt217) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:15172:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_4_2());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_130);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt217 >= 1 ) break loop217;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(217, input);
                                        throw eee;
                                }
                                cnt217++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:15181:5: ( (lv_d_26_0= ruleD ) )?
                    int alt219=2;
                    int LA219_0 = input.LA(1);

                    if ( (LA219_0==D) ) {
                        alt219=1;
                    }
                    switch (alt219) {
                        case 1 :
                            // InternalSiddhiParser.g:15182:6: (lv_d_26_0= ruleD )
                            {
                            // InternalSiddhiParser.g:15182:6: (lv_d_26_0= ruleD )
                            // InternalSiddhiParser.g:15183:7: lv_d_26_0= ruleD
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_2_0_5_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_d_26_0=ruleD();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDOUBLE_LITERALRule());
                              							}
                              							set(
                              								current,
                              								"d",
                              								lv_d_26_0,
                              								"org.xtext.example.siddhi.Siddhi.D");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, ruleDOUBLE_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDOUBLE_LITERAL"


    // $ANTLR start "entryRuleFLOAT_LITERAL"
    // InternalSiddhiParser.g:15206:1: entryRuleFLOAT_LITERAL returns [EObject current=null] : iv_ruleFLOAT_LITERAL= ruleFLOAT_LITERAL EOF ;
    public final EObject entryRuleFLOAT_LITERAL() throws RecognitionException {
        EObject current = null;
        int entryRuleFLOAT_LITERAL_StartIndex = input.index();
        EObject iv_ruleFLOAT_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return current; }
            // InternalSiddhiParser.g:15206:54: (iv_ruleFLOAT_LITERAL= ruleFLOAT_LITERAL EOF )
            // InternalSiddhiParser.g:15207:2: iv_ruleFLOAT_LITERAL= ruleFLOAT_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFLOAT_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFLOAT_LITERAL=ruleFLOAT_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFLOAT_LITERAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, entryRuleFLOAT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFLOAT_LITERAL"


    // $ANTLR start "ruleFLOAT_LITERAL"
    // InternalSiddhiParser.g:15213:1: ruleFLOAT_LITERAL returns [EObject current=null] : ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) ) ;
    public final EObject ruleFLOAT_LITERAL() throws RecognitionException {
        EObject current = null;
        int ruleFLOAT_LITERAL_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_e_4_0 = null;

        EObject lv_f_8_0 = null;

        EObject lv_e_13_0 = null;

        EObject lv_f_17_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return current; }
            // InternalSiddhiParser.g:15219:2: ( ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) ) )
            // InternalSiddhiParser.g:15220:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) )
            {
            // InternalSiddhiParser.g:15220:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) )
            int alt232=2;
            alt232 = dfa232.predict(input);
            switch (alt232) {
                case 1 :
                    // InternalSiddhiParser.g:15221:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) )
                    {
                    // InternalSiddhiParser.g:15221:3: ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) )
                    // InternalSiddhiParser.g:15222:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) )
                    {
                    // InternalSiddhiParser.g:15256:4: ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) )
                    // InternalSiddhiParser.g:15257:5: () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) )
                    {
                    // InternalSiddhiParser.g:15257:5: ()
                    // InternalSiddhiParser.g:15258:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSiddhiParser.g:15264:5: ( ruleDIGIT )+
                    int cnt221=0;
                    loop221:
                    do {
                        int alt221=2;
                        int LA221_0 = input.LA(1);

                        if ( (LA221_0==RULE_INT) ) {
                            alt221=1;
                        }


                        switch (alt221) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:15265:6: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_1());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt221 >= 1 ) break loop221;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(221, input);
                                throw eee;
                        }
                        cnt221++;
                    } while (true);

                    // InternalSiddhiParser.g:15273:5: (otherlv_2= FullStop ( ruleDIGIT )* )?
                    int alt223=2;
                    int LA223_0 = input.LA(1);

                    if ( (LA223_0==FullStop) ) {
                        alt223=1;
                    }
                    switch (alt223) {
                        case 1 :
                            // InternalSiddhiParser.g:15274:6: otherlv_2= FullStop ( ruleDIGIT )*
                            {
                            otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_0_0_2_0());
                              					
                            }
                            // InternalSiddhiParser.g:15278:6: ( ruleDIGIT )*
                            loop222:
                            do {
                                int alt222=2;
                                int LA222_0 = input.LA(1);

                                if ( (LA222_0==RULE_INT) ) {
                                    alt222=1;
                                }


                                switch (alt222) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:15279:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_2_1());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_132);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop222;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:15288:5: ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )?
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==E) ) {
                        alt226=1;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalSiddhiParser.g:15289:6: ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:15289:6: ( (lv_e_4_0= ruleE ) )
                            // InternalSiddhiParser.g:15290:7: (lv_e_4_0= ruleE )
                            {
                            // InternalSiddhiParser.g:15290:7: (lv_e_4_0= ruleE )
                            // InternalSiddhiParser.g:15291:8: lv_e_4_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_0_0_3_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_117);
                            lv_e_4_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                              								}
                              								set(
                              									current,
                              									"e",
                              									lv_e_4_0,
                              									"org.xtext.example.siddhi.Siddhi.E");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSiddhiParser.g:15308:6: (otherlv_5= HyphenMinus | otherlv_6= PlusSign )?
                            int alt224=3;
                            int LA224_0 = input.LA(1);

                            if ( (LA224_0==HyphenMinus) ) {
                                alt224=1;
                            }
                            else if ( (LA224_0==PlusSign) ) {
                                alt224=2;
                            }
                            switch (alt224) {
                                case 1 :
                                    // InternalSiddhiParser.g:15309:7: otherlv_5= HyphenMinus
                                    {
                                    otherlv_5=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:15314:7: otherlv_6= PlusSign
                                    {
                                    otherlv_6=(Token)match(input,PlusSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_6, grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_0_0_3_1_1());
                                      						
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:15319:6: ( ruleDIGIT )+
                            int cnt225=0;
                            loop225:
                            do {
                                int alt225=2;
                                int LA225_0 = input.LA(1);

                                if ( (LA225_0==RULE_INT) ) {
                                    alt225=1;
                                }


                                switch (alt225) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:15320:7: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_3_2());
                            	      						
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_132);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							afterParserOrEnumRuleCall();
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt225 >= 1 ) break loop225;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(225, input);
                                        throw eee;
                                }
                                cnt225++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:15329:5: ( (lv_f_8_0= ruleF ) )
                    // InternalSiddhiParser.g:15330:6: (lv_f_8_0= ruleF )
                    {
                    // InternalSiddhiParser.g:15330:6: (lv_f_8_0= ruleF )
                    // InternalSiddhiParser.g:15331:7: lv_f_8_0= ruleF
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_0_0_4_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_f_8_0=ruleF();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                      							}
                      							set(
                      								current,
                      								"f",
                      								lv_f_8_0,
                      								"org.xtext.example.siddhi.Siddhi.F");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:15351:3: ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) )
                    {
                    // InternalSiddhiParser.g:15351:3: ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) )
                    // InternalSiddhiParser.g:15352:4: () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) )
                    {
                    // InternalSiddhiParser.g:15352:4: ()
                    // InternalSiddhiParser.g:15353:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:15359:4: ( ruleDIGIT )*
                    loop227:
                    do {
                        int alt227=2;
                        int LA227_0 = input.LA(1);

                        if ( (LA227_0==RULE_INT) ) {
                            alt227=1;
                        }


                        switch (alt227) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:15360:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_131);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop227;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,FullStop,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_1_2());
                      			
                    }
                    // InternalSiddhiParser.g:15372:4: ( ruleDIGIT )+
                    int cnt228=0;
                    loop228:
                    do {
                        int alt228=2;
                        int LA228_0 = input.LA(1);

                        if ( (LA228_0==RULE_INT) ) {
                            alt228=1;
                        }


                        switch (alt228) {
                    	case 1 :
                    	    // InternalSiddhiParser.g:15373:5: ruleDIGIT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_3());
                    	      				
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    ruleDIGIT();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt228 >= 1 ) break loop228;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(228, input);
                                throw eee;
                        }
                        cnt228++;
                    } while (true);

                    // InternalSiddhiParser.g:15381:4: ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )?
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==E) ) {
                        alt231=1;
                    }
                    switch (alt231) {
                        case 1 :
                            // InternalSiddhiParser.g:15382:5: ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+
                            {
                            // InternalSiddhiParser.g:15382:5: ( (lv_e_13_0= ruleE ) )
                            // InternalSiddhiParser.g:15383:6: (lv_e_13_0= ruleE )
                            {
                            // InternalSiddhiParser.g:15383:6: (lv_e_13_0= ruleE )
                            // InternalSiddhiParser.g:15384:7: lv_e_13_0= ruleE
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_1_4_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_117);
                            lv_e_13_0=ruleE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                              							}
                              							set(
                              								current,
                              								"e",
                              								lv_e_13_0,
                              								"org.xtext.example.siddhi.Siddhi.E");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSiddhiParser.g:15401:5: (otherlv_14= HyphenMinus | otherlv_15= PlusSign )?
                            int alt229=3;
                            int LA229_0 = input.LA(1);

                            if ( (LA229_0==HyphenMinus) ) {
                                alt229=1;
                            }
                            else if ( (LA229_0==PlusSign) ) {
                                alt229=2;
                            }
                            switch (alt229) {
                                case 1 :
                                    // InternalSiddhiParser.g:15402:6: otherlv_14= HyphenMinus
                                    {
                                    otherlv_14=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_14, grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_1_4_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSiddhiParser.g:15407:6: otherlv_15= PlusSign
                                    {
                                    otherlv_15=(Token)match(input,PlusSign,FollowSets000.FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_15, grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_1_4_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }

                            // InternalSiddhiParser.g:15412:5: ( ruleDIGIT )+
                            int cnt230=0;
                            loop230:
                            do {
                                int alt230=2;
                                int LA230_0 = input.LA(1);

                                if ( (LA230_0==RULE_INT) ) {
                                    alt230=1;
                                }


                                switch (alt230) {
                            	case 1 :
                            	    // InternalSiddhiParser.g:15413:6: ruleDIGIT
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_4_2());
                            	      					
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_132);
                            	    ruleDIGIT();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt230 >= 1 ) break loop230;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(230, input);
                                        throw eee;
                                }
                                cnt230++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSiddhiParser.g:15422:4: ( (lv_f_17_0= ruleF ) )
                    // InternalSiddhiParser.g:15423:5: (lv_f_17_0= ruleF )
                    {
                    // InternalSiddhiParser.g:15423:5: (lv_f_17_0= ruleF )
                    // InternalSiddhiParser.g:15424:6: lv_f_17_0= ruleF
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_f_17_0=ruleF();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFLOAT_LITERALRule());
                      						}
                      						set(
                      							current,
                      							"f",
                      							lv_f_17_0,
                      							"org.xtext.example.siddhi.Siddhi.F");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, ruleFLOAT_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFLOAT_LITERAL"


    // $ANTLR start "entryRuleLONG_LITERAL"
    // InternalSiddhiParser.g:15446:1: entryRuleLONG_LITERAL returns [EObject current=null] : iv_ruleLONG_LITERAL= ruleLONG_LITERAL EOF ;
    public final EObject entryRuleLONG_LITERAL() throws RecognitionException {
        EObject current = null;
        int entryRuleLONG_LITERAL_StartIndex = input.index();
        EObject iv_ruleLONG_LITERAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return current; }
            // InternalSiddhiParser.g:15446:53: (iv_ruleLONG_LITERAL= ruleLONG_LITERAL EOF )
            // InternalSiddhiParser.g:15447:2: iv_ruleLONG_LITERAL= ruleLONG_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLONG_LITERALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLONG_LITERAL=ruleLONG_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLONG_LITERAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, entryRuleLONG_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLONG_LITERAL"


    // $ANTLR start "ruleLONG_LITERAL"
    // InternalSiddhiParser.g:15453:1: ruleLONG_LITERAL returns [EObject current=null] : ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) ) ;
    public final EObject ruleLONG_LITERAL() throws RecognitionException {
        EObject current = null;
        int ruleLONG_LITERAL_StartIndex = input.index();
        EObject lv_l_1_0 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return current; }
            // InternalSiddhiParser.g:15459:2: ( ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) ) )
            // InternalSiddhiParser.g:15460:2: ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) )
            {
            // InternalSiddhiParser.g:15460:2: ( ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) ) )
            // InternalSiddhiParser.g:15461:3: ( ruleDIGIT )+ ( (lv_l_1_0= ruleL ) )
            {
            // InternalSiddhiParser.g:15461:3: ( ruleDIGIT )+
            int cnt233=0;
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==RULE_INT) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    // InternalSiddhiParser.g:15462:4: ruleDIGIT
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getLONG_LITERALAccess().getDIGITParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_133);
            	    ruleDIGIT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt233 >= 1 ) break loop233;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(233, input);
                        throw eee;
                }
                cnt233++;
            } while (true);

            // InternalSiddhiParser.g:15470:3: ( (lv_l_1_0= ruleL ) )
            // InternalSiddhiParser.g:15471:4: (lv_l_1_0= ruleL )
            {
            // InternalSiddhiParser.g:15471:4: (lv_l_1_0= ruleL )
            // InternalSiddhiParser.g:15472:5: lv_l_1_0= ruleL
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLONG_LITERALAccess().getLLParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_l_1_0=ruleL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLONG_LITERALRule());
              					}
              					set(
              						current,
              						"l",
              						lv_l_1_0,
              						"org.xtext.example.siddhi.Siddhi.L");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, ruleLONG_LITERAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLONG_LITERAL"


    // $ANTLR start "ruleDIGIT"
    // InternalSiddhiParser.g:15494:1: ruleDIGIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleDIGIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleDIGIT_StartIndex = input.index();
        Token this_INT_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return current; }
            // InternalSiddhiParser.g:15500:2: (this_INT_0= RULE_INT )
            // InternalSiddhiParser.g:15501:2: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_INT_0, grammarAccess.getDIGITAccess().getINTTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, ruleDIGIT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDIGIT"


    // $ANTLR start "entryRuleKeyword"
    // InternalSiddhiParser.g:15511:1: entryRuleKeyword returns [EObject current=null] : iv_ruleKeyword= ruleKeyword EOF ;
    public final EObject entryRuleKeyword() throws RecognitionException {
        EObject current = null;
        int entryRuleKeyword_StartIndex = input.index();
        EObject iv_ruleKeyword = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return current; }
            // InternalSiddhiParser.g:15511:48: (iv_ruleKeyword= ruleKeyword EOF )
            // InternalSiddhiParser.g:15512:2: iv_ruleKeyword= ruleKeyword EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeywordRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyword=ruleKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyword; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, entryRuleKeyword_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyword"


    // $ANTLR start "ruleKeyword"
    // InternalSiddhiParser.g:15518:1: ruleKeyword returns [EObject current=null] : ( ( () this_STREAM_1= ruleSTREAM[$current] ) | ( () this_DEFINE_3= ruleDEFINE[$current] ) | ( () this_FROM_5= ruleFROM[$current] ) | ( () this_SELECT_7= ruleSELECT[$current] ) | ( () ( (lv_a_9_0= ruleAS ) ) ) | ( () this_INSERT_11= ruleINSERT[$current] ) | ( () this_INTO_13= ruleINTO[$current] ) | ( () this_ALL_15= ruleALL[$current] ) | ( () this_EVENTS_17= ruleEVENTS[$current] ) | ( () this_TABLE_19= ruleTABLE[$current] ) | ( () this_WINDOW_21= ruleWINDOW[$current] ) | ( () this_OUTPUT_23= ruleOUTPUT[$current] ) | ( () this_RAW_25= ruleRAW[$current] ) | ( () this_EXPIRED_27= ruleEXPIRED[$current] ) | ( () this_CURRENT_29= ruleCURRENT[$current] ) | ( () this_RETURN_31= ruleRETURN[$current] ) | ( () this_PARTITION_33= rulePARTITION[$current] ) | ( () ( (lv_every_35_0= ruleEVERY ) ) ) | ( () ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) ) ) | ( () ( (lv_on_39_0= ruleON ) ) ) | ( () this_WITHIN_41= ruleWITHIN[$current] ) | ( () this_LEFT_43= ruleLEFT[$current] ) | ( () this_RIGHT_45= ruleRIGHT[$current] ) | ( () this_FULL_47= ruleFULL[$current] ) | ( () this_JOIN_49= ruleJOIN[$current] ) | ( () this_OUTER_51= ruleOUTER[$current] ) | ( () this_INNER_53= ruleINNER[$current] ) | ( () this_YEARS_55= ruleYEARS[$current] ) | ( () this_MONTHS_57= ruleMONTHS[$current] ) | ( () this_WEEKS_59= ruleWEEKS[$current] ) | ( () this_DAYS_61= ruleDAYS[$current] ) | ( () this_HOURS_63= ruleHOURS[$current] ) | ( () this_MINUTES_65= ruleMINUTES[$current] ) | ( () this_SECONDS_67= ruleSECONDS[$current] ) | ( () this_MILLISECONDS_69= ruleMILLISECONDS[$current] ) | ( () this_STRINGS_71= ruleSTRINGS[$current] ) | ( () this_INTS_73= ruleINTS[$current] ) | ( () this_LONG_75= ruleLONG[$current] ) | ( () this_FLOAT_77= ruleFLOAT[$current] ) | ( () this_DOUBLE_79= ruleDOUBLE[$current] ) | ( () this_BOOL_81= ruleBOOL[$current] ) | ( () this_OBJECT_83= ruleOBJECT[$current] ) | ( () ( (lv_and_85_0= ruleAND ) ) ) | ( () ( (lv_or_87_0= ruleOR ) ) ) | ( () ( (lv_not_89_0= ruleNOT ) ) ) | ( () this_IS_91= ruleIS[$current] ) | ( () this_NULL_93= ruleNULL[$current] ) | ( () this_SNAPSHOT_95= ruleSNAPSHOT[$current] ) | ( () this_LAST_97= ruleLAST[$current] ) | ( () this_FIRST_99= ruleFIRST[$current] ) | ( () this_GROUP_101= ruleGROUP[$current] ) | ( () this_BY_103= ruleBY[$current] ) | ( () this_HAVING_105= ruleHAVING[$current] ) | ( () this_WITH_107= ruleWITH[$current] ) | ( () ( (lv_of_109_0= ruleOF ) ) ) | ( () this_BEGIN_111= ruleBEGIN[$current] ) | ( () this_END_113= ruleEND[$current] ) | ( () this_DELETE_115= ruleDELETE[$current] ) | ( () this_FOR_117= ruleFOR[$current] ) | ( () this_TRUE_119= ruleTRUE[$current] ) | ( () this_FALSE_121= ruleFALSE[$current] ) | ( () this_UPDATE_123= ruleUPDATE[$current] ) ) ;
    public final EObject ruleKeyword() throws RecognitionException {
        EObject current = null;
        int ruleKeyword_StartIndex = input.index();
        EObject this_STREAM_1 = null;

        EObject this_DEFINE_3 = null;

        EObject this_FROM_5 = null;

        EObject this_SELECT_7 = null;

        EObject lv_a_9_0 = null;

        EObject this_INSERT_11 = null;

        EObject this_INTO_13 = null;

        EObject this_ALL_15 = null;

        EObject this_EVENTS_17 = null;

        EObject this_TABLE_19 = null;

        EObject this_WINDOW_21 = null;

        EObject this_OUTPUT_23 = null;

        EObject this_RAW_25 = null;

        EObject this_EXPIRED_27 = null;

        EObject this_CURRENT_29 = null;

        EObject this_RETURN_31 = null;

        EObject this_PARTITION_33 = null;

        EObject lv_every_35_0 = null;

        EObject lv_uni_37_0 = null;

        EObject lv_on_39_0 = null;

        EObject this_WITHIN_41 = null;

        EObject this_LEFT_43 = null;

        EObject this_RIGHT_45 = null;

        EObject this_FULL_47 = null;

        EObject this_JOIN_49 = null;

        EObject this_OUTER_51 = null;

        EObject this_INNER_53 = null;

        EObject this_YEARS_55 = null;

        EObject this_MONTHS_57 = null;

        EObject this_WEEKS_59 = null;

        EObject this_DAYS_61 = null;

        EObject this_HOURS_63 = null;

        EObject this_MINUTES_65 = null;

        EObject this_SECONDS_67 = null;

        EObject this_MILLISECONDS_69 = null;

        EObject this_STRINGS_71 = null;

        EObject this_INTS_73 = null;

        EObject this_LONG_75 = null;

        EObject this_FLOAT_77 = null;

        EObject this_DOUBLE_79 = null;

        EObject this_BOOL_81 = null;

        EObject this_OBJECT_83 = null;

        EObject lv_and_85_0 = null;

        EObject lv_or_87_0 = null;

        EObject lv_not_89_0 = null;

        EObject this_IS_91 = null;

        EObject this_NULL_93 = null;

        EObject this_SNAPSHOT_95 = null;

        EObject this_LAST_97 = null;

        EObject this_FIRST_99 = null;

        EObject this_GROUP_101 = null;

        EObject this_BY_103 = null;

        EObject this_HAVING_105 = null;

        EObject this_WITH_107 = null;

        EObject lv_of_109_0 = null;

        EObject this_BEGIN_111 = null;

        EObject this_END_113 = null;

        EObject this_DELETE_115 = null;

        EObject this_FOR_117 = null;

        EObject this_TRUE_119 = null;

        EObject this_FALSE_121 = null;

        EObject this_UPDATE_123 = null;



        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return current; }
            // InternalSiddhiParser.g:15524:2: ( ( ( () this_STREAM_1= ruleSTREAM[$current] ) | ( () this_DEFINE_3= ruleDEFINE[$current] ) | ( () this_FROM_5= ruleFROM[$current] ) | ( () this_SELECT_7= ruleSELECT[$current] ) | ( () ( (lv_a_9_0= ruleAS ) ) ) | ( () this_INSERT_11= ruleINSERT[$current] ) | ( () this_INTO_13= ruleINTO[$current] ) | ( () this_ALL_15= ruleALL[$current] ) | ( () this_EVENTS_17= ruleEVENTS[$current] ) | ( () this_TABLE_19= ruleTABLE[$current] ) | ( () this_WINDOW_21= ruleWINDOW[$current] ) | ( () this_OUTPUT_23= ruleOUTPUT[$current] ) | ( () this_RAW_25= ruleRAW[$current] ) | ( () this_EXPIRED_27= ruleEXPIRED[$current] ) | ( () this_CURRENT_29= ruleCURRENT[$current] ) | ( () this_RETURN_31= ruleRETURN[$current] ) | ( () this_PARTITION_33= rulePARTITION[$current] ) | ( () ( (lv_every_35_0= ruleEVERY ) ) ) | ( () ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) ) ) | ( () ( (lv_on_39_0= ruleON ) ) ) | ( () this_WITHIN_41= ruleWITHIN[$current] ) | ( () this_LEFT_43= ruleLEFT[$current] ) | ( () this_RIGHT_45= ruleRIGHT[$current] ) | ( () this_FULL_47= ruleFULL[$current] ) | ( () this_JOIN_49= ruleJOIN[$current] ) | ( () this_OUTER_51= ruleOUTER[$current] ) | ( () this_INNER_53= ruleINNER[$current] ) | ( () this_YEARS_55= ruleYEARS[$current] ) | ( () this_MONTHS_57= ruleMONTHS[$current] ) | ( () this_WEEKS_59= ruleWEEKS[$current] ) | ( () this_DAYS_61= ruleDAYS[$current] ) | ( () this_HOURS_63= ruleHOURS[$current] ) | ( () this_MINUTES_65= ruleMINUTES[$current] ) | ( () this_SECONDS_67= ruleSECONDS[$current] ) | ( () this_MILLISECONDS_69= ruleMILLISECONDS[$current] ) | ( () this_STRINGS_71= ruleSTRINGS[$current] ) | ( () this_INTS_73= ruleINTS[$current] ) | ( () this_LONG_75= ruleLONG[$current] ) | ( () this_FLOAT_77= ruleFLOAT[$current] ) | ( () this_DOUBLE_79= ruleDOUBLE[$current] ) | ( () this_BOOL_81= ruleBOOL[$current] ) | ( () this_OBJECT_83= ruleOBJECT[$current] ) | ( () ( (lv_and_85_0= ruleAND ) ) ) | ( () ( (lv_or_87_0= ruleOR ) ) ) | ( () ( (lv_not_89_0= ruleNOT ) ) ) | ( () this_IS_91= ruleIS[$current] ) | ( () this_NULL_93= ruleNULL[$current] ) | ( () this_SNAPSHOT_95= ruleSNAPSHOT[$current] ) | ( () this_LAST_97= ruleLAST[$current] ) | ( () this_FIRST_99= ruleFIRST[$current] ) | ( () this_GROUP_101= ruleGROUP[$current] ) | ( () this_BY_103= ruleBY[$current] ) | ( () this_HAVING_105= ruleHAVING[$current] ) | ( () this_WITH_107= ruleWITH[$current] ) | ( () ( (lv_of_109_0= ruleOF ) ) ) | ( () this_BEGIN_111= ruleBEGIN[$current] ) | ( () this_END_113= ruleEND[$current] ) | ( () this_DELETE_115= ruleDELETE[$current] ) | ( () this_FOR_117= ruleFOR[$current] ) | ( () this_TRUE_119= ruleTRUE[$current] ) | ( () this_FALSE_121= ruleFALSE[$current] ) | ( () this_UPDATE_123= ruleUPDATE[$current] ) ) )
            // InternalSiddhiParser.g:15525:2: ( ( () this_STREAM_1= ruleSTREAM[$current] ) | ( () this_DEFINE_3= ruleDEFINE[$current] ) | ( () this_FROM_5= ruleFROM[$current] ) | ( () this_SELECT_7= ruleSELECT[$current] ) | ( () ( (lv_a_9_0= ruleAS ) ) ) | ( () this_INSERT_11= ruleINSERT[$current] ) | ( () this_INTO_13= ruleINTO[$current] ) | ( () this_ALL_15= ruleALL[$current] ) | ( () this_EVENTS_17= ruleEVENTS[$current] ) | ( () this_TABLE_19= ruleTABLE[$current] ) | ( () this_WINDOW_21= ruleWINDOW[$current] ) | ( () this_OUTPUT_23= ruleOUTPUT[$current] ) | ( () this_RAW_25= ruleRAW[$current] ) | ( () this_EXPIRED_27= ruleEXPIRED[$current] ) | ( () this_CURRENT_29= ruleCURRENT[$current] ) | ( () this_RETURN_31= ruleRETURN[$current] ) | ( () this_PARTITION_33= rulePARTITION[$current] ) | ( () ( (lv_every_35_0= ruleEVERY ) ) ) | ( () ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) ) ) | ( () ( (lv_on_39_0= ruleON ) ) ) | ( () this_WITHIN_41= ruleWITHIN[$current] ) | ( () this_LEFT_43= ruleLEFT[$current] ) | ( () this_RIGHT_45= ruleRIGHT[$current] ) | ( () this_FULL_47= ruleFULL[$current] ) | ( () this_JOIN_49= ruleJOIN[$current] ) | ( () this_OUTER_51= ruleOUTER[$current] ) | ( () this_INNER_53= ruleINNER[$current] ) | ( () this_YEARS_55= ruleYEARS[$current] ) | ( () this_MONTHS_57= ruleMONTHS[$current] ) | ( () this_WEEKS_59= ruleWEEKS[$current] ) | ( () this_DAYS_61= ruleDAYS[$current] ) | ( () this_HOURS_63= ruleHOURS[$current] ) | ( () this_MINUTES_65= ruleMINUTES[$current] ) | ( () this_SECONDS_67= ruleSECONDS[$current] ) | ( () this_MILLISECONDS_69= ruleMILLISECONDS[$current] ) | ( () this_STRINGS_71= ruleSTRINGS[$current] ) | ( () this_INTS_73= ruleINTS[$current] ) | ( () this_LONG_75= ruleLONG[$current] ) | ( () this_FLOAT_77= ruleFLOAT[$current] ) | ( () this_DOUBLE_79= ruleDOUBLE[$current] ) | ( () this_BOOL_81= ruleBOOL[$current] ) | ( () this_OBJECT_83= ruleOBJECT[$current] ) | ( () ( (lv_and_85_0= ruleAND ) ) ) | ( () ( (lv_or_87_0= ruleOR ) ) ) | ( () ( (lv_not_89_0= ruleNOT ) ) ) | ( () this_IS_91= ruleIS[$current] ) | ( () this_NULL_93= ruleNULL[$current] ) | ( () this_SNAPSHOT_95= ruleSNAPSHOT[$current] ) | ( () this_LAST_97= ruleLAST[$current] ) | ( () this_FIRST_99= ruleFIRST[$current] ) | ( () this_GROUP_101= ruleGROUP[$current] ) | ( () this_BY_103= ruleBY[$current] ) | ( () this_HAVING_105= ruleHAVING[$current] ) | ( () this_WITH_107= ruleWITH[$current] ) | ( () ( (lv_of_109_0= ruleOF ) ) ) | ( () this_BEGIN_111= ruleBEGIN[$current] ) | ( () this_END_113= ruleEND[$current] ) | ( () this_DELETE_115= ruleDELETE[$current] ) | ( () this_FOR_117= ruleFOR[$current] ) | ( () this_TRUE_119= ruleTRUE[$current] ) | ( () this_FALSE_121= ruleFALSE[$current] ) | ( () this_UPDATE_123= ruleUPDATE[$current] ) )
            {
            // InternalSiddhiParser.g:15525:2: ( ( () this_STREAM_1= ruleSTREAM[$current] ) | ( () this_DEFINE_3= ruleDEFINE[$current] ) | ( () this_FROM_5= ruleFROM[$current] ) | ( () this_SELECT_7= ruleSELECT[$current] ) | ( () ( (lv_a_9_0= ruleAS ) ) ) | ( () this_INSERT_11= ruleINSERT[$current] ) | ( () this_INTO_13= ruleINTO[$current] ) | ( () this_ALL_15= ruleALL[$current] ) | ( () this_EVENTS_17= ruleEVENTS[$current] ) | ( () this_TABLE_19= ruleTABLE[$current] ) | ( () this_WINDOW_21= ruleWINDOW[$current] ) | ( () this_OUTPUT_23= ruleOUTPUT[$current] ) | ( () this_RAW_25= ruleRAW[$current] ) | ( () this_EXPIRED_27= ruleEXPIRED[$current] ) | ( () this_CURRENT_29= ruleCURRENT[$current] ) | ( () this_RETURN_31= ruleRETURN[$current] ) | ( () this_PARTITION_33= rulePARTITION[$current] ) | ( () ( (lv_every_35_0= ruleEVERY ) ) ) | ( () ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) ) ) | ( () ( (lv_on_39_0= ruleON ) ) ) | ( () this_WITHIN_41= ruleWITHIN[$current] ) | ( () this_LEFT_43= ruleLEFT[$current] ) | ( () this_RIGHT_45= ruleRIGHT[$current] ) | ( () this_FULL_47= ruleFULL[$current] ) | ( () this_JOIN_49= ruleJOIN[$current] ) | ( () this_OUTER_51= ruleOUTER[$current] ) | ( () this_INNER_53= ruleINNER[$current] ) | ( () this_YEARS_55= ruleYEARS[$current] ) | ( () this_MONTHS_57= ruleMONTHS[$current] ) | ( () this_WEEKS_59= ruleWEEKS[$current] ) | ( () this_DAYS_61= ruleDAYS[$current] ) | ( () this_HOURS_63= ruleHOURS[$current] ) | ( () this_MINUTES_65= ruleMINUTES[$current] ) | ( () this_SECONDS_67= ruleSECONDS[$current] ) | ( () this_MILLISECONDS_69= ruleMILLISECONDS[$current] ) | ( () this_STRINGS_71= ruleSTRINGS[$current] ) | ( () this_INTS_73= ruleINTS[$current] ) | ( () this_LONG_75= ruleLONG[$current] ) | ( () this_FLOAT_77= ruleFLOAT[$current] ) | ( () this_DOUBLE_79= ruleDOUBLE[$current] ) | ( () this_BOOL_81= ruleBOOL[$current] ) | ( () this_OBJECT_83= ruleOBJECT[$current] ) | ( () ( (lv_and_85_0= ruleAND ) ) ) | ( () ( (lv_or_87_0= ruleOR ) ) ) | ( () ( (lv_not_89_0= ruleNOT ) ) ) | ( () this_IS_91= ruleIS[$current] ) | ( () this_NULL_93= ruleNULL[$current] ) | ( () this_SNAPSHOT_95= ruleSNAPSHOT[$current] ) | ( () this_LAST_97= ruleLAST[$current] ) | ( () this_FIRST_99= ruleFIRST[$current] ) | ( () this_GROUP_101= ruleGROUP[$current] ) | ( () this_BY_103= ruleBY[$current] ) | ( () this_HAVING_105= ruleHAVING[$current] ) | ( () this_WITH_107= ruleWITH[$current] ) | ( () ( (lv_of_109_0= ruleOF ) ) ) | ( () this_BEGIN_111= ruleBEGIN[$current] ) | ( () this_END_113= ruleEND[$current] ) | ( () this_DELETE_115= ruleDELETE[$current] ) | ( () this_FOR_117= ruleFOR[$current] ) | ( () this_TRUE_119= ruleTRUE[$current] ) | ( () this_FALSE_121= ruleFALSE[$current] ) | ( () this_UPDATE_123= ruleUPDATE[$current] ) )
            int alt234=62;
            switch ( input.LA(1) ) {
            case Stream:
                {
                alt234=1;
                }
                break;
            case Define:
                {
                alt234=2;
                }
                break;
            case From:
                {
                alt234=3;
                }
                break;
            case Select:
                {
                alt234=4;
                }
                break;
            case As:
                {
                alt234=5;
                }
                break;
            case Insert:
                {
                alt234=6;
                }
                break;
            case Into:
                {
                alt234=7;
                }
                break;
            case All:
                {
                alt234=8;
                }
                break;
            case Events:
                {
                alt234=9;
                }
                break;
            case Table:
                {
                alt234=10;
                }
                break;
            case Window:
                {
                alt234=11;
                }
                break;
            case Output:
                {
                alt234=12;
                }
                break;
            case Raw:
                {
                alt234=13;
                }
                break;
            case Expired:
                {
                alt234=14;
                }
                break;
            case Current:
                {
                alt234=15;
                }
                break;
            case Return:
                {
                alt234=16;
                }
                break;
            case Partition:
                {
                alt234=17;
                }
                break;
            case Every:
                {
                alt234=18;
                }
                break;
            case Unidirectional:
                {
                alt234=19;
                }
                break;
            case On:
                {
                alt234=20;
                }
                break;
            case Within:
                {
                alt234=21;
                }
                break;
            case Left:
                {
                alt234=22;
                }
                break;
            case Right:
                {
                alt234=23;
                }
                break;
            case Full:
                {
                alt234=24;
                }
                break;
            case Join:
                {
                alt234=25;
                }
                break;
            case Outer:
                {
                alt234=26;
                }
                break;
            case Inner:
                {
                alt234=27;
                }
                break;
            case Years:
            case Year:
                {
                alt234=28;
                }
                break;
            case Months:
            case Month:
                {
                alt234=29;
                }
                break;
            case Weeks:
            case Week:
                {
                alt234=30;
                }
                break;
            case Days:
            case Day:
                {
                alt234=31;
                }
                break;
            case Hours:
            case Hour:
                {
                alt234=32;
                }
                break;
            case Minutes:
            case Minute:
            case Min:
                {
                alt234=33;
                }
                break;
            case Seconds:
            case Second:
            case Sec:
                {
                alt234=34;
                }
                break;
            case Milliseconds:
            case Millisecond:
            case Millisec:
                {
                alt234=35;
                }
                break;
            case String:
                {
                alt234=36;
                }
                break;
            case Int:
                {
                alt234=37;
                }
                break;
            case Long:
                {
                alt234=38;
                }
                break;
            case Float:
                {
                alt234=39;
                }
                break;
            case Double:
                {
                alt234=40;
                }
                break;
            case Bool:
                {
                alt234=41;
                }
                break;
            case Object:
                {
                alt234=42;
                }
                break;
            case And:
                {
                alt234=43;
                }
                break;
            case Or:
                {
                alt234=44;
                }
                break;
            case Not:
                {
                alt234=45;
                }
                break;
            case Is:
                {
                alt234=46;
                }
                break;
            case Null:
                {
                alt234=47;
                }
                break;
            case Snapshot:
                {
                alt234=48;
                }
                break;
            case Last:
                {
                alt234=49;
                }
                break;
            case First:
                {
                alt234=50;
                }
                break;
            case Group:
                {
                alt234=51;
                }
                break;
            case By:
                {
                alt234=52;
                }
                break;
            case Having:
                {
                alt234=53;
                }
                break;
            case With:
                {
                alt234=54;
                }
                break;
            case Of:
                {
                alt234=55;
                }
                break;
            case Begin:
                {
                alt234=56;
                }
                break;
            case End:
                {
                alt234=57;
                }
                break;
            case Delete:
                {
                alt234=58;
                }
                break;
            case For:
                {
                alt234=59;
                }
                break;
            case True:
                {
                alt234=60;
                }
                break;
            case False:
                {
                alt234=61;
                }
                break;
            case Update:
                {
                alt234=62;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }

            switch (alt234) {
                case 1 :
                    // InternalSiddhiParser.g:15526:3: ( () this_STREAM_1= ruleSTREAM[$current] )
                    {
                    // InternalSiddhiParser.g:15526:3: ( () this_STREAM_1= ruleSTREAM[$current] )
                    // InternalSiddhiParser.g:15527:4: () this_STREAM_1= ruleSTREAM[$current]
                    {
                    // InternalSiddhiParser.g:15527:4: ()
                    // InternalSiddhiParser.g:15528:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getSTREAMParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_STREAM_1=ruleSTREAM(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_STREAM_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:15547:3: ( () this_DEFINE_3= ruleDEFINE[$current] )
                    {
                    // InternalSiddhiParser.g:15547:3: ( () this_DEFINE_3= ruleDEFINE[$current] )
                    // InternalSiddhiParser.g:15548:4: () this_DEFINE_3= ruleDEFINE[$current]
                    {
                    // InternalSiddhiParser.g:15548:4: ()
                    // InternalSiddhiParser.g:15549:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getDEFINEParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DEFINE_3=ruleDEFINE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DEFINE_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:15568:3: ( () this_FROM_5= ruleFROM[$current] )
                    {
                    // InternalSiddhiParser.g:15568:3: ( () this_FROM_5= ruleFROM[$current] )
                    // InternalSiddhiParser.g:15569:4: () this_FROM_5= ruleFROM[$current]
                    {
                    // InternalSiddhiParser.g:15569:4: ()
                    // InternalSiddhiParser.g:15570:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_2_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getFROMParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FROM_5=ruleFROM(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FROM_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSiddhiParser.g:15589:3: ( () this_SELECT_7= ruleSELECT[$current] )
                    {
                    // InternalSiddhiParser.g:15589:3: ( () this_SELECT_7= ruleSELECT[$current] )
                    // InternalSiddhiParser.g:15590:4: () this_SELECT_7= ruleSELECT[$current]
                    {
                    // InternalSiddhiParser.g:15590:4: ()
                    // InternalSiddhiParser.g:15591:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_3_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getSELECTParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SELECT_7=ruleSELECT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SELECT_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSiddhiParser.g:15610:3: ( () ( (lv_a_9_0= ruleAS ) ) )
                    {
                    // InternalSiddhiParser.g:15610:3: ( () ( (lv_a_9_0= ruleAS ) ) )
                    // InternalSiddhiParser.g:15611:4: () ( (lv_a_9_0= ruleAS ) )
                    {
                    // InternalSiddhiParser.g:15611:4: ()
                    // InternalSiddhiParser.g:15612:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:15618:4: ( (lv_a_9_0= ruleAS ) )
                    // InternalSiddhiParser.g:15619:5: (lv_a_9_0= ruleAS )
                    {
                    // InternalSiddhiParser.g:15619:5: (lv_a_9_0= ruleAS )
                    // InternalSiddhiParser.g:15620:6: lv_a_9_0= ruleAS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getAASParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_a_9_0=ruleAS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"a",
                      							lv_a_9_0,
                      							"org.xtext.example.siddhi.Siddhi.AS");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSiddhiParser.g:15639:3: ( () this_INSERT_11= ruleINSERT[$current] )
                    {
                    // InternalSiddhiParser.g:15639:3: ( () this_INSERT_11= ruleINSERT[$current] )
                    // InternalSiddhiParser.g:15640:4: () this_INSERT_11= ruleINSERT[$current]
                    {
                    // InternalSiddhiParser.g:15640:4: ()
                    // InternalSiddhiParser.g:15641:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_5_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getINSERTParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_INSERT_11=ruleINSERT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INSERT_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSiddhiParser.g:15660:3: ( () this_INTO_13= ruleINTO[$current] )
                    {
                    // InternalSiddhiParser.g:15660:3: ( () this_INTO_13= ruleINTO[$current] )
                    // InternalSiddhiParser.g:15661:4: () this_INTO_13= ruleINTO[$current]
                    {
                    // InternalSiddhiParser.g:15661:4: ()
                    // InternalSiddhiParser.g:15662:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_6_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getINTOParserRuleCall_6_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_INTO_13=ruleINTO(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INTO_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSiddhiParser.g:15681:3: ( () this_ALL_15= ruleALL[$current] )
                    {
                    // InternalSiddhiParser.g:15681:3: ( () this_ALL_15= ruleALL[$current] )
                    // InternalSiddhiParser.g:15682:4: () this_ALL_15= ruleALL[$current]
                    {
                    // InternalSiddhiParser.g:15682:4: ()
                    // InternalSiddhiParser.g:15683:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_7_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getALLParserRuleCall_7_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ALL_15=ruleALL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ALL_15;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSiddhiParser.g:15702:3: ( () this_EVENTS_17= ruleEVENTS[$current] )
                    {
                    // InternalSiddhiParser.g:15702:3: ( () this_EVENTS_17= ruleEVENTS[$current] )
                    // InternalSiddhiParser.g:15703:4: () this_EVENTS_17= ruleEVENTS[$current]
                    {
                    // InternalSiddhiParser.g:15703:4: ()
                    // InternalSiddhiParser.g:15704:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_8_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getEVENTSParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EVENTS_17=ruleEVENTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EVENTS_17;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSiddhiParser.g:15723:3: ( () this_TABLE_19= ruleTABLE[$current] )
                    {
                    // InternalSiddhiParser.g:15723:3: ( () this_TABLE_19= ruleTABLE[$current] )
                    // InternalSiddhiParser.g:15724:4: () this_TABLE_19= ruleTABLE[$current]
                    {
                    // InternalSiddhiParser.g:15724:4: ()
                    // InternalSiddhiParser.g:15725:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_9_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getTABLEParserRuleCall_9_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TABLE_19=ruleTABLE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TABLE_19;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSiddhiParser.g:15744:3: ( () this_WINDOW_21= ruleWINDOW[$current] )
                    {
                    // InternalSiddhiParser.g:15744:3: ( () this_WINDOW_21= ruleWINDOW[$current] )
                    // InternalSiddhiParser.g:15745:4: () this_WINDOW_21= ruleWINDOW[$current]
                    {
                    // InternalSiddhiParser.g:15745:4: ()
                    // InternalSiddhiParser.g:15746:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_10_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getWINDOWParserRuleCall_10_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WINDOW_21=ruleWINDOW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_WINDOW_21;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSiddhiParser.g:15765:3: ( () this_OUTPUT_23= ruleOUTPUT[$current] )
                    {
                    // InternalSiddhiParser.g:15765:3: ( () this_OUTPUT_23= ruleOUTPUT[$current] )
                    // InternalSiddhiParser.g:15766:4: () this_OUTPUT_23= ruleOUTPUT[$current]
                    {
                    // InternalSiddhiParser.g:15766:4: ()
                    // InternalSiddhiParser.g:15767:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_11_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getOUTPUTParserRuleCall_11_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OUTPUT_23=ruleOUTPUT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTPUT_23;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSiddhiParser.g:15786:3: ( () this_RAW_25= ruleRAW[$current] )
                    {
                    // InternalSiddhiParser.g:15786:3: ( () this_RAW_25= ruleRAW[$current] )
                    // InternalSiddhiParser.g:15787:4: () this_RAW_25= ruleRAW[$current]
                    {
                    // InternalSiddhiParser.g:15787:4: ()
                    // InternalSiddhiParser.g:15788:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_12_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getRAWParserRuleCall_12_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RAW_25=ruleRAW(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RAW_25;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSiddhiParser.g:15807:3: ( () this_EXPIRED_27= ruleEXPIRED[$current] )
                    {
                    // InternalSiddhiParser.g:15807:3: ( () this_EXPIRED_27= ruleEXPIRED[$current] )
                    // InternalSiddhiParser.g:15808:4: () this_EXPIRED_27= ruleEXPIRED[$current]
                    {
                    // InternalSiddhiParser.g:15808:4: ()
                    // InternalSiddhiParser.g:15809:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_13_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getEXPIREDParserRuleCall_13_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EXPIRED_27=ruleEXPIRED(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EXPIRED_27;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSiddhiParser.g:15828:3: ( () this_CURRENT_29= ruleCURRENT[$current] )
                    {
                    // InternalSiddhiParser.g:15828:3: ( () this_CURRENT_29= ruleCURRENT[$current] )
                    // InternalSiddhiParser.g:15829:4: () this_CURRENT_29= ruleCURRENT[$current]
                    {
                    // InternalSiddhiParser.g:15829:4: ()
                    // InternalSiddhiParser.g:15830:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_14_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getCURRENTParserRuleCall_14_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CURRENT_29=ruleCURRENT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_CURRENT_29;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSiddhiParser.g:15849:3: ( () this_RETURN_31= ruleRETURN[$current] )
                    {
                    // InternalSiddhiParser.g:15849:3: ( () this_RETURN_31= ruleRETURN[$current] )
                    // InternalSiddhiParser.g:15850:4: () this_RETURN_31= ruleRETURN[$current]
                    {
                    // InternalSiddhiParser.g:15850:4: ()
                    // InternalSiddhiParser.g:15851:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_15_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getRETURNParserRuleCall_15_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RETURN_31=ruleRETURN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RETURN_31;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSiddhiParser.g:15870:3: ( () this_PARTITION_33= rulePARTITION[$current] )
                    {
                    // InternalSiddhiParser.g:15870:3: ( () this_PARTITION_33= rulePARTITION[$current] )
                    // InternalSiddhiParser.g:15871:4: () this_PARTITION_33= rulePARTITION[$current]
                    {
                    // InternalSiddhiParser.g:15871:4: ()
                    // InternalSiddhiParser.g:15872:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_16_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getPARTITIONParserRuleCall_16_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PARTITION_33=rulePARTITION(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PARTITION_33;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSiddhiParser.g:15891:3: ( () ( (lv_every_35_0= ruleEVERY ) ) )
                    {
                    // InternalSiddhiParser.g:15891:3: ( () ( (lv_every_35_0= ruleEVERY ) ) )
                    // InternalSiddhiParser.g:15892:4: () ( (lv_every_35_0= ruleEVERY ) )
                    {
                    // InternalSiddhiParser.g:15892:4: ()
                    // InternalSiddhiParser.g:15893:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_17_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:15899:4: ( (lv_every_35_0= ruleEVERY ) )
                    // InternalSiddhiParser.g:15900:5: (lv_every_35_0= ruleEVERY )
                    {
                    // InternalSiddhiParser.g:15900:5: (lv_every_35_0= ruleEVERY )
                    // InternalSiddhiParser.g:15901:6: lv_every_35_0= ruleEVERY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getEveryEVERYParserRuleCall_17_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_every_35_0=ruleEVERY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"every",
                      							lv_every_35_0,
                      							"org.xtext.example.siddhi.Siddhi.EVERY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 19 :
                    // InternalSiddhiParser.g:15920:3: ( () ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) ) )
                    {
                    // InternalSiddhiParser.g:15920:3: ( () ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) ) )
                    // InternalSiddhiParser.g:15921:4: () ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) )
                    {
                    // InternalSiddhiParser.g:15921:4: ()
                    // InternalSiddhiParser.g:15922:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_18_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:15928:4: ( (lv_uni_37_0= ruleUNIDIRECTIONAL ) )
                    // InternalSiddhiParser.g:15929:5: (lv_uni_37_0= ruleUNIDIRECTIONAL )
                    {
                    // InternalSiddhiParser.g:15929:5: (lv_uni_37_0= ruleUNIDIRECTIONAL )
                    // InternalSiddhiParser.g:15930:6: lv_uni_37_0= ruleUNIDIRECTIONAL
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getUniUNIDIRECTIONALParserRuleCall_18_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_uni_37_0=ruleUNIDIRECTIONAL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"uni",
                      							lv_uni_37_0,
                      							"org.xtext.example.siddhi.Siddhi.UNIDIRECTIONAL");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 20 :
                    // InternalSiddhiParser.g:15949:3: ( () ( (lv_on_39_0= ruleON ) ) )
                    {
                    // InternalSiddhiParser.g:15949:3: ( () ( (lv_on_39_0= ruleON ) ) )
                    // InternalSiddhiParser.g:15950:4: () ( (lv_on_39_0= ruleON ) )
                    {
                    // InternalSiddhiParser.g:15950:4: ()
                    // InternalSiddhiParser.g:15951:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_19_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:15957:4: ( (lv_on_39_0= ruleON ) )
                    // InternalSiddhiParser.g:15958:5: (lv_on_39_0= ruleON )
                    {
                    // InternalSiddhiParser.g:15958:5: (lv_on_39_0= ruleON )
                    // InternalSiddhiParser.g:15959:6: lv_on_39_0= ruleON
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getOnONParserRuleCall_19_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_on_39_0=ruleON();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"on",
                      							lv_on_39_0,
                      							"org.xtext.example.siddhi.Siddhi.ON");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 21 :
                    // InternalSiddhiParser.g:15978:3: ( () this_WITHIN_41= ruleWITHIN[$current] )
                    {
                    // InternalSiddhiParser.g:15978:3: ( () this_WITHIN_41= ruleWITHIN[$current] )
                    // InternalSiddhiParser.g:15979:4: () this_WITHIN_41= ruleWITHIN[$current]
                    {
                    // InternalSiddhiParser.g:15979:4: ()
                    // InternalSiddhiParser.g:15980:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_20_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getWITHINParserRuleCall_20_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WITHIN_41=ruleWITHIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_WITHIN_41;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalSiddhiParser.g:15999:3: ( () this_LEFT_43= ruleLEFT[$current] )
                    {
                    // InternalSiddhiParser.g:15999:3: ( () this_LEFT_43= ruleLEFT[$current] )
                    // InternalSiddhiParser.g:16000:4: () this_LEFT_43= ruleLEFT[$current]
                    {
                    // InternalSiddhiParser.g:16000:4: ()
                    // InternalSiddhiParser.g:16001:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_21_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getLEFTParserRuleCall_21_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LEFT_43=ruleLEFT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LEFT_43;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalSiddhiParser.g:16020:3: ( () this_RIGHT_45= ruleRIGHT[$current] )
                    {
                    // InternalSiddhiParser.g:16020:3: ( () this_RIGHT_45= ruleRIGHT[$current] )
                    // InternalSiddhiParser.g:16021:4: () this_RIGHT_45= ruleRIGHT[$current]
                    {
                    // InternalSiddhiParser.g:16021:4: ()
                    // InternalSiddhiParser.g:16022:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_22_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getRIGHTParserRuleCall_22_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RIGHT_45=ruleRIGHT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RIGHT_45;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalSiddhiParser.g:16041:3: ( () this_FULL_47= ruleFULL[$current] )
                    {
                    // InternalSiddhiParser.g:16041:3: ( () this_FULL_47= ruleFULL[$current] )
                    // InternalSiddhiParser.g:16042:4: () this_FULL_47= ruleFULL[$current]
                    {
                    // InternalSiddhiParser.g:16042:4: ()
                    // InternalSiddhiParser.g:16043:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_23_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getFULLParserRuleCall_23_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FULL_47=ruleFULL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FULL_47;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalSiddhiParser.g:16062:3: ( () this_JOIN_49= ruleJOIN[$current] )
                    {
                    // InternalSiddhiParser.g:16062:3: ( () this_JOIN_49= ruleJOIN[$current] )
                    // InternalSiddhiParser.g:16063:4: () this_JOIN_49= ruleJOIN[$current]
                    {
                    // InternalSiddhiParser.g:16063:4: ()
                    // InternalSiddhiParser.g:16064:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_24_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getJOINParserRuleCall_24_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JOIN_49=ruleJOIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JOIN_49;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalSiddhiParser.g:16083:3: ( () this_OUTER_51= ruleOUTER[$current] )
                    {
                    // InternalSiddhiParser.g:16083:3: ( () this_OUTER_51= ruleOUTER[$current] )
                    // InternalSiddhiParser.g:16084:4: () this_OUTER_51= ruleOUTER[$current]
                    {
                    // InternalSiddhiParser.g:16084:4: ()
                    // InternalSiddhiParser.g:16085:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_25_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getOUTERParserRuleCall_25_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OUTER_51=ruleOUTER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OUTER_51;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalSiddhiParser.g:16104:3: ( () this_INNER_53= ruleINNER[$current] )
                    {
                    // InternalSiddhiParser.g:16104:3: ( () this_INNER_53= ruleINNER[$current] )
                    // InternalSiddhiParser.g:16105:4: () this_INNER_53= ruleINNER[$current]
                    {
                    // InternalSiddhiParser.g:16105:4: ()
                    // InternalSiddhiParser.g:16106:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_26_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getINNERParserRuleCall_26_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_INNER_53=ruleINNER(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INNER_53;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 28 :
                    // InternalSiddhiParser.g:16125:3: ( () this_YEARS_55= ruleYEARS[$current] )
                    {
                    // InternalSiddhiParser.g:16125:3: ( () this_YEARS_55= ruleYEARS[$current] )
                    // InternalSiddhiParser.g:16126:4: () this_YEARS_55= ruleYEARS[$current]
                    {
                    // InternalSiddhiParser.g:16126:4: ()
                    // InternalSiddhiParser.g:16127:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_27_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getYEARSParserRuleCall_27_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_YEARS_55=ruleYEARS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_YEARS_55;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 29 :
                    // InternalSiddhiParser.g:16146:3: ( () this_MONTHS_57= ruleMONTHS[$current] )
                    {
                    // InternalSiddhiParser.g:16146:3: ( () this_MONTHS_57= ruleMONTHS[$current] )
                    // InternalSiddhiParser.g:16147:4: () this_MONTHS_57= ruleMONTHS[$current]
                    {
                    // InternalSiddhiParser.g:16147:4: ()
                    // InternalSiddhiParser.g:16148:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_28_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getMONTHSParserRuleCall_28_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MONTHS_57=ruleMONTHS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MONTHS_57;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 30 :
                    // InternalSiddhiParser.g:16167:3: ( () this_WEEKS_59= ruleWEEKS[$current] )
                    {
                    // InternalSiddhiParser.g:16167:3: ( () this_WEEKS_59= ruleWEEKS[$current] )
                    // InternalSiddhiParser.g:16168:4: () this_WEEKS_59= ruleWEEKS[$current]
                    {
                    // InternalSiddhiParser.g:16168:4: ()
                    // InternalSiddhiParser.g:16169:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_29_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getWEEKSParserRuleCall_29_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WEEKS_59=ruleWEEKS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_WEEKS_59;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 31 :
                    // InternalSiddhiParser.g:16188:3: ( () this_DAYS_61= ruleDAYS[$current] )
                    {
                    // InternalSiddhiParser.g:16188:3: ( () this_DAYS_61= ruleDAYS[$current] )
                    // InternalSiddhiParser.g:16189:4: () this_DAYS_61= ruleDAYS[$current]
                    {
                    // InternalSiddhiParser.g:16189:4: ()
                    // InternalSiddhiParser.g:16190:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_30_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getDAYSParserRuleCall_30_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DAYS_61=ruleDAYS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DAYS_61;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 32 :
                    // InternalSiddhiParser.g:16209:3: ( () this_HOURS_63= ruleHOURS[$current] )
                    {
                    // InternalSiddhiParser.g:16209:3: ( () this_HOURS_63= ruleHOURS[$current] )
                    // InternalSiddhiParser.g:16210:4: () this_HOURS_63= ruleHOURS[$current]
                    {
                    // InternalSiddhiParser.g:16210:4: ()
                    // InternalSiddhiParser.g:16211:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_31_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getHOURSParserRuleCall_31_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HOURS_63=ruleHOURS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_HOURS_63;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 33 :
                    // InternalSiddhiParser.g:16230:3: ( () this_MINUTES_65= ruleMINUTES[$current] )
                    {
                    // InternalSiddhiParser.g:16230:3: ( () this_MINUTES_65= ruleMINUTES[$current] )
                    // InternalSiddhiParser.g:16231:4: () this_MINUTES_65= ruleMINUTES[$current]
                    {
                    // InternalSiddhiParser.g:16231:4: ()
                    // InternalSiddhiParser.g:16232:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_32_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getMINUTESParserRuleCall_32_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MINUTES_65=ruleMINUTES(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MINUTES_65;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 34 :
                    // InternalSiddhiParser.g:16251:3: ( () this_SECONDS_67= ruleSECONDS[$current] )
                    {
                    // InternalSiddhiParser.g:16251:3: ( () this_SECONDS_67= ruleSECONDS[$current] )
                    // InternalSiddhiParser.g:16252:4: () this_SECONDS_67= ruleSECONDS[$current]
                    {
                    // InternalSiddhiParser.g:16252:4: ()
                    // InternalSiddhiParser.g:16253:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_33_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getSECONDSParserRuleCall_33_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SECONDS_67=ruleSECONDS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SECONDS_67;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 35 :
                    // InternalSiddhiParser.g:16272:3: ( () this_MILLISECONDS_69= ruleMILLISECONDS[$current] )
                    {
                    // InternalSiddhiParser.g:16272:3: ( () this_MILLISECONDS_69= ruleMILLISECONDS[$current] )
                    // InternalSiddhiParser.g:16273:4: () this_MILLISECONDS_69= ruleMILLISECONDS[$current]
                    {
                    // InternalSiddhiParser.g:16273:4: ()
                    // InternalSiddhiParser.g:16274:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_34_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getMILLISECONDSParserRuleCall_34_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MILLISECONDS_69=ruleMILLISECONDS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MILLISECONDS_69;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 36 :
                    // InternalSiddhiParser.g:16293:3: ( () this_STRINGS_71= ruleSTRINGS[$current] )
                    {
                    // InternalSiddhiParser.g:16293:3: ( () this_STRINGS_71= ruleSTRINGS[$current] )
                    // InternalSiddhiParser.g:16294:4: () this_STRINGS_71= ruleSTRINGS[$current]
                    {
                    // InternalSiddhiParser.g:16294:4: ()
                    // InternalSiddhiParser.g:16295:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_35_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getSTRINGSParserRuleCall_35_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_STRINGS_71=ruleSTRINGS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_STRINGS_71;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 37 :
                    // InternalSiddhiParser.g:16314:3: ( () this_INTS_73= ruleINTS[$current] )
                    {
                    // InternalSiddhiParser.g:16314:3: ( () this_INTS_73= ruleINTS[$current] )
                    // InternalSiddhiParser.g:16315:4: () this_INTS_73= ruleINTS[$current]
                    {
                    // InternalSiddhiParser.g:16315:4: ()
                    // InternalSiddhiParser.g:16316:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_36_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getINTSParserRuleCall_36_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_INTS_73=ruleINTS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_INTS_73;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 38 :
                    // InternalSiddhiParser.g:16335:3: ( () this_LONG_75= ruleLONG[$current] )
                    {
                    // InternalSiddhiParser.g:16335:3: ( () this_LONG_75= ruleLONG[$current] )
                    // InternalSiddhiParser.g:16336:4: () this_LONG_75= ruleLONG[$current]
                    {
                    // InternalSiddhiParser.g:16336:4: ()
                    // InternalSiddhiParser.g:16337:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_37_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getLONGParserRuleCall_37_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LONG_75=ruleLONG(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LONG_75;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 39 :
                    // InternalSiddhiParser.g:16356:3: ( () this_FLOAT_77= ruleFLOAT[$current] )
                    {
                    // InternalSiddhiParser.g:16356:3: ( () this_FLOAT_77= ruleFLOAT[$current] )
                    // InternalSiddhiParser.g:16357:4: () this_FLOAT_77= ruleFLOAT[$current]
                    {
                    // InternalSiddhiParser.g:16357:4: ()
                    // InternalSiddhiParser.g:16358:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_38_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getFLOATParserRuleCall_38_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FLOAT_77=ruleFLOAT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FLOAT_77;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 40 :
                    // InternalSiddhiParser.g:16377:3: ( () this_DOUBLE_79= ruleDOUBLE[$current] )
                    {
                    // InternalSiddhiParser.g:16377:3: ( () this_DOUBLE_79= ruleDOUBLE[$current] )
                    // InternalSiddhiParser.g:16378:4: () this_DOUBLE_79= ruleDOUBLE[$current]
                    {
                    // InternalSiddhiParser.g:16378:4: ()
                    // InternalSiddhiParser.g:16379:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_39_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getDOUBLEParserRuleCall_39_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DOUBLE_79=ruleDOUBLE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DOUBLE_79;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 41 :
                    // InternalSiddhiParser.g:16398:3: ( () this_BOOL_81= ruleBOOL[$current] )
                    {
                    // InternalSiddhiParser.g:16398:3: ( () this_BOOL_81= ruleBOOL[$current] )
                    // InternalSiddhiParser.g:16399:4: () this_BOOL_81= ruleBOOL[$current]
                    {
                    // InternalSiddhiParser.g:16399:4: ()
                    // InternalSiddhiParser.g:16400:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_40_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getBOOLParserRuleCall_40_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BOOL_81=ruleBOOL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BOOL_81;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 42 :
                    // InternalSiddhiParser.g:16419:3: ( () this_OBJECT_83= ruleOBJECT[$current] )
                    {
                    // InternalSiddhiParser.g:16419:3: ( () this_OBJECT_83= ruleOBJECT[$current] )
                    // InternalSiddhiParser.g:16420:4: () this_OBJECT_83= ruleOBJECT[$current]
                    {
                    // InternalSiddhiParser.g:16420:4: ()
                    // InternalSiddhiParser.g:16421:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_41_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getOBJECTParserRuleCall_41_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OBJECT_83=ruleOBJECT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OBJECT_83;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 43 :
                    // InternalSiddhiParser.g:16440:3: ( () ( (lv_and_85_0= ruleAND ) ) )
                    {
                    // InternalSiddhiParser.g:16440:3: ( () ( (lv_and_85_0= ruleAND ) ) )
                    // InternalSiddhiParser.g:16441:4: () ( (lv_and_85_0= ruleAND ) )
                    {
                    // InternalSiddhiParser.g:16441:4: ()
                    // InternalSiddhiParser.g:16442:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_42_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:16448:4: ( (lv_and_85_0= ruleAND ) )
                    // InternalSiddhiParser.g:16449:5: (lv_and_85_0= ruleAND )
                    {
                    // InternalSiddhiParser.g:16449:5: (lv_and_85_0= ruleAND )
                    // InternalSiddhiParser.g:16450:6: lv_and_85_0= ruleAND
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getAndANDParserRuleCall_42_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_and_85_0=ruleAND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"and",
                      							lv_and_85_0,
                      							"org.xtext.example.siddhi.Siddhi.AND");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 44 :
                    // InternalSiddhiParser.g:16469:3: ( () ( (lv_or_87_0= ruleOR ) ) )
                    {
                    // InternalSiddhiParser.g:16469:3: ( () ( (lv_or_87_0= ruleOR ) ) )
                    // InternalSiddhiParser.g:16470:4: () ( (lv_or_87_0= ruleOR ) )
                    {
                    // InternalSiddhiParser.g:16470:4: ()
                    // InternalSiddhiParser.g:16471:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_43_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:16477:4: ( (lv_or_87_0= ruleOR ) )
                    // InternalSiddhiParser.g:16478:5: (lv_or_87_0= ruleOR )
                    {
                    // InternalSiddhiParser.g:16478:5: (lv_or_87_0= ruleOR )
                    // InternalSiddhiParser.g:16479:6: lv_or_87_0= ruleOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getOrORParserRuleCall_43_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_or_87_0=ruleOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"or",
                      							lv_or_87_0,
                      							"org.xtext.example.siddhi.Siddhi.OR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 45 :
                    // InternalSiddhiParser.g:16498:3: ( () ( (lv_not_89_0= ruleNOT ) ) )
                    {
                    // InternalSiddhiParser.g:16498:3: ( () ( (lv_not_89_0= ruleNOT ) ) )
                    // InternalSiddhiParser.g:16499:4: () ( (lv_not_89_0= ruleNOT ) )
                    {
                    // InternalSiddhiParser.g:16499:4: ()
                    // InternalSiddhiParser.g:16500:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_44_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:16506:4: ( (lv_not_89_0= ruleNOT ) )
                    // InternalSiddhiParser.g:16507:5: (lv_not_89_0= ruleNOT )
                    {
                    // InternalSiddhiParser.g:16507:5: (lv_not_89_0= ruleNOT )
                    // InternalSiddhiParser.g:16508:6: lv_not_89_0= ruleNOT
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getNotNOTParserRuleCall_44_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_not_89_0=ruleNOT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"not",
                      							lv_not_89_0,
                      							"org.xtext.example.siddhi.Siddhi.NOT");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 46 :
                    // InternalSiddhiParser.g:16527:3: ( () this_IS_91= ruleIS[$current] )
                    {
                    // InternalSiddhiParser.g:16527:3: ( () this_IS_91= ruleIS[$current] )
                    // InternalSiddhiParser.g:16528:4: () this_IS_91= ruleIS[$current]
                    {
                    // InternalSiddhiParser.g:16528:4: ()
                    // InternalSiddhiParser.g:16529:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_45_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getISParserRuleCall_45_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IS_91=ruleIS(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_IS_91;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 47 :
                    // InternalSiddhiParser.g:16548:3: ( () this_NULL_93= ruleNULL[$current] )
                    {
                    // InternalSiddhiParser.g:16548:3: ( () this_NULL_93= ruleNULL[$current] )
                    // InternalSiddhiParser.g:16549:4: () this_NULL_93= ruleNULL[$current]
                    {
                    // InternalSiddhiParser.g:16549:4: ()
                    // InternalSiddhiParser.g:16550:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_46_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getNULLParserRuleCall_46_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NULL_93=ruleNULL(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_NULL_93;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 48 :
                    // InternalSiddhiParser.g:16569:3: ( () this_SNAPSHOT_95= ruleSNAPSHOT[$current] )
                    {
                    // InternalSiddhiParser.g:16569:3: ( () this_SNAPSHOT_95= ruleSNAPSHOT[$current] )
                    // InternalSiddhiParser.g:16570:4: () this_SNAPSHOT_95= ruleSNAPSHOT[$current]
                    {
                    // InternalSiddhiParser.g:16570:4: ()
                    // InternalSiddhiParser.g:16571:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_47_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getSNAPSHOTParserRuleCall_47_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SNAPSHOT_95=ruleSNAPSHOT(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SNAPSHOT_95;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 49 :
                    // InternalSiddhiParser.g:16590:3: ( () this_LAST_97= ruleLAST[$current] )
                    {
                    // InternalSiddhiParser.g:16590:3: ( () this_LAST_97= ruleLAST[$current] )
                    // InternalSiddhiParser.g:16591:4: () this_LAST_97= ruleLAST[$current]
                    {
                    // InternalSiddhiParser.g:16591:4: ()
                    // InternalSiddhiParser.g:16592:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_48_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getLASTParserRuleCall_48_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LAST_97=ruleLAST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LAST_97;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 50 :
                    // InternalSiddhiParser.g:16611:3: ( () this_FIRST_99= ruleFIRST[$current] )
                    {
                    // InternalSiddhiParser.g:16611:3: ( () this_FIRST_99= ruleFIRST[$current] )
                    // InternalSiddhiParser.g:16612:4: () this_FIRST_99= ruleFIRST[$current]
                    {
                    // InternalSiddhiParser.g:16612:4: ()
                    // InternalSiddhiParser.g:16613:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_49_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getFIRSTParserRuleCall_49_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FIRST_99=ruleFIRST(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FIRST_99;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 51 :
                    // InternalSiddhiParser.g:16632:3: ( () this_GROUP_101= ruleGROUP[$current] )
                    {
                    // InternalSiddhiParser.g:16632:3: ( () this_GROUP_101= ruleGROUP[$current] )
                    // InternalSiddhiParser.g:16633:4: () this_GROUP_101= ruleGROUP[$current]
                    {
                    // InternalSiddhiParser.g:16633:4: ()
                    // InternalSiddhiParser.g:16634:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_50_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getGROUPParserRuleCall_50_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_GROUP_101=ruleGROUP(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_GROUP_101;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 52 :
                    // InternalSiddhiParser.g:16653:3: ( () this_BY_103= ruleBY[$current] )
                    {
                    // InternalSiddhiParser.g:16653:3: ( () this_BY_103= ruleBY[$current] )
                    // InternalSiddhiParser.g:16654:4: () this_BY_103= ruleBY[$current]
                    {
                    // InternalSiddhiParser.g:16654:4: ()
                    // InternalSiddhiParser.g:16655:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_51_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getBYParserRuleCall_51_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BY_103=ruleBY(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BY_103;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 53 :
                    // InternalSiddhiParser.g:16674:3: ( () this_HAVING_105= ruleHAVING[$current] )
                    {
                    // InternalSiddhiParser.g:16674:3: ( () this_HAVING_105= ruleHAVING[$current] )
                    // InternalSiddhiParser.g:16675:4: () this_HAVING_105= ruleHAVING[$current]
                    {
                    // InternalSiddhiParser.g:16675:4: ()
                    // InternalSiddhiParser.g:16676:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_52_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getHAVINGParserRuleCall_52_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HAVING_105=ruleHAVING(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_HAVING_105;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 54 :
                    // InternalSiddhiParser.g:16695:3: ( () this_WITH_107= ruleWITH[$current] )
                    {
                    // InternalSiddhiParser.g:16695:3: ( () this_WITH_107= ruleWITH[$current] )
                    // InternalSiddhiParser.g:16696:4: () this_WITH_107= ruleWITH[$current]
                    {
                    // InternalSiddhiParser.g:16696:4: ()
                    // InternalSiddhiParser.g:16697:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_53_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getWITHParserRuleCall_53_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WITH_107=ruleWITH(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_WITH_107;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 55 :
                    // InternalSiddhiParser.g:16716:3: ( () ( (lv_of_109_0= ruleOF ) ) )
                    {
                    // InternalSiddhiParser.g:16716:3: ( () ( (lv_of_109_0= ruleOF ) ) )
                    // InternalSiddhiParser.g:16717:4: () ( (lv_of_109_0= ruleOF ) )
                    {
                    // InternalSiddhiParser.g:16717:4: ()
                    // InternalSiddhiParser.g:16718:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_54_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSiddhiParser.g:16724:4: ( (lv_of_109_0= ruleOF ) )
                    // InternalSiddhiParser.g:16725:5: (lv_of_109_0= ruleOF )
                    {
                    // InternalSiddhiParser.g:16725:5: (lv_of_109_0= ruleOF )
                    // InternalSiddhiParser.g:16726:6: lv_of_109_0= ruleOF
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeywordAccess().getOfOFParserRuleCall_54_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_of_109_0=ruleOF();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeywordRule());
                      						}
                      						set(
                      							current,
                      							"of",
                      							lv_of_109_0,
                      							"org.xtext.example.siddhi.Siddhi.OF");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 56 :
                    // InternalSiddhiParser.g:16745:3: ( () this_BEGIN_111= ruleBEGIN[$current] )
                    {
                    // InternalSiddhiParser.g:16745:3: ( () this_BEGIN_111= ruleBEGIN[$current] )
                    // InternalSiddhiParser.g:16746:4: () this_BEGIN_111= ruleBEGIN[$current]
                    {
                    // InternalSiddhiParser.g:16746:4: ()
                    // InternalSiddhiParser.g:16747:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_55_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getBEGINParserRuleCall_55_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BEGIN_111=ruleBEGIN(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BEGIN_111;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 57 :
                    // InternalSiddhiParser.g:16766:3: ( () this_END_113= ruleEND[$current] )
                    {
                    // InternalSiddhiParser.g:16766:3: ( () this_END_113= ruleEND[$current] )
                    // InternalSiddhiParser.g:16767:4: () this_END_113= ruleEND[$current]
                    {
                    // InternalSiddhiParser.g:16767:4: ()
                    // InternalSiddhiParser.g:16768:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_56_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getENDParserRuleCall_56_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_END_113=ruleEND(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_END_113;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 58 :
                    // InternalSiddhiParser.g:16787:3: ( () this_DELETE_115= ruleDELETE[$current] )
                    {
                    // InternalSiddhiParser.g:16787:3: ( () this_DELETE_115= ruleDELETE[$current] )
                    // InternalSiddhiParser.g:16788:4: () this_DELETE_115= ruleDELETE[$current]
                    {
                    // InternalSiddhiParser.g:16788:4: ()
                    // InternalSiddhiParser.g:16789:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_57_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getDELETEParserRuleCall_57_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DELETE_115=ruleDELETE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DELETE_115;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 59 :
                    // InternalSiddhiParser.g:16808:3: ( () this_FOR_117= ruleFOR[$current] )
                    {
                    // InternalSiddhiParser.g:16808:3: ( () this_FOR_117= ruleFOR[$current] )
                    // InternalSiddhiParser.g:16809:4: () this_FOR_117= ruleFOR[$current]
                    {
                    // InternalSiddhiParser.g:16809:4: ()
                    // InternalSiddhiParser.g:16810:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_58_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getFORParserRuleCall_58_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FOR_117=ruleFOR(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FOR_117;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 60 :
                    // InternalSiddhiParser.g:16829:3: ( () this_TRUE_119= ruleTRUE[$current] )
                    {
                    // InternalSiddhiParser.g:16829:3: ( () this_TRUE_119= ruleTRUE[$current] )
                    // InternalSiddhiParser.g:16830:4: () this_TRUE_119= ruleTRUE[$current]
                    {
                    // InternalSiddhiParser.g:16830:4: ()
                    // InternalSiddhiParser.g:16831:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_59_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getTRUEParserRuleCall_59_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TRUE_119=ruleTRUE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TRUE_119;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 61 :
                    // InternalSiddhiParser.g:16850:3: ( () this_FALSE_121= ruleFALSE[$current] )
                    {
                    // InternalSiddhiParser.g:16850:3: ( () this_FALSE_121= ruleFALSE[$current] )
                    // InternalSiddhiParser.g:16851:4: () this_FALSE_121= ruleFALSE[$current]
                    {
                    // InternalSiddhiParser.g:16851:4: ()
                    // InternalSiddhiParser.g:16852:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_60_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getFALSEParserRuleCall_60_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FALSE_121=ruleFALSE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FALSE_121;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 62 :
                    // InternalSiddhiParser.g:16871:3: ( () this_UPDATE_123= ruleUPDATE[$current] )
                    {
                    // InternalSiddhiParser.g:16871:3: ( () this_UPDATE_123= ruleUPDATE[$current] )
                    // InternalSiddhiParser.g:16872:4: () this_UPDATE_123= ruleUPDATE[$current]
                    {
                    // InternalSiddhiParser.g:16872:4: ()
                    // InternalSiddhiParser.g:16873:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeywordAccess().getKeywordAction_61_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getKeywordRule());
                      				}
                      				newCompositeNode(grammarAccess.getKeywordAccess().getUPDATEParserRuleCall_61_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UPDATE_123=ruleUPDATE(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_UPDATE_123;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, ruleKeyword_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleKeyword"


    // $ANTLR start "entryRuleAS"
    // InternalSiddhiParser.g:16895:1: entryRuleAS returns [EObject current=null] : iv_ruleAS= ruleAS EOF ;
    public final EObject entryRuleAS() throws RecognitionException {
        EObject current = null;
        int entryRuleAS_StartIndex = input.index();
        EObject iv_ruleAS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return current; }
            // InternalSiddhiParser.g:16895:43: (iv_ruleAS= ruleAS EOF )
            // InternalSiddhiParser.g:16896:2: iv_ruleAS= ruleAS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getASRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAS=ruleAS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAS; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, entryRuleAS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAS"


    // $ANTLR start "ruleAS"
    // InternalSiddhiParser.g:16902:1: ruleAS returns [EObject current=null] : ( (lv_a_0_0= As ) ) ;
    public final EObject ruleAS() throws RecognitionException {
        EObject current = null;
        int ruleAS_StartIndex = input.index();
        Token lv_a_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return current; }
            // InternalSiddhiParser.g:16908:2: ( ( (lv_a_0_0= As ) ) )
            // InternalSiddhiParser.g:16909:2: ( (lv_a_0_0= As ) )
            {
            // InternalSiddhiParser.g:16909:2: ( (lv_a_0_0= As ) )
            // InternalSiddhiParser.g:16910:3: (lv_a_0_0= As )
            {
            // InternalSiddhiParser.g:16910:3: (lv_a_0_0= As )
            // InternalSiddhiParser.g:16911:4: lv_a_0_0= As
            {
            lv_a_0_0=(Token)match(input,As,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_a_0_0, grammarAccess.getASAccess().getAAsKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getASRule());
              				}
              				setWithLastConsumed(current, "a", lv_a_0_0, "as");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, ruleAS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAS"


    // $ANTLR start "entryRuleON"
    // InternalSiddhiParser.g:16926:1: entryRuleON returns [EObject current=null] : iv_ruleON= ruleON EOF ;
    public final EObject entryRuleON() throws RecognitionException {
        EObject current = null;
        int entryRuleON_StartIndex = input.index();
        EObject iv_ruleON = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return current; }
            // InternalSiddhiParser.g:16926:43: (iv_ruleON= ruleON EOF )
            // InternalSiddhiParser.g:16927:2: iv_ruleON= ruleON EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleON=ruleON();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleON; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, entryRuleON_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleON"


    // $ANTLR start "ruleON"
    // InternalSiddhiParser.g:16933:1: ruleON returns [EObject current=null] : ( (lv_on_0_0= On ) ) ;
    public final EObject ruleON() throws RecognitionException {
        EObject current = null;
        int ruleON_StartIndex = input.index();
        Token lv_on_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return current; }
            // InternalSiddhiParser.g:16939:2: ( ( (lv_on_0_0= On ) ) )
            // InternalSiddhiParser.g:16940:2: ( (lv_on_0_0= On ) )
            {
            // InternalSiddhiParser.g:16940:2: ( (lv_on_0_0= On ) )
            // InternalSiddhiParser.g:16941:3: (lv_on_0_0= On )
            {
            // InternalSiddhiParser.g:16941:3: (lv_on_0_0= On )
            // InternalSiddhiParser.g:16942:4: lv_on_0_0= On
            {
            lv_on_0_0=(Token)match(input,On,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_on_0_0, grammarAccess.getONAccess().getOnOnKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getONRule());
              				}
              				setWithLastConsumed(current, "on", lv_on_0_0, "on");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, ruleON_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleON"


    // $ANTLR start "entryRuleUNIDIRECTIONAL"
    // InternalSiddhiParser.g:16957:1: entryRuleUNIDIRECTIONAL returns [EObject current=null] : iv_ruleUNIDIRECTIONAL= ruleUNIDIRECTIONAL EOF ;
    public final EObject entryRuleUNIDIRECTIONAL() throws RecognitionException {
        EObject current = null;
        int entryRuleUNIDIRECTIONAL_StartIndex = input.index();
        EObject iv_ruleUNIDIRECTIONAL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return current; }
            // InternalSiddhiParser.g:16957:55: (iv_ruleUNIDIRECTIONAL= ruleUNIDIRECTIONAL EOF )
            // InternalSiddhiParser.g:16958:2: iv_ruleUNIDIRECTIONAL= ruleUNIDIRECTIONAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUNIDIRECTIONALRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUNIDIRECTIONAL=ruleUNIDIRECTIONAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUNIDIRECTIONAL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, entryRuleUNIDIRECTIONAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUNIDIRECTIONAL"


    // $ANTLR start "ruleUNIDIRECTIONAL"
    // InternalSiddhiParser.g:16964:1: ruleUNIDIRECTIONAL returns [EObject current=null] : ( (lv_unidirectional_0_0= Unidirectional ) ) ;
    public final EObject ruleUNIDIRECTIONAL() throws RecognitionException {
        EObject current = null;
        int ruleUNIDIRECTIONAL_StartIndex = input.index();
        Token lv_unidirectional_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return current; }
            // InternalSiddhiParser.g:16970:2: ( ( (lv_unidirectional_0_0= Unidirectional ) ) )
            // InternalSiddhiParser.g:16971:2: ( (lv_unidirectional_0_0= Unidirectional ) )
            {
            // InternalSiddhiParser.g:16971:2: ( (lv_unidirectional_0_0= Unidirectional ) )
            // InternalSiddhiParser.g:16972:3: (lv_unidirectional_0_0= Unidirectional )
            {
            // InternalSiddhiParser.g:16972:3: (lv_unidirectional_0_0= Unidirectional )
            // InternalSiddhiParser.g:16973:4: lv_unidirectional_0_0= Unidirectional
            {
            lv_unidirectional_0_0=(Token)match(input,Unidirectional,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_unidirectional_0_0, grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalUnidirectionalKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUNIDIRECTIONALRule());
              				}
              				setWithLastConsumed(current, "unidirectional", lv_unidirectional_0_0, "unidirectional");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, ruleUNIDIRECTIONAL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUNIDIRECTIONAL"


    // $ANTLR start "entryRuleNOT"
    // InternalSiddhiParser.g:16988:1: entryRuleNOT returns [EObject current=null] : iv_ruleNOT= ruleNOT EOF ;
    public final EObject entryRuleNOT() throws RecognitionException {
        EObject current = null;
        int entryRuleNOT_StartIndex = input.index();
        EObject iv_ruleNOT = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return current; }
            // InternalSiddhiParser.g:16988:44: (iv_ruleNOT= ruleNOT EOF )
            // InternalSiddhiParser.g:16989:2: iv_ruleNOT= ruleNOT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNOTRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNOT=ruleNOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNOT; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, entryRuleNOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNOT"


    // $ANTLR start "ruleNOT"
    // InternalSiddhiParser.g:16995:1: ruleNOT returns [EObject current=null] : ( (lv_not1_0_0= Not ) ) ;
    public final EObject ruleNOT() throws RecognitionException {
        EObject current = null;
        int ruleNOT_StartIndex = input.index();
        Token lv_not1_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return current; }
            // InternalSiddhiParser.g:17001:2: ( ( (lv_not1_0_0= Not ) ) )
            // InternalSiddhiParser.g:17002:2: ( (lv_not1_0_0= Not ) )
            {
            // InternalSiddhiParser.g:17002:2: ( (lv_not1_0_0= Not ) )
            // InternalSiddhiParser.g:17003:3: (lv_not1_0_0= Not )
            {
            // InternalSiddhiParser.g:17003:3: (lv_not1_0_0= Not )
            // InternalSiddhiParser.g:17004:4: lv_not1_0_0= Not
            {
            lv_not1_0_0=(Token)match(input,Not,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_not1_0_0, grammarAccess.getNOTAccess().getNot1NotKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNOTRule());
              				}
              				setWithLastConsumed(current, "not1", lv_not1_0_0, "not");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, ruleNOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNOT"


    // $ANTLR start "entryRuleEVERY"
    // InternalSiddhiParser.g:17019:1: entryRuleEVERY returns [EObject current=null] : iv_ruleEVERY= ruleEVERY EOF ;
    public final EObject entryRuleEVERY() throws RecognitionException {
        EObject current = null;
        int entryRuleEVERY_StartIndex = input.index();
        EObject iv_ruleEVERY = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return current; }
            // InternalSiddhiParser.g:17019:46: (iv_ruleEVERY= ruleEVERY EOF )
            // InternalSiddhiParser.g:17020:2: iv_ruleEVERY= ruleEVERY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEVERYRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEVERY=ruleEVERY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEVERY; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, entryRuleEVERY_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEVERY"


    // $ANTLR start "ruleEVERY"
    // InternalSiddhiParser.g:17026:1: ruleEVERY returns [EObject current=null] : ( (lv_every1_0_0= Every ) ) ;
    public final EObject ruleEVERY() throws RecognitionException {
        EObject current = null;
        int ruleEVERY_StartIndex = input.index();
        Token lv_every1_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return current; }
            // InternalSiddhiParser.g:17032:2: ( ( (lv_every1_0_0= Every ) ) )
            // InternalSiddhiParser.g:17033:2: ( (lv_every1_0_0= Every ) )
            {
            // InternalSiddhiParser.g:17033:2: ( (lv_every1_0_0= Every ) )
            // InternalSiddhiParser.g:17034:3: (lv_every1_0_0= Every )
            {
            // InternalSiddhiParser.g:17034:3: (lv_every1_0_0= Every )
            // InternalSiddhiParser.g:17035:4: lv_every1_0_0= Every
            {
            lv_every1_0_0=(Token)match(input,Every,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_every1_0_0, grammarAccess.getEVERYAccess().getEvery1EveryKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEVERYRule());
              				}
              				setWithLastConsumed(current, "every1", lv_every1_0_0, "every");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, ruleEVERY_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEVERY"


    // $ANTLR start "entryRuleAND"
    // InternalSiddhiParser.g:17050:1: entryRuleAND returns [EObject current=null] : iv_ruleAND= ruleAND EOF ;
    public final EObject entryRuleAND() throws RecognitionException {
        EObject current = null;
        int entryRuleAND_StartIndex = input.index();
        EObject iv_ruleAND = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return current; }
            // InternalSiddhiParser.g:17050:44: (iv_ruleAND= ruleAND EOF )
            // InternalSiddhiParser.g:17051:2: iv_ruleAND= ruleAND EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getANDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAND=ruleAND();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAND; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, entryRuleAND_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAND"


    // $ANTLR start "ruleAND"
    // InternalSiddhiParser.g:17057:1: ruleAND returns [EObject current=null] : ( (lv_and_0_0= And ) ) ;
    public final EObject ruleAND() throws RecognitionException {
        EObject current = null;
        int ruleAND_StartIndex = input.index();
        Token lv_and_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return current; }
            // InternalSiddhiParser.g:17063:2: ( ( (lv_and_0_0= And ) ) )
            // InternalSiddhiParser.g:17064:2: ( (lv_and_0_0= And ) )
            {
            // InternalSiddhiParser.g:17064:2: ( (lv_and_0_0= And ) )
            // InternalSiddhiParser.g:17065:3: (lv_and_0_0= And )
            {
            // InternalSiddhiParser.g:17065:3: (lv_and_0_0= And )
            // InternalSiddhiParser.g:17066:4: lv_and_0_0= And
            {
            lv_and_0_0=(Token)match(input,And,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_and_0_0, grammarAccess.getANDAccess().getAndAndKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getANDRule());
              				}
              				setWithLastConsumed(current, "and", lv_and_0_0, "and");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, ruleAND_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAND"


    // $ANTLR start "entryRuleOR"
    // InternalSiddhiParser.g:17081:1: entryRuleOR returns [EObject current=null] : iv_ruleOR= ruleOR EOF ;
    public final EObject entryRuleOR() throws RecognitionException {
        EObject current = null;
        int entryRuleOR_StartIndex = input.index();
        EObject iv_ruleOR = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return current; }
            // InternalSiddhiParser.g:17081:43: (iv_ruleOR= ruleOR EOF )
            // InternalSiddhiParser.g:17082:2: iv_ruleOR= ruleOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOR=ruleOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOR; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, entryRuleOR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOR"


    // $ANTLR start "ruleOR"
    // InternalSiddhiParser.g:17088:1: ruleOR returns [EObject current=null] : ( (lv_or_0_0= Or ) ) ;
    public final EObject ruleOR() throws RecognitionException {
        EObject current = null;
        int ruleOR_StartIndex = input.index();
        Token lv_or_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return current; }
            // InternalSiddhiParser.g:17094:2: ( ( (lv_or_0_0= Or ) ) )
            // InternalSiddhiParser.g:17095:2: ( (lv_or_0_0= Or ) )
            {
            // InternalSiddhiParser.g:17095:2: ( (lv_or_0_0= Or ) )
            // InternalSiddhiParser.g:17096:3: (lv_or_0_0= Or )
            {
            // InternalSiddhiParser.g:17096:3: (lv_or_0_0= Or )
            // InternalSiddhiParser.g:17097:4: lv_or_0_0= Or
            {
            lv_or_0_0=(Token)match(input,Or,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_or_0_0, grammarAccess.getORAccess().getOrOrKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getORRule());
              				}
              				addWithLastConsumed(current, "or", lv_or_0_0, "or");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, ruleOR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOR"


    // $ANTLR start "entryRuleIN"
    // InternalSiddhiParser.g:17112:1: entryRuleIN returns [EObject current=null] : iv_ruleIN= ruleIN EOF ;
    public final EObject entryRuleIN() throws RecognitionException {
        EObject current = null;
        int entryRuleIN_StartIndex = input.index();
        EObject iv_ruleIN = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return current; }
            // InternalSiddhiParser.g:17112:43: (iv_ruleIN= ruleIN EOF )
            // InternalSiddhiParser.g:17113:2: iv_ruleIN= ruleIN EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIN=ruleIN();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIN; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, entryRuleIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleIN"


    // $ANTLR start "ruleIN"
    // InternalSiddhiParser.g:17119:1: ruleIN returns [EObject current=null] : ( (lv_in_0_0= In ) ) ;
    public final EObject ruleIN() throws RecognitionException {
        EObject current = null;
        int ruleIN_StartIndex = input.index();
        Token lv_in_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return current; }
            // InternalSiddhiParser.g:17125:2: ( ( (lv_in_0_0= In ) ) )
            // InternalSiddhiParser.g:17126:2: ( (lv_in_0_0= In ) )
            {
            // InternalSiddhiParser.g:17126:2: ( (lv_in_0_0= In ) )
            // InternalSiddhiParser.g:17127:3: (lv_in_0_0= In )
            {
            // InternalSiddhiParser.g:17127:3: (lv_in_0_0= In )
            // InternalSiddhiParser.g:17128:4: lv_in_0_0= In
            {
            lv_in_0_0=(Token)match(input,In,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_in_0_0, grammarAccess.getINAccess().getInInKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINRule());
              				}
              				setWithLastConsumed(current, "in", lv_in_0_0, "in");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, ruleIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIN"


    // $ANTLR start "entryRuleOF"
    // InternalSiddhiParser.g:17143:1: entryRuleOF returns [EObject current=null] : iv_ruleOF= ruleOF EOF ;
    public final EObject entryRuleOF() throws RecognitionException {
        EObject current = null;
        int entryRuleOF_StartIndex = input.index();
        EObject iv_ruleOF = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return current; }
            // InternalSiddhiParser.g:17143:43: (iv_ruleOF= ruleOF EOF )
            // InternalSiddhiParser.g:17144:2: iv_ruleOF= ruleOF EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOFRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOF=ruleOF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOF; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, entryRuleOF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOF"


    // $ANTLR start "ruleOF"
    // InternalSiddhiParser.g:17150:1: ruleOF returns [EObject current=null] : ( (lv_of_0_0= Of ) ) ;
    public final EObject ruleOF() throws RecognitionException {
        EObject current = null;
        int ruleOF_StartIndex = input.index();
        Token lv_of_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return current; }
            // InternalSiddhiParser.g:17156:2: ( ( (lv_of_0_0= Of ) ) )
            // InternalSiddhiParser.g:17157:2: ( (lv_of_0_0= Of ) )
            {
            // InternalSiddhiParser.g:17157:2: ( (lv_of_0_0= Of ) )
            // InternalSiddhiParser.g:17158:3: (lv_of_0_0= Of )
            {
            // InternalSiddhiParser.g:17158:3: (lv_of_0_0= Of )
            // InternalSiddhiParser.g:17159:4: lv_of_0_0= Of
            {
            lv_of_0_0=(Token)match(input,Of,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_of_0_0, grammarAccess.getOFAccess().getOfOfKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOFRule());
              				}
              				setWithLastConsumed(current, "of", lv_of_0_0, "of");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, ruleOF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOF"


    // $ANTLR start "entryRuleE"
    // InternalSiddhiParser.g:17174:1: entryRuleE returns [EObject current=null] : iv_ruleE= ruleE EOF ;
    public final EObject entryRuleE() throws RecognitionException {
        EObject current = null;
        int entryRuleE_StartIndex = input.index();
        EObject iv_ruleE = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return current; }
            // InternalSiddhiParser.g:17174:42: (iv_ruleE= ruleE EOF )
            // InternalSiddhiParser.g:17175:2: iv_ruleE= ruleE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleE=ruleE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleE; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, entryRuleE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleE"


    // $ANTLR start "ruleE"
    // InternalSiddhiParser.g:17181:1: ruleE returns [EObject current=null] : ( (lv_e_0_0= E ) ) ;
    public final EObject ruleE() throws RecognitionException {
        EObject current = null;
        int ruleE_StartIndex = input.index();
        Token lv_e_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return current; }
            // InternalSiddhiParser.g:17187:2: ( ( (lv_e_0_0= E ) ) )
            // InternalSiddhiParser.g:17188:2: ( (lv_e_0_0= E ) )
            {
            // InternalSiddhiParser.g:17188:2: ( (lv_e_0_0= E ) )
            // InternalSiddhiParser.g:17189:3: (lv_e_0_0= E )
            {
            // InternalSiddhiParser.g:17189:3: (lv_e_0_0= E )
            // InternalSiddhiParser.g:17190:4: lv_e_0_0= E
            {
            lv_e_0_0=(Token)match(input,E,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_e_0_0, grammarAccess.getEAccess().getEEKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getERule());
              				}
              				setWithLastConsumed(current, "e", lv_e_0_0, "e");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, ruleE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleE"


    // $ANTLR start "entryRuleD"
    // InternalSiddhiParser.g:17205:1: entryRuleD returns [EObject current=null] : iv_ruleD= ruleD EOF ;
    public final EObject entryRuleD() throws RecognitionException {
        EObject current = null;
        int entryRuleD_StartIndex = input.index();
        EObject iv_ruleD = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return current; }
            // InternalSiddhiParser.g:17205:42: (iv_ruleD= ruleD EOF )
            // InternalSiddhiParser.g:17206:2: iv_ruleD= ruleD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleD=ruleD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleD; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, entryRuleD_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleD"


    // $ANTLR start "ruleD"
    // InternalSiddhiParser.g:17212:1: ruleD returns [EObject current=null] : ( (lv_d_0_0= D ) ) ;
    public final EObject ruleD() throws RecognitionException {
        EObject current = null;
        int ruleD_StartIndex = input.index();
        Token lv_d_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return current; }
            // InternalSiddhiParser.g:17218:2: ( ( (lv_d_0_0= D ) ) )
            // InternalSiddhiParser.g:17219:2: ( (lv_d_0_0= D ) )
            {
            // InternalSiddhiParser.g:17219:2: ( (lv_d_0_0= D ) )
            // InternalSiddhiParser.g:17220:3: (lv_d_0_0= D )
            {
            // InternalSiddhiParser.g:17220:3: (lv_d_0_0= D )
            // InternalSiddhiParser.g:17221:4: lv_d_0_0= D
            {
            lv_d_0_0=(Token)match(input,D,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_d_0_0, grammarAccess.getDAccess().getDDKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDRule());
              				}
              				setWithLastConsumed(current, "d", lv_d_0_0, "d");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, ruleD_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleD"


    // $ANTLR start "entryRuleF"
    // InternalSiddhiParser.g:17236:1: entryRuleF returns [EObject current=null] : iv_ruleF= ruleF EOF ;
    public final EObject entryRuleF() throws RecognitionException {
        EObject current = null;
        int entryRuleF_StartIndex = input.index();
        EObject iv_ruleF = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return current; }
            // InternalSiddhiParser.g:17236:42: (iv_ruleF= ruleF EOF )
            // InternalSiddhiParser.g:17237:2: iv_ruleF= ruleF EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleF=ruleF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleF; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, entryRuleF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleF"


    // $ANTLR start "ruleF"
    // InternalSiddhiParser.g:17243:1: ruleF returns [EObject current=null] : ( (lv_f_0_0= F ) ) ;
    public final EObject ruleF() throws RecognitionException {
        EObject current = null;
        int ruleF_StartIndex = input.index();
        Token lv_f_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return current; }
            // InternalSiddhiParser.g:17249:2: ( ( (lv_f_0_0= F ) ) )
            // InternalSiddhiParser.g:17250:2: ( (lv_f_0_0= F ) )
            {
            // InternalSiddhiParser.g:17250:2: ( (lv_f_0_0= F ) )
            // InternalSiddhiParser.g:17251:3: (lv_f_0_0= F )
            {
            // InternalSiddhiParser.g:17251:3: (lv_f_0_0= F )
            // InternalSiddhiParser.g:17252:4: lv_f_0_0= F
            {
            lv_f_0_0=(Token)match(input,F,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_f_0_0, grammarAccess.getFAccess().getFFKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFRule());
              				}
              				setWithLastConsumed(current, "f", lv_f_0_0, "f");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, ruleF_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleF"


    // $ANTLR start "entryRuleL"
    // InternalSiddhiParser.g:17267:1: entryRuleL returns [EObject current=null] : iv_ruleL= ruleL EOF ;
    public final EObject entryRuleL() throws RecognitionException {
        EObject current = null;
        int entryRuleL_StartIndex = input.index();
        EObject iv_ruleL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return current; }
            // InternalSiddhiParser.g:17267:42: (iv_ruleL= ruleL EOF )
            // InternalSiddhiParser.g:17268:2: iv_ruleL= ruleL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleL=ruleL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 310, entryRuleL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleL"


    // $ANTLR start "ruleL"
    // InternalSiddhiParser.g:17274:1: ruleL returns [EObject current=null] : ( (lv_l_0_0= L ) ) ;
    public final EObject ruleL() throws RecognitionException {
        EObject current = null;
        int ruleL_StartIndex = input.index();
        Token lv_l_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return current; }
            // InternalSiddhiParser.g:17280:2: ( ( (lv_l_0_0= L ) ) )
            // InternalSiddhiParser.g:17281:2: ( (lv_l_0_0= L ) )
            {
            // InternalSiddhiParser.g:17281:2: ( (lv_l_0_0= L ) )
            // InternalSiddhiParser.g:17282:3: (lv_l_0_0= L )
            {
            // InternalSiddhiParser.g:17282:3: (lv_l_0_0= L )
            // InternalSiddhiParser.g:17283:4: lv_l_0_0= L
            {
            lv_l_0_0=(Token)match(input,L,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_l_0_0, grammarAccess.getLAccess().getLLKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLRule());
              				}
              				setWithLastConsumed(current, "l", lv_l_0_0, "l");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 311, ruleL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleL"


    // $ANTLR start "entryRuleAPP"
    // InternalSiddhiParser.g:17298:1: entryRuleAPP returns [EObject current=null] : iv_ruleAPP= ruleAPP EOF ;
    public final EObject entryRuleAPP() throws RecognitionException {
        EObject current = null;
        int entryRuleAPP_StartIndex = input.index();
        EObject iv_ruleAPP = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return current; }
            // InternalSiddhiParser.g:17298:44: (iv_ruleAPP= ruleAPP EOF )
            // InternalSiddhiParser.g:17299:2: iv_ruleAPP= ruleAPP EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAPPRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAPP=ruleAPP();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAPP; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 312, entryRuleAPP_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAPP"


    // $ANTLR start "ruleAPP"
    // InternalSiddhiParser.g:17305:1: ruleAPP returns [EObject current=null] : ( (lv_ap_0_0= App ) ) ;
    public final EObject ruleAPP() throws RecognitionException {
        EObject current = null;
        int ruleAPP_StartIndex = input.index();
        Token lv_ap_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return current; }
            // InternalSiddhiParser.g:17311:2: ( ( (lv_ap_0_0= App ) ) )
            // InternalSiddhiParser.g:17312:2: ( (lv_ap_0_0= App ) )
            {
            // InternalSiddhiParser.g:17312:2: ( (lv_ap_0_0= App ) )
            // InternalSiddhiParser.g:17313:3: (lv_ap_0_0= App )
            {
            // InternalSiddhiParser.g:17313:3: (lv_ap_0_0= App )
            // InternalSiddhiParser.g:17314:4: lv_ap_0_0= App
            {
            lv_ap_0_0=(Token)match(input,App,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_ap_0_0, grammarAccess.getAPPAccess().getApAppKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAPPRule());
              				}
              				setWithLastConsumed(current, "ap", lv_ap_0_0, "app");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 313, ruleAPP_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAPP"


    // $ANTLR start "ruleSTREAM"
    // InternalSiddhiParser.g:17330:1: ruleSTREAM[EObject in_current] returns [EObject current=in_current] : ( (lv_str_0_0= Stream ) ) ;
    public final EObject ruleSTREAM(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSTREAM_StartIndex = input.index();
        Token lv_str_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return current; }
            // InternalSiddhiParser.g:17336:2: ( ( (lv_str_0_0= Stream ) ) )
            // InternalSiddhiParser.g:17337:2: ( (lv_str_0_0= Stream ) )
            {
            // InternalSiddhiParser.g:17337:2: ( (lv_str_0_0= Stream ) )
            // InternalSiddhiParser.g:17338:3: (lv_str_0_0= Stream )
            {
            // InternalSiddhiParser.g:17338:3: (lv_str_0_0= Stream )
            // InternalSiddhiParser.g:17339:4: lv_str_0_0= Stream
            {
            lv_str_0_0=(Token)match(input,Stream,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_str_0_0, grammarAccess.getSTREAMAccess().getStrStreamKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSTREAMRule());
              				}
              				setWithLastConsumed(current, "str", lv_str_0_0, "stream");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 314, ruleSTREAM_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSTREAM"


    // $ANTLR start "ruleDEFINE"
    // InternalSiddhiParser.g:17355:1: ruleDEFINE[EObject in_current] returns [EObject current=in_current] : ( (lv_define_0_0= Define ) ) ;
    public final EObject ruleDEFINE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDEFINE_StartIndex = input.index();
        Token lv_define_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return current; }
            // InternalSiddhiParser.g:17361:2: ( ( (lv_define_0_0= Define ) ) )
            // InternalSiddhiParser.g:17362:2: ( (lv_define_0_0= Define ) )
            {
            // InternalSiddhiParser.g:17362:2: ( (lv_define_0_0= Define ) )
            // InternalSiddhiParser.g:17363:3: (lv_define_0_0= Define )
            {
            // InternalSiddhiParser.g:17363:3: (lv_define_0_0= Define )
            // InternalSiddhiParser.g:17364:4: lv_define_0_0= Define
            {
            lv_define_0_0=(Token)match(input,Define,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_define_0_0, grammarAccess.getDEFINEAccess().getDefineDefineKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDEFINERule());
              				}
              				setWithLastConsumed(current, "define", lv_define_0_0, "define");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 315, ruleDEFINE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDEFINE"


    // $ANTLR start "ruleTABLE"
    // InternalSiddhiParser.g:17380:1: ruleTABLE[EObject in_current] returns [EObject current=in_current] : ( (lv_table_0_0= Table ) ) ;
    public final EObject ruleTABLE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleTABLE_StartIndex = input.index();
        Token lv_table_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return current; }
            // InternalSiddhiParser.g:17386:2: ( ( (lv_table_0_0= Table ) ) )
            // InternalSiddhiParser.g:17387:2: ( (lv_table_0_0= Table ) )
            {
            // InternalSiddhiParser.g:17387:2: ( (lv_table_0_0= Table ) )
            // InternalSiddhiParser.g:17388:3: (lv_table_0_0= Table )
            {
            // InternalSiddhiParser.g:17388:3: (lv_table_0_0= Table )
            // InternalSiddhiParser.g:17389:4: lv_table_0_0= Table
            {
            lv_table_0_0=(Token)match(input,Table,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_table_0_0, grammarAccess.getTABLEAccess().getTableTableKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTABLERule());
              				}
              				setWithLastConsumed(current, "table", lv_table_0_0, "table");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 316, ruleTABLE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTABLE"


    // $ANTLR start "ruleWINDOW"
    // InternalSiddhiParser.g:17405:1: ruleWINDOW[EObject in_current] returns [EObject current=in_current] : ( (lv_window_0_0= Window ) ) ;
    public final EObject ruleWINDOW(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWINDOW_StartIndex = input.index();
        Token lv_window_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return current; }
            // InternalSiddhiParser.g:17411:2: ( ( (lv_window_0_0= Window ) ) )
            // InternalSiddhiParser.g:17412:2: ( (lv_window_0_0= Window ) )
            {
            // InternalSiddhiParser.g:17412:2: ( (lv_window_0_0= Window ) )
            // InternalSiddhiParser.g:17413:3: (lv_window_0_0= Window )
            {
            // InternalSiddhiParser.g:17413:3: (lv_window_0_0= Window )
            // InternalSiddhiParser.g:17414:4: lv_window_0_0= Window
            {
            lv_window_0_0=(Token)match(input,Window,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_window_0_0, grammarAccess.getWINDOWAccess().getWindowWindowKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getWINDOWRule());
              				}
              				setWithLastConsumed(current, "window", lv_window_0_0, "window");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 317, ruleWINDOW_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWINDOW"


    // $ANTLR start "ruleOUTPUT"
    // InternalSiddhiParser.g:17430:1: ruleOUTPUT[EObject in_current] returns [EObject current=in_current] : ( (lv_output_0_0= Output ) ) ;
    public final EObject ruleOUTPUT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleOUTPUT_StartIndex = input.index();
        Token lv_output_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 318) ) { return current; }
            // InternalSiddhiParser.g:17436:2: ( ( (lv_output_0_0= Output ) ) )
            // InternalSiddhiParser.g:17437:2: ( (lv_output_0_0= Output ) )
            {
            // InternalSiddhiParser.g:17437:2: ( (lv_output_0_0= Output ) )
            // InternalSiddhiParser.g:17438:3: (lv_output_0_0= Output )
            {
            // InternalSiddhiParser.g:17438:3: (lv_output_0_0= Output )
            // InternalSiddhiParser.g:17439:4: lv_output_0_0= Output
            {
            lv_output_0_0=(Token)match(input,Output,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_output_0_0, grammarAccess.getOUTPUTAccess().getOutputOutputKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOUTPUTRule());
              				}
              				setWithLastConsumed(current, "output", lv_output_0_0, "output");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 318, ruleOUTPUT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOUTPUT"


    // $ANTLR start "ruleSTRINGS"
    // InternalSiddhiParser.g:17455:1: ruleSTRINGS[EObject in_current] returns [EObject current=in_current] : ( (lv_string_0_0= String ) ) ;
    public final EObject ruleSTRINGS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSTRINGS_StartIndex = input.index();
        Token lv_string_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 319) ) { return current; }
            // InternalSiddhiParser.g:17461:2: ( ( (lv_string_0_0= String ) ) )
            // InternalSiddhiParser.g:17462:2: ( (lv_string_0_0= String ) )
            {
            // InternalSiddhiParser.g:17462:2: ( (lv_string_0_0= String ) )
            // InternalSiddhiParser.g:17463:3: (lv_string_0_0= String )
            {
            // InternalSiddhiParser.g:17463:3: (lv_string_0_0= String )
            // InternalSiddhiParser.g:17464:4: lv_string_0_0= String
            {
            lv_string_0_0=(Token)match(input,String,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_string_0_0, grammarAccess.getSTRINGSAccess().getStringStringKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSTRINGSRule());
              				}
              				setWithLastConsumed(current, "string", lv_string_0_0, "string");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 319, ruleSTRINGS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSTRINGS"


    // $ANTLR start "ruleINTS"
    // InternalSiddhiParser.g:17480:1: ruleINTS[EObject in_current] returns [EObject current=in_current] : ( (lv_int_0_0= Int ) ) ;
    public final EObject ruleINTS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINTS_StartIndex = input.index();
        Token lv_int_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 320) ) { return current; }
            // InternalSiddhiParser.g:17486:2: ( ( (lv_int_0_0= Int ) ) )
            // InternalSiddhiParser.g:17487:2: ( (lv_int_0_0= Int ) )
            {
            // InternalSiddhiParser.g:17487:2: ( (lv_int_0_0= Int ) )
            // InternalSiddhiParser.g:17488:3: (lv_int_0_0= Int )
            {
            // InternalSiddhiParser.g:17488:3: (lv_int_0_0= Int )
            // InternalSiddhiParser.g:17489:4: lv_int_0_0= Int
            {
            lv_int_0_0=(Token)match(input,Int,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_int_0_0, grammarAccess.getINTSAccess().getIntIntKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINTSRule());
              				}
              				setWithLastConsumed(current, "int", lv_int_0_0, "int");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 320, ruleINTS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINTS"


    // $ANTLR start "ruleLONG"
    // InternalSiddhiParser.g:17505:1: ruleLONG[EObject in_current] returns [EObject current=in_current] : ( (lv_long_0_0= Long ) ) ;
    public final EObject ruleLONG(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleLONG_StartIndex = input.index();
        Token lv_long_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 321) ) { return current; }
            // InternalSiddhiParser.g:17511:2: ( ( (lv_long_0_0= Long ) ) )
            // InternalSiddhiParser.g:17512:2: ( (lv_long_0_0= Long ) )
            {
            // InternalSiddhiParser.g:17512:2: ( (lv_long_0_0= Long ) )
            // InternalSiddhiParser.g:17513:3: (lv_long_0_0= Long )
            {
            // InternalSiddhiParser.g:17513:3: (lv_long_0_0= Long )
            // InternalSiddhiParser.g:17514:4: lv_long_0_0= Long
            {
            lv_long_0_0=(Token)match(input,Long,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_long_0_0, grammarAccess.getLONGAccess().getLongLongKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLONGRule());
              				}
              				setWithLastConsumed(current, "long", lv_long_0_0, "long");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 321, ruleLONG_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLONG"


    // $ANTLR start "ruleDOUBLE"
    // InternalSiddhiParser.g:17530:1: ruleDOUBLE[EObject in_current] returns [EObject current=in_current] : ( (lv_double_0_0= Double ) ) ;
    public final EObject ruleDOUBLE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDOUBLE_StartIndex = input.index();
        Token lv_double_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 322) ) { return current; }
            // InternalSiddhiParser.g:17536:2: ( ( (lv_double_0_0= Double ) ) )
            // InternalSiddhiParser.g:17537:2: ( (lv_double_0_0= Double ) )
            {
            // InternalSiddhiParser.g:17537:2: ( (lv_double_0_0= Double ) )
            // InternalSiddhiParser.g:17538:3: (lv_double_0_0= Double )
            {
            // InternalSiddhiParser.g:17538:3: (lv_double_0_0= Double )
            // InternalSiddhiParser.g:17539:4: lv_double_0_0= Double
            {
            lv_double_0_0=(Token)match(input,Double,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_double_0_0, grammarAccess.getDOUBLEAccess().getDoubleDoubleKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDOUBLERule());
              				}
              				setWithLastConsumed(current, "double", lv_double_0_0, "double");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 322, ruleDOUBLE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDOUBLE"


    // $ANTLR start "ruleFLOAT"
    // InternalSiddhiParser.g:17555:1: ruleFLOAT[EObject in_current] returns [EObject current=in_current] : ( (lv_float_0_0= Float ) ) ;
    public final EObject ruleFLOAT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFLOAT_StartIndex = input.index();
        Token lv_float_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 323) ) { return current; }
            // InternalSiddhiParser.g:17561:2: ( ( (lv_float_0_0= Float ) ) )
            // InternalSiddhiParser.g:17562:2: ( (lv_float_0_0= Float ) )
            {
            // InternalSiddhiParser.g:17562:2: ( (lv_float_0_0= Float ) )
            // InternalSiddhiParser.g:17563:3: (lv_float_0_0= Float )
            {
            // InternalSiddhiParser.g:17563:3: (lv_float_0_0= Float )
            // InternalSiddhiParser.g:17564:4: lv_float_0_0= Float
            {
            lv_float_0_0=(Token)match(input,Float,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_float_0_0, grammarAccess.getFLOATAccess().getFloatFloatKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFLOATRule());
              				}
              				setWithLastConsumed(current, "float", lv_float_0_0, "float");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 323, ruleFLOAT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFLOAT"


    // $ANTLR start "ruleBOOL"
    // InternalSiddhiParser.g:17580:1: ruleBOOL[EObject in_current] returns [EObject current=in_current] : ( (lv_bool_0_0= Bool ) ) ;
    public final EObject ruleBOOL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleBOOL_StartIndex = input.index();
        Token lv_bool_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 324) ) { return current; }
            // InternalSiddhiParser.g:17586:2: ( ( (lv_bool_0_0= Bool ) ) )
            // InternalSiddhiParser.g:17587:2: ( (lv_bool_0_0= Bool ) )
            {
            // InternalSiddhiParser.g:17587:2: ( (lv_bool_0_0= Bool ) )
            // InternalSiddhiParser.g:17588:3: (lv_bool_0_0= Bool )
            {
            // InternalSiddhiParser.g:17588:3: (lv_bool_0_0= Bool )
            // InternalSiddhiParser.g:17589:4: lv_bool_0_0= Bool
            {
            lv_bool_0_0=(Token)match(input,Bool,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_bool_0_0, grammarAccess.getBOOLAccess().getBoolBoolKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBOOLRule());
              				}
              				setWithLastConsumed(current, "bool", lv_bool_0_0, "bool");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 324, ruleBOOL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBOOL"


    // $ANTLR start "ruleOBJECT"
    // InternalSiddhiParser.g:17605:1: ruleOBJECT[EObject in_current] returns [EObject current=in_current] : ( (lv_object_0_0= Object ) ) ;
    public final EObject ruleOBJECT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleOBJECT_StartIndex = input.index();
        Token lv_object_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 325) ) { return current; }
            // InternalSiddhiParser.g:17611:2: ( ( (lv_object_0_0= Object ) ) )
            // InternalSiddhiParser.g:17612:2: ( (lv_object_0_0= Object ) )
            {
            // InternalSiddhiParser.g:17612:2: ( (lv_object_0_0= Object ) )
            // InternalSiddhiParser.g:17613:3: (lv_object_0_0= Object )
            {
            // InternalSiddhiParser.g:17613:3: (lv_object_0_0= Object )
            // InternalSiddhiParser.g:17614:4: lv_object_0_0= Object
            {
            lv_object_0_0=(Token)match(input,Object,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_object_0_0, grammarAccess.getOBJECTAccess().getObjectObjectKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOBJECTRule());
              				}
              				setWithLastConsumed(current, "object", lv_object_0_0, "object");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 325, ruleOBJECT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOBJECT"


    // $ANTLR start "ruleALL"
    // InternalSiddhiParser.g:17630:1: ruleALL[EObject in_current] returns [EObject current=in_current] : ( (lv_all_0_0= All ) ) ;
    public final EObject ruleALL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleALL_StartIndex = input.index();
        Token lv_all_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 326) ) { return current; }
            // InternalSiddhiParser.g:17636:2: ( ( (lv_all_0_0= All ) ) )
            // InternalSiddhiParser.g:17637:2: ( (lv_all_0_0= All ) )
            {
            // InternalSiddhiParser.g:17637:2: ( (lv_all_0_0= All ) )
            // InternalSiddhiParser.g:17638:3: (lv_all_0_0= All )
            {
            // InternalSiddhiParser.g:17638:3: (lv_all_0_0= All )
            // InternalSiddhiParser.g:17639:4: lv_all_0_0= All
            {
            lv_all_0_0=(Token)match(input,All,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_all_0_0, grammarAccess.getALLAccess().getAllAllKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getALLRule());
              				}
              				setWithLastConsumed(current, "all", lv_all_0_0, "all");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 326, ruleALL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleALL"


    // $ANTLR start "ruleEVENTS"
    // InternalSiddhiParser.g:17655:1: ruleEVENTS[EObject in_current] returns [EObject current=in_current] : ( (lv_events_0_0= Events ) ) ;
    public final EObject ruleEVENTS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleEVENTS_StartIndex = input.index();
        Token lv_events_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 327) ) { return current; }
            // InternalSiddhiParser.g:17661:2: ( ( (lv_events_0_0= Events ) ) )
            // InternalSiddhiParser.g:17662:2: ( (lv_events_0_0= Events ) )
            {
            // InternalSiddhiParser.g:17662:2: ( (lv_events_0_0= Events ) )
            // InternalSiddhiParser.g:17663:3: (lv_events_0_0= Events )
            {
            // InternalSiddhiParser.g:17663:3: (lv_events_0_0= Events )
            // InternalSiddhiParser.g:17664:4: lv_events_0_0= Events
            {
            lv_events_0_0=(Token)match(input,Events,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_events_0_0, grammarAccess.getEVENTSAccess().getEventsEventsKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEVENTSRule());
              				}
              				setWithLastConsumed(current, "events", lv_events_0_0, "events");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 327, ruleEVENTS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEVENTS"


    // $ANTLR start "ruleRAW"
    // InternalSiddhiParser.g:17680:1: ruleRAW[EObject in_current] returns [EObject current=in_current] : ( (lv_raw_0_0= Raw ) ) ;
    public final EObject ruleRAW(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleRAW_StartIndex = input.index();
        Token lv_raw_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 328) ) { return current; }
            // InternalSiddhiParser.g:17686:2: ( ( (lv_raw_0_0= Raw ) ) )
            // InternalSiddhiParser.g:17687:2: ( (lv_raw_0_0= Raw ) )
            {
            // InternalSiddhiParser.g:17687:2: ( (lv_raw_0_0= Raw ) )
            // InternalSiddhiParser.g:17688:3: (lv_raw_0_0= Raw )
            {
            // InternalSiddhiParser.g:17688:3: (lv_raw_0_0= Raw )
            // InternalSiddhiParser.g:17689:4: lv_raw_0_0= Raw
            {
            lv_raw_0_0=(Token)match(input,Raw,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_raw_0_0, grammarAccess.getRAWAccess().getRawRawKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRAWRule());
              				}
              				setWithLastConsumed(current, "raw", lv_raw_0_0, "raw");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 328, ruleRAW_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRAW"


    // $ANTLR start "ruleEXPIRED"
    // InternalSiddhiParser.g:17705:1: ruleEXPIRED[EObject in_current] returns [EObject current=in_current] : ( (lv_expired_0_0= Expired ) ) ;
    public final EObject ruleEXPIRED(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleEXPIRED_StartIndex = input.index();
        Token lv_expired_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 329) ) { return current; }
            // InternalSiddhiParser.g:17711:2: ( ( (lv_expired_0_0= Expired ) ) )
            // InternalSiddhiParser.g:17712:2: ( (lv_expired_0_0= Expired ) )
            {
            // InternalSiddhiParser.g:17712:2: ( (lv_expired_0_0= Expired ) )
            // InternalSiddhiParser.g:17713:3: (lv_expired_0_0= Expired )
            {
            // InternalSiddhiParser.g:17713:3: (lv_expired_0_0= Expired )
            // InternalSiddhiParser.g:17714:4: lv_expired_0_0= Expired
            {
            lv_expired_0_0=(Token)match(input,Expired,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_expired_0_0, grammarAccess.getEXPIREDAccess().getExpiredExpiredKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEXPIREDRule());
              				}
              				setWithLastConsumed(current, "expired", lv_expired_0_0, "expired");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 329, ruleEXPIRED_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEXPIRED"


    // $ANTLR start "ruleCURRENT"
    // InternalSiddhiParser.g:17730:1: ruleCURRENT[EObject in_current] returns [EObject current=in_current] : ( (lv_currt_0_0= Current ) ) ;
    public final EObject ruleCURRENT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleCURRENT_StartIndex = input.index();
        Token lv_currt_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 330) ) { return current; }
            // InternalSiddhiParser.g:17736:2: ( ( (lv_currt_0_0= Current ) ) )
            // InternalSiddhiParser.g:17737:2: ( (lv_currt_0_0= Current ) )
            {
            // InternalSiddhiParser.g:17737:2: ( (lv_currt_0_0= Current ) )
            // InternalSiddhiParser.g:17738:3: (lv_currt_0_0= Current )
            {
            // InternalSiddhiParser.g:17738:3: (lv_currt_0_0= Current )
            // InternalSiddhiParser.g:17739:4: lv_currt_0_0= Current
            {
            lv_currt_0_0=(Token)match(input,Current,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_currt_0_0, grammarAccess.getCURRENTAccess().getCurrtCurrentKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCURRENTRule());
              				}
              				setWithLastConsumed(current, "currt", lv_currt_0_0, "current");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 330, ruleCURRENT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCURRENT"


    // $ANTLR start "ruleLAST"
    // InternalSiddhiParser.g:17755:1: ruleLAST[EObject in_current] returns [EObject current=in_current] : ( (lv_last_0_0= Last ) ) ;
    public final EObject ruleLAST(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleLAST_StartIndex = input.index();
        Token lv_last_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 331) ) { return current; }
            // InternalSiddhiParser.g:17761:2: ( ( (lv_last_0_0= Last ) ) )
            // InternalSiddhiParser.g:17762:2: ( (lv_last_0_0= Last ) )
            {
            // InternalSiddhiParser.g:17762:2: ( (lv_last_0_0= Last ) )
            // InternalSiddhiParser.g:17763:3: (lv_last_0_0= Last )
            {
            // InternalSiddhiParser.g:17763:3: (lv_last_0_0= Last )
            // InternalSiddhiParser.g:17764:4: lv_last_0_0= Last
            {
            lv_last_0_0=(Token)match(input,Last,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_last_0_0, grammarAccess.getLASTAccess().getLastLastKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLASTRule());
              				}
              				setWithLastConsumed(current, "last", lv_last_0_0, "last");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 331, ruleLAST_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLAST"


    // $ANTLR start "ruleIS"
    // InternalSiddhiParser.g:17780:1: ruleIS[EObject in_current] returns [EObject current=in_current] : ( (lv_is_0_0= Is ) ) ;
    public final EObject ruleIS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleIS_StartIndex = input.index();
        Token lv_is_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 332) ) { return current; }
            // InternalSiddhiParser.g:17786:2: ( ( (lv_is_0_0= Is ) ) )
            // InternalSiddhiParser.g:17787:2: ( (lv_is_0_0= Is ) )
            {
            // InternalSiddhiParser.g:17787:2: ( (lv_is_0_0= Is ) )
            // InternalSiddhiParser.g:17788:3: (lv_is_0_0= Is )
            {
            // InternalSiddhiParser.g:17788:3: (lv_is_0_0= Is )
            // InternalSiddhiParser.g:17789:4: lv_is_0_0= Is
            {
            lv_is_0_0=(Token)match(input,Is,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_is_0_0, grammarAccess.getISAccess().getIsIsKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getISRule());
              				}
              				setWithLastConsumed(current, "is", lv_is_0_0, "is");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 332, ruleIS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIS"


    // $ANTLR start "ruleNULL"
    // InternalSiddhiParser.g:17805:1: ruleNULL[EObject in_current] returns [EObject current=in_current] : ( (lv_null_0_0= Null ) ) ;
    public final EObject ruleNULL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleNULL_StartIndex = input.index();
        Token lv_null_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 333) ) { return current; }
            // InternalSiddhiParser.g:17811:2: ( ( (lv_null_0_0= Null ) ) )
            // InternalSiddhiParser.g:17812:2: ( (lv_null_0_0= Null ) )
            {
            // InternalSiddhiParser.g:17812:2: ( (lv_null_0_0= Null ) )
            // InternalSiddhiParser.g:17813:3: (lv_null_0_0= Null )
            {
            // InternalSiddhiParser.g:17813:3: (lv_null_0_0= Null )
            // InternalSiddhiParser.g:17814:4: lv_null_0_0= Null
            {
            lv_null_0_0=(Token)match(input,Null,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_null_0_0, grammarAccess.getNULLAccess().getNullNullKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNULLRule());
              				}
              				setWithLastConsumed(current, "null", lv_null_0_0, "null");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 333, ruleNULL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNULL"


    // $ANTLR start "ruleTRIGGER"
    // InternalSiddhiParser.g:17830:1: ruleTRIGGER[EObject in_current] returns [EObject current=in_current] : ( (lv_trigger_0_0= Trigger ) ) ;
    public final EObject ruleTRIGGER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleTRIGGER_StartIndex = input.index();
        Token lv_trigger_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 334) ) { return current; }
            // InternalSiddhiParser.g:17836:2: ( ( (lv_trigger_0_0= Trigger ) ) )
            // InternalSiddhiParser.g:17837:2: ( (lv_trigger_0_0= Trigger ) )
            {
            // InternalSiddhiParser.g:17837:2: ( (lv_trigger_0_0= Trigger ) )
            // InternalSiddhiParser.g:17838:3: (lv_trigger_0_0= Trigger )
            {
            // InternalSiddhiParser.g:17838:3: (lv_trigger_0_0= Trigger )
            // InternalSiddhiParser.g:17839:4: lv_trigger_0_0= Trigger
            {
            lv_trigger_0_0=(Token)match(input,Trigger,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_trigger_0_0, grammarAccess.getTRIGGERAccess().getTriggerTriggerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTRIGGERRule());
              				}
              				setWithLastConsumed(current, "trigger", lv_trigger_0_0, "trigger");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 334, ruleTRIGGER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTRIGGER"


    // $ANTLR start "ruleAT"
    // InternalSiddhiParser.g:17855:1: ruleAT[EObject in_current] returns [EObject current=in_current] : ( (lv_at_0_0= At ) ) ;
    public final EObject ruleAT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleAT_StartIndex = input.index();
        Token lv_at_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 335) ) { return current; }
            // InternalSiddhiParser.g:17861:2: ( ( (lv_at_0_0= At ) ) )
            // InternalSiddhiParser.g:17862:2: ( (lv_at_0_0= At ) )
            {
            // InternalSiddhiParser.g:17862:2: ( (lv_at_0_0= At ) )
            // InternalSiddhiParser.g:17863:3: (lv_at_0_0= At )
            {
            // InternalSiddhiParser.g:17863:3: (lv_at_0_0= At )
            // InternalSiddhiParser.g:17864:4: lv_at_0_0= At
            {
            lv_at_0_0=(Token)match(input,At,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_at_0_0, grammarAccess.getATAccess().getAtAtKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getATRule());
              				}
              				setWithLastConsumed(current, "at", lv_at_0_0, "at");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 335, ruleAT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAT"


    // $ANTLR start "ruleFUNCTION"
    // InternalSiddhiParser.g:17880:1: ruleFUNCTION[EObject in_current] returns [EObject current=in_current] : ( (lv_function_0_0= Function ) ) ;
    public final EObject ruleFUNCTION(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFUNCTION_StartIndex = input.index();
        Token lv_function_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 336) ) { return current; }
            // InternalSiddhiParser.g:17886:2: ( ( (lv_function_0_0= Function ) ) )
            // InternalSiddhiParser.g:17887:2: ( (lv_function_0_0= Function ) )
            {
            // InternalSiddhiParser.g:17887:2: ( (lv_function_0_0= Function ) )
            // InternalSiddhiParser.g:17888:3: (lv_function_0_0= Function )
            {
            // InternalSiddhiParser.g:17888:3: (lv_function_0_0= Function )
            // InternalSiddhiParser.g:17889:4: lv_function_0_0= Function
            {
            lv_function_0_0=(Token)match(input,Function,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_function_0_0, grammarAccess.getFUNCTIONAccess().getFunctionFunctionKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFUNCTIONRule());
              				}
              				setWithLastConsumed(current, "function", lv_function_0_0, "function");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 336, ruleFUNCTION_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFUNCTION"


    // $ANTLR start "ruleRETURN"
    // InternalSiddhiParser.g:17905:1: ruleRETURN[EObject in_current] returns [EObject current=in_current] : ( (lv_return_0_0= Return ) ) ;
    public final EObject ruleRETURN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleRETURN_StartIndex = input.index();
        Token lv_return_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 337) ) { return current; }
            // InternalSiddhiParser.g:17911:2: ( ( (lv_return_0_0= Return ) ) )
            // InternalSiddhiParser.g:17912:2: ( (lv_return_0_0= Return ) )
            {
            // InternalSiddhiParser.g:17912:2: ( (lv_return_0_0= Return ) )
            // InternalSiddhiParser.g:17913:3: (lv_return_0_0= Return )
            {
            // InternalSiddhiParser.g:17913:3: (lv_return_0_0= Return )
            // InternalSiddhiParser.g:17914:4: lv_return_0_0= Return
            {
            lv_return_0_0=(Token)match(input,Return,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_return_0_0, grammarAccess.getRETURNAccess().getReturnReturnKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRETURNRule());
              				}
              				setWithLastConsumed(current, "return", lv_return_0_0, "return");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 337, ruleRETURN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRETURN"


    // $ANTLR start "ruleFROM"
    // InternalSiddhiParser.g:17930:1: ruleFROM[EObject in_current] returns [EObject current=in_current] : ( (lv_from_0_0= From ) ) ;
    public final EObject ruleFROM(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFROM_StartIndex = input.index();
        Token lv_from_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 338) ) { return current; }
            // InternalSiddhiParser.g:17936:2: ( ( (lv_from_0_0= From ) ) )
            // InternalSiddhiParser.g:17937:2: ( (lv_from_0_0= From ) )
            {
            // InternalSiddhiParser.g:17937:2: ( (lv_from_0_0= From ) )
            // InternalSiddhiParser.g:17938:3: (lv_from_0_0= From )
            {
            // InternalSiddhiParser.g:17938:3: (lv_from_0_0= From )
            // InternalSiddhiParser.g:17939:4: lv_from_0_0= From
            {
            lv_from_0_0=(Token)match(input,From,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_from_0_0, grammarAccess.getFROMAccess().getFromFromKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFROMRule());
              				}
              				setWithLastConsumed(current, "from", lv_from_0_0, "from");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 338, ruleFROM_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFROM"


    // $ANTLR start "ruleWITHIN"
    // InternalSiddhiParser.g:17955:1: ruleWITHIN[EObject in_current] returns [EObject current=in_current] : ( (lv_within_0_0= Within ) ) ;
    public final EObject ruleWITHIN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWITHIN_StartIndex = input.index();
        Token lv_within_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 339) ) { return current; }
            // InternalSiddhiParser.g:17961:2: ( ( (lv_within_0_0= Within ) ) )
            // InternalSiddhiParser.g:17962:2: ( (lv_within_0_0= Within ) )
            {
            // InternalSiddhiParser.g:17962:2: ( (lv_within_0_0= Within ) )
            // InternalSiddhiParser.g:17963:3: (lv_within_0_0= Within )
            {
            // InternalSiddhiParser.g:17963:3: (lv_within_0_0= Within )
            // InternalSiddhiParser.g:17964:4: lv_within_0_0= Within
            {
            lv_within_0_0=(Token)match(input,Within,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_within_0_0, grammarAccess.getWITHINAccess().getWithinWithinKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getWITHINRule());
              				}
              				setWithLastConsumed(current, "within", lv_within_0_0, "within");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 339, ruleWITHIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWITHIN"


    // $ANTLR start "ruleLEFT"
    // InternalSiddhiParser.g:17980:1: ruleLEFT[EObject in_current] returns [EObject current=in_current] : ( (lv_left_0_0= Left ) ) ;
    public final EObject ruleLEFT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleLEFT_StartIndex = input.index();
        Token lv_left_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 340) ) { return current; }
            // InternalSiddhiParser.g:17986:2: ( ( (lv_left_0_0= Left ) ) )
            // InternalSiddhiParser.g:17987:2: ( (lv_left_0_0= Left ) )
            {
            // InternalSiddhiParser.g:17987:2: ( (lv_left_0_0= Left ) )
            // InternalSiddhiParser.g:17988:3: (lv_left_0_0= Left )
            {
            // InternalSiddhiParser.g:17988:3: (lv_left_0_0= Left )
            // InternalSiddhiParser.g:17989:4: lv_left_0_0= Left
            {
            lv_left_0_0=(Token)match(input,Left,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_left_0_0, grammarAccess.getLEFTAccess().getLeftLeftKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLEFTRule());
              				}
              				setWithLastConsumed(current, "left", lv_left_0_0, "left");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 340, ruleLEFT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLEFT"


    // $ANTLR start "ruleRIGHT"
    // InternalSiddhiParser.g:18005:1: ruleRIGHT[EObject in_current] returns [EObject current=in_current] : ( (lv_right_0_0= Right ) ) ;
    public final EObject ruleRIGHT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleRIGHT_StartIndex = input.index();
        Token lv_right_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 341) ) { return current; }
            // InternalSiddhiParser.g:18011:2: ( ( (lv_right_0_0= Right ) ) )
            // InternalSiddhiParser.g:18012:2: ( (lv_right_0_0= Right ) )
            {
            // InternalSiddhiParser.g:18012:2: ( (lv_right_0_0= Right ) )
            // InternalSiddhiParser.g:18013:3: (lv_right_0_0= Right )
            {
            // InternalSiddhiParser.g:18013:3: (lv_right_0_0= Right )
            // InternalSiddhiParser.g:18014:4: lv_right_0_0= Right
            {
            lv_right_0_0=(Token)match(input,Right,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_right_0_0, grammarAccess.getRIGHTAccess().getRightRightKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRIGHTRule());
              				}
              				setWithLastConsumed(current, "right", lv_right_0_0, "right");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 341, ruleRIGHT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleRIGHT"


    // $ANTLR start "ruleFULL"
    // InternalSiddhiParser.g:18030:1: ruleFULL[EObject in_current] returns [EObject current=in_current] : ( (lv_full_0_0= Full ) ) ;
    public final EObject ruleFULL(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFULL_StartIndex = input.index();
        Token lv_full_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 342) ) { return current; }
            // InternalSiddhiParser.g:18036:2: ( ( (lv_full_0_0= Full ) ) )
            // InternalSiddhiParser.g:18037:2: ( (lv_full_0_0= Full ) )
            {
            // InternalSiddhiParser.g:18037:2: ( (lv_full_0_0= Full ) )
            // InternalSiddhiParser.g:18038:3: (lv_full_0_0= Full )
            {
            // InternalSiddhiParser.g:18038:3: (lv_full_0_0= Full )
            // InternalSiddhiParser.g:18039:4: lv_full_0_0= Full
            {
            lv_full_0_0=(Token)match(input,Full,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_full_0_0, grammarAccess.getFULLAccess().getFullFullKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFULLRule());
              				}
              				setWithLastConsumed(current, "full", lv_full_0_0, "full");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 342, ruleFULL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFULL"


    // $ANTLR start "ruleJOIN"
    // InternalSiddhiParser.g:18055:1: ruleJOIN[EObject in_current] returns [EObject current=in_current] : ( (lv_join_0_0= Join ) ) ;
    public final EObject ruleJOIN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleJOIN_StartIndex = input.index();
        Token lv_join_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 343) ) { return current; }
            // InternalSiddhiParser.g:18061:2: ( ( (lv_join_0_0= Join ) ) )
            // InternalSiddhiParser.g:18062:2: ( (lv_join_0_0= Join ) )
            {
            // InternalSiddhiParser.g:18062:2: ( (lv_join_0_0= Join ) )
            // InternalSiddhiParser.g:18063:3: (lv_join_0_0= Join )
            {
            // InternalSiddhiParser.g:18063:3: (lv_join_0_0= Join )
            // InternalSiddhiParser.g:18064:4: lv_join_0_0= Join
            {
            lv_join_0_0=(Token)match(input,Join,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_join_0_0, grammarAccess.getJOINAccess().getJoinJoinKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getJOINRule());
              				}
              				setWithLastConsumed(current, "join", lv_join_0_0, "join");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 343, ruleJOIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleJOIN"


    // $ANTLR start "ruleINNER"
    // InternalSiddhiParser.g:18080:1: ruleINNER[EObject in_current] returns [EObject current=in_current] : ( (lv_inner_0_0= Inner ) ) ;
    public final EObject ruleINNER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINNER_StartIndex = input.index();
        Token lv_inner_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 344) ) { return current; }
            // InternalSiddhiParser.g:18086:2: ( ( (lv_inner_0_0= Inner ) ) )
            // InternalSiddhiParser.g:18087:2: ( (lv_inner_0_0= Inner ) )
            {
            // InternalSiddhiParser.g:18087:2: ( (lv_inner_0_0= Inner ) )
            // InternalSiddhiParser.g:18088:3: (lv_inner_0_0= Inner )
            {
            // InternalSiddhiParser.g:18088:3: (lv_inner_0_0= Inner )
            // InternalSiddhiParser.g:18089:4: lv_inner_0_0= Inner
            {
            lv_inner_0_0=(Token)match(input,Inner,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_inner_0_0, grammarAccess.getINNERAccess().getInnerInnerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINNERRule());
              				}
              				setWithLastConsumed(current, "inner", lv_inner_0_0, "inner");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 344, ruleINNER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINNER"


    // $ANTLR start "ruleOUTER"
    // InternalSiddhiParser.g:18105:1: ruleOUTER[EObject in_current] returns [EObject current=in_current] : ( (lv_outer_0_0= Outer ) ) ;
    public final EObject ruleOUTER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleOUTER_StartIndex = input.index();
        Token lv_outer_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 345) ) { return current; }
            // InternalSiddhiParser.g:18111:2: ( ( (lv_outer_0_0= Outer ) ) )
            // InternalSiddhiParser.g:18112:2: ( (lv_outer_0_0= Outer ) )
            {
            // InternalSiddhiParser.g:18112:2: ( (lv_outer_0_0= Outer ) )
            // InternalSiddhiParser.g:18113:3: (lv_outer_0_0= Outer )
            {
            // InternalSiddhiParser.g:18113:3: (lv_outer_0_0= Outer )
            // InternalSiddhiParser.g:18114:4: lv_outer_0_0= Outer
            {
            lv_outer_0_0=(Token)match(input,Outer,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_outer_0_0, grammarAccess.getOUTERAccess().getOuterOuterKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOUTERRule());
              				}
              				setWithLastConsumed(current, "outer", lv_outer_0_0, "outer");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 345, ruleOUTER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOUTER"


    // $ANTLR start "ruleSELECT"
    // InternalSiddhiParser.g:18130:1: ruleSELECT[EObject in_current] returns [EObject current=in_current] : ( (lv_select_0_0= Select ) ) ;
    public final EObject ruleSELECT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSELECT_StartIndex = input.index();
        Token lv_select_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 346) ) { return current; }
            // InternalSiddhiParser.g:18136:2: ( ( (lv_select_0_0= Select ) ) )
            // InternalSiddhiParser.g:18137:2: ( (lv_select_0_0= Select ) )
            {
            // InternalSiddhiParser.g:18137:2: ( (lv_select_0_0= Select ) )
            // InternalSiddhiParser.g:18138:3: (lv_select_0_0= Select )
            {
            // InternalSiddhiParser.g:18138:3: (lv_select_0_0= Select )
            // InternalSiddhiParser.g:18139:4: lv_select_0_0= Select
            {
            lv_select_0_0=(Token)match(input,Select,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_select_0_0, grammarAccess.getSELECTAccess().getSelectSelectKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSELECTRule());
              				}
              				setWithLastConsumed(current, "select", lv_select_0_0, "select");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 346, ruleSELECT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSELECT"


    // $ANTLR start "ruleGROUP"
    // InternalSiddhiParser.g:18155:1: ruleGROUP[EObject in_current] returns [EObject current=in_current] : ( (lv_group_0_0= Group ) ) ;
    public final EObject ruleGROUP(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleGROUP_StartIndex = input.index();
        Token lv_group_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 347) ) { return current; }
            // InternalSiddhiParser.g:18161:2: ( ( (lv_group_0_0= Group ) ) )
            // InternalSiddhiParser.g:18162:2: ( (lv_group_0_0= Group ) )
            {
            // InternalSiddhiParser.g:18162:2: ( (lv_group_0_0= Group ) )
            // InternalSiddhiParser.g:18163:3: (lv_group_0_0= Group )
            {
            // InternalSiddhiParser.g:18163:3: (lv_group_0_0= Group )
            // InternalSiddhiParser.g:18164:4: lv_group_0_0= Group
            {
            lv_group_0_0=(Token)match(input,Group,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_group_0_0, grammarAccess.getGROUPAccess().getGroupGroupKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getGROUPRule());
              				}
              				setWithLastConsumed(current, "group", lv_group_0_0, "group");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 347, ruleGROUP_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleGROUP"


    // $ANTLR start "ruleBY"
    // InternalSiddhiParser.g:18180:1: ruleBY[EObject in_current] returns [EObject current=in_current] : ( (lv_by_0_0= By ) ) ;
    public final EObject ruleBY(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleBY_StartIndex = input.index();
        Token lv_by_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 348) ) { return current; }
            // InternalSiddhiParser.g:18186:2: ( ( (lv_by_0_0= By ) ) )
            // InternalSiddhiParser.g:18187:2: ( (lv_by_0_0= By ) )
            {
            // InternalSiddhiParser.g:18187:2: ( (lv_by_0_0= By ) )
            // InternalSiddhiParser.g:18188:3: (lv_by_0_0= By )
            {
            // InternalSiddhiParser.g:18188:3: (lv_by_0_0= By )
            // InternalSiddhiParser.g:18189:4: lv_by_0_0= By
            {
            lv_by_0_0=(Token)match(input,By,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_by_0_0, grammarAccess.getBYAccess().getByByKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBYRule());
              				}
              				setWithLastConsumed(current, "by", lv_by_0_0, "by");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 348, ruleBY_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBY"


    // $ANTLR start "ruleHAVING"
    // InternalSiddhiParser.g:18205:1: ruleHAVING[EObject in_current] returns [EObject current=in_current] : ( (lv_having_0_0= Having ) ) ;
    public final EObject ruleHAVING(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleHAVING_StartIndex = input.index();
        Token lv_having_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 349) ) { return current; }
            // InternalSiddhiParser.g:18211:2: ( ( (lv_having_0_0= Having ) ) )
            // InternalSiddhiParser.g:18212:2: ( (lv_having_0_0= Having ) )
            {
            // InternalSiddhiParser.g:18212:2: ( (lv_having_0_0= Having ) )
            // InternalSiddhiParser.g:18213:3: (lv_having_0_0= Having )
            {
            // InternalSiddhiParser.g:18213:3: (lv_having_0_0= Having )
            // InternalSiddhiParser.g:18214:4: lv_having_0_0= Having
            {
            lv_having_0_0=(Token)match(input,Having,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_having_0_0, grammarAccess.getHAVINGAccess().getHavingHavingKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getHAVINGRule());
              				}
              				setWithLastConsumed(current, "having", lv_having_0_0, "having");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 349, ruleHAVING_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHAVING"


    // $ANTLR start "ruleSNAPSHOT"
    // InternalSiddhiParser.g:18230:1: ruleSNAPSHOT[EObject in_current] returns [EObject current=in_current] : ( (lv_snapshot_0_0= Snapshot ) ) ;
    public final EObject ruleSNAPSHOT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSNAPSHOT_StartIndex = input.index();
        Token lv_snapshot_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 350) ) { return current; }
            // InternalSiddhiParser.g:18236:2: ( ( (lv_snapshot_0_0= Snapshot ) ) )
            // InternalSiddhiParser.g:18237:2: ( (lv_snapshot_0_0= Snapshot ) )
            {
            // InternalSiddhiParser.g:18237:2: ( (lv_snapshot_0_0= Snapshot ) )
            // InternalSiddhiParser.g:18238:3: (lv_snapshot_0_0= Snapshot )
            {
            // InternalSiddhiParser.g:18238:3: (lv_snapshot_0_0= Snapshot )
            // InternalSiddhiParser.g:18239:4: lv_snapshot_0_0= Snapshot
            {
            lv_snapshot_0_0=(Token)match(input,Snapshot,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_snapshot_0_0, grammarAccess.getSNAPSHOTAccess().getSnapshotSnapshotKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSNAPSHOTRule());
              				}
              				setWithLastConsumed(current, "snapshot", lv_snapshot_0_0, "snapshot");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 350, ruleSNAPSHOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSNAPSHOT"


    // $ANTLR start "ruleFIRST"
    // InternalSiddhiParser.g:18255:1: ruleFIRST[EObject in_current] returns [EObject current=in_current] : ( (lv_first_0_0= First ) ) ;
    public final EObject ruleFIRST(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFIRST_StartIndex = input.index();
        Token lv_first_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 351) ) { return current; }
            // InternalSiddhiParser.g:18261:2: ( ( (lv_first_0_0= First ) ) )
            // InternalSiddhiParser.g:18262:2: ( (lv_first_0_0= First ) )
            {
            // InternalSiddhiParser.g:18262:2: ( (lv_first_0_0= First ) )
            // InternalSiddhiParser.g:18263:3: (lv_first_0_0= First )
            {
            // InternalSiddhiParser.g:18263:3: (lv_first_0_0= First )
            // InternalSiddhiParser.g:18264:4: lv_first_0_0= First
            {
            lv_first_0_0=(Token)match(input,First,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_first_0_0, grammarAccess.getFIRSTAccess().getFirstFirstKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFIRSTRule());
              				}
              				setWithLastConsumed(current, "first", lv_first_0_0, "first");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 351, ruleFIRST_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFIRST"


    // $ANTLR start "ruleINSERT"
    // InternalSiddhiParser.g:18280:1: ruleINSERT[EObject in_current] returns [EObject current=in_current] : ( (lv_insert_0_0= Insert ) ) ;
    public final EObject ruleINSERT(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINSERT_StartIndex = input.index();
        Token lv_insert_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 352) ) { return current; }
            // InternalSiddhiParser.g:18286:2: ( ( (lv_insert_0_0= Insert ) ) )
            // InternalSiddhiParser.g:18287:2: ( (lv_insert_0_0= Insert ) )
            {
            // InternalSiddhiParser.g:18287:2: ( (lv_insert_0_0= Insert ) )
            // InternalSiddhiParser.g:18288:3: (lv_insert_0_0= Insert )
            {
            // InternalSiddhiParser.g:18288:3: (lv_insert_0_0= Insert )
            // InternalSiddhiParser.g:18289:4: lv_insert_0_0= Insert
            {
            lv_insert_0_0=(Token)match(input,Insert,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_insert_0_0, grammarAccess.getINSERTAccess().getInsertInsertKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINSERTRule());
              				}
              				setWithLastConsumed(current, "insert", lv_insert_0_0, "insert");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 352, ruleINSERT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINSERT"


    // $ANTLR start "ruleINTO"
    // InternalSiddhiParser.g:18305:1: ruleINTO[EObject in_current] returns [EObject current=in_current] : ( (lv_into_0_0= Into ) ) ;
    public final EObject ruleINTO(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleINTO_StartIndex = input.index();
        Token lv_into_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 353) ) { return current; }
            // InternalSiddhiParser.g:18311:2: ( ( (lv_into_0_0= Into ) ) )
            // InternalSiddhiParser.g:18312:2: ( (lv_into_0_0= Into ) )
            {
            // InternalSiddhiParser.g:18312:2: ( (lv_into_0_0= Into ) )
            // InternalSiddhiParser.g:18313:3: (lv_into_0_0= Into )
            {
            // InternalSiddhiParser.g:18313:3: (lv_into_0_0= Into )
            // InternalSiddhiParser.g:18314:4: lv_into_0_0= Into
            {
            lv_into_0_0=(Token)match(input,Into,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_into_0_0, grammarAccess.getINTOAccess().getIntoIntoKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getINTORule());
              				}
              				setWithLastConsumed(current, "into", lv_into_0_0, "into");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 353, ruleINTO_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleINTO"


    // $ANTLR start "ruleBEGIN"
    // InternalSiddhiParser.g:18330:1: ruleBEGIN[EObject in_current] returns [EObject current=in_current] : ( (lv_begin_0_0= Begin ) ) ;
    public final EObject ruleBEGIN(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleBEGIN_StartIndex = input.index();
        Token lv_begin_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 354) ) { return current; }
            // InternalSiddhiParser.g:18336:2: ( ( (lv_begin_0_0= Begin ) ) )
            // InternalSiddhiParser.g:18337:2: ( (lv_begin_0_0= Begin ) )
            {
            // InternalSiddhiParser.g:18337:2: ( (lv_begin_0_0= Begin ) )
            // InternalSiddhiParser.g:18338:3: (lv_begin_0_0= Begin )
            {
            // InternalSiddhiParser.g:18338:3: (lv_begin_0_0= Begin )
            // InternalSiddhiParser.g:18339:4: lv_begin_0_0= Begin
            {
            lv_begin_0_0=(Token)match(input,Begin,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_begin_0_0, grammarAccess.getBEGINAccess().getBeginBeginKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBEGINRule());
              				}
              				setWithLastConsumed(current, "begin", lv_begin_0_0, "begin");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 354, ruleBEGIN_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBEGIN"


    // $ANTLR start "ruleDELETE"
    // InternalSiddhiParser.g:18355:1: ruleDELETE[EObject in_current] returns [EObject current=in_current] : ( (lv_delete_0_0= Delete ) ) ;
    public final EObject ruleDELETE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDELETE_StartIndex = input.index();
        Token lv_delete_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 355) ) { return current; }
            // InternalSiddhiParser.g:18361:2: ( ( (lv_delete_0_0= Delete ) ) )
            // InternalSiddhiParser.g:18362:2: ( (lv_delete_0_0= Delete ) )
            {
            // InternalSiddhiParser.g:18362:2: ( (lv_delete_0_0= Delete ) )
            // InternalSiddhiParser.g:18363:3: (lv_delete_0_0= Delete )
            {
            // InternalSiddhiParser.g:18363:3: (lv_delete_0_0= Delete )
            // InternalSiddhiParser.g:18364:4: lv_delete_0_0= Delete
            {
            lv_delete_0_0=(Token)match(input,Delete,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_delete_0_0, grammarAccess.getDELETEAccess().getDeleteDeleteKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDELETERule());
              				}
              				setWithLastConsumed(current, "delete", lv_delete_0_0, "delete");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 355, ruleDELETE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDELETE"


    // $ANTLR start "ruleFOR"
    // InternalSiddhiParser.g:18380:1: ruleFOR[EObject in_current] returns [EObject current=in_current] : ( (lv_for_0_0= For ) ) ;
    public final EObject ruleFOR(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFOR_StartIndex = input.index();
        Token lv_for_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 356) ) { return current; }
            // InternalSiddhiParser.g:18386:2: ( ( (lv_for_0_0= For ) ) )
            // InternalSiddhiParser.g:18387:2: ( (lv_for_0_0= For ) )
            {
            // InternalSiddhiParser.g:18387:2: ( (lv_for_0_0= For ) )
            // InternalSiddhiParser.g:18388:3: (lv_for_0_0= For )
            {
            // InternalSiddhiParser.g:18388:3: (lv_for_0_0= For )
            // InternalSiddhiParser.g:18389:4: lv_for_0_0= For
            {
            lv_for_0_0=(Token)match(input,For,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_for_0_0, grammarAccess.getFORAccess().getForForKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFORRule());
              				}
              				setWithLastConsumed(current, "for", lv_for_0_0, "for");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 356, ruleFOR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFOR"


    // $ANTLR start "ruleUPDATE"
    // InternalSiddhiParser.g:18405:1: ruleUPDATE[EObject in_current] returns [EObject current=in_current] : ( (lv_update_0_0= Update ) ) ;
    public final EObject ruleUPDATE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleUPDATE_StartIndex = input.index();
        Token lv_update_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 357) ) { return current; }
            // InternalSiddhiParser.g:18411:2: ( ( (lv_update_0_0= Update ) ) )
            // InternalSiddhiParser.g:18412:2: ( (lv_update_0_0= Update ) )
            {
            // InternalSiddhiParser.g:18412:2: ( (lv_update_0_0= Update ) )
            // InternalSiddhiParser.g:18413:3: (lv_update_0_0= Update )
            {
            // InternalSiddhiParser.g:18413:3: (lv_update_0_0= Update )
            // InternalSiddhiParser.g:18414:4: lv_update_0_0= Update
            {
            lv_update_0_0=(Token)match(input,Update,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_update_0_0, grammarAccess.getUPDATEAccess().getUpdateUpdateKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUPDATERule());
              				}
              				setWithLastConsumed(current, "update", lv_update_0_0, "update");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 357, ruleUPDATE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUPDATE"


    // $ANTLR start "ruleEND"
    // InternalSiddhiParser.g:18430:1: ruleEND[EObject in_current] returns [EObject current=in_current] : ( (lv_end_0_0= End ) ) ;
    public final EObject ruleEND(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleEND_StartIndex = input.index();
        Token lv_end_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 358) ) { return current; }
            // InternalSiddhiParser.g:18436:2: ( ( (lv_end_0_0= End ) ) )
            // InternalSiddhiParser.g:18437:2: ( (lv_end_0_0= End ) )
            {
            // InternalSiddhiParser.g:18437:2: ( (lv_end_0_0= End ) )
            // InternalSiddhiParser.g:18438:3: (lv_end_0_0= End )
            {
            // InternalSiddhiParser.g:18438:3: (lv_end_0_0= End )
            // InternalSiddhiParser.g:18439:4: lv_end_0_0= End
            {
            lv_end_0_0=(Token)match(input,End,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_end_0_0, grammarAccess.getENDAccess().getEndEndKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getENDRule());
              				}
              				setWithLastConsumed(current, "end", lv_end_0_0, "end");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 358, ruleEND_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEND"


    // $ANTLR start "rulePARTITION"
    // InternalSiddhiParser.g:18455:1: rulePARTITION[EObject in_current] returns [EObject current=in_current] : ( (lv_partition_0_0= Partition ) ) ;
    public final EObject rulePARTITION(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int rulePARTITION_StartIndex = input.index();
        Token lv_partition_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 359) ) { return current; }
            // InternalSiddhiParser.g:18461:2: ( ( (lv_partition_0_0= Partition ) ) )
            // InternalSiddhiParser.g:18462:2: ( (lv_partition_0_0= Partition ) )
            {
            // InternalSiddhiParser.g:18462:2: ( (lv_partition_0_0= Partition ) )
            // InternalSiddhiParser.g:18463:3: (lv_partition_0_0= Partition )
            {
            // InternalSiddhiParser.g:18463:3: (lv_partition_0_0= Partition )
            // InternalSiddhiParser.g:18464:4: lv_partition_0_0= Partition
            {
            lv_partition_0_0=(Token)match(input,Partition,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_partition_0_0, grammarAccess.getPARTITIONAccess().getPartitionPartitionKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getPARTITIONRule());
              				}
              				setWithLastConsumed(current, "partition", lv_partition_0_0, "partition");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 359, rulePARTITION_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePARTITION"


    // $ANTLR start "ruleWITH"
    // InternalSiddhiParser.g:18480:1: ruleWITH[EObject in_current] returns [EObject current=in_current] : ( (lv_wi_0_0= With ) ) ;
    public final EObject ruleWITH(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWITH_StartIndex = input.index();
        Token lv_wi_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 360) ) { return current; }
            // InternalSiddhiParser.g:18486:2: ( ( (lv_wi_0_0= With ) ) )
            // InternalSiddhiParser.g:18487:2: ( (lv_wi_0_0= With ) )
            {
            // InternalSiddhiParser.g:18487:2: ( (lv_wi_0_0= With ) )
            // InternalSiddhiParser.g:18488:3: (lv_wi_0_0= With )
            {
            // InternalSiddhiParser.g:18488:3: (lv_wi_0_0= With )
            // InternalSiddhiParser.g:18489:4: lv_wi_0_0= With
            {
            lv_wi_0_0=(Token)match(input,With,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_wi_0_0, grammarAccess.getWITHAccess().getWiWithKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getWITHRule());
              				}
              				setWithLastConsumed(current, "wi", lv_wi_0_0, "with");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 360, ruleWITH_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWITH"


    // $ANTLR start "ruleAGGREGATION"
    // InternalSiddhiParser.g:18505:1: ruleAGGREGATION[EObject in_current] returns [EObject current=in_current] : ( (lv_aggre_0_0= Aggregation ) ) ;
    public final EObject ruleAGGREGATION(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleAGGREGATION_StartIndex = input.index();
        Token lv_aggre_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 361) ) { return current; }
            // InternalSiddhiParser.g:18511:2: ( ( (lv_aggre_0_0= Aggregation ) ) )
            // InternalSiddhiParser.g:18512:2: ( (lv_aggre_0_0= Aggregation ) )
            {
            // InternalSiddhiParser.g:18512:2: ( (lv_aggre_0_0= Aggregation ) )
            // InternalSiddhiParser.g:18513:3: (lv_aggre_0_0= Aggregation )
            {
            // InternalSiddhiParser.g:18513:3: (lv_aggre_0_0= Aggregation )
            // InternalSiddhiParser.g:18514:4: lv_aggre_0_0= Aggregation
            {
            lv_aggre_0_0=(Token)match(input,Aggregation,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_aggre_0_0, grammarAccess.getAGGREGATIONAccess().getAggreAggregationKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAGGREGATIONRule());
              				}
              				setWithLastConsumed(current, "aggre", lv_aggre_0_0, "aggregation");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 361, ruleAGGREGATION_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAGGREGATION"


    // $ANTLR start "ruleAGGREGATE"
    // InternalSiddhiParser.g:18530:1: ruleAGGREGATE[EObject in_current] returns [EObject current=in_current] : ( (lv_agrregate_0_0= Aggregate ) ) ;
    public final EObject ruleAGGREGATE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleAGGREGATE_StartIndex = input.index();
        Token lv_agrregate_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 362) ) { return current; }
            // InternalSiddhiParser.g:18536:2: ( ( (lv_agrregate_0_0= Aggregate ) ) )
            // InternalSiddhiParser.g:18537:2: ( (lv_agrregate_0_0= Aggregate ) )
            {
            // InternalSiddhiParser.g:18537:2: ( (lv_agrregate_0_0= Aggregate ) )
            // InternalSiddhiParser.g:18538:3: (lv_agrregate_0_0= Aggregate )
            {
            // InternalSiddhiParser.g:18538:3: (lv_agrregate_0_0= Aggregate )
            // InternalSiddhiParser.g:18539:4: lv_agrregate_0_0= Aggregate
            {
            lv_agrregate_0_0=(Token)match(input,Aggregate,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_agrregate_0_0, grammarAccess.getAGGREGATEAccess().getAgrregateAggregateKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAGGREGATERule());
              				}
              				setWithLastConsumed(current, "agrregate", lv_agrregate_0_0, "aggregate");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 362, ruleAGGREGATE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAGGREGATE"


    // $ANTLR start "ruleSET"
    // InternalSiddhiParser.g:18555:1: ruleSET[EObject in_current] returns [EObject current=in_current] : ( (lv_set_0_0= Set ) ) ;
    public final EObject ruleSET(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSET_StartIndex = input.index();
        Token lv_set_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 363) ) { return current; }
            // InternalSiddhiParser.g:18561:2: ( ( (lv_set_0_0= Set ) ) )
            // InternalSiddhiParser.g:18562:2: ( (lv_set_0_0= Set ) )
            {
            // InternalSiddhiParser.g:18562:2: ( (lv_set_0_0= Set ) )
            // InternalSiddhiParser.g:18563:3: (lv_set_0_0= Set )
            {
            // InternalSiddhiParser.g:18563:3: (lv_set_0_0= Set )
            // InternalSiddhiParser.g:18564:4: lv_set_0_0= Set
            {
            lv_set_0_0=(Token)match(input,Set,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_set_0_0, grammarAccess.getSETAccess().getSetSetKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSETRule());
              				}
              				setWithLastConsumed(current, "set", lv_set_0_0, "set");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 363, ruleSET_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSET"


    // $ANTLR start "rulePER"
    // InternalSiddhiParser.g:18580:1: rulePER[EObject in_current] returns [EObject current=in_current] : ( (lv_per_0_0= Per ) ) ;
    public final EObject rulePER(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int rulePER_StartIndex = input.index();
        Token lv_per_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 364) ) { return current; }
            // InternalSiddhiParser.g:18586:2: ( ( (lv_per_0_0= Per ) ) )
            // InternalSiddhiParser.g:18587:2: ( (lv_per_0_0= Per ) )
            {
            // InternalSiddhiParser.g:18587:2: ( (lv_per_0_0= Per ) )
            // InternalSiddhiParser.g:18588:3: (lv_per_0_0= Per )
            {
            // InternalSiddhiParser.g:18588:3: (lv_per_0_0= Per )
            // InternalSiddhiParser.g:18589:4: lv_per_0_0= Per
            {
            lv_per_0_0=(Token)match(input,Per,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_per_0_0, grammarAccess.getPERAccess().getPerPerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getPERRule());
              				}
              				setWithLastConsumed(current, "per", lv_per_0_0, "per");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 364, rulePER_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePER"


    // $ANTLR start "ruleYEARS"
    // InternalSiddhiParser.g:18605:1: ruleYEARS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) ) ;
    public final EObject ruleYEARS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleYEARS_StartIndex = input.index();
        Token lv_year_0_0=null;
        Token lv_years_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 365) ) { return current; }
            // InternalSiddhiParser.g:18611:2: ( ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) ) )
            // InternalSiddhiParser.g:18612:2: ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) )
            {
            // InternalSiddhiParser.g:18612:2: ( ( (lv_year_0_0= Year ) ) | ( (lv_years_1_0= Years ) ) )
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==Year) ) {
                alt235=1;
            }
            else if ( (LA235_0==Years) ) {
                alt235=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;
            }
            switch (alt235) {
                case 1 :
                    // InternalSiddhiParser.g:18613:3: ( (lv_year_0_0= Year ) )
                    {
                    // InternalSiddhiParser.g:18613:3: ( (lv_year_0_0= Year ) )
                    // InternalSiddhiParser.g:18614:4: (lv_year_0_0= Year )
                    {
                    // InternalSiddhiParser.g:18614:4: (lv_year_0_0= Year )
                    // InternalSiddhiParser.g:18615:5: lv_year_0_0= Year
                    {
                    lv_year_0_0=(Token)match(input,Year,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_year_0_0, grammarAccess.getYEARSAccess().getYearYearKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getYEARSRule());
                      					}
                      					setWithLastConsumed(current, "year", lv_year_0_0, "year");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18628:3: ( (lv_years_1_0= Years ) )
                    {
                    // InternalSiddhiParser.g:18628:3: ( (lv_years_1_0= Years ) )
                    // InternalSiddhiParser.g:18629:4: (lv_years_1_0= Years )
                    {
                    // InternalSiddhiParser.g:18629:4: (lv_years_1_0= Years )
                    // InternalSiddhiParser.g:18630:5: lv_years_1_0= Years
                    {
                    lv_years_1_0=(Token)match(input,Years,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_years_1_0, grammarAccess.getYEARSAccess().getYearsYearsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getYEARSRule());
                      					}
                      					setWithLastConsumed(current, "years", lv_years_1_0, "years");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 365, ruleYEARS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleYEARS"


    // $ANTLR start "ruleMONTHS"
    // InternalSiddhiParser.g:18647:1: ruleMONTHS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) ) ;
    public final EObject ruleMONTHS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleMONTHS_StartIndex = input.index();
        Token lv_month_0_0=null;
        Token lv_months_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 366) ) { return current; }
            // InternalSiddhiParser.g:18653:2: ( ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) ) )
            // InternalSiddhiParser.g:18654:2: ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) )
            {
            // InternalSiddhiParser.g:18654:2: ( ( (lv_month_0_0= Month ) ) | ( (lv_months_1_0= Months ) ) )
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==Month) ) {
                alt236=1;
            }
            else if ( (LA236_0==Months) ) {
                alt236=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 236, 0, input);

                throw nvae;
            }
            switch (alt236) {
                case 1 :
                    // InternalSiddhiParser.g:18655:3: ( (lv_month_0_0= Month ) )
                    {
                    // InternalSiddhiParser.g:18655:3: ( (lv_month_0_0= Month ) )
                    // InternalSiddhiParser.g:18656:4: (lv_month_0_0= Month )
                    {
                    // InternalSiddhiParser.g:18656:4: (lv_month_0_0= Month )
                    // InternalSiddhiParser.g:18657:5: lv_month_0_0= Month
                    {
                    lv_month_0_0=(Token)match(input,Month,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_month_0_0, grammarAccess.getMONTHSAccess().getMonthMonthKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMONTHSRule());
                      					}
                      					setWithLastConsumed(current, "month", lv_month_0_0, "month");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18670:3: ( (lv_months_1_0= Months ) )
                    {
                    // InternalSiddhiParser.g:18670:3: ( (lv_months_1_0= Months ) )
                    // InternalSiddhiParser.g:18671:4: (lv_months_1_0= Months )
                    {
                    // InternalSiddhiParser.g:18671:4: (lv_months_1_0= Months )
                    // InternalSiddhiParser.g:18672:5: lv_months_1_0= Months
                    {
                    lv_months_1_0=(Token)match(input,Months,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_months_1_0, grammarAccess.getMONTHSAccess().getMonthsMonthsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMONTHSRule());
                      					}
                      					setWithLastConsumed(current, "months", lv_months_1_0, "months");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 366, ruleMONTHS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMONTHS"


    // $ANTLR start "ruleWEEKS"
    // InternalSiddhiParser.g:18689:1: ruleWEEKS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) ) ;
    public final EObject ruleWEEKS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleWEEKS_StartIndex = input.index();
        Token lv_week_0_0=null;
        Token lv_weeks_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 367) ) { return current; }
            // InternalSiddhiParser.g:18695:2: ( ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) ) )
            // InternalSiddhiParser.g:18696:2: ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) )
            {
            // InternalSiddhiParser.g:18696:2: ( ( (lv_week_0_0= Week ) ) | ( (lv_weeks_1_0= Weeks ) ) )
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==Week) ) {
                alt237=1;
            }
            else if ( (LA237_0==Weeks) ) {
                alt237=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;
            }
            switch (alt237) {
                case 1 :
                    // InternalSiddhiParser.g:18697:3: ( (lv_week_0_0= Week ) )
                    {
                    // InternalSiddhiParser.g:18697:3: ( (lv_week_0_0= Week ) )
                    // InternalSiddhiParser.g:18698:4: (lv_week_0_0= Week )
                    {
                    // InternalSiddhiParser.g:18698:4: (lv_week_0_0= Week )
                    // InternalSiddhiParser.g:18699:5: lv_week_0_0= Week
                    {
                    lv_week_0_0=(Token)match(input,Week,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_week_0_0, grammarAccess.getWEEKSAccess().getWeekWeekKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getWEEKSRule());
                      					}
                      					setWithLastConsumed(current, "week", lv_week_0_0, "week");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18712:3: ( (lv_weeks_1_0= Weeks ) )
                    {
                    // InternalSiddhiParser.g:18712:3: ( (lv_weeks_1_0= Weeks ) )
                    // InternalSiddhiParser.g:18713:4: (lv_weeks_1_0= Weeks )
                    {
                    // InternalSiddhiParser.g:18713:4: (lv_weeks_1_0= Weeks )
                    // InternalSiddhiParser.g:18714:5: lv_weeks_1_0= Weeks
                    {
                    lv_weeks_1_0=(Token)match(input,Weeks,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_weeks_1_0, grammarAccess.getWEEKSAccess().getWeeksWeeksKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getWEEKSRule());
                      					}
                      					setWithLastConsumed(current, "weeks", lv_weeks_1_0, "weeks");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 367, ruleWEEKS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWEEKS"


    // $ANTLR start "ruleDAYS"
    // InternalSiddhiParser.g:18731:1: ruleDAYS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) ) ;
    public final EObject ruleDAYS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleDAYS_StartIndex = input.index();
        Token lv_day_0_0=null;
        Token lv_days_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 368) ) { return current; }
            // InternalSiddhiParser.g:18737:2: ( ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) ) )
            // InternalSiddhiParser.g:18738:2: ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) )
            {
            // InternalSiddhiParser.g:18738:2: ( ( (lv_day_0_0= Day ) ) | ( (lv_days_1_0= Days ) ) )
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==Day) ) {
                alt238=1;
            }
            else if ( (LA238_0==Days) ) {
                alt238=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 238, 0, input);

                throw nvae;
            }
            switch (alt238) {
                case 1 :
                    // InternalSiddhiParser.g:18739:3: ( (lv_day_0_0= Day ) )
                    {
                    // InternalSiddhiParser.g:18739:3: ( (lv_day_0_0= Day ) )
                    // InternalSiddhiParser.g:18740:4: (lv_day_0_0= Day )
                    {
                    // InternalSiddhiParser.g:18740:4: (lv_day_0_0= Day )
                    // InternalSiddhiParser.g:18741:5: lv_day_0_0= Day
                    {
                    lv_day_0_0=(Token)match(input,Day,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_day_0_0, grammarAccess.getDAYSAccess().getDayDayKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAYSRule());
                      					}
                      					setWithLastConsumed(current, "day", lv_day_0_0, "day");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18754:3: ( (lv_days_1_0= Days ) )
                    {
                    // InternalSiddhiParser.g:18754:3: ( (lv_days_1_0= Days ) )
                    // InternalSiddhiParser.g:18755:4: (lv_days_1_0= Days )
                    {
                    // InternalSiddhiParser.g:18755:4: (lv_days_1_0= Days )
                    // InternalSiddhiParser.g:18756:5: lv_days_1_0= Days
                    {
                    lv_days_1_0=(Token)match(input,Days,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_days_1_0, grammarAccess.getDAYSAccess().getDaysDaysKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAYSRule());
                      					}
                      					setWithLastConsumed(current, "days", lv_days_1_0, "days");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 368, ruleDAYS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDAYS"


    // $ANTLR start "ruleHOURS"
    // InternalSiddhiParser.g:18773:1: ruleHOURS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) ) ;
    public final EObject ruleHOURS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleHOURS_StartIndex = input.index();
        Token lv_hour_0_0=null;
        Token lv_hours_1_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 369) ) { return current; }
            // InternalSiddhiParser.g:18779:2: ( ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) ) )
            // InternalSiddhiParser.g:18780:2: ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) )
            {
            // InternalSiddhiParser.g:18780:2: ( ( (lv_hour_0_0= Hour ) ) | ( (lv_hours_1_0= Hours ) ) )
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==Hour) ) {
                alt239=1;
            }
            else if ( (LA239_0==Hours) ) {
                alt239=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;
            }
            switch (alt239) {
                case 1 :
                    // InternalSiddhiParser.g:18781:3: ( (lv_hour_0_0= Hour ) )
                    {
                    // InternalSiddhiParser.g:18781:3: ( (lv_hour_0_0= Hour ) )
                    // InternalSiddhiParser.g:18782:4: (lv_hour_0_0= Hour )
                    {
                    // InternalSiddhiParser.g:18782:4: (lv_hour_0_0= Hour )
                    // InternalSiddhiParser.g:18783:5: lv_hour_0_0= Hour
                    {
                    lv_hour_0_0=(Token)match(input,Hour,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hour_0_0, grammarAccess.getHOURSAccess().getHourHourKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHOURSRule());
                      					}
                      					setWithLastConsumed(current, "hour", lv_hour_0_0, "hour");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18796:3: ( (lv_hours_1_0= Hours ) )
                    {
                    // InternalSiddhiParser.g:18796:3: ( (lv_hours_1_0= Hours ) )
                    // InternalSiddhiParser.g:18797:4: (lv_hours_1_0= Hours )
                    {
                    // InternalSiddhiParser.g:18797:4: (lv_hours_1_0= Hours )
                    // InternalSiddhiParser.g:18798:5: lv_hours_1_0= Hours
                    {
                    lv_hours_1_0=(Token)match(input,Hours,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hours_1_0, grammarAccess.getHOURSAccess().getHoursHoursKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHOURSRule());
                      					}
                      					setWithLastConsumed(current, "hours", lv_hours_1_0, "hours");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 369, ruleHOURS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHOURS"


    // $ANTLR start "ruleMINUTES"
    // InternalSiddhiParser.g:18815:1: ruleMINUTES[EObject in_current] returns [EObject current=in_current] : ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) ) ;
    public final EObject ruleMINUTES(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleMINUTES_StartIndex = input.index();
        Token lv_minute_0_0=null;
        Token lv_minutes_1_0=null;
        Token lv_min_2_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 370) ) { return current; }
            // InternalSiddhiParser.g:18821:2: ( ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) ) )
            // InternalSiddhiParser.g:18822:2: ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) )
            {
            // InternalSiddhiParser.g:18822:2: ( ( (lv_minute_0_0= Minute ) ) | ( (lv_minutes_1_0= Minutes ) ) | ( (lv_min_2_0= Min ) ) )
            int alt240=3;
            switch ( input.LA(1) ) {
            case Minute:
                {
                alt240=1;
                }
                break;
            case Minutes:
                {
                alt240=2;
                }
                break;
            case Min:
                {
                alt240=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;
            }

            switch (alt240) {
                case 1 :
                    // InternalSiddhiParser.g:18823:3: ( (lv_minute_0_0= Minute ) )
                    {
                    // InternalSiddhiParser.g:18823:3: ( (lv_minute_0_0= Minute ) )
                    // InternalSiddhiParser.g:18824:4: (lv_minute_0_0= Minute )
                    {
                    // InternalSiddhiParser.g:18824:4: (lv_minute_0_0= Minute )
                    // InternalSiddhiParser.g:18825:5: lv_minute_0_0= Minute
                    {
                    lv_minute_0_0=(Token)match(input,Minute,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_minute_0_0, grammarAccess.getMINUTESAccess().getMinuteMinuteKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMINUTESRule());
                      					}
                      					setWithLastConsumed(current, "minute", lv_minute_0_0, "minute");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18838:3: ( (lv_minutes_1_0= Minutes ) )
                    {
                    // InternalSiddhiParser.g:18838:3: ( (lv_minutes_1_0= Minutes ) )
                    // InternalSiddhiParser.g:18839:4: (lv_minutes_1_0= Minutes )
                    {
                    // InternalSiddhiParser.g:18839:4: (lv_minutes_1_0= Minutes )
                    // InternalSiddhiParser.g:18840:5: lv_minutes_1_0= Minutes
                    {
                    lv_minutes_1_0=(Token)match(input,Minutes,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_minutes_1_0, grammarAccess.getMINUTESAccess().getMinutesMinutesKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMINUTESRule());
                      					}
                      					setWithLastConsumed(current, "minutes", lv_minutes_1_0, "minutes");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:18853:3: ( (lv_min_2_0= Min ) )
                    {
                    // InternalSiddhiParser.g:18853:3: ( (lv_min_2_0= Min ) )
                    // InternalSiddhiParser.g:18854:4: (lv_min_2_0= Min )
                    {
                    // InternalSiddhiParser.g:18854:4: (lv_min_2_0= Min )
                    // InternalSiddhiParser.g:18855:5: lv_min_2_0= Min
                    {
                    lv_min_2_0=(Token)match(input,Min,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_min_2_0, grammarAccess.getMINUTESAccess().getMinMinKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMINUTESRule());
                      					}
                      					setWithLastConsumed(current, "min", lv_min_2_0, "min");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 370, ruleMINUTES_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMINUTES"


    // $ANTLR start "ruleSECONDS"
    // InternalSiddhiParser.g:18872:1: ruleSECONDS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) ) ;
    public final EObject ruleSECONDS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleSECONDS_StartIndex = input.index();
        Token lv_second_0_0=null;
        Token lv_seconds_1_0=null;
        Token lv_sec_2_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 371) ) { return current; }
            // InternalSiddhiParser.g:18878:2: ( ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) ) )
            // InternalSiddhiParser.g:18879:2: ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) )
            {
            // InternalSiddhiParser.g:18879:2: ( ( (lv_second_0_0= Second ) ) | ( (lv_seconds_1_0= Seconds ) ) | ( (lv_sec_2_0= Sec ) ) )
            int alt241=3;
            switch ( input.LA(1) ) {
            case Second:
                {
                alt241=1;
                }
                break;
            case Seconds:
                {
                alt241=2;
                }
                break;
            case Sec:
                {
                alt241=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }

            switch (alt241) {
                case 1 :
                    // InternalSiddhiParser.g:18880:3: ( (lv_second_0_0= Second ) )
                    {
                    // InternalSiddhiParser.g:18880:3: ( (lv_second_0_0= Second ) )
                    // InternalSiddhiParser.g:18881:4: (lv_second_0_0= Second )
                    {
                    // InternalSiddhiParser.g:18881:4: (lv_second_0_0= Second )
                    // InternalSiddhiParser.g:18882:5: lv_second_0_0= Second
                    {
                    lv_second_0_0=(Token)match(input,Second,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_second_0_0, grammarAccess.getSECONDSAccess().getSecondSecondKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSECONDSRule());
                      					}
                      					setWithLastConsumed(current, "second", lv_second_0_0, "second");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18895:3: ( (lv_seconds_1_0= Seconds ) )
                    {
                    // InternalSiddhiParser.g:18895:3: ( (lv_seconds_1_0= Seconds ) )
                    // InternalSiddhiParser.g:18896:4: (lv_seconds_1_0= Seconds )
                    {
                    // InternalSiddhiParser.g:18896:4: (lv_seconds_1_0= Seconds )
                    // InternalSiddhiParser.g:18897:5: lv_seconds_1_0= Seconds
                    {
                    lv_seconds_1_0=(Token)match(input,Seconds,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_seconds_1_0, grammarAccess.getSECONDSAccess().getSecondsSecondsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSECONDSRule());
                      					}
                      					setWithLastConsumed(current, "seconds", lv_seconds_1_0, "seconds");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:18910:3: ( (lv_sec_2_0= Sec ) )
                    {
                    // InternalSiddhiParser.g:18910:3: ( (lv_sec_2_0= Sec ) )
                    // InternalSiddhiParser.g:18911:4: (lv_sec_2_0= Sec )
                    {
                    // InternalSiddhiParser.g:18911:4: (lv_sec_2_0= Sec )
                    // InternalSiddhiParser.g:18912:5: lv_sec_2_0= Sec
                    {
                    lv_sec_2_0=(Token)match(input,Sec,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_sec_2_0, grammarAccess.getSECONDSAccess().getSecSecKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSECONDSRule());
                      					}
                      					setWithLastConsumed(current, "sec", lv_sec_2_0, "sec");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 371, ruleSECONDS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSECONDS"


    // $ANTLR start "ruleMILLISECONDS"
    // InternalSiddhiParser.g:18929:1: ruleMILLISECONDS[EObject in_current] returns [EObject current=in_current] : ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) ) ;
    public final EObject ruleMILLISECONDS(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleMILLISECONDS_StartIndex = input.index();
        Token lv_millisecond_0_0=null;
        Token lv_milliseconds_1_0=null;
        Token lv_millisec_2_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 372) ) { return current; }
            // InternalSiddhiParser.g:18935:2: ( ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) ) )
            // InternalSiddhiParser.g:18936:2: ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) )
            {
            // InternalSiddhiParser.g:18936:2: ( ( (lv_millisecond_0_0= Millisecond ) ) | ( (lv_milliseconds_1_0= Milliseconds ) ) | ( (lv_millisec_2_0= Millisec ) ) )
            int alt242=3;
            switch ( input.LA(1) ) {
            case Millisecond:
                {
                alt242=1;
                }
                break;
            case Milliseconds:
                {
                alt242=2;
                }
                break;
            case Millisec:
                {
                alt242=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }

            switch (alt242) {
                case 1 :
                    // InternalSiddhiParser.g:18937:3: ( (lv_millisecond_0_0= Millisecond ) )
                    {
                    // InternalSiddhiParser.g:18937:3: ( (lv_millisecond_0_0= Millisecond ) )
                    // InternalSiddhiParser.g:18938:4: (lv_millisecond_0_0= Millisecond )
                    {
                    // InternalSiddhiParser.g:18938:4: (lv_millisecond_0_0= Millisecond )
                    // InternalSiddhiParser.g:18939:5: lv_millisecond_0_0= Millisecond
                    {
                    lv_millisecond_0_0=(Token)match(input,Millisecond,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_millisecond_0_0, grammarAccess.getMILLISECONDSAccess().getMillisecondMillisecondKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMILLISECONDSRule());
                      					}
                      					setWithLastConsumed(current, "millisecond", lv_millisecond_0_0, "millisecond");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSiddhiParser.g:18952:3: ( (lv_milliseconds_1_0= Milliseconds ) )
                    {
                    // InternalSiddhiParser.g:18952:3: ( (lv_milliseconds_1_0= Milliseconds ) )
                    // InternalSiddhiParser.g:18953:4: (lv_milliseconds_1_0= Milliseconds )
                    {
                    // InternalSiddhiParser.g:18953:4: (lv_milliseconds_1_0= Milliseconds )
                    // InternalSiddhiParser.g:18954:5: lv_milliseconds_1_0= Milliseconds
                    {
                    lv_milliseconds_1_0=(Token)match(input,Milliseconds,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_milliseconds_1_0, grammarAccess.getMILLISECONDSAccess().getMillisecondsMillisecondsKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMILLISECONDSRule());
                      					}
                      					setWithLastConsumed(current, "milliseconds", lv_milliseconds_1_0, "milliseconds");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSiddhiParser.g:18967:3: ( (lv_millisec_2_0= Millisec ) )
                    {
                    // InternalSiddhiParser.g:18967:3: ( (lv_millisec_2_0= Millisec ) )
                    // InternalSiddhiParser.g:18968:4: (lv_millisec_2_0= Millisec )
                    {
                    // InternalSiddhiParser.g:18968:4: (lv_millisec_2_0= Millisec )
                    // InternalSiddhiParser.g:18969:5: lv_millisec_2_0= Millisec
                    {
                    lv_millisec_2_0=(Token)match(input,Millisec,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_millisec_2_0, grammarAccess.getMILLISECONDSAccess().getMillisecMillisecKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMILLISECONDSRule());
                      					}
                      					setWithLastConsumed(current, "millisec", lv_millisec_2_0, "millisec");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 372, ruleMILLISECONDS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMILLISECONDS"


    // $ANTLR start "ruleFALSE"
    // InternalSiddhiParser.g:18986:1: ruleFALSE[EObject in_current] returns [EObject current=in_current] : ( (lv_fals_0_0= False ) ) ;
    public final EObject ruleFALSE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleFALSE_StartIndex = input.index();
        Token lv_fals_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 373) ) { return current; }
            // InternalSiddhiParser.g:18992:2: ( ( (lv_fals_0_0= False ) ) )
            // InternalSiddhiParser.g:18993:2: ( (lv_fals_0_0= False ) )
            {
            // InternalSiddhiParser.g:18993:2: ( (lv_fals_0_0= False ) )
            // InternalSiddhiParser.g:18994:3: (lv_fals_0_0= False )
            {
            // InternalSiddhiParser.g:18994:3: (lv_fals_0_0= False )
            // InternalSiddhiParser.g:18995:4: lv_fals_0_0= False
            {
            lv_fals_0_0=(Token)match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_fals_0_0, grammarAccess.getFALSEAccess().getFalsFalseKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFALSERule());
              				}
              				setWithLastConsumed(current, "fals", lv_fals_0_0, "false");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 373, ruleFALSE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFALSE"


    // $ANTLR start "ruleTRUE"
    // InternalSiddhiParser.g:19011:1: ruleTRUE[EObject in_current] returns [EObject current=in_current] : ( (lv_tr_0_0= True ) ) ;
    public final EObject ruleTRUE(EObject in_current) throws RecognitionException {
        EObject current = in_current;
        int ruleTRUE_StartIndex = input.index();
        Token lv_tr_0_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 374) ) { return current; }
            // InternalSiddhiParser.g:19017:2: ( ( (lv_tr_0_0= True ) ) )
            // InternalSiddhiParser.g:19018:2: ( (lv_tr_0_0= True ) )
            {
            // InternalSiddhiParser.g:19018:2: ( (lv_tr_0_0= True ) )
            // InternalSiddhiParser.g:19019:3: (lv_tr_0_0= True )
            {
            // InternalSiddhiParser.g:19019:3: (lv_tr_0_0= True )
            // InternalSiddhiParser.g:19020:4: lv_tr_0_0= True
            {
            lv_tr_0_0=(Token)match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_tr_0_0, grammarAccess.getTRUEAccess().getTrTrueKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTRUERule());
              				}
              				setWithLastConsumed(current, "tr", lv_tr_0_0, "true");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 374, ruleTRUE_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTRUE"


    // $ANTLR start "entryRuleCOL"
    // InternalSiddhiParser.g:19035:1: entryRuleCOL returns [String current=null] : iv_ruleCOL= ruleCOL EOF ;
    public final String entryRuleCOL() throws RecognitionException {
        String current = null;
        int entryRuleCOL_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCOL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 375) ) { return current; }
            // InternalSiddhiParser.g:19035:43: (iv_ruleCOL= ruleCOL EOF )
            // InternalSiddhiParser.g:19036:2: iv_ruleCOL= ruleCOL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCOLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCOL=ruleCOL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCOL.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 375, entryRuleCOL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCOL"


    // $ANTLR start "ruleCOL"
    // InternalSiddhiParser.g:19042:1: ruleCOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Colon ;
    public final AntlrDatatypeRuleToken ruleCOL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCOL_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 376) ) { return current; }
            // InternalSiddhiParser.g:19048:2: (kw= Colon )
            // InternalSiddhiParser.g:19049:2: kw= Colon
            {
            kw=(Token)match(input,Colon,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCOLAccess().getColonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 376, ruleCOL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCOL"


    // $ANTLR start "entryRuleDOT"
    // InternalSiddhiParser.g:19057:1: entryRuleDOT returns [String current=null] : iv_ruleDOT= ruleDOT EOF ;
    public final String entryRuleDOT() throws RecognitionException {
        String current = null;
        int entryRuleDOT_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleDOT = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 377) ) { return current; }
            // InternalSiddhiParser.g:19057:43: (iv_ruleDOT= ruleDOT EOF )
            // InternalSiddhiParser.g:19058:2: iv_ruleDOT= ruleDOT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDOTRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDOT=ruleDOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDOT.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 377, entryRuleDOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDOT"


    // $ANTLR start "ruleDOT"
    // InternalSiddhiParser.g:19064:1: ruleDOT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStop ;
    public final AntlrDatatypeRuleToken ruleDOT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleDOT_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 378) ) { return current; }
            // InternalSiddhiParser.g:19070:2: (kw= FullStop )
            // InternalSiddhiParser.g:19071:2: kw= FullStop
            {
            kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDOTAccess().getFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 378, ruleDOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDOT"


    // $ANTLR start "entryRuleTRIPLE_DOT"
    // InternalSiddhiParser.g:19079:1: entryRuleTRIPLE_DOT returns [String current=null] : iv_ruleTRIPLE_DOT= ruleTRIPLE_DOT EOF ;
    public final String entryRuleTRIPLE_DOT() throws RecognitionException {
        String current = null;
        int entryRuleTRIPLE_DOT_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleTRIPLE_DOT = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 379) ) { return current; }
            // InternalSiddhiParser.g:19079:50: (iv_ruleTRIPLE_DOT= ruleTRIPLE_DOT EOF )
            // InternalSiddhiParser.g:19080:2: iv_ruleTRIPLE_DOT= ruleTRIPLE_DOT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRIPLE_DOTRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTRIPLE_DOT=ruleTRIPLE_DOT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRIPLE_DOT.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 379, entryRuleTRIPLE_DOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTRIPLE_DOT"


    // $ANTLR start "ruleTRIPLE_DOT"
    // InternalSiddhiParser.g:19086:1: ruleTRIPLE_DOT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStopFullStopFullStop ;
    public final AntlrDatatypeRuleToken ruleTRIPLE_DOT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleTRIPLE_DOT_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 380) ) { return current; }
            // InternalSiddhiParser.g:19092:2: (kw= FullStopFullStopFullStop )
            // InternalSiddhiParser.g:19093:2: kw= FullStopFullStopFullStop
            {
            kw=(Token)match(input,FullStopFullStopFullStop,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getTRIPLE_DOTAccess().getFullStopFullStopFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 380, ruleTRIPLE_DOT_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTRIPLE_DOT"


    // $ANTLR start "entryRuleOPEN_PAR"
    // InternalSiddhiParser.g:19101:1: entryRuleOPEN_PAR returns [String current=null] : iv_ruleOPEN_PAR= ruleOPEN_PAR EOF ;
    public final String entryRuleOPEN_PAR() throws RecognitionException {
        String current = null;
        int entryRuleOPEN_PAR_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleOPEN_PAR = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 381) ) { return current; }
            // InternalSiddhiParser.g:19101:48: (iv_ruleOPEN_PAR= ruleOPEN_PAR EOF )
            // InternalSiddhiParser.g:19102:2: iv_ruleOPEN_PAR= ruleOPEN_PAR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPEN_PARRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOPEN_PAR=ruleOPEN_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPEN_PAR.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 381, entryRuleOPEN_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOPEN_PAR"


    // $ANTLR start "ruleOPEN_PAR"
    // InternalSiddhiParser.g:19108:1: ruleOPEN_PAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= LeftParenthesis ;
    public final AntlrDatatypeRuleToken ruleOPEN_PAR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleOPEN_PAR_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 382) ) { return current; }
            // InternalSiddhiParser.g:19114:2: (kw= LeftParenthesis )
            // InternalSiddhiParser.g:19115:2: kw= LeftParenthesis
            {
            kw=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOPEN_PARAccess().getLeftParenthesisKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 382, ruleOPEN_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOPEN_PAR"


    // $ANTLR start "entryRuleCLOSE_PAR"
    // InternalSiddhiParser.g:19123:1: entryRuleCLOSE_PAR returns [String current=null] : iv_ruleCLOSE_PAR= ruleCLOSE_PAR EOF ;
    public final String entryRuleCLOSE_PAR() throws RecognitionException {
        String current = null;
        int entryRuleCLOSE_PAR_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCLOSE_PAR = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 383) ) { return current; }
            // InternalSiddhiParser.g:19123:49: (iv_ruleCLOSE_PAR= ruleCLOSE_PAR EOF )
            // InternalSiddhiParser.g:19124:2: iv_ruleCLOSE_PAR= ruleCLOSE_PAR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCLOSE_PARRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCLOSE_PAR=ruleCLOSE_PAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCLOSE_PAR.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 383, entryRuleCLOSE_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCLOSE_PAR"


    // $ANTLR start "ruleCLOSE_PAR"
    // InternalSiddhiParser.g:19130:1: ruleCLOSE_PAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= RightParenthesis ;
    public final AntlrDatatypeRuleToken ruleCLOSE_PAR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCLOSE_PAR_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 384) ) { return current; }
            // InternalSiddhiParser.g:19136:2: (kw= RightParenthesis )
            // InternalSiddhiParser.g:19137:2: kw= RightParenthesis
            {
            kw=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCLOSE_PARAccess().getRightParenthesisKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 384, ruleCLOSE_PAR_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCLOSE_PAR"


    // $ANTLR start "entryRuleOPEN_SQARE_BRACKETS"
    // InternalSiddhiParser.g:19145:1: entryRuleOPEN_SQARE_BRACKETS returns [String current=null] : iv_ruleOPEN_SQARE_BRACKETS= ruleOPEN_SQARE_BRACKETS EOF ;
    public final String entryRuleOPEN_SQARE_BRACKETS() throws RecognitionException {
        String current = null;
        int entryRuleOPEN_SQARE_BRACKETS_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleOPEN_SQARE_BRACKETS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 385) ) { return current; }
            // InternalSiddhiParser.g:19145:59: (iv_ruleOPEN_SQARE_BRACKETS= ruleOPEN_SQARE_BRACKETS EOF )
            // InternalSiddhiParser.g:19146:2: iv_ruleOPEN_SQARE_BRACKETS= ruleOPEN_SQARE_BRACKETS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPEN_SQARE_BRACKETSRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOPEN_SQARE_BRACKETS=ruleOPEN_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPEN_SQARE_BRACKETS.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 385, entryRuleOPEN_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOPEN_SQARE_BRACKETS"


    // $ANTLR start "ruleOPEN_SQARE_BRACKETS"
    // InternalSiddhiParser.g:19152:1: ruleOPEN_SQARE_BRACKETS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= LeftSquareBracket ;
    public final AntlrDatatypeRuleToken ruleOPEN_SQARE_BRACKETS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleOPEN_SQARE_BRACKETS_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 386) ) { return current; }
            // InternalSiddhiParser.g:19158:2: (kw= LeftSquareBracket )
            // InternalSiddhiParser.g:19159:2: kw= LeftSquareBracket
            {
            kw=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOPEN_SQARE_BRACKETSAccess().getLeftSquareBracketKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 386, ruleOPEN_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOPEN_SQARE_BRACKETS"


    // $ANTLR start "entryRuleCLOSE_SQARE_BRACKETS"
    // InternalSiddhiParser.g:19167:1: entryRuleCLOSE_SQARE_BRACKETS returns [String current=null] : iv_ruleCLOSE_SQARE_BRACKETS= ruleCLOSE_SQARE_BRACKETS EOF ;
    public final String entryRuleCLOSE_SQARE_BRACKETS() throws RecognitionException {
        String current = null;
        int entryRuleCLOSE_SQARE_BRACKETS_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCLOSE_SQARE_BRACKETS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 387) ) { return current; }
            // InternalSiddhiParser.g:19167:60: (iv_ruleCLOSE_SQARE_BRACKETS= ruleCLOSE_SQARE_BRACKETS EOF )
            // InternalSiddhiParser.g:19168:2: iv_ruleCLOSE_SQARE_BRACKETS= ruleCLOSE_SQARE_BRACKETS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCLOSE_SQARE_BRACKETSRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCLOSE_SQARE_BRACKETS=ruleCLOSE_SQARE_BRACKETS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCLOSE_SQARE_BRACKETS.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 387, entryRuleCLOSE_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCLOSE_SQARE_BRACKETS"


    // $ANTLR start "ruleCLOSE_SQARE_BRACKETS"
    // InternalSiddhiParser.g:19174:1: ruleCLOSE_SQARE_BRACKETS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= RightSquareBracket ;
    public final AntlrDatatypeRuleToken ruleCLOSE_SQARE_BRACKETS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCLOSE_SQARE_BRACKETS_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 388) ) { return current; }
            // InternalSiddhiParser.g:19180:2: (kw= RightSquareBracket )
            // InternalSiddhiParser.g:19181:2: kw= RightSquareBracket
            {
            kw=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCLOSE_SQARE_BRACKETSAccess().getRightSquareBracketKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 388, ruleCLOSE_SQARE_BRACKETS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCLOSE_SQARE_BRACKETS"


    // $ANTLR start "entryRuleMINUS"
    // InternalSiddhiParser.g:19189:1: entryRuleMINUS returns [String current=null] : iv_ruleMINUS= ruleMINUS EOF ;
    public final String entryRuleMINUS() throws RecognitionException {
        String current = null;
        int entryRuleMINUS_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleMINUS = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 389) ) { return current; }
            // InternalSiddhiParser.g:19189:45: (iv_ruleMINUS= ruleMINUS EOF )
            // InternalSiddhiParser.g:19190:2: iv_ruleMINUS= ruleMINUS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMINUSRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMINUS=ruleMINUS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMINUS.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 389, entryRuleMINUS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMINUS"


    // $ANTLR start "ruleMINUS"
    // InternalSiddhiParser.g:19196:1: ruleMINUS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= HyphenMinus ;
    public final AntlrDatatypeRuleToken ruleMINUS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleMINUS_StartIndex = input.index();
        Token kw=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 390) ) { return current; }
            // InternalSiddhiParser.g:19202:2: (kw= HyphenMinus )
            // InternalSiddhiParser.g:19203:2: kw= HyphenMinus
            {
            kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getMINUSAccess().getHyphenMinusKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 390, ruleMINUS_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMINUS"


    // $ANTLR start "entryRuleIdNew"
    // InternalSiddhiParser.g:19211:1: entryRuleIdNew returns [String current=null] : iv_ruleIdNew= ruleIdNew EOF ;
    public final String entryRuleIdNew() throws RecognitionException {
        String current = null;
        int entryRuleIdNew_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleIdNew = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 391) ) { return current; }
            // InternalSiddhiParser.g:19211:45: (iv_ruleIdNew= ruleIdNew EOF )
            // InternalSiddhiParser.g:19212:2: iv_ruleIdNew= ruleIdNew EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdNewRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdNew=ruleIdNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdNew.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 391, entryRuleIdNew_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleIdNew"


    // $ANTLR start "ruleIdNew"
    // InternalSiddhiParser.g:19218:1: ruleIdNew returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleIdNew() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleIdNew_StartIndex = input.index();
        Token this_ID_0=null;


        	enterRule();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 392) ) { return current; }
            // InternalSiddhiParser.g:19224:2: (this_ID_0= RULE_ID )
            // InternalSiddhiParser.g:19225:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getIdNewAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 392, ruleIdNew_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIdNew"

    // $ANTLR start synpred1_InternalSiddhiParser
    public final void synpred1_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:131:6: ( ( ruleDefinitionStream ) )
        // InternalSiddhiParser.g:131:7: ( ruleDefinitionStream )
        {
        // InternalSiddhiParser.g:131:7: ( ruleDefinitionStream )
        // InternalSiddhiParser.g:132:7: ruleDefinitionStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred1_InternalSiddhiParser

    // $ANTLR start synpred2_InternalSiddhiParser
    public final void synpred2_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:155:6: ( ( ruleDefinitionTable ) )
        // InternalSiddhiParser.g:155:7: ( ruleDefinitionTable )
        {
        // InternalSiddhiParser.g:155:7: ( ruleDefinitionTable )
        // InternalSiddhiParser.g:156:7: ruleDefinitionTable
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalSiddhiParser

    // $ANTLR start synpred3_InternalSiddhiParser
    public final void synpred3_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:179:6: ( ( ruleDefinitionWindow ) )
        // InternalSiddhiParser.g:179:7: ( ruleDefinitionWindow )
        {
        // InternalSiddhiParser.g:179:7: ( ruleDefinitionWindow )
        // InternalSiddhiParser.g:180:7: ruleDefinitionWindow
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionWindow();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred3_InternalSiddhiParser

    // $ANTLR start synpred4_InternalSiddhiParser
    public final void synpred4_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:203:6: ( ( ruleDefinitionTrigger ) )
        // InternalSiddhiParser.g:203:7: ( ruleDefinitionTrigger )
        {
        // InternalSiddhiParser.g:203:7: ( ruleDefinitionTrigger )
        // InternalSiddhiParser.g:204:7: ruleDefinitionTrigger
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTrigger();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalSiddhiParser

    // $ANTLR start synpred5_InternalSiddhiParser
    public final void synpred5_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:227:6: ( ( ruleDefinitionFunction ) )
        // InternalSiddhiParser.g:227:7: ( ruleDefinitionFunction )
        {
        // InternalSiddhiParser.g:227:7: ( ruleDefinitionFunction )
        // InternalSiddhiParser.g:228:7: ruleDefinitionFunction
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalSiddhiParser

    // $ANTLR start synpred6_InternalSiddhiParser
    public final void synpred6_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:251:6: ( ( ruleDefinitionAggregation ) )
        // InternalSiddhiParser.g:251:7: ( ruleDefinitionAggregation )
        {
        // InternalSiddhiParser.g:251:7: ( ruleDefinitionAggregation )
        // InternalSiddhiParser.g:252:7: ruleDefinitionAggregation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionAggregation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalSiddhiParser

    // $ANTLR start synpred7_InternalSiddhiParser
    public final void synpred7_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:279:8: ( ( ruleDefinitionStream ) )
        // InternalSiddhiParser.g:279:9: ( ruleDefinitionStream )
        {
        // InternalSiddhiParser.g:279:9: ( ruleDefinitionStream )
        // InternalSiddhiParser.g:280:9: ruleDefinitionStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalSiddhiParser

    // $ANTLR start synpred8_InternalSiddhiParser
    public final void synpred8_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:289:8: ( ( ruleDefinitionTable ) )
        // InternalSiddhiParser.g:289:9: ( ruleDefinitionTable )
        {
        // InternalSiddhiParser.g:289:9: ( ruleDefinitionTable )
        // InternalSiddhiParser.g:290:9: ruleDefinitionTable
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalSiddhiParser

    // $ANTLR start synpred9_InternalSiddhiParser
    public final void synpred9_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:299:8: ( ( ruleDefinitionWindow ) )
        // InternalSiddhiParser.g:299:9: ( ruleDefinitionWindow )
        {
        // InternalSiddhiParser.g:299:9: ( ruleDefinitionWindow )
        // InternalSiddhiParser.g:300:9: ruleDefinitionWindow
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionWindow();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalSiddhiParser

    // $ANTLR start synpred10_InternalSiddhiParser
    public final void synpred10_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:309:8: ( ( ruleDefinitionTrigger ) )
        // InternalSiddhiParser.g:309:9: ( ruleDefinitionTrigger )
        {
        // InternalSiddhiParser.g:309:9: ( ruleDefinitionTrigger )
        // InternalSiddhiParser.g:310:9: ruleDefinitionTrigger
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTrigger();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred10_InternalSiddhiParser

    // $ANTLR start synpred11_InternalSiddhiParser
    public final void synpred11_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:319:8: ( ( ruleDefinitionFunction ) )
        // InternalSiddhiParser.g:319:9: ( ruleDefinitionFunction )
        {
        // InternalSiddhiParser.g:319:9: ( ruleDefinitionFunction )
        // InternalSiddhiParser.g:320:9: ruleDefinitionFunction
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred11_InternalSiddhiParser

    // $ANTLR start synpred12_InternalSiddhiParser
    public final void synpred12_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:329:8: ( ( ruleDefinitionAggregation ) )
        // InternalSiddhiParser.g:329:9: ( ruleDefinitionAggregation )
        {
        // InternalSiddhiParser.g:329:9: ( ruleDefinitionAggregation )
        // InternalSiddhiParser.g:330:9: ruleDefinitionAggregation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionAggregation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalSiddhiParser

    // $ANTLR start synpred13_InternalSiddhiParser
    public final void synpred13_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:275:5: ( ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) ) )
        // InternalSiddhiParser.g:275:6: ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) )
        {
        // InternalSiddhiParser.g:275:6: ( Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) ) )
        // InternalSiddhiParser.g:276:6: Semicolon ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) )
        {
        match(input,Semicolon,FollowSets000.FOLLOW_7); if (state.failed) return ;
        // InternalSiddhiParser.g:277:6: ( ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) ) | ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) ) | ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) ) | ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) ) | ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) ) | ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) ) )
        int alt243=6;
        int LA243_0 = input.LA(1);

        if ( (LA243_0==CommercialAt) ) {
            int LA243_1 = input.LA(2);

            if ( (synpred7_InternalSiddhiParser()) ) {
                alt243=1;
            }
            else if ( (synpred8_InternalSiddhiParser()) ) {
                alt243=2;
            }
            else if ( (synpred9_InternalSiddhiParser()) ) {
                alt243=3;
            }
            else if ( (synpred12_InternalSiddhiParser()) ) {
                alt243=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 1, input);

                throw nvae;
            }
        }
        else if ( (LA243_0==Define) ) {
            int LA243_2 = input.LA(2);

            if ( (synpred7_InternalSiddhiParser()) ) {
                alt243=1;
            }
            else if ( (synpred8_InternalSiddhiParser()) ) {
                alt243=2;
            }
            else if ( (synpred9_InternalSiddhiParser()) ) {
                alt243=3;
            }
            else if ( (synpred10_InternalSiddhiParser()) ) {
                alt243=4;
            }
            else if ( (synpred11_InternalSiddhiParser()) ) {
                alt243=5;
            }
            else if ( (synpred12_InternalSiddhiParser()) ) {
                alt243=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 2, input);

                throw nvae;
            }
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 243, 0, input);

            throw nvae;
        }
        switch (alt243) {
            case 1 :
                // InternalSiddhiParser.g:278:7: ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) )
                {
                // InternalSiddhiParser.g:278:7: ( ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream ) )
                // InternalSiddhiParser.g:279:8: ( ( ruleDefinitionStream ) )=> ( ruleDefinitionStream )
                {
                // InternalSiddhiParser.g:283:8: ( ruleDefinitionStream )
                // InternalSiddhiParser.g:284:9: ruleDefinitionStream
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionStream();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:288:7: ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) )
                {
                // InternalSiddhiParser.g:288:7: ( ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable ) )
                // InternalSiddhiParser.g:289:8: ( ( ruleDefinitionTable ) )=> ( ruleDefinitionTable )
                {
                // InternalSiddhiParser.g:293:8: ( ruleDefinitionTable )
                // InternalSiddhiParser.g:294:9: ruleDefinitionTable
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionTable();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalSiddhiParser.g:298:7: ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) )
                {
                // InternalSiddhiParser.g:298:7: ( ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow ) )
                // InternalSiddhiParser.g:299:8: ( ( ruleDefinitionWindow ) )=> ( ruleDefinitionWindow )
                {
                // InternalSiddhiParser.g:303:8: ( ruleDefinitionWindow )
                // InternalSiddhiParser.g:304:9: ruleDefinitionWindow
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionWindow();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalSiddhiParser.g:308:7: ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) )
                {
                // InternalSiddhiParser.g:308:7: ( ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger ) )
                // InternalSiddhiParser.g:309:8: ( ( ruleDefinitionTrigger ) )=> ( ruleDefinitionTrigger )
                {
                // InternalSiddhiParser.g:313:8: ( ruleDefinitionTrigger )
                // InternalSiddhiParser.g:314:9: ruleDefinitionTrigger
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionTrigger();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 5 :
                // InternalSiddhiParser.g:318:7: ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) )
                {
                // InternalSiddhiParser.g:318:7: ( ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction ) )
                // InternalSiddhiParser.g:319:8: ( ( ruleDefinitionFunction ) )=> ( ruleDefinitionFunction )
                {
                // InternalSiddhiParser.g:323:8: ( ruleDefinitionFunction )
                // InternalSiddhiParser.g:324:9: ruleDefinitionFunction
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 6 :
                // InternalSiddhiParser.g:328:7: ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) )
                {
                // InternalSiddhiParser.g:328:7: ( ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation ) )
                // InternalSiddhiParser.g:329:8: ( ( ruleDefinitionAggregation ) )=> ( ruleDefinitionAggregation )
                {
                // InternalSiddhiParser.g:333:8: ( ruleDefinitionAggregation )
                // InternalSiddhiParser.g:334:9: ruleDefinitionAggregation
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleDefinitionAggregation();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred13_InternalSiddhiParser

    // $ANTLR start synpred14_InternalSiddhiParser
    public final void synpred14_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:347:8: ( ( ruleDefinitionStream ) )
        // InternalSiddhiParser.g:347:9: ( ruleDefinitionStream )
        {
        // InternalSiddhiParser.g:347:9: ( ruleDefinitionStream )
        // InternalSiddhiParser.g:348:9: ruleDefinitionStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalSiddhiParser

    // $ANTLR start synpred15_InternalSiddhiParser
    public final void synpred15_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:371:8: ( ( ruleDefinitionTable ) )
        // InternalSiddhiParser.g:371:9: ( ruleDefinitionTable )
        {
        // InternalSiddhiParser.g:371:9: ( ruleDefinitionTable )
        // InternalSiddhiParser.g:372:9: ruleDefinitionTable
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalSiddhiParser

    // $ANTLR start synpred16_InternalSiddhiParser
    public final void synpred16_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:395:8: ( ( ruleDefinitionWindow ) )
        // InternalSiddhiParser.g:395:9: ( ruleDefinitionWindow )
        {
        // InternalSiddhiParser.g:395:9: ( ruleDefinitionWindow )
        // InternalSiddhiParser.g:396:9: ruleDefinitionWindow
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionWindow();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalSiddhiParser

    // $ANTLR start synpred17_InternalSiddhiParser
    public final void synpred17_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:419:8: ( ( ruleDefinitionTrigger ) )
        // InternalSiddhiParser.g:419:9: ( ruleDefinitionTrigger )
        {
        // InternalSiddhiParser.g:419:9: ( ruleDefinitionTrigger )
        // InternalSiddhiParser.g:420:9: ruleDefinitionTrigger
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionTrigger();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_InternalSiddhiParser

    // $ANTLR start synpred18_InternalSiddhiParser
    public final void synpred18_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:443:8: ( ( ruleDefinitionFunction ) )
        // InternalSiddhiParser.g:443:9: ( ruleDefinitionFunction )
        {
        // InternalSiddhiParser.g:443:9: ( ruleDefinitionFunction )
        // InternalSiddhiParser.g:444:9: ruleDefinitionFunction
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalSiddhiParser

    // $ANTLR start synpred19_InternalSiddhiParser
    public final void synpred19_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:467:8: ( ( ruleDefinitionAggregation ) )
        // InternalSiddhiParser.g:467:9: ( ruleDefinitionAggregation )
        {
        // InternalSiddhiParser.g:467:9: ( ruleDefinitionAggregation )
        // InternalSiddhiParser.g:468:9: ruleDefinitionAggregation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionAggregation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalSiddhiParser

    // $ANTLR start synpred20_InternalSiddhiParser
    public final void synpred20_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:493:5: ( ( Semicolon ( ( ruleExecutionElement ) ) ) )
        // InternalSiddhiParser.g:493:6: ( Semicolon ( ( ruleExecutionElement ) ) )
        {
        // InternalSiddhiParser.g:493:6: ( Semicolon ( ( ruleExecutionElement ) ) )
        // InternalSiddhiParser.g:494:6: Semicolon ( ( ruleExecutionElement ) )
        {
        match(input,Semicolon,FollowSets000.FOLLOW_6); if (state.failed) return ;
        // InternalSiddhiParser.g:495:6: ( ( ruleExecutionElement ) )
        // InternalSiddhiParser.g:496:7: ( ruleExecutionElement )
        {
        // InternalSiddhiParser.g:496:7: ( ruleExecutionElement )
        // InternalSiddhiParser.g:497:8: ruleExecutionElement
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleExecutionElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred20_InternalSiddhiParser

    // $ANTLR start synpred21_InternalSiddhiParser
    public final void synpred21_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:555:4: ( ( ( ruleExecPartition ) ) )
        // InternalSiddhiParser.g:555:5: ( ( ruleExecPartition ) )
        {
        // InternalSiddhiParser.g:555:5: ( ( ruleExecPartition ) )
        // InternalSiddhiParser.g:556:5: ( ruleExecPartition )
        {
        // InternalSiddhiParser.g:556:5: ( ruleExecPartition )
        // InternalSiddhiParser.g:557:6: ruleExecPartition
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleExecPartition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred21_InternalSiddhiParser

    // $ANTLR start synpred22_InternalSiddhiParser
    public final void synpred22_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:583:4: ( ( ( ruleQuery ) ) )
        // InternalSiddhiParser.g:583:5: ( ( ruleQuery ) )
        {
        // InternalSiddhiParser.g:583:5: ( ( ruleQuery ) )
        // InternalSiddhiParser.g:584:5: ( ruleQuery )
        {
        // InternalSiddhiParser.g:584:5: ( ruleQuery )
        // InternalSiddhiParser.g:585:6: ruleQuery
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleQuery();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalSiddhiParser

    // $ANTLR start synpred23_InternalSiddhiParser
    public final void synpred23_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:2533:5: ( ( ( ruleIdNew ) ) )
        // InternalSiddhiParser.g:2533:6: ( ( ruleIdNew ) )
        {
        // InternalSiddhiParser.g:2533:6: ( ( ruleIdNew ) )
        // InternalSiddhiParser.g:2534:6: ( ruleIdNew )
        {
        // InternalSiddhiParser.g:2534:6: ( ruleIdNew )
        // InternalSiddhiParser.g:2535:7: ruleIdNew
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleIdNew();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred23_InternalSiddhiParser

    // $ANTLR start synpred24_InternalSiddhiParser
    public final void synpred24_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:2561:5: ( ( ( ruleName ) ) )
        // InternalSiddhiParser.g:2561:6: ( ( ruleName ) )
        {
        // InternalSiddhiParser.g:2561:6: ( ( ruleName ) )
        // InternalSiddhiParser.g:2562:6: ( ruleName )
        {
        // InternalSiddhiParser.g:2562:6: ( ruleName )
        // InternalSiddhiParser.g:2563:7: ruleName
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred24_InternalSiddhiParser

    // $ANTLR start synpred25_InternalSiddhiParser
    public final void synpred25_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3794:4: ( ( ( ruleSource1 ) ) )
        // InternalSiddhiParser.g:3794:5: ( ( ruleSource1 ) )
        {
        // InternalSiddhiParser.g:3794:5: ( ( ruleSource1 ) )
        // InternalSiddhiParser.g:3795:5: ( ruleSource1 )
        {
        // InternalSiddhiParser.g:3795:5: ( ruleSource1 )
        // InternalSiddhiParser.g:3796:6: ruleSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred25_InternalSiddhiParser

    // $ANTLR start synpred26_InternalSiddhiParser
    public final void synpred26_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:3822:4: ( ( ruleSource ) )
        // InternalSiddhiParser.g:3822:5: ( ruleSource )
        {
        // InternalSiddhiParser.g:3822:5: ( ruleSource )
        // InternalSiddhiParser.g:3823:5: ruleSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalSiddhiParser

    // $ANTLR start synpred27_InternalSiddhiParser
    public final void synpred27_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4929:5: ( ( ruleJoinStream ) )
        // InternalSiddhiParser.g:4929:6: ( ruleJoinStream )
        {
        // InternalSiddhiParser.g:4929:6: ( ruleJoinStream )
        // InternalSiddhiParser.g:4930:6: ruleJoinStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleJoinStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalSiddhiParser

    // $ANTLR start synpred28_InternalSiddhiParser
    public final void synpred28_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4953:5: ( ( ruleSequenceStream ) )
        // InternalSiddhiParser.g:4953:6: ( ruleSequenceStream )
        {
        // InternalSiddhiParser.g:4953:6: ( ruleSequenceStream )
        // InternalSiddhiParser.g:4954:6: ruleSequenceStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred28_InternalSiddhiParser

    // $ANTLR start synpred29_InternalSiddhiParser
    public final void synpred29_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:4977:5: ( ( rulePatternStream ) )
        // InternalSiddhiParser.g:4977:6: ( rulePatternStream )
        {
        // InternalSiddhiParser.g:4977:6: ( rulePatternStream )
        // InternalSiddhiParser.g:4978:6: rulePatternStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rulePatternStream();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalSiddhiParser

    // $ANTLR start synpred30_InternalSiddhiParser
    public final void synpred30_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5040:4: ( ( ruleEverySequenceSourceChain ) )
        // InternalSiddhiParser.g:5040:5: ( ruleEverySequenceSourceChain )
        {
        // InternalSiddhiParser.g:5040:5: ( ruleEverySequenceSourceChain )
        // InternalSiddhiParser.g:5041:5: ruleEverySequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEverySequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalSiddhiParser

    // $ANTLR start synpred31_InternalSiddhiParser
    public final void synpred31_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5064:4: ( ( ruleEveryAbsentSequenceSourceChain ) )
        // InternalSiddhiParser.g:5064:5: ( ruleEveryAbsentSequenceSourceChain )
        {
        // InternalSiddhiParser.g:5064:5: ( ruleEveryAbsentSequenceSourceChain )
        // InternalSiddhiParser.g:5065:5: ruleEveryAbsentSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalSiddhiParser

    // $ANTLR start synpred34_InternalSiddhiParser
    public final void synpred34_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5310:4: ( ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:5310:5: ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:5310:5: ( ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:5311:5: ruleOPEN_PAR ( ( ruleAbsentSequenceSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:5312:5: ( ( ruleAbsentSequenceSourceChain ) )
        // InternalSiddhiParser.g:5313:6: ( ruleAbsentSequenceSourceChain )
        {
        // InternalSiddhiParser.g:5313:6: ( ruleAbsentSequenceSourceChain )
        // InternalSiddhiParser.g:5314:7: ruleAbsentSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleAbsentSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:5318:5: ( ( ruleWithinTime ) )?
        int alt247=2;
        int LA247_0 = input.LA(1);

        if ( (LA247_0==Within) ) {
            alt247=1;
        }
        switch (alt247) {
            case 1 :
                // InternalSiddhiParser.g:5319:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:5319:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:5320:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred34_InternalSiddhiParser

    // $ANTLR start synpred35_InternalSiddhiParser
    public final void synpred35_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5382:4: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5382:5: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5382:5: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5383:5: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred35_InternalSiddhiParser

    // $ANTLR start synpred36_InternalSiddhiParser
    public final void synpred36_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5406:4: ( ( ruleLeftAbsentSequenceSource ) )
        // InternalSiddhiParser.g:5406:5: ( ruleLeftAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:5406:5: ( ruleLeftAbsentSequenceSource )
        // InternalSiddhiParser.g:5407:5: ruleLeftAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalSiddhiParser

    // $ANTLR start synpred37_InternalSiddhiParser
    public final void synpred37_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5430:4: ( ( ruleRightAbsentSequenceSource ) )
        // InternalSiddhiParser.g:5430:5: ( ruleRightAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:5430:5: ( ruleRightAbsentSequenceSource )
        // InternalSiddhiParser.g:5431:5: ruleRightAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred37_InternalSiddhiParser

    // $ANTLR start synpred38_InternalSiddhiParser
    public final void synpred38_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5480:4: ( ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) ) )
        // InternalSiddhiParser.g:5480:5: ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) )
        {
        // InternalSiddhiParser.g:5480:5: ( () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) ) )
        // InternalSiddhiParser.g:5481:5: () ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource1 ) )
        {
        // InternalSiddhiParser.g:5481:5: ()
        // InternalSiddhiParser.g:5482:5: 
        {
        }

        // InternalSiddhiParser.g:5483:5: ( ( Comma ) )
        // InternalSiddhiParser.g:5484:6: ( Comma )
        {
        // InternalSiddhiParser.g:5484:6: ( Comma )
        // InternalSiddhiParser.g:5485:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5488:5: ( ( ruleLeftAbsentSequenceSource1 ) )
        // InternalSiddhiParser.g:5489:6: ( ruleLeftAbsentSequenceSource1 )
        {
        // InternalSiddhiParser.g:5489:6: ( ruleLeftAbsentSequenceSource1 )
        // InternalSiddhiParser.g:5490:7: ruleLeftAbsentSequenceSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentSequenceSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred38_InternalSiddhiParser

    // $ANTLR start synpred39_InternalSiddhiParser
    public final void synpred39_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5566:4: ( ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:5566:5: ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:5566:5: ( () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:5567:5: () ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:5567:5: ()
        // InternalSiddhiParser.g:5568:5: 
        {
        }

        // InternalSiddhiParser.g:5569:5: ( ( Comma ) )
        // InternalSiddhiParser.g:5570:6: ( Comma )
        {
        // InternalSiddhiParser.g:5570:6: ( Comma )
        // InternalSiddhiParser.g:5571:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_76); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5574:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5575:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5575:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5576:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred39_InternalSiddhiParser

    // $ANTLR start synpred40_InternalSiddhiParser
    public final void synpred40_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5644:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:5644:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:5644:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:5645:5: ( ( ruleOPEN_PAR ) ) ( ( ruleLeftAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:5645:5: ( ( ruleOPEN_PAR ) )
        // InternalSiddhiParser.g:5646:6: ( ruleOPEN_PAR )
        {
        // InternalSiddhiParser.g:5646:6: ( ruleOPEN_PAR )
        // InternalSiddhiParser.g:5647:7: ruleOPEN_PAR
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5650:5: ( ( ruleLeftAbsentSequenceSource ) )
        // InternalSiddhiParser.g:5651:6: ( ruleLeftAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:5651:6: ( ruleLeftAbsentSequenceSource )
        // InternalSiddhiParser.g:5652:7: ruleLeftAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleLeftAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5655:5: ( ( ruleCLOSE_PAR ) )
        // InternalSiddhiParser.g:5656:6: ( ruleCLOSE_PAR )
        {
        // InternalSiddhiParser.g:5656:6: ( ruleCLOSE_PAR )
        // InternalSiddhiParser.g:5657:7: ruleCLOSE_PAR
        {
        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5660:5: ( ( ruleWithinTime ) )?
        int alt248=2;
        int LA248_0 = input.LA(1);

        if ( (LA248_0==Within) ) {
            alt248=1;
        }
        switch (alt248) {
            case 1 :
                // InternalSiddhiParser.g:5661:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:5661:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:5662:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred40_InternalSiddhiParser

    // $ANTLR start synpred41_InternalSiddhiParser
    public final void synpred41_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5748:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )
        // InternalSiddhiParser.g:5748:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        {
        // InternalSiddhiParser.g:5748:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        // InternalSiddhiParser.g:5749:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( Comma ) ) ( ( ruleSequenceSourceChain ) )
        {
        // InternalSiddhiParser.g:5749:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:5750:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:5750:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:5751:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5754:5: ( ( Comma ) )
        // InternalSiddhiParser.g:5755:6: ( Comma )
        {
        // InternalSiddhiParser.g:5755:6: ( Comma )
        // InternalSiddhiParser.g:5756:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5759:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:5760:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:5760:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:5761:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalSiddhiParser

    // $ANTLR start synpred42_InternalSiddhiParser
    public final void synpred42_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5823:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) ) )
        // InternalSiddhiParser.g:5823:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) )
        {
        // InternalSiddhiParser.g:5823:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) ) )
        // InternalSiddhiParser.g:5824:5: ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleLeftAbsentSequenceSource ) )
        {
        // InternalSiddhiParser.g:5824:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:5825:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:5825:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:5826:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5829:5: ( ( Comma ) )
        // InternalSiddhiParser.g:5830:6: ( Comma )
        {
        // InternalSiddhiParser.g:5830:6: ( Comma )
        // InternalSiddhiParser.g:5831:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5834:5: ( ( ruleLeftAbsentSequenceSource ) )
        // InternalSiddhiParser.g:5835:6: ( ruleLeftAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:5835:6: ( ruleLeftAbsentSequenceSource )
        // InternalSiddhiParser.g:5836:7: ruleLeftAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred42_InternalSiddhiParser

    // $ANTLR start synpred43_InternalSiddhiParser
    public final void synpred43_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:5924:4: ( ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) ) )
        // InternalSiddhiParser.g:5924:5: ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) )
        {
        // InternalSiddhiParser.g:5924:5: ( () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) ) )
        // InternalSiddhiParser.g:5925:5: () ( ( Comma ) ) ( ( ruleRightAbsentSequenceSource1 ) )
        {
        // InternalSiddhiParser.g:5925:5: ()
        // InternalSiddhiParser.g:5926:5: 
        {
        }

        // InternalSiddhiParser.g:5927:5: ( ( Comma ) )
        // InternalSiddhiParser.g:5928:6: ( Comma )
        {
        // InternalSiddhiParser.g:5928:6: ( Comma )
        // InternalSiddhiParser.g:5929:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:5932:5: ( ( ruleRightAbsentSequenceSource1 ) )
        // InternalSiddhiParser.g:5933:6: ( ruleRightAbsentSequenceSource1 )
        {
        // InternalSiddhiParser.g:5933:6: ( ruleRightAbsentSequenceSource1 )
        // InternalSiddhiParser.g:5934:7: ruleRightAbsentSequenceSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentSequenceSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred43_InternalSiddhiParser

    // $ANTLR start synpred44_InternalSiddhiParser
    public final void synpred44_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6010:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) ) )
        // InternalSiddhiParser.g:6010:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        {
        // InternalSiddhiParser.g:6010:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) ) )
        // InternalSiddhiParser.g:6011:5: () ( ( Comma ) ) ( ( ruleSequenceSourceChain ) )
        {
        // InternalSiddhiParser.g:6011:5: ()
        // InternalSiddhiParser.g:6012:5: 
        {
        }

        // InternalSiddhiParser.g:6013:5: ( ( Comma ) )
        // InternalSiddhiParser.g:6014:6: ( Comma )
        {
        // InternalSiddhiParser.g:6014:6: ( Comma )
        // InternalSiddhiParser.g:6015:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6018:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:6019:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:6019:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:6020:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred44_InternalSiddhiParser

    // $ANTLR start synpred45_InternalSiddhiParser
    public final void synpred45_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6088:4: ( ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:6088:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:6088:5: ( ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:6089:5: ( ( ruleOPEN_PAR ) ) ( ( ruleRightAbsentSequenceSource ) ) ( ( ruleCLOSE_PAR ) ) ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:6089:5: ( ( ruleOPEN_PAR ) )
        // InternalSiddhiParser.g:6090:6: ( ruleOPEN_PAR )
        {
        // InternalSiddhiParser.g:6090:6: ( ruleOPEN_PAR )
        // InternalSiddhiParser.g:6091:7: ruleOPEN_PAR
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6094:5: ( ( ruleRightAbsentSequenceSource ) )
        // InternalSiddhiParser.g:6095:6: ( ruleRightAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:6095:6: ( ruleRightAbsentSequenceSource )
        // InternalSiddhiParser.g:6096:7: ruleRightAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleRightAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6099:5: ( ( ruleCLOSE_PAR ) )
        // InternalSiddhiParser.g:6100:6: ( ruleCLOSE_PAR )
        {
        // InternalSiddhiParser.g:6100:6: ( ruleCLOSE_PAR )
        // InternalSiddhiParser.g:6101:7: ruleCLOSE_PAR
        {
        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6104:5: ( ( ruleWithinTime ) )?
        int alt249=2;
        int LA249_0 = input.LA(1);

        if ( (LA249_0==Within) ) {
            alt249=1;
        }
        switch (alt249) {
            case 1 :
                // InternalSiddhiParser.g:6105:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:6105:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:6106:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred45_InternalSiddhiParser

    // $ANTLR start synpred46_InternalSiddhiParser
    public final void synpred46_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6192:4: ( ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:6192:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:6192:5: ( ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:6193:5: ( ( ruleSequenceSourceChain ) ) ( ( Comma ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:6193:5: ( ( ruleSequenceSourceChain ) )
        // InternalSiddhiParser.g:6194:6: ( ruleSequenceSourceChain )
        {
        // InternalSiddhiParser.g:6194:6: ( ruleSequenceSourceChain )
        // InternalSiddhiParser.g:6195:7: ruleSequenceSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6198:5: ( ( Comma ) )
        // InternalSiddhiParser.g:6199:6: ( Comma )
        {
        // InternalSiddhiParser.g:6199:6: ( Comma )
        // InternalSiddhiParser.g:6200:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_76); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6203:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:6204:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6204:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:6205:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalSiddhiParser

    // $ANTLR start synpred47_InternalSiddhiParser
    public final void synpred47_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6267:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) ) )
        // InternalSiddhiParser.g:6267:5: ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) )
        {
        // InternalSiddhiParser.g:6267:5: ( ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) ) )
        // InternalSiddhiParser.g:6268:5: ( ( ruleBasicAbsentPatternSource ) ) Comma ( ( ruleRightAbsentSequenceSource ) )
        {
        // InternalSiddhiParser.g:6268:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:6269:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:6269:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:6270:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_74);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return ;
        // InternalSiddhiParser.g:6274:5: ( ( ruleRightAbsentSequenceSource ) )
        // InternalSiddhiParser.g:6275:6: ( ruleRightAbsentSequenceSource )
        {
        // InternalSiddhiParser.g:6275:6: ( ruleRightAbsentSequenceSource )
        // InternalSiddhiParser.g:6276:7: ruleRightAbsentSequenceSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentSequenceSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred47_InternalSiddhiParser

    // $ANTLR start synpred48_InternalSiddhiParser
    public final void synpred48_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6354:4: ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )
        // InternalSiddhiParser.g:6354:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) )
        {
        // InternalSiddhiParser.g:6354:5: ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) )
        // InternalSiddhiParser.g:6355:5: () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) )
        {
        // InternalSiddhiParser.g:6355:5: ()
        // InternalSiddhiParser.g:6356:5: 
        {
        }

        // InternalSiddhiParser.g:6357:5: ( ( Comma ) )
        // InternalSiddhiParser.g:6358:6: ( Comma )
        {
        // InternalSiddhiParser.g:6358:6: ( Comma )
        // InternalSiddhiParser.g:6359:7: Comma
        {
        match(input,Comma,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6362:5: ( ( ruleSequenceSourceChain1 ) )
        // InternalSiddhiParser.g:6363:6: ( ruleSequenceSourceChain1 )
        {
        // InternalSiddhiParser.g:6363:6: ( ruleSequenceSourceChain1 )
        // InternalSiddhiParser.g:6364:7: ruleSequenceSourceChain1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceSourceChain1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred48_InternalSiddhiParser

    // $ANTLR start synpred49_InternalSiddhiParser
    public final void synpred49_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6432:4: ( ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:6432:5: ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:6432:5: ( ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:6433:5: ruleOPEN_PAR ruleSequenceSourceChain ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_12);
        ruleSequenceSourceChain();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6436:5: ( ( ruleWithinTime ) )?
        int alt250=2;
        int LA250_0 = input.LA(1);

        if ( (LA250_0==Within) ) {
            alt250=1;
        }
        switch (alt250) {
            case 1 :
                // InternalSiddhiParser.g:6437:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:6437:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:6438:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred49_InternalSiddhiParser

    // $ANTLR start synpred50_InternalSiddhiParser
    public final void synpred50_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6537:4: ( ruleLogicalStatefulSource )
        // InternalSiddhiParser.g:6537:5: ruleLogicalStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_InternalSiddhiParser

    // $ANTLR start synpred51_InternalSiddhiParser
    public final void synpred51_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6549:4: ( ruleSequenceCollectionStatefulSource )
        // InternalSiddhiParser.g:6549:5: ruleSequenceCollectionStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSequenceCollectionStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_InternalSiddhiParser

    // $ANTLR start synpred52_InternalSiddhiParser
    public final void synpred52_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6561:4: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:6561:5: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_InternalSiddhiParser

    // $ANTLR start synpred53_InternalSiddhiParser
    public final void synpred53_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6573:4: ( ruleLogicalAbsentStatefulSource )
        // InternalSiddhiParser.g:6573:5: ruleLogicalAbsentStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalAbsentStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_InternalSiddhiParser

    // $ANTLR start synpred54_InternalSiddhiParser
    public final void synpred54_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6850:4: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:6850:5: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_InternalSiddhiParser

    // $ANTLR start synpred55_InternalSiddhiParser
    public final void synpred55_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6862:4: ( ruleAbsentPatternSourceChain )
        // InternalSiddhiParser.g:6862:5: ruleAbsentPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAbsentPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_InternalSiddhiParser

    // $ANTLR start synpred56_InternalSiddhiParser
    public final void synpred56_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6900:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )
        // InternalSiddhiParser.g:6900:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) )
        {
        // InternalSiddhiParser.g:6900:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) )
        // InternalSiddhiParser.g:6901:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) )
        {
        // InternalSiddhiParser.g:6901:5: ()
        // InternalSiddhiParser.g:6902:5: 
        {
        }

        // InternalSiddhiParser.g:6903:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:6904:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:6904:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:6905:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:6908:5: ( ( ruleEveryPatternSourceChain1 ) )
        // InternalSiddhiParser.g:6909:6: ( ruleEveryPatternSourceChain1 )
        {
        // InternalSiddhiParser.g:6909:6: ( ruleEveryPatternSourceChain1 )
        // InternalSiddhiParser.g:6910:7: ruleEveryPatternSourceChain1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryPatternSourceChain1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred56_InternalSiddhiParser

    // $ANTLR start synpred57_InternalSiddhiParser
    public final void synpred57_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:6978:4: ( ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:6978:5: ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:6978:5: ( ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:6979:5: ruleOPEN_PAR ( ( ruleEveryPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6980:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:6981:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:6981:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:6982:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:6986:5: ( ( ruleWithinTime ) )?
        int alt251=2;
        int LA251_0 = input.LA(1);

        if ( (LA251_0==Within) ) {
            alt251=1;
        }
        switch (alt251) {
            case 1 :
                // InternalSiddhiParser.g:6987:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:6987:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:6988:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred57_InternalSiddhiParser

    // $ANTLR start synpred58_InternalSiddhiParser
    public final void synpred58_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7137:4: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:7137:5: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_InternalSiddhiParser

    // $ANTLR start synpred59_InternalSiddhiParser
    public final void synpred59_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7201:4: ( ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:7201:5: ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:7201:5: ( ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:7202:5: ruleOPEN_PAR ( ( rulePatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:7203:5: ( ( rulePatternSourceChain ) )
        // InternalSiddhiParser.g:7204:6: ( rulePatternSourceChain )
        {
        // InternalSiddhiParser.g:7204:6: ( rulePatternSourceChain )
        // InternalSiddhiParser.g:7205:7: rulePatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_12);
        rulePatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:7209:5: ( ( ruleWithinTime ) )?
        int alt252=2;
        int LA252_0 = input.LA(1);

        if ( (LA252_0==Within) ) {
            alt252=1;
        }
        switch (alt252) {
            case 1 :
                // InternalSiddhiParser.g:7210:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:7210:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:7211:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred59_InternalSiddhiParser

    // $ANTLR start synpred60_InternalSiddhiParser
    public final void synpred60_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7332:4: ( ( ruleLogicalStatefulSource ) )
        // InternalSiddhiParser.g:7332:5: ( ruleLogicalStatefulSource )
        {
        // InternalSiddhiParser.g:7332:5: ( ruleLogicalStatefulSource )
        // InternalSiddhiParser.g:7333:5: ruleLogicalStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred60_InternalSiddhiParser

    // $ANTLR start synpred61_InternalSiddhiParser
    public final void synpred61_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7356:4: ( ( rulePatternCollectionStatefulSource ) )
        // InternalSiddhiParser.g:7356:5: ( rulePatternCollectionStatefulSource )
        {
        // InternalSiddhiParser.g:7356:5: ( rulePatternCollectionStatefulSource )
        // InternalSiddhiParser.g:7357:5: rulePatternCollectionStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rulePatternCollectionStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred61_InternalSiddhiParser

    // $ANTLR start synpred62_InternalSiddhiParser
    public final void synpred62_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7380:4: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:7380:5: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:7380:5: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:7381:5: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred62_InternalSiddhiParser

    // $ANTLR start synpred63_InternalSiddhiParser
    public final void synpred63_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7404:4: ( ( ruleLogicalAbsentStatefulSource ) )
        // InternalSiddhiParser.g:7404:5: ( ruleLogicalAbsentStatefulSource )
        {
        // InternalSiddhiParser.g:7404:5: ( ruleLogicalAbsentStatefulSource )
        // InternalSiddhiParser.g:7405:5: ruleLogicalAbsentStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLogicalAbsentStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred63_InternalSiddhiParser

    // $ANTLR start synpred64_InternalSiddhiParser
    public final void synpred64_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7447:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ) )
        // InternalSiddhiParser.g:7447:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) )
        {
        // InternalSiddhiParser.g:7447:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) )
        // InternalSiddhiParser.g:7448:6: ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) )
        {
        // InternalSiddhiParser.g:7448:6: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:7449:7: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:7449:7: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:7450:8: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_83);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7453:6: ( ( ruleAND ) )
        // InternalSiddhiParser.g:7454:7: ( ruleAND )
        {
        // InternalSiddhiParser.g:7454:7: ( ruleAND )
        // InternalSiddhiParser.g:7455:8: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred64_InternalSiddhiParser

    // $ANTLR start synpred65_InternalSiddhiParser
    public final void synpred65_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7524:5: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ) )
        // InternalSiddhiParser.g:7524:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) )
        {
        // InternalSiddhiParser.g:7524:6: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) )
        // InternalSiddhiParser.g:7525:6: ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) )
        {
        // InternalSiddhiParser.g:7525:6: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:7526:7: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:7526:7: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:7527:8: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_84);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7530:6: ( ( ruleOR ) )
        // InternalSiddhiParser.g:7531:7: ( ruleOR )
        {
        // InternalSiddhiParser.g:7531:7: ( ruleOR )
        // InternalSiddhiParser.g:7532:8: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred65_InternalSiddhiParser

    // $ANTLR start synpred66_InternalSiddhiParser
    public final void synpred66_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7804:4: ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )
        // InternalSiddhiParser.g:7804:5: ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
        {
        // InternalSiddhiParser.g:7804:5: ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR )
        // InternalSiddhiParser.g:7805:5: ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR
        {
        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:7806:5: ( ( ruleLogicalAbsentStatefulSource ) )
        // InternalSiddhiParser.g:7807:6: ( ruleLogicalAbsentStatefulSource )
        {
        // InternalSiddhiParser.g:7807:6: ( ruleLogicalAbsentStatefulSource )
        // InternalSiddhiParser.g:7808:7: ruleLogicalAbsentStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleLogicalAbsentStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_2);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred66_InternalSiddhiParser

    // $ANTLR start synpred67_InternalSiddhiParser
    public final void synpred67_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7852:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )
        // InternalSiddhiParser.g:7852:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) )
        {
        // InternalSiddhiParser.g:7852:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) )
        // InternalSiddhiParser.g:7853:5: ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) )
        {
        // InternalSiddhiParser.g:7853:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:7854:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:7854:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:7855:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_83);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7858:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:7859:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:7859:6: ( ruleAND )
        // InternalSiddhiParser.g:7860:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_76);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7863:5: ( ( ruleNOT ) )
        // InternalSiddhiParser.g:7864:6: ( ruleNOT )
        {
        // InternalSiddhiParser.g:7864:6: ( ruleNOT )
        // InternalSiddhiParser.g:7865:7: ruleNOT
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleNOT();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7868:5: ( ( ruleBasicSource ) )
        // InternalSiddhiParser.g:7869:6: ( ruleBasicSource )
        {
        // InternalSiddhiParser.g:7869:6: ( ruleBasicSource )
        // InternalSiddhiParser.g:7870:7: ruleBasicSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred67_InternalSiddhiParser

    // $ANTLR start synpred68_InternalSiddhiParser
    public final void synpred68_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:7957:5: ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )
        // InternalSiddhiParser.g:7957:6: ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) )
        {
        // InternalSiddhiParser.g:7957:6: ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) )
        // InternalSiddhiParser.g:7958:6: ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) )
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleNOT();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:7959:6: ( ( ruleBasicSource ) )
        // InternalSiddhiParser.g:7960:7: ( ruleBasicSource )
        {
        // InternalSiddhiParser.g:7960:7: ( ruleBasicSource )
        // InternalSiddhiParser.g:7961:8: ruleBasicSource
        {
        pushFollow(FollowSets000.FOLLOW_83);
        ruleBasicSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:7964:6: ( ( ruleAND ) )
        // InternalSiddhiParser.g:7965:7: ( ruleAND )
        {
        // InternalSiddhiParser.g:7965:7: ( ruleAND )
        // InternalSiddhiParser.g:7966:8: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred68_InternalSiddhiParser

    // $ANTLR start synpred69_InternalSiddhiParser
    public final void synpred69_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8042:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:8042:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:8042:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:8043:5: ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:8043:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:8044:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:8044:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:8045:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_83);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8048:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:8049:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:8049:6: ( ruleAND )
        // InternalSiddhiParser.g:8050:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_76);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8053:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8054:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8054:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8055:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred69_InternalSiddhiParser

    // $ANTLR start synpred70_InternalSiddhiParser
    public final void synpred70_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8122:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )
        // InternalSiddhiParser.g:8122:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) )
        {
        // InternalSiddhiParser.g:8122:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) )
        // InternalSiddhiParser.g:8123:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) )
        {
        // InternalSiddhiParser.g:8123:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8124:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8124:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8125:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_83);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8128:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:8129:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:8129:6: ( ruleAND )
        // InternalSiddhiParser.g:8130:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8133:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:8134:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:8134:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:8135:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred70_InternalSiddhiParser

    // $ANTLR start synpred71_InternalSiddhiParser
    public final void synpred71_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8202:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:8202:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:8202:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:8203:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:8203:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8204:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8204:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8205:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_83);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8208:5: ( ( ruleAND ) )
        // InternalSiddhiParser.g:8209:6: ( ruleAND )
        {
        // InternalSiddhiParser.g:8209:6: ( ruleAND )
        // InternalSiddhiParser.g:8210:7: ruleAND
        {
        pushFollow(FollowSets000.FOLLOW_76);
        ruleAND();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8213:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8214:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8214:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8215:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred71_InternalSiddhiParser

    // $ANTLR start synpred72_InternalSiddhiParser
    public final void synpred72_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8282:4: ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:8282:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:8282:5: ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:8283:5: ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:8283:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:8284:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:8284:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:8285:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_84);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8288:5: ( ( ruleOR ) )
        // InternalSiddhiParser.g:8289:6: ( ruleOR )
        {
        // InternalSiddhiParser.g:8289:6: ( ruleOR )
        // InternalSiddhiParser.g:8290:7: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_76);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8293:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8294:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8294:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8295:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred72_InternalSiddhiParser

    // $ANTLR start synpred73_InternalSiddhiParser
    public final void synpred73_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8362:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )
        // InternalSiddhiParser.g:8362:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) )
        {
        // InternalSiddhiParser.g:8362:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) )
        // InternalSiddhiParser.g:8363:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) )
        {
        // InternalSiddhiParser.g:8363:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8364:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8364:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8365:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_84);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8368:5: ( ( ruleOR ) )
        // InternalSiddhiParser.g:8369:6: ( ruleOR )
        {
        // InternalSiddhiParser.g:8369:6: ( ruleOR )
        // InternalSiddhiParser.g:8370:7: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8373:5: ( ( ruleStandardStatefulSource ) )
        // InternalSiddhiParser.g:8374:6: ( ruleStandardStatefulSource )
        {
        // InternalSiddhiParser.g:8374:6: ( ruleStandardStatefulSource )
        // InternalSiddhiParser.g:8375:7: ruleStandardStatefulSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStatefulSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred73_InternalSiddhiParser

    // $ANTLR start synpred74_InternalSiddhiParser
    public final void synpred74_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8442:4: ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:8442:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:8442:5: ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:8443:5: ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:8443:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8444:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8444:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8445:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_84);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8448:5: ( ( ruleOR ) )
        // InternalSiddhiParser.g:8449:6: ( ruleOR )
        {
        // InternalSiddhiParser.g:8449:6: ( ruleOR )
        // InternalSiddhiParser.g:8450:7: ruleOR
        {
        pushFollow(FollowSets000.FOLLOW_76);
        ruleOR();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8453:5: ( ( ruleBasicAbsentPatternSource ) )
        // InternalSiddhiParser.g:8454:6: ( ruleBasicAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8454:6: ( ruleBasicAbsentPatternSource )
        // InternalSiddhiParser.g:8455:7: ruleBasicAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBasicAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred74_InternalSiddhiParser

    // $ANTLR start synpred75_InternalSiddhiParser
    public final void synpred75_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8540:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:8540:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:8540:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:8541:5: ( ruleEVERY )? ruleOPEN_PAR ( ( ruleAbsentPatternSourceChain ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:8541:5: ( ruleEVERY )?
        int alt253=2;
        int LA253_0 = input.LA(1);

        if ( (LA253_0==Every) ) {
            alt253=1;
        }
        switch (alt253) {
            case 1 :
                // InternalSiddhiParser.g:8542:6: ruleEVERY
                {
                pushFollow(FollowSets000.FOLLOW_10);
                ruleEVERY();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:8545:5: ( ( ruleAbsentPatternSourceChain ) )
        // InternalSiddhiParser.g:8546:6: ( ruleAbsentPatternSourceChain )
        {
        // InternalSiddhiParser.g:8546:6: ( ruleAbsentPatternSourceChain )
        // InternalSiddhiParser.g:8547:7: ruleAbsentPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleAbsentPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:8551:5: ( ( ruleWithinTime ) )?
        int alt254=2;
        int LA254_0 = input.LA(1);

        if ( (LA254_0==Within) ) {
            alt254=1;
        }
        switch (alt254) {
            case 1 :
                // InternalSiddhiParser.g:8552:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:8552:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:8553:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred75_InternalSiddhiParser

    // $ANTLR start synpred76_InternalSiddhiParser
    public final void synpred76_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8634:4: ( ruleLeftAbsentPatternSource )
        // InternalSiddhiParser.g:8634:5: ruleLeftAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred76_InternalSiddhiParser

    // $ANTLR start synpred77_InternalSiddhiParser
    public final void synpred77_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8646:4: ( ruleRightAbsentPatternSource )
        // InternalSiddhiParser.g:8646:5: ruleRightAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred77_InternalSiddhiParser

    // $ANTLR start synpred80_InternalSiddhiParser
    public final void synpred80_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8875:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) ) )
        // InternalSiddhiParser.g:8875:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) )
        {
        // InternalSiddhiParser.g:8875:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) ) )
        // InternalSiddhiParser.g:8876:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleLeftAbsentPatternSource1 ) )
        {
        // InternalSiddhiParser.g:8876:5: ()
        // InternalSiddhiParser.g:8877:5: 
        {
        }

        // InternalSiddhiParser.g:8878:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:8879:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:8879:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:8880:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8883:5: ( ( ruleLeftAbsentPatternSource1 ) )
        // InternalSiddhiParser.g:8884:6: ( ruleLeftAbsentPatternSource1 )
        {
        // InternalSiddhiParser.g:8884:6: ( ruleLeftAbsentPatternSource1 )
        // InternalSiddhiParser.g:8885:7: ruleLeftAbsentPatternSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentPatternSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred80_InternalSiddhiParser

    // $ANTLR start synpred81_InternalSiddhiParser
    public final void synpred81_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:8961:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:8961:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:8961:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:8962:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:8962:5: ()
        // InternalSiddhiParser.g:8963:5: 
        {
        }

        // InternalSiddhiParser.g:8964:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:8965:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:8965:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:8966:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_87); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:8969:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:8970:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:8970:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:8971:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred81_InternalSiddhiParser

    // $ANTLR start synpred82_InternalSiddhiParser
    public final void synpred82_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9039:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:9039:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:9039:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:9040:5: ( ruleEVERY )? ruleOPEN_PAR ( ( ruleLeftAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:9040:5: ( ruleEVERY )?
        int alt256=2;
        int LA256_0 = input.LA(1);

        if ( (LA256_0==Every) ) {
            alt256=1;
        }
        switch (alt256) {
            case 1 :
                // InternalSiddhiParser.g:9041:6: ruleEVERY
                {
                pushFollow(FollowSets000.FOLLOW_10);
                ruleEVERY();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:9044:5: ( ( ruleLeftAbsentPatternSource ) )
        // InternalSiddhiParser.g:9045:6: ( ruleLeftAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9045:6: ( ruleLeftAbsentPatternSource )
        // InternalSiddhiParser.g:9046:7: ruleLeftAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleLeftAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:9050:5: ( ( ruleWithinTime ) )?
        int alt257=2;
        int LA257_0 = input.LA(1);

        if ( (LA257_0==Within) ) {
            alt257=1;
        }
        switch (alt257) {
            case 1 :
                // InternalSiddhiParser.g:9051:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:9051:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:9052:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred82_InternalSiddhiParser

    // $ANTLR start synpred83_InternalSiddhiParser
    public final void synpred83_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9124:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) ) )
        // InternalSiddhiParser.g:9124:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) )
        {
        // InternalSiddhiParser.g:9124:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) ) )
        // InternalSiddhiParser.g:9125:5: ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleEveryPatternSourceChain ) )
        {
        // InternalSiddhiParser.g:9125:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:9126:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9126:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:9127:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_88);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return ;
        // InternalSiddhiParser.g:9131:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:9132:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:9132:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:9133:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred83_InternalSiddhiParser

    // $ANTLR start synpred84_InternalSiddhiParser
    public final void synpred84_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9185:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:9185:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:9185:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:9186:5: ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleLeftAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:9186:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:9187:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:9187:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:9188:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_88);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return ;
        // InternalSiddhiParser.g:9192:5: ( ( ruleLeftAbsentPatternSource ) )
        // InternalSiddhiParser.g:9193:6: ( ruleLeftAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9193:6: ( ruleLeftAbsentPatternSource )
        // InternalSiddhiParser.g:9194:7: ruleLeftAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLeftAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred84_InternalSiddhiParser

    // $ANTLR start synpred85_InternalSiddhiParser
    public final void synpred85_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9272:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) ) )
        // InternalSiddhiParser.g:9272:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) )
        {
        // InternalSiddhiParser.g:9272:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) ) )
        // InternalSiddhiParser.g:9273:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleRightAbsentPatternSource1 ) )
        {
        // InternalSiddhiParser.g:9273:5: ()
        // InternalSiddhiParser.g:9274:5: 
        {
        }

        // InternalSiddhiParser.g:9275:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:9276:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:9276:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:9277:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:9280:5: ( ( ruleRightAbsentPatternSource1 ) )
        // InternalSiddhiParser.g:9281:6: ( ruleRightAbsentPatternSource1 )
        {
        // InternalSiddhiParser.g:9281:6: ( ruleRightAbsentPatternSource1 )
        // InternalSiddhiParser.g:9282:7: ruleRightAbsentPatternSource1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentPatternSource1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred85_InternalSiddhiParser

    // $ANTLR start synpred86_InternalSiddhiParser
    public final void synpred86_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9358:4: ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:9358:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:9358:5: ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:9359:5: () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:9359:5: ()
        // InternalSiddhiParser.g:9360:5: 
        {
        }

        // InternalSiddhiParser.g:9361:5: ( ( HyphenMinusGreaterThanSign ) )
        // InternalSiddhiParser.g:9362:6: ( HyphenMinusGreaterThanSign )
        {
        // InternalSiddhiParser.g:9362:6: ( HyphenMinusGreaterThanSign )
        // InternalSiddhiParser.g:9363:7: HyphenMinusGreaterThanSign
        {
        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_87); if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:9366:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:9367:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9367:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:9368:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred86_InternalSiddhiParser

    // $ANTLR start synpred87_InternalSiddhiParser
    public final void synpred87_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9436:4: ( ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? ) )
        // InternalSiddhiParser.g:9436:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        {
        // InternalSiddhiParser.g:9436:5: ( ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )? )
        // InternalSiddhiParser.g:9437:5: ( ruleEVERY )? ruleOPEN_PAR ( ( ruleRightAbsentPatternSource ) ) ruleCLOSE_PAR ( ( ruleWithinTime ) )?
        {
        // InternalSiddhiParser.g:9437:5: ( ruleEVERY )?
        int alt258=2;
        int LA258_0 = input.LA(1);

        if ( (LA258_0==Every) ) {
            alt258=1;
        }
        switch (alt258) {
            case 1 :
                // InternalSiddhiParser.g:9438:6: ruleEVERY
                {
                pushFollow(FollowSets000.FOLLOW_10);
                ruleEVERY();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_72);
        ruleOPEN_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:9441:5: ( ( ruleRightAbsentPatternSource ) )
        // InternalSiddhiParser.g:9442:6: ( ruleRightAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9442:6: ( ruleRightAbsentPatternSource )
        // InternalSiddhiParser.g:9443:7: ruleRightAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_12);
        ruleRightAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_75);
        ruleCLOSE_PAR();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:9447:5: ( ( ruleWithinTime ) )?
        int alt259=2;
        int LA259_0 = input.LA(1);

        if ( (LA259_0==Within) ) {
            alt259=1;
        }
        switch (alt259) {
            case 1 :
                // InternalSiddhiParser.g:9448:6: ( ruleWithinTime )
                {
                // InternalSiddhiParser.g:9448:6: ( ruleWithinTime )
                // InternalSiddhiParser.g:9449:7: ruleWithinTime
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleWithinTime();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred87_InternalSiddhiParser

    // $ANTLR start synpred88_InternalSiddhiParser
    public final void synpred88_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9521:4: ( ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:9521:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:9521:5: ( ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:9522:5: ( ( ruleEveryPatternSourceChain ) ) HyphenMinusGreaterThanSign ( ( ruleEveryAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:9522:5: ( ( ruleEveryPatternSourceChain ) )
        // InternalSiddhiParser.g:9523:6: ( ruleEveryPatternSourceChain )
        {
        // InternalSiddhiParser.g:9523:6: ( ruleEveryPatternSourceChain )
        // InternalSiddhiParser.g:9524:7: ruleEveryPatternSourceChain
        {
        pushFollow(FollowSets000.FOLLOW_88);
        ruleEveryPatternSourceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_87); if (state.failed) return ;
        // InternalSiddhiParser.g:9528:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:9529:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9529:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:9530:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred88_InternalSiddhiParser

    // $ANTLR start synpred89_InternalSiddhiParser
    public final void synpred89_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9582:4: ( ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) ) )
        // InternalSiddhiParser.g:9582:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) )
        {
        // InternalSiddhiParser.g:9582:5: ( ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) ) )
        // InternalSiddhiParser.g:9583:5: ( ( ruleEveryAbsentPatternSource ) ) HyphenMinusGreaterThanSign ( ( ruleRightAbsentPatternSource ) )
        {
        // InternalSiddhiParser.g:9583:5: ( ( ruleEveryAbsentPatternSource ) )
        // InternalSiddhiParser.g:9584:6: ( ruleEveryAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9584:6: ( ruleEveryAbsentPatternSource )
        // InternalSiddhiParser.g:9585:7: ruleEveryAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_88);
        ruleEveryAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_72); if (state.failed) return ;
        // InternalSiddhiParser.g:9589:5: ( ( ruleRightAbsentPatternSource ) )
        // InternalSiddhiParser.g:9590:6: ( ruleRightAbsentPatternSource )
        {
        // InternalSiddhiParser.g:9590:6: ( ruleRightAbsentPatternSource )
        // InternalSiddhiParser.g:9591:7: ruleRightAbsentPatternSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleRightAbsentPatternSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred89_InternalSiddhiParser

    // $ANTLR start synpred90_InternalSiddhiParser
    public final void synpred90_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9662:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) ) )
        // InternalSiddhiParser.g:9662:6: ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) )
        {
        // InternalSiddhiParser.g:9662:6: ( ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) ) )
        // InternalSiddhiParser.g:9663:6: ( ( ruleJoinSource ) ) ( ( ruleJoinSource ) )
        {
        // InternalSiddhiParser.g:9663:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:9664:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:9664:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:9665:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_9);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:9668:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:9669:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:9669:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:9670:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred90_InternalSiddhiParser

    // $ANTLR start synpred91_InternalSiddhiParser
    public final void synpred91_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9819:5: ( ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) ) )
        // InternalSiddhiParser.g:9819:6: ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) )
        {
        // InternalSiddhiParser.g:9819:6: ( ( ( ruleJoinSource ) ) ( ( rulejoins ) ) )
        // InternalSiddhiParser.g:9820:6: ( ( ruleJoinSource ) ) ( ( rulejoins ) )
        {
        // InternalSiddhiParser.g:9820:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:9821:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:9821:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:9822:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_92);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:9825:6: ( ( rulejoins ) )
        // InternalSiddhiParser.g:9826:7: ( rulejoins )
        {
        // InternalSiddhiParser.g:9826:7: ( rulejoins )
        // InternalSiddhiParser.g:9827:8: rulejoins
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rulejoins();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred91_InternalSiddhiParser

    // $ANTLR start synpred92_InternalSiddhiParser
    public final void synpred92_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:9976:5: ( ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) ) )
        // InternalSiddhiParser.g:9976:6: ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) )
        {
        // InternalSiddhiParser.g:9976:6: ( ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) ) )
        // InternalSiddhiParser.g:9977:6: ( ( ruleJoinSource ) ) ( ( ruleUNIDIRECTIONAL ) )
        {
        // InternalSiddhiParser.g:9977:6: ( ( ruleJoinSource ) )
        // InternalSiddhiParser.g:9978:7: ( ruleJoinSource )
        {
        // InternalSiddhiParser.g:9978:7: ( ruleJoinSource )
        // InternalSiddhiParser.g:9979:8: ruleJoinSource
        {
        pushFollow(FollowSets000.FOLLOW_89);
        ruleJoinSource();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:9982:6: ( ( ruleUNIDIRECTIONAL ) )
        // InternalSiddhiParser.g:9983:7: ( ruleUNIDIRECTIONAL )
        {
        // InternalSiddhiParser.g:9983:7: ( ruleUNIDIRECTIONAL )
        // InternalSiddhiParser.g:9984:8: ruleUNIDIRECTIONAL
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleUNIDIRECTIONAL();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred92_InternalSiddhiParser

    // $ANTLR start synpred93_InternalSiddhiParser
    public final void synpred93_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10151:4: ( ruleStandardStream )
        // InternalSiddhiParser.g:10151:5: ruleStandardStream
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStandardStream();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_InternalSiddhiParser

    // $ANTLR start synpred94_InternalSiddhiParser
    public final void synpred94_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10390:4: ( ( ( ruleIdNew ) ) )
        // InternalSiddhiParser.g:10390:5: ( ( ruleIdNew ) )
        {
        // InternalSiddhiParser.g:10390:5: ( ( ruleIdNew ) )
        // InternalSiddhiParser.g:10391:5: ( ruleIdNew )
        {
        // InternalSiddhiParser.g:10391:5: ( ruleIdNew )
        // InternalSiddhiParser.g:10392:6: ruleIdNew
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleIdNew();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred94_InternalSiddhiParser

    // $ANTLR start synpred95_InternalSiddhiParser
    public final void synpred95_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10418:4: ( ( ( ruleName ) ) )
        // InternalSiddhiParser.g:10418:5: ( ( ruleName ) )
        {
        // InternalSiddhiParser.g:10418:5: ( ( ruleName ) )
        // InternalSiddhiParser.g:10419:5: ( ruleName )
        {
        // InternalSiddhiParser.g:10419:5: ( ruleName )
        // InternalSiddhiParser.g:10420:6: ruleName
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred95_InternalSiddhiParser

    // $ANTLR start synpred97_InternalSiddhiParser
    public final void synpred97_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10881:5: ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )
        // InternalSiddhiParser.g:10881:6: ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
        {
        // InternalSiddhiParser.g:10881:6: ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS )
        // InternalSiddhiParser.g:10882:6: ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS
        {
        // InternalSiddhiParser.g:10882:6: ( NumberSign )?
        int alt261=2;
        int LA261_0 = input.LA(1);

        if ( (LA261_0==NumberSign) ) {
            alt261=1;
        }
        switch (alt261) {
            case 1 :
                // InternalSiddhiParser.g:10883:7: NumberSign
                {
                match(input,NumberSign,FollowSets000.FOLLOW_23); if (state.failed) return ;

                }
                break;

        }

        pushFollow(FollowSets000.FOLLOW_44);
        ruleOPEN_SQARE_BRACKETS();

        state._fsp--;
        if (state.failed) return ;
        // InternalSiddhiParser.g:10886:6: ( ( ruleExpression ) )
        // InternalSiddhiParser.g:10887:7: ( ruleExpression )
        {
        // InternalSiddhiParser.g:10887:7: ( ruleExpression )
        // InternalSiddhiParser.g:10888:8: ruleExpression
        {
        pushFollow(FollowSets000.FOLLOW_24);
        ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_2);
        ruleCLOSE_SQARE_BRACKETS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred97_InternalSiddhiParser

    // $ANTLR start synpred98_InternalSiddhiParser
    public final void synpred98_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10938:5: ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )
        // InternalSiddhiParser.g:10938:6: ( NumberSign ( ( ruleFunctionOperation ) ) )
        {
        // InternalSiddhiParser.g:10938:6: ( NumberSign ( ( ruleFunctionOperation ) ) )
        // InternalSiddhiParser.g:10939:6: NumberSign ( ( ruleFunctionOperation ) )
        {
        match(input,NumberSign,FollowSets000.FOLLOW_11); if (state.failed) return ;
        // InternalSiddhiParser.g:10940:6: ( ( ruleFunctionOperation ) )
        // InternalSiddhiParser.g:10941:7: ( ruleFunctionOperation )
        {
        // InternalSiddhiParser.g:10941:7: ( ruleFunctionOperation )
        // InternalSiddhiParser.g:10942:8: ruleFunctionOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFunctionOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred98_InternalSiddhiParser

    // $ANTLR start synpred99_InternalSiddhiParser
    public final void synpred99_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:10975:4: ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )
        // InternalSiddhiParser.g:10975:5: ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) )
        {
        // InternalSiddhiParser.g:10975:5: ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) )
        // InternalSiddhiParser.g:10976:5: NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) )
        {
        match(input,NumberSign,FollowSets000.FOLLOW_14); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_100);
        ruleWINDOW(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,FullStop,FollowSets000.FOLLOW_11); if (state.failed) return ;
        // InternalSiddhiParser.g:10979:5: ( ( ruleFunctionOperation ) )
        // InternalSiddhiParser.g:10980:6: ( ruleFunctionOperation )
        {
        // InternalSiddhiParser.g:10980:6: ( ruleFunctionOperation )
        // InternalSiddhiParser.g:10981:7: ruleFunctionOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFunctionOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred99_InternalSiddhiParser

    // $ANTLR start synpred100_InternalSiddhiParser
    public final void synpred100_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11331:4: ( ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) ) )
        // InternalSiddhiParser.g:11331:5: ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) )
        {
        // InternalSiddhiParser.g:11331:5: ( () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) ) )
        // InternalSiddhiParser.g:11332:5: () ( ( ( ruleAND ) ) | ( ( ruleOR ) ) ) ( ( ruleMathInOperation ) )
        {
        // InternalSiddhiParser.g:11332:5: ()
        // InternalSiddhiParser.g:11333:5: 
        {
        }

        // InternalSiddhiParser.g:11334:5: ( ( ( ruleAND ) ) | ( ( ruleOR ) ) )
        int alt262=2;
        int LA262_0 = input.LA(1);

        if ( (LA262_0==And) ) {
            alt262=1;
        }
        else if ( (LA262_0==Or) ) {
            alt262=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 262, 0, input);

            throw nvae;
        }
        switch (alt262) {
            case 1 :
                // InternalSiddhiParser.g:11335:6: ( ( ruleAND ) )
                {
                // InternalSiddhiParser.g:11335:6: ( ( ruleAND ) )
                // InternalSiddhiParser.g:11336:7: ( ruleAND )
                {
                // InternalSiddhiParser.g:11336:7: ( ruleAND )
                // InternalSiddhiParser.g:11337:8: ruleAND
                {
                pushFollow(FollowSets000.FOLLOW_44);
                ruleAND();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11341:6: ( ( ruleOR ) )
                {
                // InternalSiddhiParser.g:11341:6: ( ( ruleOR ) )
                // InternalSiddhiParser.g:11342:7: ( ruleOR )
                {
                // InternalSiddhiParser.g:11342:7: ( ruleOR )
                // InternalSiddhiParser.g:11343:8: ruleOR
                {
                pushFollow(FollowSets000.FOLLOW_44);
                ruleOR();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11347:5: ( ( ruleMathInOperation ) )
        // InternalSiddhiParser.g:11348:6: ( ruleMathInOperation )
        {
        // InternalSiddhiParser.g:11348:6: ( ruleMathInOperation )
        // InternalSiddhiParser.g:11349:7: ruleMathInOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathInOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred100_InternalSiddhiParser

    // $ANTLR start synpred101_InternalSiddhiParser
    public final void synpred101_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11452:4: ( ( () ( ( ruleIN ) ) ( ( ruleName ) ) ) )
        // InternalSiddhiParser.g:11452:5: ( () ( ( ruleIN ) ) ( ( ruleName ) ) )
        {
        // InternalSiddhiParser.g:11452:5: ( () ( ( ruleIN ) ) ( ( ruleName ) ) )
        // InternalSiddhiParser.g:11453:5: () ( ( ruleIN ) ) ( ( ruleName ) )
        {
        // InternalSiddhiParser.g:11453:5: ()
        // InternalSiddhiParser.g:11454:5: 
        {
        }

        // InternalSiddhiParser.g:11455:5: ( ( ruleIN ) )
        // InternalSiddhiParser.g:11456:6: ( ruleIN )
        {
        // InternalSiddhiParser.g:11456:6: ( ruleIN )
        // InternalSiddhiParser.g:11457:7: ruleIN
        {
        pushFollow(FollowSets000.FOLLOW_11);
        ruleIN();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:11460:5: ( ( ruleName ) )
        // InternalSiddhiParser.g:11461:6: ( ruleName )
        {
        // InternalSiddhiParser.g:11461:6: ( ruleName )
        // InternalSiddhiParser.g:11462:7: ruleName
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred101_InternalSiddhiParser

    // $ANTLR start synpred102_InternalSiddhiParser
    public final void synpred102_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11543:4: ( ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) ) )
        // InternalSiddhiParser.g:11543:5: ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) )
        {
        // InternalSiddhiParser.g:11543:5: ( () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) ) )
        // InternalSiddhiParser.g:11544:5: () ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) ) ( ( ruleMathGtLtOperation ) )
        {
        // InternalSiddhiParser.g:11544:5: ()
        // InternalSiddhiParser.g:11545:5: 
        {
        }

        // InternalSiddhiParser.g:11546:5: ( ( ( GreaterThanSignEqualsSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( LessThanSign ) ) )
        int alt263=4;
        switch ( input.LA(1) ) {
        case GreaterThanSignEqualsSign:
            {
            alt263=1;
            }
            break;
        case LessThanSignEqualsSign:
            {
            alt263=2;
            }
            break;
        case GreaterThanSign:
            {
            alt263=3;
            }
            break;
        case LessThanSign:
            {
            alt263=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 263, 0, input);

            throw nvae;
        }

        switch (alt263) {
            case 1 :
                // InternalSiddhiParser.g:11547:6: ( ( GreaterThanSignEqualsSign ) )
                {
                // InternalSiddhiParser.g:11547:6: ( ( GreaterThanSignEqualsSign ) )
                // InternalSiddhiParser.g:11548:7: ( GreaterThanSignEqualsSign )
                {
                // InternalSiddhiParser.g:11548:7: ( GreaterThanSignEqualsSign )
                // InternalSiddhiParser.g:11549:8: GreaterThanSignEqualsSign
                {
                match(input,GreaterThanSignEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11553:6: ( ( LessThanSignEqualsSign ) )
                {
                // InternalSiddhiParser.g:11553:6: ( ( LessThanSignEqualsSign ) )
                // InternalSiddhiParser.g:11554:7: ( LessThanSignEqualsSign )
                {
                // InternalSiddhiParser.g:11554:7: ( LessThanSignEqualsSign )
                // InternalSiddhiParser.g:11555:8: LessThanSignEqualsSign
                {
                match(input,LessThanSignEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalSiddhiParser.g:11559:6: ( ( GreaterThanSign ) )
                {
                // InternalSiddhiParser.g:11559:6: ( ( GreaterThanSign ) )
                // InternalSiddhiParser.g:11560:7: ( GreaterThanSign )
                {
                // InternalSiddhiParser.g:11560:7: ( GreaterThanSign )
                // InternalSiddhiParser.g:11561:8: GreaterThanSign
                {
                match(input,GreaterThanSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalSiddhiParser.g:11565:6: ( ( LessThanSign ) )
                {
                // InternalSiddhiParser.g:11565:6: ( ( LessThanSign ) )
                // InternalSiddhiParser.g:11566:7: ( LessThanSign )
                {
                // InternalSiddhiParser.g:11566:7: ( LessThanSign )
                // InternalSiddhiParser.g:11567:8: LessThanSign
                {
                match(input,LessThanSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11571:5: ( ( ruleMathGtLtOperation ) )
        // InternalSiddhiParser.g:11572:6: ( ruleMathGtLtOperation )
        {
        // InternalSiddhiParser.g:11572:6: ( ruleMathGtLtOperation )
        // InternalSiddhiParser.g:11573:7: ruleMathGtLtOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathGtLtOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred102_InternalSiddhiParser

    // $ANTLR start synpred103_InternalSiddhiParser
    public final void synpred103_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11696:4: ( ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) ) )
        // InternalSiddhiParser.g:11696:5: ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) )
        {
        // InternalSiddhiParser.g:11696:5: ( () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) ) )
        // InternalSiddhiParser.g:11697:5: () ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) ) ( ( ruleMathAddsubOperation ) )
        {
        // InternalSiddhiParser.g:11697:5: ()
        // InternalSiddhiParser.g:11698:5: 
        {
        }

        // InternalSiddhiParser.g:11699:5: ( ( ( EqualsSignEqualsSign ) ) | ( ( ExclamationMarkEqualsSign ) ) )
        int alt264=2;
        int LA264_0 = input.LA(1);

        if ( (LA264_0==EqualsSignEqualsSign) ) {
            alt264=1;
        }
        else if ( (LA264_0==ExclamationMarkEqualsSign) ) {
            alt264=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 264, 0, input);

            throw nvae;
        }
        switch (alt264) {
            case 1 :
                // InternalSiddhiParser.g:11700:6: ( ( EqualsSignEqualsSign ) )
                {
                // InternalSiddhiParser.g:11700:6: ( ( EqualsSignEqualsSign ) )
                // InternalSiddhiParser.g:11701:7: ( EqualsSignEqualsSign )
                {
                // InternalSiddhiParser.g:11701:7: ( EqualsSignEqualsSign )
                // InternalSiddhiParser.g:11702:8: EqualsSignEqualsSign
                {
                match(input,EqualsSignEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11706:6: ( ( ExclamationMarkEqualsSign ) )
                {
                // InternalSiddhiParser.g:11706:6: ( ( ExclamationMarkEqualsSign ) )
                // InternalSiddhiParser.g:11707:7: ( ExclamationMarkEqualsSign )
                {
                // InternalSiddhiParser.g:11707:7: ( ExclamationMarkEqualsSign )
                // InternalSiddhiParser.g:11708:8: ExclamationMarkEqualsSign
                {
                match(input,ExclamationMarkEqualsSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11712:5: ( ( ruleMathAddsubOperation ) )
        // InternalSiddhiParser.g:11713:6: ( ruleMathAddsubOperation )
        {
        // InternalSiddhiParser.g:11713:6: ( ruleMathAddsubOperation )
        // InternalSiddhiParser.g:11714:7: ruleMathAddsubOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathAddsubOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred103_InternalSiddhiParser

    // $ANTLR start synpred104_InternalSiddhiParser
    public final void synpred104_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11807:4: ( ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) ) )
        // InternalSiddhiParser.g:11807:5: ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) )
        {
        // InternalSiddhiParser.g:11807:5: ( () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) ) )
        // InternalSiddhiParser.g:11808:5: () ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) ) ( ( ruleMathDivmulOperation ) )
        {
        // InternalSiddhiParser.g:11808:5: ()
        // InternalSiddhiParser.g:11809:5: 
        {
        }

        // InternalSiddhiParser.g:11810:5: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
        int alt265=2;
        int LA265_0 = input.LA(1);

        if ( (LA265_0==PlusSign) ) {
            alt265=1;
        }
        else if ( (LA265_0==HyphenMinus) ) {
            alt265=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 265, 0, input);

            throw nvae;
        }
        switch (alt265) {
            case 1 :
                // InternalSiddhiParser.g:11811:6: ( ( PlusSign ) )
                {
                // InternalSiddhiParser.g:11811:6: ( ( PlusSign ) )
                // InternalSiddhiParser.g:11812:7: ( PlusSign )
                {
                // InternalSiddhiParser.g:11812:7: ( PlusSign )
                // InternalSiddhiParser.g:11813:8: PlusSign
                {
                match(input,PlusSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11817:6: ( ( HyphenMinus ) )
                {
                // InternalSiddhiParser.g:11817:6: ( ( HyphenMinus ) )
                // InternalSiddhiParser.g:11818:7: ( HyphenMinus )
                {
                // InternalSiddhiParser.g:11818:7: ( HyphenMinus )
                // InternalSiddhiParser.g:11819:8: HyphenMinus
                {
                match(input,HyphenMinus,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11823:5: ( ( ruleMathDivmulOperation ) )
        // InternalSiddhiParser.g:11824:6: ( ruleMathDivmulOperation )
        {
        // InternalSiddhiParser.g:11824:6: ( ruleMathDivmulOperation )
        // InternalSiddhiParser.g:11825:7: ruleMathDivmulOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathDivmulOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred104_InternalSiddhiParser

    // $ANTLR start synpred105_InternalSiddhiParser
    public final void synpred105_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:11918:4: ( ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) ) )
        // InternalSiddhiParser.g:11918:5: ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) )
        {
        // InternalSiddhiParser.g:11918:5: ( () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) ) )
        // InternalSiddhiParser.g:11919:5: () ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) ) ( ( ruleMathOtherOperations ) )
        {
        // InternalSiddhiParser.g:11919:5: ()
        // InternalSiddhiParser.g:11920:5: 
        {
        }

        // InternalSiddhiParser.g:11921:5: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( PercentSign ) ) )
        int alt266=3;
        switch ( input.LA(1) ) {
        case Asterisk:
            {
            alt266=1;
            }
            break;
        case Solidus:
            {
            alt266=2;
            }
            break;
        case PercentSign:
            {
            alt266=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 266, 0, input);

            throw nvae;
        }

        switch (alt266) {
            case 1 :
                // InternalSiddhiParser.g:11922:6: ( ( Asterisk ) )
                {
                // InternalSiddhiParser.g:11922:6: ( ( Asterisk ) )
                // InternalSiddhiParser.g:11923:7: ( Asterisk )
                {
                // InternalSiddhiParser.g:11923:7: ( Asterisk )
                // InternalSiddhiParser.g:11924:8: Asterisk
                {
                match(input,Asterisk,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSiddhiParser.g:11928:6: ( ( Solidus ) )
                {
                // InternalSiddhiParser.g:11928:6: ( ( Solidus ) )
                // InternalSiddhiParser.g:11929:7: ( Solidus )
                {
                // InternalSiddhiParser.g:11929:7: ( Solidus )
                // InternalSiddhiParser.g:11930:8: Solidus
                {
                match(input,Solidus,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalSiddhiParser.g:11934:6: ( ( PercentSign ) )
                {
                // InternalSiddhiParser.g:11934:6: ( ( PercentSign ) )
                // InternalSiddhiParser.g:11935:7: ( PercentSign )
                {
                // InternalSiddhiParser.g:11935:7: ( PercentSign )
                // InternalSiddhiParser.g:11936:8: PercentSign
                {
                match(input,PercentSign,FollowSets000.FOLLOW_44); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSiddhiParser.g:11940:5: ( ( ruleMathOtherOperations ) )
        // InternalSiddhiParser.g:11941:6: ( ruleMathOtherOperations )
        {
        // InternalSiddhiParser.g:11941:6: ( ruleMathOtherOperations )
        // InternalSiddhiParser.g:11942:7: ruleMathOtherOperations
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathOtherOperations();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred105_InternalSiddhiParser

    // $ANTLR start synpred106_InternalSiddhiParser
    public final void synpred106_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:12042:4: ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )
        // InternalSiddhiParser.g:12042:5: ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) )
        {
        // InternalSiddhiParser.g:12042:5: ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) )
        // InternalSiddhiParser.g:12043:5: () ( ( ruleNOT ) ) ( ( ruleMathOperation ) )
        {
        // InternalSiddhiParser.g:12043:5: ()
        // InternalSiddhiParser.g:12044:5: 
        {
        }

        // InternalSiddhiParser.g:12045:5: ( ( ruleNOT ) )
        // InternalSiddhiParser.g:12046:6: ( ruleNOT )
        {
        // InternalSiddhiParser.g:12046:6: ( ruleNOT )
        // InternalSiddhiParser.g:12047:7: ruleNOT
        {
        pushFollow(FollowSets000.FOLLOW_44);
        ruleNOT();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSiddhiParser.g:12050:5: ( ( ruleMathOperation ) )
        // InternalSiddhiParser.g:12051:6: ( ruleMathOperation )
        {
        // InternalSiddhiParser.g:12051:6: ( ruleMathOperation )
        // InternalSiddhiParser.g:12052:7: ruleMathOperation
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMathOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred106_InternalSiddhiParser

    // $ANTLR start synpred107_InternalSiddhiParser
    public final void synpred107_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:12143:4: ( ruleNullCheck )
        // InternalSiddhiParser.g:12143:5: ruleNullCheck
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleNullCheck();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred107_InternalSiddhiParser

    // $ANTLR start synpred108_InternalSiddhiParser
    public final void synpred108_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:12194:5: ( ( ruleStreamReference ) )
        // InternalSiddhiParser.g:12194:6: ( ruleStreamReference )
        {
        // InternalSiddhiParser.g:12194:6: ( ruleStreamReference )
        // InternalSiddhiParser.g:12195:6: ruleStreamReference
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleStreamReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred108_InternalSiddhiParser

    // $ANTLR start synpred109_InternalSiddhiParser
    public final void synpred109_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:12464:4: ( ( () ( ( ruleIdNew ) ) ) )
        // InternalSiddhiParser.g:12464:5: ( () ( ( ruleIdNew ) ) )
        {
        // InternalSiddhiParser.g:12464:5: ( () ( ( ruleIdNew ) ) )
        // InternalSiddhiParser.g:12465:5: () ( ( ruleIdNew ) )
        {
        // InternalSiddhiParser.g:12465:5: ()
        // InternalSiddhiParser.g:12466:5: 
        {
        }

        // InternalSiddhiParser.g:12467:5: ( ( ruleIdNew ) )
        // InternalSiddhiParser.g:12468:6: ( ruleIdNew )
        {
        // InternalSiddhiParser.g:12468:6: ( ruleIdNew )
        // InternalSiddhiParser.g:12469:7: ruleIdNew
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleIdNew();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred109_InternalSiddhiParser

    // $ANTLR start synpred110_InternalSiddhiParser
    public final void synpred110_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:12662:4: ( ( ( ruleFeaturesOrOutAttrReference ) ) )
        // InternalSiddhiParser.g:12662:5: ( ( ruleFeaturesOrOutAttrReference ) )
        {
        // InternalSiddhiParser.g:12662:5: ( ( ruleFeaturesOrOutAttrReference ) )
        // InternalSiddhiParser.g:12663:5: ( ruleFeaturesOrOutAttrReference )
        {
        // InternalSiddhiParser.g:12663:5: ( ruleFeaturesOrOutAttrReference )
        // InternalSiddhiParser.g:12664:6: ruleFeaturesOrOutAttrReference
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFeaturesOrOutAttrReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred110_InternalSiddhiParser

    // $ANTLR start synpred111_InternalSiddhiParser
    public final void synpred111_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:14856:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )
        // InternalSiddhiParser.g:14856:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) )
        {
        // InternalSiddhiParser.g:14856:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) )
        // InternalSiddhiParser.g:14857:5: () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )
        {
        // InternalSiddhiParser.g:14857:5: ()
        // InternalSiddhiParser.g:14858:5: 
        {
        }

        // InternalSiddhiParser.g:14859:5: ( ruleDIGIT )+
        int cnt267=0;
        loop267:
        do {
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==RULE_INT) ) {
                alt267=1;
            }


            switch (alt267) {
        	case 1 :
        	    // InternalSiddhiParser.g:14860:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_127);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt267 >= 1 ) break loop267;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(267, input);
                    throw eee;
            }
            cnt267++;
        } while (true);

        // InternalSiddhiParser.g:14862:5: ( FullStop ( ruleDIGIT )* )?
        int alt269=2;
        int LA269_0 = input.LA(1);

        if ( (LA269_0==FullStop) ) {
            alt269=1;
        }
        switch (alt269) {
            case 1 :
                // InternalSiddhiParser.g:14863:6: FullStop ( ruleDIGIT )*
                {
                match(input,FullStop,FollowSets000.FOLLOW_127); if (state.failed) return ;
                // InternalSiddhiParser.g:14864:6: ( ruleDIGIT )*
                loop268:
                do {
                    int alt268=2;
                    int LA268_0 = input.LA(1);

                    if ( (LA268_0==RULE_INT) ) {
                        alt268=1;
                    }


                    switch (alt268) {
                	case 1 :
                	    // InternalSiddhiParser.g:14865:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_127);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop268;
                    }
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:14868:5: ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )?
        int alt272=2;
        int LA272_0 = input.LA(1);

        if ( (LA272_0==E) ) {
            alt272=1;
        }
        switch (alt272) {
            case 1 :
                // InternalSiddhiParser.g:14869:6: ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+
                {
                // InternalSiddhiParser.g:14869:6: ( ( ruleE ) )
                // InternalSiddhiParser.g:14870:7: ( ruleE )
                {
                // InternalSiddhiParser.g:14870:7: ( ruleE )
                // InternalSiddhiParser.g:14871:8: ruleE
                {
                pushFollow(FollowSets000.FOLLOW_117);
                ruleE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSiddhiParser.g:14874:6: ( HyphenMinus | PlusSign )?
                int alt270=2;
                int LA270_0 = input.LA(1);

                if ( (LA270_0==PlusSign||LA270_0==HyphenMinus) ) {
                    alt270=1;
                }
                switch (alt270) {
                    case 1 :
                        // InternalSiddhiParser.g:
                        {
                        if ( input.LA(1)==PlusSign||input.LA(1)==HyphenMinus ) {
                            input.consume();
                            state.errorRecovery=false;state.failed=false;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            MismatchedSetException mse = new MismatchedSetException(null,input);
                            throw mse;
                        }


                        }
                        break;

                }

                // InternalSiddhiParser.g:14879:6: ( ruleDIGIT )+
                int cnt271=0;
                loop271:
                do {
                    int alt271=2;
                    int LA271_0 = input.LA(1);

                    if ( (LA271_0==RULE_INT) ) {
                        alt271=1;
                    }


                    switch (alt271) {
                	case 1 :
                	    // InternalSiddhiParser.g:14880:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_127);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt271 >= 1 ) break loop271;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(271, input);
                            throw eee;
                    }
                    cnt271++;
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:14883:5: ( ( ruleD ) )
        // InternalSiddhiParser.g:14884:6: ( ruleD )
        {
        // InternalSiddhiParser.g:14884:6: ( ruleD )
        // InternalSiddhiParser.g:14885:7: ruleD
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleD();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred111_InternalSiddhiParser

    // $ANTLR start synpred112_InternalSiddhiParser
    public final void synpred112_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:15078:4: ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )
        // InternalSiddhiParser.g:15078:5: ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? )
        {
        // InternalSiddhiParser.g:15078:5: ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? )
        // InternalSiddhiParser.g:15079:5: () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )?
        {
        // InternalSiddhiParser.g:15079:5: ()
        // InternalSiddhiParser.g:15080:5: 
        {
        }

        // InternalSiddhiParser.g:15081:5: ( ruleDIGIT )*
        loop273:
        do {
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==RULE_INT) ) {
                alt273=1;
            }


            switch (alt273) {
        	case 1 :
        	    // InternalSiddhiParser.g:15082:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_131);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop273;
            }
        } while (true);

        match(input,FullStop,FollowSets000.FOLLOW_21); if (state.failed) return ;
        // InternalSiddhiParser.g:15085:5: ( ruleDIGIT )+
        int cnt274=0;
        loop274:
        do {
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==RULE_INT) ) {
                alt274=1;
            }


            switch (alt274) {
        	case 1 :
        	    // InternalSiddhiParser.g:15086:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_130);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt274 >= 1 ) break loop274;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(274, input);
                    throw eee;
            }
            cnt274++;
        } while (true);

        // InternalSiddhiParser.g:15088:5: ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )?
        int alt277=2;
        int LA277_0 = input.LA(1);

        if ( (LA277_0==E) ) {
            alt277=1;
        }
        switch (alt277) {
            case 1 :
                // InternalSiddhiParser.g:15089:6: ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+
                {
                // InternalSiddhiParser.g:15089:6: ( ( ruleE ) )
                // InternalSiddhiParser.g:15090:7: ( ruleE )
                {
                // InternalSiddhiParser.g:15090:7: ( ruleE )
                // InternalSiddhiParser.g:15091:8: ruleE
                {
                pushFollow(FollowSets000.FOLLOW_117);
                ruleE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSiddhiParser.g:15094:6: ( HyphenMinus | PlusSign )?
                int alt275=2;
                int LA275_0 = input.LA(1);

                if ( (LA275_0==PlusSign||LA275_0==HyphenMinus) ) {
                    alt275=1;
                }
                switch (alt275) {
                    case 1 :
                        // InternalSiddhiParser.g:
                        {
                        if ( input.LA(1)==PlusSign||input.LA(1)==HyphenMinus ) {
                            input.consume();
                            state.errorRecovery=false;state.failed=false;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            MismatchedSetException mse = new MismatchedSetException(null,input);
                            throw mse;
                        }


                        }
                        break;

                }

                // InternalSiddhiParser.g:15099:6: ( ruleDIGIT )+
                int cnt276=0;
                loop276:
                do {
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==RULE_INT) ) {
                        alt276=1;
                    }


                    switch (alt276) {
                	case 1 :
                	    // InternalSiddhiParser.g:15100:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_130);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt276 >= 1 ) break loop276;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(276, input);
                            throw eee;
                    }
                    cnt276++;
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:15103:5: ( ( ruleD ) )?
        int alt278=2;
        int LA278_0 = input.LA(1);

        if ( (LA278_0==D) ) {
            alt278=1;
        }
        switch (alt278) {
            case 1 :
                // InternalSiddhiParser.g:15104:6: ( ruleD )
                {
                // InternalSiddhiParser.g:15104:6: ( ruleD )
                // InternalSiddhiParser.g:15105:7: ruleD
                {
                pushFollow(FollowSets000.FOLLOW_2);
                ruleD();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred112_InternalSiddhiParser

    // $ANTLR start synpred113_InternalSiddhiParser
    public final void synpred113_InternalSiddhiParser_fragment() throws RecognitionException {   
        // InternalSiddhiParser.g:15222:4: ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )
        // InternalSiddhiParser.g:15222:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) )
        {
        // InternalSiddhiParser.g:15222:5: ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) )
        // InternalSiddhiParser.g:15223:5: () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) )
        {
        // InternalSiddhiParser.g:15223:5: ()
        // InternalSiddhiParser.g:15224:5: 
        {
        }

        // InternalSiddhiParser.g:15225:5: ( ruleDIGIT )+
        int cnt279=0;
        loop279:
        do {
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==RULE_INT) ) {
                alt279=1;
            }


            switch (alt279) {
        	case 1 :
        	    // InternalSiddhiParser.g:15226:6: ruleDIGIT
        	    {
        	    pushFollow(FollowSets000.FOLLOW_132);
        	    ruleDIGIT();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt279 >= 1 ) break loop279;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(279, input);
                    throw eee;
            }
            cnt279++;
        } while (true);

        // InternalSiddhiParser.g:15228:5: ( FullStop ( ruleDIGIT )* )?
        int alt281=2;
        int LA281_0 = input.LA(1);

        if ( (LA281_0==FullStop) ) {
            alt281=1;
        }
        switch (alt281) {
            case 1 :
                // InternalSiddhiParser.g:15229:6: FullStop ( ruleDIGIT )*
                {
                match(input,FullStop,FollowSets000.FOLLOW_132); if (state.failed) return ;
                // InternalSiddhiParser.g:15230:6: ( ruleDIGIT )*
                loop280:
                do {
                    int alt280=2;
                    int LA280_0 = input.LA(1);

                    if ( (LA280_0==RULE_INT) ) {
                        alt280=1;
                    }


                    switch (alt280) {
                	case 1 :
                	    // InternalSiddhiParser.g:15231:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_132);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop280;
                    }
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:15234:5: ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )?
        int alt284=2;
        int LA284_0 = input.LA(1);

        if ( (LA284_0==E) ) {
            alt284=1;
        }
        switch (alt284) {
            case 1 :
                // InternalSiddhiParser.g:15235:6: ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+
                {
                // InternalSiddhiParser.g:15235:6: ( ( ruleE ) )
                // InternalSiddhiParser.g:15236:7: ( ruleE )
                {
                // InternalSiddhiParser.g:15236:7: ( ruleE )
                // InternalSiddhiParser.g:15237:8: ruleE
                {
                pushFollow(FollowSets000.FOLLOW_117);
                ruleE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSiddhiParser.g:15240:6: ( HyphenMinus | PlusSign )?
                int alt282=2;
                int LA282_0 = input.LA(1);

                if ( (LA282_0==PlusSign||LA282_0==HyphenMinus) ) {
                    alt282=1;
                }
                switch (alt282) {
                    case 1 :
                        // InternalSiddhiParser.g:
                        {
                        if ( input.LA(1)==PlusSign||input.LA(1)==HyphenMinus ) {
                            input.consume();
                            state.errorRecovery=false;state.failed=false;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            MismatchedSetException mse = new MismatchedSetException(null,input);
                            throw mse;
                        }


                        }
                        break;

                }

                // InternalSiddhiParser.g:15245:6: ( ruleDIGIT )+
                int cnt283=0;
                loop283:
                do {
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==RULE_INT) ) {
                        alt283=1;
                    }


                    switch (alt283) {
                	case 1 :
                	    // InternalSiddhiParser.g:15246:7: ruleDIGIT
                	    {
                	    pushFollow(FollowSets000.FOLLOW_132);
                	    ruleDIGIT();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt283 >= 1 ) break loop283;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(283, input);
                            throw eee;
                    }
                    cnt283++;
                } while (true);


                }
                break;

        }

        // InternalSiddhiParser.g:15249:5: ( ( ruleF ) )
        // InternalSiddhiParser.g:15250:6: ( ruleF )
        {
        // InternalSiddhiParser.g:15250:6: ( ruleF )
        // InternalSiddhiParser.g:15251:7: ruleF
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleF();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred113_InternalSiddhiParser

    // Delegated rules

    public final boolean synpred18_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalSiddhiParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalSiddhiParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA19 dfa19 = new DFA19(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA180 dfa180 = new DFA180(this);
    protected DFA181 dfa181 = new DFA181(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA193 dfa193 = new DFA193(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA196 dfa196 = new DFA196(this);
    protected DFA220 dfa220 = new DFA220(this);
    protected DFA232 dfa232 = new DFA232(this);
    static final String dfa_1s = "\23\uffff";
    static final String dfa_2s = "\1\uffff\20\21\2\uffff";
    static final String dfa_3s = "\1\17\20\22\2\uffff";
    static final String dfa_4s = "\1\116\20\155\2\uffff";
    static final String dfa_5s = "\21\uffff\1\2\1\1";
    static final String dfa_6s = "\23\uffff}>";
    static final String[] dfa_7s = {
            "\1\5\1\2\7\uffff\1\4\1\16\3\uffff\1\1\14\uffff\1\10\1\uffff\1\15\3\uffff\1\14\1\20\1\uffff\1\12\2\uffff\1\7\10\uffff\1\13\1\uffff\1\17\4\uffff\1\11\3\uffff\1\6\3\uffff\1\3",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "\1\21\57\uffff\1\22\40\uffff\1\21\4\uffff\1\21\4\uffff\1\21",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1612:2: (this_AggregationTimeRange_0= ruleAggregationTimeRange | this_AggregationTimeInterval_1= ruleAggregationTimeInterval )";
        }
    }
    static final String dfa_8s = "\114\uffff";
    static final String dfa_9s = "\1\4\1\0\112\uffff";
    static final String dfa_10s = "\1\166\1\0\112\uffff";
    static final String dfa_11s = "\2\uffff\111\2\1\1";
    static final String dfa_12s = "\1\0\1\1\112\uffff}>";
    static final String[] dfa_13s = {
            "\1\24\1\56\1\uffff\1\55\1\uffff\1\22\1\uffff\1\57\1\74\1\20\1\17\1\50\1\53\1\uffff\1\3\1\106\1\64\1\12\1\101\1\7\1\47\1\40\1\66\1\15\1\21\1\52\1\5\1\2\1\60\1\112\1\14\1\26\1\104\1\23\1\111\1\76\1\63\1\77\1\46\1\34\1\37\1\33\1\30\1\13\1\42\1\36\1\65\1\44\1\4\1\31\1\45\1\10\1\32\1\75\1\27\1\62\1\73\1\uffff\1\110\1\41\1\102\1\35\1\uffff\1\11\1\67\1\uffff\1\43\1\105\1\107\1\61\1\51\1\71\1\uffff\1\16\1\54\6\uffff\1\6\1\uffff\1\100\1\uffff\1\72\1\103\1\25\1\70\31\uffff\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "2531:3: ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_0 = input.LA(1);

                         
                        int index30_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA30_0==RULE_ID) ) {s = 1;}

                        else if ( (LA30_0==Stream) && (synpred24_InternalSiddhiParser())) {s = 2;}

                        else if ( (LA30_0==Define) && (synpred24_InternalSiddhiParser())) {s = 3;}

                        else if ( (LA30_0==From) && (synpred24_InternalSiddhiParser())) {s = 4;}

                        else if ( (LA30_0==Select) && (synpred24_InternalSiddhiParser())) {s = 5;}

                        else if ( (LA30_0==As) && (synpred24_InternalSiddhiParser())) {s = 6;}

                        else if ( (LA30_0==Insert) && (synpred24_InternalSiddhiParser())) {s = 7;}

                        else if ( (LA30_0==Into) && (synpred24_InternalSiddhiParser())) {s = 8;}

                        else if ( (LA30_0==All) && (synpred24_InternalSiddhiParser())) {s = 9;}

                        else if ( (LA30_0==Events) && (synpred24_InternalSiddhiParser())) {s = 10;}

                        else if ( (LA30_0==Table) && (synpred24_InternalSiddhiParser())) {s = 11;}

                        else if ( (LA30_0==Window) && (synpred24_InternalSiddhiParser())) {s = 12;}

                        else if ( (LA30_0==Output) && (synpred24_InternalSiddhiParser())) {s = 13;}

                        else if ( (LA30_0==Raw) && (synpred24_InternalSiddhiParser())) {s = 14;}

                        else if ( (LA30_0==Expired) && (synpred24_InternalSiddhiParser())) {s = 15;}

                        else if ( (LA30_0==Current) && (synpred24_InternalSiddhiParser())) {s = 16;}

                        else if ( (LA30_0==Return) && (synpred24_InternalSiddhiParser())) {s = 17;}

                        else if ( (LA30_0==Partition) && (synpred24_InternalSiddhiParser())) {s = 18;}

                        else if ( (LA30_0==Every) && (synpred24_InternalSiddhiParser())) {s = 19;}

                        else if ( (LA30_0==Unidirectional) && (synpred24_InternalSiddhiParser())) {s = 20;}

                        else if ( (LA30_0==On) && (synpred24_InternalSiddhiParser())) {s = 21;}

                        else if ( (LA30_0==Within) && (synpred24_InternalSiddhiParser())) {s = 22;}

                        else if ( (LA30_0==Left) && (synpred24_InternalSiddhiParser())) {s = 23;}

                        else if ( (LA30_0==Right) && (synpred24_InternalSiddhiParser())) {s = 24;}

                        else if ( (LA30_0==Full) && (synpred24_InternalSiddhiParser())) {s = 25;}

                        else if ( (LA30_0==Join) && (synpred24_InternalSiddhiParser())) {s = 26;}

                        else if ( (LA30_0==Outer) && (synpred24_InternalSiddhiParser())) {s = 27;}

                        else if ( (LA30_0==Inner) && (synpred24_InternalSiddhiParser())) {s = 28;}

                        else if ( (LA30_0==Year) && (synpred24_InternalSiddhiParser())) {s = 29;}

                        else if ( (LA30_0==Years) && (synpred24_InternalSiddhiParser())) {s = 30;}

                        else if ( (LA30_0==Month) && (synpred24_InternalSiddhiParser())) {s = 31;}

                        else if ( (LA30_0==Months) && (synpred24_InternalSiddhiParser())) {s = 32;}

                        else if ( (LA30_0==Week) && (synpred24_InternalSiddhiParser())) {s = 33;}

                        else if ( (LA30_0==Weeks) && (synpred24_InternalSiddhiParser())) {s = 34;}

                        else if ( (LA30_0==Day) && (synpred24_InternalSiddhiParser())) {s = 35;}

                        else if ( (LA30_0==Days) && (synpred24_InternalSiddhiParser())) {s = 36;}

                        else if ( (LA30_0==Hour) && (synpred24_InternalSiddhiParser())) {s = 37;}

                        else if ( (LA30_0==Hours) && (synpred24_InternalSiddhiParser())) {s = 38;}

                        else if ( (LA30_0==Minute) && (synpred24_InternalSiddhiParser())) {s = 39;}

                        else if ( (LA30_0==Minutes) && (synpred24_InternalSiddhiParser())) {s = 40;}

                        else if ( (LA30_0==Min) && (synpred24_InternalSiddhiParser())) {s = 41;}

                        else if ( (LA30_0==Second) && (synpred24_InternalSiddhiParser())) {s = 42;}

                        else if ( (LA30_0==Seconds) && (synpred24_InternalSiddhiParser())) {s = 43;}

                        else if ( (LA30_0==Sec) && (synpred24_InternalSiddhiParser())) {s = 44;}

                        else if ( (LA30_0==Millisecond) && (synpred24_InternalSiddhiParser())) {s = 45;}

                        else if ( (LA30_0==Milliseconds) && (synpred24_InternalSiddhiParser())) {s = 46;}

                        else if ( (LA30_0==Millisec) && (synpred24_InternalSiddhiParser())) {s = 47;}

                        else if ( (LA30_0==String) && (synpred24_InternalSiddhiParser())) {s = 48;}

                        else if ( (LA30_0==Int) && (synpred24_InternalSiddhiParser())) {s = 49;}

                        else if ( (LA30_0==Long) && (synpred24_InternalSiddhiParser())) {s = 50;}

                        else if ( (LA30_0==Float) && (synpred24_InternalSiddhiParser())) {s = 51;}

                        else if ( (LA30_0==Double) && (synpred24_InternalSiddhiParser())) {s = 52;}

                        else if ( (LA30_0==Bool) && (synpred24_InternalSiddhiParser())) {s = 53;}

                        else if ( (LA30_0==Object) && (synpred24_InternalSiddhiParser())) {s = 54;}

                        else if ( (LA30_0==And) && (synpred24_InternalSiddhiParser())) {s = 55;}

                        else if ( (LA30_0==Or) && (synpred24_InternalSiddhiParser())) {s = 56;}

                        else if ( (LA30_0==Not) && (synpred24_InternalSiddhiParser())) {s = 57;}

                        else if ( (LA30_0==Is) && (synpred24_InternalSiddhiParser())) {s = 58;}

                        else if ( (LA30_0==Null) && (synpred24_InternalSiddhiParser())) {s = 59;}

                        else if ( (LA30_0==Snapshot) && (synpred24_InternalSiddhiParser())) {s = 60;}

                        else if ( (LA30_0==Last) && (synpred24_InternalSiddhiParser())) {s = 61;}

                        else if ( (LA30_0==First) && (synpred24_InternalSiddhiParser())) {s = 62;}

                        else if ( (LA30_0==Group) && (synpred24_InternalSiddhiParser())) {s = 63;}

                        else if ( (LA30_0==By) && (synpred24_InternalSiddhiParser())) {s = 64;}

                        else if ( (LA30_0==Having) && (synpred24_InternalSiddhiParser())) {s = 65;}

                        else if ( (LA30_0==With) && (synpred24_InternalSiddhiParser())) {s = 66;}

                        else if ( (LA30_0==Of) && (synpred24_InternalSiddhiParser())) {s = 67;}

                        else if ( (LA30_0==Begin) && (synpred24_InternalSiddhiParser())) {s = 68;}

                        else if ( (LA30_0==End) && (synpred24_InternalSiddhiParser())) {s = 69;}

                        else if ( (LA30_0==Delete) && (synpred24_InternalSiddhiParser())) {s = 70;}

                        else if ( (LA30_0==For) && (synpred24_InternalSiddhiParser())) {s = 71;}

                        else if ( (LA30_0==True) && (synpred24_InternalSiddhiParser())) {s = 72;}

                        else if ( (LA30_0==False) && (synpred24_InternalSiddhiParser())) {s = 73;}

                        else if ( (LA30_0==Update) && (synpred24_InternalSiddhiParser())) {s = 74;}

                         
                        input.seek(index30_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA30_1 = input.LA(1);

                         
                        int index30_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalSiddhiParser()) ) {s = 75;}

                        else if ( (synpred24_InternalSiddhiParser()) ) {s = 74;}

                         
                        input.seek(index30_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\4\uffff";
    static final String dfa_15s = "\1\167\1\5\2\uffff";
    static final String dfa_16s = "\2\167\2\uffff";
    static final String dfa_17s = "\2\uffff\1\1\1\2";
    static final String dfa_18s = "\4\uffff}>";
    static final String[] dfa_19s = {
            "\1\1",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\4\uffff\1\3\2\uffff\2\2\3\uffff\1\2\14\uffff\1\2\1\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\10\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\1\2\3\uffff\1\2\50\uffff\1\1",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4246:4: ( ( (lv_tv_4_0= ruleTimeValue ) ) | ( ruleINT_LITERAL this_EVENTS_6= ruleEVENTS[$current] ) )";
        }
    }
    static final String dfa_20s = "\24\uffff";
    static final String dfa_21s = "\3\uffff\1\11\11\uffff\1\11\6\uffff";
    static final String dfa_22s = "\1\4\1\uffff\1\4\1\10\1\71\1\157\1\144\2\166\1\uffff\1\135\1\167\1\71\1\10\2\157\1\144\1\145\1\167\1\157";
    static final String dfa_23s = "\1\174\1\uffff\1\166\3\167\1\157\2\166\1\uffff\1\145\2\167\1\153\2\167\1\157\1\145\2\167";
    static final String dfa_24s = "\1\uffff\1\1\7\uffff\1\2\12\uffff";
    static final String dfa_25s = "\24\uffff}>";
    static final String[] dfa_26s = {
            "\2\1\1\uffff\1\1\1\uffff\1\1\1\uffff\6\1\1\uffff\53\1\1\uffff\4\1\1\uffff\2\1\1\uffff\6\1\1\uffff\2\1\6\uffff\1\1\1\uffff\1\1\1\uffff\4\1\1\2\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\20\uffff\1\3\1\1\4\uffff\1\1",
            "",
            "\2\1\1\uffff\1\1\1\uffff\1\1\1\uffff\6\1\1\uffff\53\1\1\uffff\4\1\1\uffff\2\1\1\uffff\6\1\1\uffff\2\1\6\uffff\1\1\1\uffff\1\1\1\uffff\4\1\31\uffff\1\4",
            "\1\11\12\uffff\1\11\2\uffff\2\11\3\uffff\2\11\4\uffff\1\11\7\uffff\1\11\17\uffff\1\6\12\uffff\1\1\13\uffff\1\1\1\uffff\4\1\2\uffff\2\1\2\uffff\1\1\1\7\2\1\1\uffff\2\1\1\11\1\1\1\10\2\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\5",
            "\1\6\37\uffff\1\1\3\uffff\1\7\7\uffff\1\10\10\uffff\1\1\10\uffff\1\5",
            "\1\12\7\uffff\1\5",
            "\1\13\12\uffff\1\12",
            "\1\14",
            "\1\15",
            "",
            "\1\7\7\uffff\1\10",
            "\1\16",
            "\1\20\53\uffff\1\10\21\uffff\1\17",
            "\1\11\12\uffff\1\11\2\uffff\2\11\3\uffff\2\11\4\uffff\1\11\7\uffff\1\11\32\uffff\1\1\13\uffff\1\1\1\uffff\4\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\11\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1",
            "\1\12\7\uffff\1\16",
            "\1\21\7\uffff\1\17",
            "\1\22\12\uffff\1\21",
            "\1\10",
            "\1\23",
            "\1\21\7\uffff\1\23"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "4767:2: ( ( () ( (lv_outAttr_1_0= ruleOutAttr ) ) ) | ( () ( (lv_attr_ref_3_0= ruleAttributeReference ) ) ) )";
        }
    }
    static final String dfa_27s = "\13\uffff";
    static final String dfa_28s = "\1\1\12\uffff";
    static final String dfa_29s = "\1\23\7\uffff\1\0\2\uffff";
    static final String dfa_30s = "\1\143\7\uffff\1\0\2\uffff";
    static final String dfa_31s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_32s = "\10\uffff\1\0\2\uffff}>";
    static final String[] dfa_33s = {
            "\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\1\1\2\uffff\1\1\76\uffff\1\1\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 6353:3: ( ( ( () ( ( Comma ) ) ( ( ruleSequenceSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= Comma ) ) ( (lv_right_3_0= ruleSequenceSourceChain1 ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_8 = input.LA(1);

                         
                        int index79_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalSiddhiParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\1\23\10\uffff\1\0\1\uffff";
    static final String dfa_35s = "\1\140\10\uffff\1\0\1\uffff";
    static final String dfa_36s = "\11\uffff\1\0\1\uffff}>";
    static final String[] dfa_37s = {
            "\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\1\1\2\uffff\1\1\57\uffff\1\11\16\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_31;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "()* loopback of 6899:3: ( ( ( () ( ( HyphenMinusGreaterThanSign ) ) ( ( ruleEveryPatternSourceChain1 ) ) ) )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= ruleEveryPatternSourceChain1 ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_9 = input.LA(1);

                         
                        int index90_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalSiddhiParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index90_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\1\2\12\uffff";
    static final String dfa_39s = "\1\23\1\0\11\uffff";
    static final String dfa_40s = "\1\140\1\0\11\uffff";
    static final String dfa_41s = "\2\uffff\1\2\7\uffff\1\1";
    static final String dfa_42s = "\1\uffff\1\0\11\uffff}>";
    static final String[] dfa_43s = {
            "\1\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\57\uffff\1\1\16\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_27;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "()* loopback of 7136:3: ( ( HyphenMinusGreaterThanSign )=> ( () ( (lv_op_2_0= HyphenMinusGreaterThanSign ) ) ( (lv_right_3_0= rulePatternSourceChain1 ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_1 = input.LA(1);

                         
                        int index93_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSiddhiParser()) ) {s = 10;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index93_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\7\uffff";
    static final String dfa_45s = "\1\uffff\1\3\2\uffff\1\6\2\uffff";
    static final String dfa_46s = "\2\147\2\uffff\1\153\2\uffff";
    static final String dfa_47s = "\2\167\2\uffff\1\167\2\uffff";
    static final String dfa_48s = "\2\uffff\1\3\1\4\1\uffff\1\1\1\2";
    static final String dfa_49s = "\7\uffff}>";
    static final String[] dfa_50s = {
            "\1\2\17\uffff\1\1",
            "\1\4\3\uffff\1\3\13\uffff\1\1",
            "",
            "",
            "\1\6\13\uffff\1\5",
            "",
            ""
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_44;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "7678:3: ( ( ( (lv_start_1_0= ruleINT_LITERAL ) ) otherlv_2= Colon ( (lv_end_3_0= ruleINT_LITERAL ) ) ) | ( ( (lv_start_4_0= ruleINT_LITERAL ) ) otherlv_5= Colon ) | (otherlv_6= Colon ( (lv_end_7_0= ruleINT_LITERAL ) ) ) | ruleINT_LITERAL )";
        }
    }
    static final String dfa_51s = "\14\uffff";
    static final String dfa_52s = "\1\113\1\uffff\2\0\10\uffff";
    static final String dfa_53s = "\1\166\1\uffff\2\0\10\uffff";
    static final String dfa_54s = "\1\uffff\1\1\2\uffff\1\2\1\4\1\7\1\3\1\5\1\6\1\10\1\11";
    static final String dfa_55s = "\1\0\1\uffff\1\1\1\2\10\uffff}>";
    static final String[] dfa_56s = {
            "\1\3\23\uffff\1\1\26\uffff\1\2",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_51;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "7802:2: ( ( ( ( ruleOPEN_PAR ( ( ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) )=> ( ruleOPEN_PAR ( (lv_logicalAbsStatefulSrc_1_0= ruleLogicalAbsentStatefulSource ) ) ruleCLOSE_PAR ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleNOT ) ) ( ( ruleBasicSource ) ) ) )=> ( ( (lv_stdSource_3_0= ruleStandardStatefulSource ) ) ( (lv_and_4_0= ruleAND ) ) ( (lv_not_5_0= ruleNOT ) ) ( (lv_bs_6_0= ruleBasicSource ) ) ) ) | ( ( ( ( ruleNOT ( ( ruleBasicSource ) ) ( ( ruleAND ) ) ) )=> (this_NOT_7= ruleNOT ( (lv_bs_8_0= ruleBasicSource ) ) ( (lv_and_9_0= ruleAND ) ) ) ) ( (lv_stdSource_10_0= ruleStandardStatefulSource ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_11_0= ruleStandardStatefulSource ) ) ( (lv_and_12_0= ruleAND ) ) ( (lv_basicAbsentPatternSource1_13_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_14_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_15_0= ruleAND ) ) ( (lv_stdSource_16_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleAND ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_17_0= ruleBasicAbsentPatternSource ) ) ( (lv_and_18_0= ruleAND ) ) ( (lv_basicAbsentPatternSource_19_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleStandardStatefulSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_stdSource_20_0= ruleStandardStatefulSource ) ) ( (lv_o_21_0= ruleOR ) ) ( (lv_basicAbsentPatternSource1_22_0= ruleBasicAbsentPatternSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleStandardStatefulSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource1_23_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_24_0= ruleOR ) ) ( (lv_stdSource_25_0= ruleStandardStatefulSource ) ) ) ) | ( ( ( ( ( ruleBasicAbsentPatternSource ) ) ( ( ruleOR ) ) ( ( ruleBasicAbsentPatternSource ) ) ) )=> ( ( (lv_basicAbsentPatternSource2_26_0= ruleBasicAbsentPatternSource ) ) ( (lv_o_27_0= ruleOR ) ) ( (lv_basicAbsentPatternSource_28_0= ruleBasicAbsentPatternSource ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA100_0==LeftParenthesis) && (synpred66_InternalSiddhiParser())) {s = 1;}

                        else if ( (LA100_0==RULE_ID) ) {s = 2;}

                        else if ( (LA100_0==Not) ) {s = 3;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA100_2 = input.LA(1);

                         
                        int index100_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalSiddhiParser()) ) {s = 4;}

                        else if ( (synpred69_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (synpred72_InternalSiddhiParser()) ) {s = 6;}

                         
                        input.seek(index100_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA100_3 = input.LA(1);

                         
                        int index100_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalSiddhiParser()) ) {s = 7;}

                        else if ( (synpred70_InternalSiddhiParser()) ) {s = 8;}

                        else if ( (synpred71_InternalSiddhiParser()) ) {s = 9;}

                        else if ( (synpred73_InternalSiddhiParser()) ) {s = 10;}

                        else if ( (synpred74_InternalSiddhiParser()) ) {s = 11;}

                         
                        input.seek(index100_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "10388:2: ( ( ( ( ( ruleIdNew ) ) )=> ( (lv_name_0_0= ruleIdNew ) ) ) | ( ( ( ( ruleName ) ) )=> ( (lv_nam_1_0= ruleName ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_0 = input.LA(1);

                         
                        int index125_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA125_0==RULE_ID) ) {s = 1;}

                        else if ( (LA125_0==Stream) && (synpred95_InternalSiddhiParser())) {s = 2;}

                        else if ( (LA125_0==Define) && (synpred95_InternalSiddhiParser())) {s = 3;}

                        else if ( (LA125_0==From) && (synpred95_InternalSiddhiParser())) {s = 4;}

                        else if ( (LA125_0==Select) && (synpred95_InternalSiddhiParser())) {s = 5;}

                        else if ( (LA125_0==As) && (synpred95_InternalSiddhiParser())) {s = 6;}

                        else if ( (LA125_0==Insert) && (synpred95_InternalSiddhiParser())) {s = 7;}

                        else if ( (LA125_0==Into) && (synpred95_InternalSiddhiParser())) {s = 8;}

                        else if ( (LA125_0==All) && (synpred95_InternalSiddhiParser())) {s = 9;}

                        else if ( (LA125_0==Events) && (synpred95_InternalSiddhiParser())) {s = 10;}

                        else if ( (LA125_0==Table) && (synpred95_InternalSiddhiParser())) {s = 11;}

                        else if ( (LA125_0==Window) && (synpred95_InternalSiddhiParser())) {s = 12;}

                        else if ( (LA125_0==Output) && (synpred95_InternalSiddhiParser())) {s = 13;}

                        else if ( (LA125_0==Raw) && (synpred95_InternalSiddhiParser())) {s = 14;}

                        else if ( (LA125_0==Expired) && (synpred95_InternalSiddhiParser())) {s = 15;}

                        else if ( (LA125_0==Current) && (synpred95_InternalSiddhiParser())) {s = 16;}

                        else if ( (LA125_0==Return) && (synpred95_InternalSiddhiParser())) {s = 17;}

                        else if ( (LA125_0==Partition) && (synpred95_InternalSiddhiParser())) {s = 18;}

                        else if ( (LA125_0==Every) && (synpred95_InternalSiddhiParser())) {s = 19;}

                        else if ( (LA125_0==Unidirectional) && (synpred95_InternalSiddhiParser())) {s = 20;}

                        else if ( (LA125_0==On) && (synpred95_InternalSiddhiParser())) {s = 21;}

                        else if ( (LA125_0==Within) && (synpred95_InternalSiddhiParser())) {s = 22;}

                        else if ( (LA125_0==Left) && (synpred95_InternalSiddhiParser())) {s = 23;}

                        else if ( (LA125_0==Right) && (synpred95_InternalSiddhiParser())) {s = 24;}

                        else if ( (LA125_0==Full) && (synpred95_InternalSiddhiParser())) {s = 25;}

                        else if ( (LA125_0==Join) && (synpred95_InternalSiddhiParser())) {s = 26;}

                        else if ( (LA125_0==Outer) && (synpred95_InternalSiddhiParser())) {s = 27;}

                        else if ( (LA125_0==Inner) && (synpred95_InternalSiddhiParser())) {s = 28;}

                        else if ( (LA125_0==Year) && (synpred95_InternalSiddhiParser())) {s = 29;}

                        else if ( (LA125_0==Years) && (synpred95_InternalSiddhiParser())) {s = 30;}

                        else if ( (LA125_0==Month) && (synpred95_InternalSiddhiParser())) {s = 31;}

                        else if ( (LA125_0==Months) && (synpred95_InternalSiddhiParser())) {s = 32;}

                        else if ( (LA125_0==Week) && (synpred95_InternalSiddhiParser())) {s = 33;}

                        else if ( (LA125_0==Weeks) && (synpred95_InternalSiddhiParser())) {s = 34;}

                        else if ( (LA125_0==Day) && (synpred95_InternalSiddhiParser())) {s = 35;}

                        else if ( (LA125_0==Days) && (synpred95_InternalSiddhiParser())) {s = 36;}

                        else if ( (LA125_0==Hour) && (synpred95_InternalSiddhiParser())) {s = 37;}

                        else if ( (LA125_0==Hours) && (synpred95_InternalSiddhiParser())) {s = 38;}

                        else if ( (LA125_0==Minute) && (synpred95_InternalSiddhiParser())) {s = 39;}

                        else if ( (LA125_0==Minutes) && (synpred95_InternalSiddhiParser())) {s = 40;}

                        else if ( (LA125_0==Min) && (synpred95_InternalSiddhiParser())) {s = 41;}

                        else if ( (LA125_0==Second) && (synpred95_InternalSiddhiParser())) {s = 42;}

                        else if ( (LA125_0==Seconds) && (synpred95_InternalSiddhiParser())) {s = 43;}

                        else if ( (LA125_0==Sec) && (synpred95_InternalSiddhiParser())) {s = 44;}

                        else if ( (LA125_0==Millisecond) && (synpred95_InternalSiddhiParser())) {s = 45;}

                        else if ( (LA125_0==Milliseconds) && (synpred95_InternalSiddhiParser())) {s = 46;}

                        else if ( (LA125_0==Millisec) && (synpred95_InternalSiddhiParser())) {s = 47;}

                        else if ( (LA125_0==String) && (synpred95_InternalSiddhiParser())) {s = 48;}

                        else if ( (LA125_0==Int) && (synpred95_InternalSiddhiParser())) {s = 49;}

                        else if ( (LA125_0==Long) && (synpred95_InternalSiddhiParser())) {s = 50;}

                        else if ( (LA125_0==Float) && (synpred95_InternalSiddhiParser())) {s = 51;}

                        else if ( (LA125_0==Double) && (synpred95_InternalSiddhiParser())) {s = 52;}

                        else if ( (LA125_0==Bool) && (synpred95_InternalSiddhiParser())) {s = 53;}

                        else if ( (LA125_0==Object) && (synpred95_InternalSiddhiParser())) {s = 54;}

                        else if ( (LA125_0==And) && (synpred95_InternalSiddhiParser())) {s = 55;}

                        else if ( (LA125_0==Or) && (synpred95_InternalSiddhiParser())) {s = 56;}

                        else if ( (LA125_0==Not) && (synpred95_InternalSiddhiParser())) {s = 57;}

                        else if ( (LA125_0==Is) && (synpred95_InternalSiddhiParser())) {s = 58;}

                        else if ( (LA125_0==Null) && (synpred95_InternalSiddhiParser())) {s = 59;}

                        else if ( (LA125_0==Snapshot) && (synpred95_InternalSiddhiParser())) {s = 60;}

                        else if ( (LA125_0==Last) && (synpred95_InternalSiddhiParser())) {s = 61;}

                        else if ( (LA125_0==First) && (synpred95_InternalSiddhiParser())) {s = 62;}

                        else if ( (LA125_0==Group) && (synpred95_InternalSiddhiParser())) {s = 63;}

                        else if ( (LA125_0==By) && (synpred95_InternalSiddhiParser())) {s = 64;}

                        else if ( (LA125_0==Having) && (synpred95_InternalSiddhiParser())) {s = 65;}

                        else if ( (LA125_0==With) && (synpred95_InternalSiddhiParser())) {s = 66;}

                        else if ( (LA125_0==Of) && (synpred95_InternalSiddhiParser())) {s = 67;}

                        else if ( (LA125_0==Begin) && (synpred95_InternalSiddhiParser())) {s = 68;}

                        else if ( (LA125_0==End) && (synpred95_InternalSiddhiParser())) {s = 69;}

                        else if ( (LA125_0==Delete) && (synpred95_InternalSiddhiParser())) {s = 70;}

                        else if ( (LA125_0==For) && (synpred95_InternalSiddhiParser())) {s = 71;}

                        else if ( (LA125_0==True) && (synpred95_InternalSiddhiParser())) {s = 72;}

                        else if ( (LA125_0==False) && (synpred95_InternalSiddhiParser())) {s = 73;}

                        else if ( (LA125_0==Update) && (synpred95_InternalSiddhiParser())) {s = 74;}

                         
                        input.seek(index125_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA125_1 = input.LA(1);

                         
                        int index125_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalSiddhiParser()) ) {s = 75;}

                        else if ( (synpred95_InternalSiddhiParser()) ) {s = 74;}

                         
                        input.seek(index125_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_57s = "\27\uffff";
    static final String dfa_58s = "\1\3\26\uffff";
    static final String dfa_59s = "\1\4\2\0\24\uffff";
    static final String dfa_60s = "\1\166\2\0\24\uffff";
    static final String dfa_61s = "\3\uffff\1\3\21\uffff\1\1\1\2";
    static final String dfa_62s = "\1\uffff\1\0\1\1\24\uffff}>";
    static final String[] dfa_63s = {
            "\1\3\16\uffff\1\3\3\uffff\1\3\3\uffff\2\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\1\3\1\uffff\2\3\6\uffff\1\3\2\uffff\1\3\1\uffff\1\3\32\uffff\1\3\5\uffff\1\3\1\uffff\1\1\20\uffff\1\2\7\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "10879:3: ( ( ( ( ( NumberSign )? ruleOPEN_SQARE_BRACKETS ( ( ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) )=> ( (otherlv_1= NumberSign )? ruleOPEN_SQARE_BRACKETS ( (lv_exp_3_0= ruleExpression ) ) ruleCLOSE_SQARE_BRACKETS ) ) | ( ( ( NumberSign ( ( ruleFunctionOperation ) ) ) )=> (otherlv_5= NumberSign ( (lv_fo_6_0= ruleFunctionOperation ) ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_1 = input.LA(1);

                         
                        int index131_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSiddhiParser()) ) {s = 21;}

                        else if ( (synpred98_InternalSiddhiParser()) ) {s = 22;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index131_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA131_2 = input.LA(1);

                         
                        int index131_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSiddhiParser()) ) {s = 21;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index131_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\26\uffff";
    static final String dfa_65s = "\1\2\25\uffff";
    static final String dfa_66s = "\1\4\1\0\24\uffff";
    static final String dfa_67s = "\1\166\1\0\24\uffff";
    static final String dfa_68s = "\2\uffff\1\2\22\uffff\1\1";
    static final String dfa_69s = "\1\uffff\1\0\24\uffff}>";
    static final String[] dfa_70s = {
            "\1\2\16\uffff\1\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\7\uffff\1\2\1\uffff\2\2\6\uffff\1\2\2\uffff\1\2\1\uffff\1\2\32\uffff\1\2\5\uffff\1\2\1\uffff\1\1\20\uffff\1\2\7\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_64;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "10974:3: ( ( ( NumberSign ruleWINDOW[null] FullStop ( ( ruleFunctionOperation ) ) ) )=> (otherlv_7= NumberSign this_WINDOW_8= ruleWINDOW[$current] otherlv_9= FullStop ( (lv_func_op_10_0= ruleFunctionOperation ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA132_1 = input.LA(1);

                         
                        int index132_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSiddhiParser()) ) {s = 21;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index132_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 132, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\124\uffff";
    static final String dfa_72s = "\1\4\1\0\1\uffff\112\0\7\uffff";
    static final String dfa_73s = "\1\174\1\0\1\uffff\112\0\7\uffff";
    static final String dfa_74s = "\2\uffff\1\2\112\uffff\1\4\4\uffff\1\1\1\3";
    static final String dfa_75s = "\1\uffff\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\7\uffff}>";
    static final String[] dfa_76s = {
            "\1\27\1\61\1\uffff\1\60\1\uffff\1\25\1\uffff\1\62\1\76\1\23\1\22\1\53\1\56\1\uffff\1\6\1\110\1\67\1\15\1\103\1\12\1\52\1\43\1\71\1\20\1\24\1\55\1\10\1\5\1\63\1\114\1\17\1\31\1\106\1\26\1\113\1\100\1\66\1\101\1\51\1\37\1\42\1\36\1\33\1\16\1\45\1\41\1\70\1\47\1\7\1\34\1\50\1\13\1\35\1\77\1\32\1\65\1\75\1\uffff\1\112\1\44\1\104\1\40\1\uffff\1\14\1\72\1\uffff\1\46\1\107\1\111\1\64\1\54\1\1\1\uffff\1\21\1\57\6\uffff\1\11\1\uffff\1\102\1\uffff\1\74\1\105\1\30\1\73\1\3\1\uffff\1\2\2\uffff\1\115\1\uffff\2\115\20\uffff\1\4\1\115\4\uffff\1\115",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_71;
            this.eof = dfa_71;
            this.min = dfa_72;
            this.max = dfa_73;
            this.accept = dfa_74;
            this.special = dfa_75;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "12040:2: ( ( ( ( () ( ( ruleNOT ) ) ( ( ruleMathOperation ) ) ) )=> ( () ( (lv_not_1_0= ruleNOT ) ) ( (lv_op_2_0= ruleMathOperation ) ) ) ) | ( ruleOPEN_PAR ( (lv_op_4_0= ruleMathOperation ) ) ruleCLOSE_PAR ) | ( ( ruleNullCheck )=>this_NullCheck_6= ruleNullCheck ) | ( (lv_lit_7_0= ruleLiteral ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalSiddhiParser()) ) {s = 82;}

                        else if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA146_3 = input.LA(1);

                         
                        int index146_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA146_4 = input.LA(1);

                         
                        int index146_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA146_5 = input.LA(1);

                         
                        int index146_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA146_6 = input.LA(1);

                         
                        int index146_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA146_7 = input.LA(1);

                         
                        int index146_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA146_8 = input.LA(1);

                         
                        int index146_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA146_9 = input.LA(1);

                         
                        int index146_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA146_10 = input.LA(1);

                         
                        int index146_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA146_11 = input.LA(1);

                         
                        int index146_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA146_12 = input.LA(1);

                         
                        int index146_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA146_13 = input.LA(1);

                         
                        int index146_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA146_14 = input.LA(1);

                         
                        int index146_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA146_15 = input.LA(1);

                         
                        int index146_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA146_16 = input.LA(1);

                         
                        int index146_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA146_17 = input.LA(1);

                         
                        int index146_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA146_18 = input.LA(1);

                         
                        int index146_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA146_19 = input.LA(1);

                         
                        int index146_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA146_20 = input.LA(1);

                         
                        int index146_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA146_21 = input.LA(1);

                         
                        int index146_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA146_22 = input.LA(1);

                         
                        int index146_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA146_23 = input.LA(1);

                         
                        int index146_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA146_24 = input.LA(1);

                         
                        int index146_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA146_25 = input.LA(1);

                         
                        int index146_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA146_26 = input.LA(1);

                         
                        int index146_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA146_27 = input.LA(1);

                         
                        int index146_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA146_28 = input.LA(1);

                         
                        int index146_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA146_29 = input.LA(1);

                         
                        int index146_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA146_30 = input.LA(1);

                         
                        int index146_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA146_31 = input.LA(1);

                         
                        int index146_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA146_32 = input.LA(1);

                         
                        int index146_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA146_33 = input.LA(1);

                         
                        int index146_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA146_34 = input.LA(1);

                         
                        int index146_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA146_35 = input.LA(1);

                         
                        int index146_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA146_36 = input.LA(1);

                         
                        int index146_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA146_37 = input.LA(1);

                         
                        int index146_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA146_38 = input.LA(1);

                         
                        int index146_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA146_39 = input.LA(1);

                         
                        int index146_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA146_40 = input.LA(1);

                         
                        int index146_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA146_41 = input.LA(1);

                         
                        int index146_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA146_42 = input.LA(1);

                         
                        int index146_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA146_43 = input.LA(1);

                         
                        int index146_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA146_44 = input.LA(1);

                         
                        int index146_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA146_45 = input.LA(1);

                         
                        int index146_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA146_46 = input.LA(1);

                         
                        int index146_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA146_47 = input.LA(1);

                         
                        int index146_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA146_48 = input.LA(1);

                         
                        int index146_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA146_49 = input.LA(1);

                         
                        int index146_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA146_50 = input.LA(1);

                         
                        int index146_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA146_51 = input.LA(1);

                         
                        int index146_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_51);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA146_52 = input.LA(1);

                         
                        int index146_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_52);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA146_53 = input.LA(1);

                         
                        int index146_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_53);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA146_54 = input.LA(1);

                         
                        int index146_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_54);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA146_55 = input.LA(1);

                         
                        int index146_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_55);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA146_56 = input.LA(1);

                         
                        int index146_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_56);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA146_57 = input.LA(1);

                         
                        int index146_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_57);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA146_58 = input.LA(1);

                         
                        int index146_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_58);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA146_59 = input.LA(1);

                         
                        int index146_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_59);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA146_60 = input.LA(1);

                         
                        int index146_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_60);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA146_61 = input.LA(1);

                         
                        int index146_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_61);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA146_62 = input.LA(1);

                         
                        int index146_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_62);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA146_63 = input.LA(1);

                         
                        int index146_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_63);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA146_64 = input.LA(1);

                         
                        int index146_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_64);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA146_65 = input.LA(1);

                         
                        int index146_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_65);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA146_66 = input.LA(1);

                         
                        int index146_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_66);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA146_67 = input.LA(1);

                         
                        int index146_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_67);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA146_68 = input.LA(1);

                         
                        int index146_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_68);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA146_69 = input.LA(1);

                         
                        int index146_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_69);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA146_70 = input.LA(1);

                         
                        int index146_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_70);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA146_71 = input.LA(1);

                         
                        int index146_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_71);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA146_72 = input.LA(1);

                         
                        int index146_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_72);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA146_73 = input.LA(1);

                         
                        int index146_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_73);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA146_74 = input.LA(1);

                         
                        int index146_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_74);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA146_75 = input.LA(1);

                         
                        int index146_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_75);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA146_76 = input.LA(1);

                         
                        int index146_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSiddhiParser()) ) {s = 83;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index146_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_77s = "\u009a\uffff";
    static final String dfa_78s = "\2\4\1\137\111\131\1\71\115\uffff";
    static final String dfa_79s = "\2\166\1\147\111\156\1\167\115\uffff";
    static final String dfa_80s = "\115\uffff\111\1\1\3\1\2\2\1";
    static final String dfa_81s = "\1\uffff\1\17\1\110\1\77\1\37\1\53\1\45\1\16\1\11\1\60\1\72\1\34\1\106\1\46\1\12\1\66\1\26\1\112\1\55\1\25\1\44\1\33\1\1\1\61\1\22\1\101\1\50\1\13\1\6\1\113\1\51\1\102\1\73\1\5\1\0\1\24\1\15\1\40\1\36\1\64\1\63\1\7\1\20\1\30\1\62\1\105\1\10\1\21\1\56\1\65\1\35\1\2\1\111\1\74\1\67\1\27\1\75\1\100\1\4\1\107\1\47\1\52\1\31\1\32\1\23\1\103\1\41\1\42\1\14\1\3\1\57\1\76\1\43\1\104\1\70\1\54\1\71\115\uffff}>";
    static final String[] dfa_82s = {
            "\1\25\1\57\1\uffff\1\56\1\uffff\1\23\1\uffff\1\60\1\75\1\21\1\20\1\51\1\54\1\uffff\1\4\1\107\1\65\1\13\1\102\1\10\1\50\1\41\1\67\1\16\1\22\1\53\1\6\1\3\1\61\1\113\1\15\1\27\1\105\1\24\1\112\1\77\1\64\1\100\1\47\1\35\1\40\1\34\1\31\1\14\1\43\1\37\1\66\1\45\1\5\1\32\1\46\1\11\1\33\1\76\1\30\1\63\1\74\1\uffff\1\111\1\42\1\103\1\36\1\uffff\1\12\1\70\1\uffff\1\44\1\106\1\110\1\62\1\52\1\72\1\uffff\1\17\1\55\6\uffff\1\7\1\uffff\1\101\1\uffff\1\73\1\104\1\26\1\71\1\1\30\uffff\1\2",
            "\1\137\1\171\1\uffff\1\170\1\uffff\1\135\1\uffff\1\172\1\u0087\1\133\1\132\1\163\1\166\1\uffff\1\116\1\u0091\1\177\1\125\1\u008c\1\122\1\162\1\153\1\u0081\1\130\1\134\1\165\1\120\1\115\1\173\1\u0095\1\127\1\141\1\u008f\1\136\1\u0094\1\u0089\1\176\1\u008a\1\161\1\147\1\152\1\146\1\143\1\126\1\155\1\151\1\u0080\1\157\1\117\1\144\1\160\1\123\1\145\1\u0088\1\142\1\175\1\u0086\1\uffff\1\u0093\1\154\1\u008d\1\150\1\uffff\1\124\1\u0082\1\uffff\1\156\1\u0090\1\u0092\1\174\1\164\1\u0084\1\uffff\1\131\1\167\6\uffff\1\121\1\uffff\1\u008b\1\uffff\1\u0085\1\u008e\1\140\1\u0083\31\uffff\1\114",
            "\1\u0096\7\uffff\1\u0096",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0099\5\uffff\1\u0096\7\uffff\1\u0096\6\uffff\1\u0098",
            "\1\u0097\37\uffff\1\u0099\3\uffff\1\u0097\7\uffff\1\u0097\10\uffff\1\u0098\10\uffff\1\u0097",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_77;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "12192:3: ( ( ( ( ruleStreamReference ) )=> (lv_stream_ref_0_0= ruleStreamReference ) ) | ( (lv_attr_ref_1_0= ruleAttributeReference ) ) | ( (lv_fo_2_0= ruleFunctionOperation ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_34 = input.LA(1);

                         
                        int index147_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_34==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_34==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_34==LeftParenthesis||LA147_34==Colon) ) {s = 150;}

                         
                        input.seek(index147_34);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA147_22 = input.LA(1);

                         
                        int index147_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_22==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_22==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_22==LeftParenthesis||LA147_22==Colon) ) {s = 150;}

                         
                        input.seek(index147_22);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA147_51 = input.LA(1);

                         
                        int index147_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_51==LeftParenthesis||LA147_51==Colon) ) {s = 150;}

                        else if ( (LA147_51==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_51==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_51);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA147_69 = input.LA(1);

                         
                        int index147_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_69==LeftParenthesis||LA147_69==Colon) ) {s = 150;}

                        else if ( (LA147_69==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_69==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_69);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA147_58 = input.LA(1);

                         
                        int index147_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_58==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_58==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_58==LeftParenthesis||LA147_58==Colon) ) {s = 150;}

                         
                        input.seek(index147_58);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA147_33 = input.LA(1);

                         
                        int index147_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_33==LeftParenthesis||LA147_33==Colon) ) {s = 150;}

                        else if ( (LA147_33==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_33==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_33);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA147_28 = input.LA(1);

                         
                        int index147_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_28==LeftParenthesis||LA147_28==Colon) ) {s = 150;}

                        else if ( (LA147_28==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_28==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_28);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA147_41 = input.LA(1);

                         
                        int index147_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_41==LeftParenthesis||LA147_41==Colon) ) {s = 150;}

                        else if ( (LA147_41==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_41==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_41);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA147_46 = input.LA(1);

                         
                        int index147_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_46==LeftParenthesis||LA147_46==Colon) ) {s = 150;}

                        else if ( (LA147_46==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_46==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_46);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA147_8 = input.LA(1);

                         
                        int index147_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_8==LeftParenthesis||LA147_8==Colon) ) {s = 150;}

                        else if ( (LA147_8==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_8==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_8);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA147_14 = input.LA(1);

                         
                        int index147_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_14==LeftParenthesis||LA147_14==Colon) ) {s = 150;}

                        else if ( (LA147_14==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_14==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_14);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA147_27 = input.LA(1);

                         
                        int index147_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_27==LeftParenthesis||LA147_27==Colon) ) {s = 150;}

                        else if ( (LA147_27==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_27==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_27);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA147_68 = input.LA(1);

                         
                        int index147_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_68==LeftParenthesis||LA147_68==Colon) ) {s = 150;}

                        else if ( (LA147_68==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_68==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_68);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA147_36 = input.LA(1);

                         
                        int index147_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_36==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_36==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_36==LeftParenthesis||LA147_36==Colon) ) {s = 150;}

                         
                        input.seek(index147_36);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA147_7 = input.LA(1);

                         
                        int index147_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_7==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_7==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_7==LeftParenthesis||LA147_7==Colon) ) {s = 150;}

                         
                        input.seek(index147_7);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA147_1 = input.LA(1);

                         
                        int index147_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_1==RULE_ID) ) {s = 76;}

                        else if ( (LA147_1==Stream) && (synpred108_InternalSiddhiParser())) {s = 77;}

                        else if ( (LA147_1==Define) && (synpred108_InternalSiddhiParser())) {s = 78;}

                        else if ( (LA147_1==From) && (synpred108_InternalSiddhiParser())) {s = 79;}

                        else if ( (LA147_1==Select) && (synpred108_InternalSiddhiParser())) {s = 80;}

                        else if ( (LA147_1==As) && (synpred108_InternalSiddhiParser())) {s = 81;}

                        else if ( (LA147_1==Insert) && (synpred108_InternalSiddhiParser())) {s = 82;}

                        else if ( (LA147_1==Into) && (synpred108_InternalSiddhiParser())) {s = 83;}

                        else if ( (LA147_1==All) && (synpred108_InternalSiddhiParser())) {s = 84;}

                        else if ( (LA147_1==Events) && (synpred108_InternalSiddhiParser())) {s = 85;}

                        else if ( (LA147_1==Table) && (synpred108_InternalSiddhiParser())) {s = 86;}

                        else if ( (LA147_1==Window) && (synpred108_InternalSiddhiParser())) {s = 87;}

                        else if ( (LA147_1==Output) && (synpred108_InternalSiddhiParser())) {s = 88;}

                        else if ( (LA147_1==Raw) && (synpred108_InternalSiddhiParser())) {s = 89;}

                        else if ( (LA147_1==Expired) && (synpred108_InternalSiddhiParser())) {s = 90;}

                        else if ( (LA147_1==Current) && (synpred108_InternalSiddhiParser())) {s = 91;}

                        else if ( (LA147_1==Return) && (synpred108_InternalSiddhiParser())) {s = 92;}

                        else if ( (LA147_1==Partition) && (synpred108_InternalSiddhiParser())) {s = 93;}

                        else if ( (LA147_1==Every) && (synpred108_InternalSiddhiParser())) {s = 94;}

                        else if ( (LA147_1==Unidirectional) && (synpred108_InternalSiddhiParser())) {s = 95;}

                        else if ( (LA147_1==On) && (synpred108_InternalSiddhiParser())) {s = 96;}

                        else if ( (LA147_1==Within) && (synpred108_InternalSiddhiParser())) {s = 97;}

                        else if ( (LA147_1==Left) && (synpred108_InternalSiddhiParser())) {s = 98;}

                        else if ( (LA147_1==Right) && (synpred108_InternalSiddhiParser())) {s = 99;}

                        else if ( (LA147_1==Full) && (synpred108_InternalSiddhiParser())) {s = 100;}

                        else if ( (LA147_1==Join) && (synpred108_InternalSiddhiParser())) {s = 101;}

                        else if ( (LA147_1==Outer) && (synpred108_InternalSiddhiParser())) {s = 102;}

                        else if ( (LA147_1==Inner) && (synpred108_InternalSiddhiParser())) {s = 103;}

                        else if ( (LA147_1==Year) && (synpred108_InternalSiddhiParser())) {s = 104;}

                        else if ( (LA147_1==Years) && (synpred108_InternalSiddhiParser())) {s = 105;}

                        else if ( (LA147_1==Month) && (synpred108_InternalSiddhiParser())) {s = 106;}

                        else if ( (LA147_1==Months) && (synpred108_InternalSiddhiParser())) {s = 107;}

                        else if ( (LA147_1==Week) && (synpred108_InternalSiddhiParser())) {s = 108;}

                        else if ( (LA147_1==Weeks) && (synpred108_InternalSiddhiParser())) {s = 109;}

                        else if ( (LA147_1==Day) && (synpred108_InternalSiddhiParser())) {s = 110;}

                        else if ( (LA147_1==Days) && (synpred108_InternalSiddhiParser())) {s = 111;}

                        else if ( (LA147_1==Hour) && (synpred108_InternalSiddhiParser())) {s = 112;}

                        else if ( (LA147_1==Hours) && (synpred108_InternalSiddhiParser())) {s = 113;}

                        else if ( (LA147_1==Minute) && (synpred108_InternalSiddhiParser())) {s = 114;}

                        else if ( (LA147_1==Minutes) && (synpred108_InternalSiddhiParser())) {s = 115;}

                        else if ( (LA147_1==Min) && (synpred108_InternalSiddhiParser())) {s = 116;}

                        else if ( (LA147_1==Second) && (synpred108_InternalSiddhiParser())) {s = 117;}

                        else if ( (LA147_1==Seconds) && (synpred108_InternalSiddhiParser())) {s = 118;}

                        else if ( (LA147_1==Sec) && (synpred108_InternalSiddhiParser())) {s = 119;}

                        else if ( (LA147_1==Millisecond) && (synpred108_InternalSiddhiParser())) {s = 120;}

                        else if ( (LA147_1==Milliseconds) && (synpred108_InternalSiddhiParser())) {s = 121;}

                        else if ( (LA147_1==Millisec) && (synpred108_InternalSiddhiParser())) {s = 122;}

                        else if ( (LA147_1==String) && (synpred108_InternalSiddhiParser())) {s = 123;}

                        else if ( (LA147_1==Int) && (synpred108_InternalSiddhiParser())) {s = 124;}

                        else if ( (LA147_1==Long) && (synpred108_InternalSiddhiParser())) {s = 125;}

                        else if ( (LA147_1==Float) && (synpred108_InternalSiddhiParser())) {s = 126;}

                        else if ( (LA147_1==Double) && (synpred108_InternalSiddhiParser())) {s = 127;}

                        else if ( (LA147_1==Bool) && (synpred108_InternalSiddhiParser())) {s = 128;}

                        else if ( (LA147_1==Object) && (synpred108_InternalSiddhiParser())) {s = 129;}

                        else if ( (LA147_1==And) && (synpred108_InternalSiddhiParser())) {s = 130;}

                        else if ( (LA147_1==Or) && (synpred108_InternalSiddhiParser())) {s = 131;}

                        else if ( (LA147_1==Not) && (synpred108_InternalSiddhiParser())) {s = 132;}

                        else if ( (LA147_1==Is) && (synpred108_InternalSiddhiParser())) {s = 133;}

                        else if ( (LA147_1==Null) && (synpred108_InternalSiddhiParser())) {s = 134;}

                        else if ( (LA147_1==Snapshot) && (synpred108_InternalSiddhiParser())) {s = 135;}

                        else if ( (LA147_1==Last) && (synpred108_InternalSiddhiParser())) {s = 136;}

                        else if ( (LA147_1==First) && (synpred108_InternalSiddhiParser())) {s = 137;}

                        else if ( (LA147_1==Group) && (synpred108_InternalSiddhiParser())) {s = 138;}

                        else if ( (LA147_1==By) && (synpred108_InternalSiddhiParser())) {s = 139;}

                        else if ( (LA147_1==Having) && (synpred108_InternalSiddhiParser())) {s = 140;}

                        else if ( (LA147_1==With) && (synpred108_InternalSiddhiParser())) {s = 141;}

                        else if ( (LA147_1==Of) && (synpred108_InternalSiddhiParser())) {s = 142;}

                        else if ( (LA147_1==Begin) && (synpred108_InternalSiddhiParser())) {s = 143;}

                        else if ( (LA147_1==End) && (synpred108_InternalSiddhiParser())) {s = 144;}

                        else if ( (LA147_1==Delete) && (synpred108_InternalSiddhiParser())) {s = 145;}

                        else if ( (LA147_1==For) && (synpred108_InternalSiddhiParser())) {s = 146;}

                        else if ( (LA147_1==True) && (synpred108_InternalSiddhiParser())) {s = 147;}

                        else if ( (LA147_1==False) && (synpred108_InternalSiddhiParser())) {s = 148;}

                        else if ( (LA147_1==Update) && (synpred108_InternalSiddhiParser())) {s = 149;}

                         
                        input.seek(index147_1);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA147_42 = input.LA(1);

                         
                        int index147_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_42==LeftParenthesis||LA147_42==Colon) ) {s = 150;}

                        else if ( (LA147_42==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_42==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_42);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA147_47 = input.LA(1);

                         
                        int index147_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_47==LeftParenthesis||LA147_47==Colon) ) {s = 150;}

                        else if ( (LA147_47==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_47==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_47);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA147_24 = input.LA(1);

                         
                        int index147_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_24==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_24==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_24==LeftParenthesis||LA147_24==Colon) ) {s = 150;}

                         
                        input.seek(index147_24);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA147_64 = input.LA(1);

                         
                        int index147_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_64==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_64==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_64==LeftParenthesis||LA147_64==Colon) ) {s = 150;}

                         
                        input.seek(index147_64);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA147_35 = input.LA(1);

                         
                        int index147_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_35==LeftParenthesis||LA147_35==Colon) ) {s = 150;}

                        else if ( (LA147_35==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_35==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_35);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA147_19 = input.LA(1);

                         
                        int index147_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_19==LeftParenthesis||LA147_19==Colon) ) {s = 150;}

                        else if ( (LA147_19==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_19==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_19);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA147_16 = input.LA(1);

                         
                        int index147_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_16==LeftParenthesis||LA147_16==Colon) ) {s = 150;}

                        else if ( (LA147_16==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_16==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_16);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA147_55 = input.LA(1);

                         
                        int index147_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_55==LeftParenthesis||LA147_55==Colon) ) {s = 150;}

                        else if ( (LA147_55==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_55==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_55);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA147_43 = input.LA(1);

                         
                        int index147_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_43==LeftParenthesis||LA147_43==Colon) ) {s = 150;}

                        else if ( (LA147_43==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_43==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_43);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA147_62 = input.LA(1);

                         
                        int index147_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_62==LeftParenthesis||LA147_62==Colon) ) {s = 150;}

                        else if ( (LA147_62==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_62==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_62);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA147_63 = input.LA(1);

                         
                        int index147_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_63==LeftParenthesis||LA147_63==Colon) ) {s = 150;}

                        else if ( (LA147_63==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_63==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_63);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA147_21 = input.LA(1);

                         
                        int index147_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_21==LeftParenthesis||LA147_21==Colon) ) {s = 150;}

                        else if ( (LA147_21==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_21==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_21);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA147_11 = input.LA(1);

                         
                        int index147_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_11==LeftParenthesis||LA147_11==Colon) ) {s = 150;}

                        else if ( (LA147_11==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_11==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_11);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA147_50 = input.LA(1);

                         
                        int index147_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_50==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_50==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_50==LeftParenthesis||LA147_50==Colon) ) {s = 150;}

                         
                        input.seek(index147_50);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA147_38 = input.LA(1);

                         
                        int index147_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_38==LeftParenthesis||LA147_38==Colon) ) {s = 150;}

                        else if ( (LA147_38==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_38==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_38);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA147_4 = input.LA(1);

                         
                        int index147_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_4==LeftParenthesis||LA147_4==Colon) ) {s = 150;}

                        else if ( (LA147_4==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_4==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_4);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA147_37 = input.LA(1);

                         
                        int index147_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_37==LeftParenthesis||LA147_37==Colon) ) {s = 150;}

                        else if ( (LA147_37==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_37==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_37);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA147_66 = input.LA(1);

                         
                        int index147_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_66==LeftParenthesis||LA147_66==Colon) ) {s = 150;}

                        else if ( (LA147_66==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_66==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_66);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA147_67 = input.LA(1);

                         
                        int index147_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_67==LeftParenthesis||LA147_67==Colon) ) {s = 150;}

                        else if ( (LA147_67==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_67==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_67);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA147_72 = input.LA(1);

                         
                        int index147_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_72==LeftParenthesis||LA147_72==Colon) ) {s = 150;}

                        else if ( (LA147_72==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_72==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_72);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA147_20 = input.LA(1);

                         
                        int index147_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_20==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_20==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_20==LeftParenthesis||LA147_20==Colon) ) {s = 150;}

                         
                        input.seek(index147_20);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA147_6 = input.LA(1);

                         
                        int index147_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_6==LeftParenthesis||LA147_6==Colon) ) {s = 150;}

                        else if ( (LA147_6==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_6==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_6);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA147_13 = input.LA(1);

                         
                        int index147_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_13==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_13==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_13==LeftParenthesis||LA147_13==Colon) ) {s = 150;}

                         
                        input.seek(index147_13);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA147_60 = input.LA(1);

                         
                        int index147_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_60==LeftParenthesis||LA147_60==Colon) ) {s = 150;}

                        else if ( (LA147_60==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_60==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_60);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA147_26 = input.LA(1);

                         
                        int index147_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_26==LeftParenthesis||LA147_26==Colon) ) {s = 150;}

                        else if ( (LA147_26==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_26==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_26);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA147_30 = input.LA(1);

                         
                        int index147_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_30==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_30==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_30==LeftParenthesis||LA147_30==Colon) ) {s = 150;}

                         
                        input.seek(index147_30);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA147_61 = input.LA(1);

                         
                        int index147_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_61==LeftParenthesis||LA147_61==Colon) ) {s = 150;}

                        else if ( (LA147_61==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_61==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_61);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA147_5 = input.LA(1);

                         
                        int index147_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_5==LeftParenthesis||LA147_5==Colon) ) {s = 150;}

                        else if ( (LA147_5==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_5==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_5);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA147_75 = input.LA(1);

                         
                        int index147_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_75==LeftParenthesis||LA147_75==Colon) ) {s = 150;}

                        else if ( (LA147_75==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_75==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_75);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA147_18 = input.LA(1);

                         
                        int index147_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_18==LeftParenthesis||LA147_18==Colon) ) {s = 150;}

                        else if ( (LA147_18==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_18==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_18);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA147_48 = input.LA(1);

                         
                        int index147_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_48==LeftParenthesis||LA147_48==Colon) ) {s = 150;}

                        else if ( (LA147_48==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_48==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA147_70 = input.LA(1);

                         
                        int index147_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_70==LeftParenthesis||LA147_70==Colon) ) {s = 150;}

                        else if ( (LA147_70==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_70==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_70);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA147_9 = input.LA(1);

                         
                        int index147_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_9==LeftParenthesis||LA147_9==Colon) ) {s = 150;}

                        else if ( (LA147_9==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_9==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_9);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA147_23 = input.LA(1);

                         
                        int index147_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_23==LeftParenthesis||LA147_23==Colon) ) {s = 150;}

                        else if ( (LA147_23==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_23==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_23);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA147_44 = input.LA(1);

                         
                        int index147_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_44==LeftParenthesis||LA147_44==Colon) ) {s = 150;}

                        else if ( (LA147_44==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_44==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_44);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA147_40 = input.LA(1);

                         
                        int index147_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_40==LeftParenthesis||LA147_40==Colon) ) {s = 150;}

                        else if ( (LA147_40==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_40==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_40);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA147_39 = input.LA(1);

                         
                        int index147_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_39==LeftParenthesis||LA147_39==Colon) ) {s = 150;}

                        else if ( (LA147_39==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_39==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_39);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA147_49 = input.LA(1);

                         
                        int index147_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_49==LeftParenthesis||LA147_49==Colon) ) {s = 150;}

                        else if ( (LA147_49==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_49==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_49);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA147_15 = input.LA(1);

                         
                        int index147_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_15==LeftParenthesis||LA147_15==Colon) ) {s = 150;}

                        else if ( (LA147_15==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_15==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_15);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA147_54 = input.LA(1);

                         
                        int index147_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_54==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_54==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_54==LeftParenthesis||LA147_54==Colon) ) {s = 150;}

                         
                        input.seek(index147_54);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA147_74 = input.LA(1);

                         
                        int index147_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_74==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_74==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_74==LeftParenthesis||LA147_74==Colon) ) {s = 150;}

                         
                        input.seek(index147_74);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA147_76 = input.LA(1);

                         
                        int index147_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_76==Last||LA147_76==NumberSign||LA147_76==FullStop||LA147_76==RULE_INT) ) {s = 151;}

                        else if ( (LA147_76==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_76==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_76);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA147_10 = input.LA(1);

                         
                        int index147_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_10==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_10==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_10==LeftParenthesis||LA147_10==Colon) ) {s = 150;}

                         
                        input.seek(index147_10);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA147_32 = input.LA(1);

                         
                        int index147_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_32==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_32==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_32==LeftParenthesis||LA147_32==Colon) ) {s = 150;}

                         
                        input.seek(index147_32);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA147_53 = input.LA(1);

                         
                        int index147_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_53==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_53==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_53==LeftParenthesis||LA147_53==Colon) ) {s = 150;}

                         
                        input.seek(index147_53);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA147_56 = input.LA(1);

                         
                        int index147_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_56==LeftParenthesis||LA147_56==Colon) ) {s = 150;}

                        else if ( (LA147_56==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_56==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_56);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA147_71 = input.LA(1);

                         
                        int index147_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_71==LeftParenthesis||LA147_71==Colon) ) {s = 150;}

                        else if ( (LA147_71==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_71==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_71);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA147_3 = input.LA(1);

                         
                        int index147_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_3==LeftParenthesis||LA147_3==Colon) ) {s = 150;}

                        else if ( (LA147_3==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_3==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_3);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA147_57 = input.LA(1);

                         
                        int index147_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_57==LeftParenthesis||LA147_57==Colon) ) {s = 150;}

                        else if ( (LA147_57==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_57==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_57);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA147_25 = input.LA(1);

                         
                        int index147_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_25==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_25==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_25==LeftParenthesis||LA147_25==Colon) ) {s = 150;}

                         
                        input.seek(index147_25);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA147_31 = input.LA(1);

                         
                        int index147_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_31==LeftParenthesis||LA147_31==Colon) ) {s = 150;}

                        else if ( (LA147_31==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_31==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_31);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA147_65 = input.LA(1);

                         
                        int index147_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_65==LeftParenthesis||LA147_65==Colon) ) {s = 150;}

                        else if ( (LA147_65==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_65==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_65);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA147_73 = input.LA(1);

                         
                        int index147_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_73==LeftParenthesis||LA147_73==Colon) ) {s = 150;}

                        else if ( (LA147_73==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_73==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_73);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA147_45 = input.LA(1);

                         
                        int index147_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_45==LeftParenthesis||LA147_45==Colon) ) {s = 150;}

                        else if ( (LA147_45==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_45==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_45);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA147_12 = input.LA(1);

                         
                        int index147_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_12==LeftParenthesis||LA147_12==Colon) ) {s = 150;}

                        else if ( (LA147_12==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_12==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_12);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA147_59 = input.LA(1);

                         
                        int index147_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_59==LeftParenthesis||LA147_59==Colon) ) {s = 150;}

                        else if ( (LA147_59==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_59==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_59);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA147_2 = input.LA(1);

                         
                        int index147_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_2==LeftParenthesis||LA147_2==Colon) ) {s = 150;}

                        else if ( (synpred108_InternalSiddhiParser()) ) {s = 149;}

                        else if ( (true) ) {s = 151;}

                         
                        input.seek(index147_2);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA147_52 = input.LA(1);

                         
                        int index147_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_52==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_52==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_52==LeftParenthesis||LA147_52==Colon) ) {s = 150;}

                         
                        input.seek(index147_52);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA147_17 = input.LA(1);

                         
                        int index147_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_17==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_17==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                        else if ( (LA147_17==LeftParenthesis||LA147_17==Colon) ) {s = 150;}

                         
                        input.seek(index147_17);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA147_29 = input.LA(1);

                         
                        int index147_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_29==LeftParenthesis||LA147_29==Colon) ) {s = 150;}

                        else if ( (LA147_29==LeftSquareBracket) && (synpred108_InternalSiddhiParser())) {s = 152;}

                        else if ( (LA147_29==Is) && (synpred108_InternalSiddhiParser())) {s = 153;}

                         
                        input.seek(index147_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\34\uffff";
    static final String dfa_84s = "\4\uffff\1\13\2\uffff\1\13\7\uffff\2\15\2\uffff\1\15\4\uffff\1\15\2\uffff\1\15";
    static final String dfa_85s = "\1\46\1\uffff\2\145\1\5\1\167\1\uffff\1\22\1\160\1\142\5\uffff\2\22\2\167\1\22\2\142\2\167\1\22\2\167\1\22";
    static final String dfa_86s = "\1\174\1\uffff\2\167\1\174\1\167\1\uffff\1\174\2\167\5\uffff\2\174\2\167\1\174\4\167\1\174\2\167\1\174";
    static final String dfa_87s = "\1\uffff\1\1\4\uffff\1\7\3\uffff\1\6\1\5\1\3\1\2\1\4\15\uffff";
    static final String dfa_88s = "\34\uffff}>";
    static final String[] dfa_89s = {
            "\1\1\27\uffff\1\1\43\uffff\1\3\1\uffff\1\2\1\5\21\uffff\1\4\4\uffff\1\6",
            "",
            "\1\5\21\uffff\1\7",
            "\1\5\21\uffff\1\7",
            "\1\12\1\uffff\1\12\3\uffff\1\12\3\uffff\2\12\1\uffff\2\13\3\uffff\1\13\2\12\1\uffff\2\13\1\12\1\13\2\uffff\1\13\1\uffff\1\13\6\uffff\1\12\1\uffff\1\12\3\uffff\2\12\1\uffff\1\12\1\13\1\uffff\1\12\10\uffff\1\12\1\uffff\1\12\2\uffff\1\13\1\uffff\1\12\1\13\2\uffff\1\12\1\uffff\1\13\1\uffff\1\12\1\uffff\1\13\1\uffff\4\13\2\uffff\1\13\1\uffff\3\13\1\uffff\1\13\1\uffff\5\13\1\10\1\13\1\uffff\2\13\1\uffff\1\13\1\uffff\1\13\1\uffff\1\13\1\15\1\11\1\14\1\16\3\uffff\1\4\4\uffff\1\13",
            "\1\17",
            "",
            "\2\13\3\uffff\1\13\3\uffff\2\13\1\uffff\1\13\2\uffff\1\13\1\uffff\1\13\20\uffff\1\13\17\uffff\1\13\2\uffff\1\13\4\uffff\1\13\3\uffff\1\13\1\uffff\4\13\2\uffff\1\13\1\uffff\3\13\1\uffff\1\13\1\uffff\5\13\1\10\1\13\1\uffff\2\13\1\uffff\1\13\1\uffff\1\13\1\uffff\1\13\1\15\1\11\1\14\1\16\3\uffff\1\7\4\uffff\1\13",
            "\1\15\1\11\1\14\4\uffff\1\20",
            "\1\22\1\uffff\1\21\22\uffff\1\23",
            "",
            "",
            "",
            "",
            "",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\4\uffff\1\15\3\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\24\1\14\4\uffff\1\17\4\uffff\1\15",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\4\uffff\1\15\3\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\25\1\14\4\uffff\1\20\4\uffff\1\15",
            "\1\23",
            "\1\23",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\4\uffff\1\15\3\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\14\4\uffff\1\23\4\uffff\1\15",
            "\1\27\1\uffff\1\26\22\uffff\1\30",
            "\1\32\1\uffff\1\31\22\uffff\1\33",
            "\1\30",
            "\1\30",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\4\uffff\1\15\3\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\14\4\uffff\1\30\4\uffff\1\15",
            "\1\33",
            "\1\33",
            "\2\15\3\uffff\1\15\3\uffff\2\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\15\20\uffff\1\15\17\uffff\1\15\2\uffff\1\15\4\uffff\1\15\3\uffff\1\15\1\uffff\4\15\2\uffff\1\15\1\uffff\3\15\1\uffff\1\15\1\uffff\5\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\15\1\uffff\1\15\1\uffff\2\15\1\uffff\1\14\4\uffff\1\33\4\uffff\1\15"
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = dfa_83;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "12980:2: ( ( () ( (lv_bv_1_0= ruleBoolValue ) ) ) | ( () ( (lv_sdv_3_0= ruleSignedDoubleValue ) ) ) | ( () ( (lv_sfv_5_0= ruleSignedFloatValue ) ) ) | ( () ( (lv_slv_7_0= ruleSignedLongValue ) ) ) | ( () ( (lv_siv_9_0= ruleSignedIntValue ) ) ) | ( () ( (lv_tv_11_0= ruleTimeValue ) ) ) | ( () ( (lv_sv_13_0= ruleStringValue ) ) ) )";
        }
    }
    static final String dfa_90s = "\115\uffff";
    static final String dfa_91s = "\1\4\112\137\2\uffff";
    static final String dfa_92s = "\1\166\112\147\2\uffff";
    static final String dfa_93s = "\113\uffff\1\2\1\1";
    static final String dfa_94s = "\115\uffff}>";
    static final String[] dfa_95s = {
            "\1\24\1\56\1\uffff\1\55\1\uffff\1\22\1\uffff\1\57\1\74\1\20\1\17\1\50\1\53\1\uffff\1\3\1\106\1\64\1\12\1\101\1\7\1\47\1\40\1\66\1\15\1\21\1\52\1\5\1\2\1\60\1\112\1\14\1\26\1\104\1\23\1\111\1\76\1\63\1\77\1\46\1\34\1\37\1\33\1\30\1\13\1\42\1\36\1\65\1\44\1\4\1\31\1\45\1\10\1\32\1\75\1\27\1\62\1\73\1\uffff\1\110\1\41\1\102\1\35\1\uffff\1\11\1\67\1\uffff\1\43\1\105\1\107\1\61\1\51\1\71\1\uffff\1\16\1\54\6\uffff\1\6\1\uffff\1\100\1\uffff\1\72\1\103\1\25\1\70\31\uffff\1\1",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "\1\113\7\uffff\1\114",
            "",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "13209:3: ( ( (lv_funcNamespace_1_0= ruleFunctionNamespace ) ) otherlv_2= Colon )?";
        }
    }
    static final String dfa_96s = "\12\uffff";
    static final String dfa_97s = "\1\167\1\5\10\uffff";
    static final String dfa_98s = "\2\167\10\uffff";
    static final String dfa_99s = "\2\uffff\1\2\1\4\1\5\1\7\1\10\1\1\1\3\1\6";
    static final String dfa_100s = "\12\uffff}>";
    static final String[] dfa_101s = {
            "\1\1",
            "\1\6\1\uffff\1\6\3\uffff\1\6\3\uffff\1\11\1\5\7\uffff\1\11\1\2\3\uffff\1\5\14\uffff\1\4\1\uffff\1\2\3\uffff\1\10\1\7\1\uffff\1\3\2\uffff\1\4\10\uffff\1\10\1\uffff\1\7\4\uffff\1\3\3\uffff\1\11\3\uffff\1\5\50\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_96;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "13739:2: ( ( ( (lv_yv_0_0= ruleYearValue ) ) ( (lv_mv_1_0= ruleMonthValue ) )? ( (lv_wv_2_0= ruleWeekValue ) )? ( (lv_dv_3_0= ruleDayValue ) )? ( (lv_hv_4_0= ruleHourValue ) )? ( (lv_minv_5_0= ruleMinuteValue ) )? ( (lv_secv_6_0= ruleSecondValue ) )? ( (lv_msecv_7_0= ruleMillisecondValue ) )? ) | ( ( (lv_mv_8_0= ruleMonthValue ) ) ( (lv_wv_9_0= ruleWeekValue ) )? ( (lv_dv_10_0= ruleDayValue ) )? ( (lv_hv_11_0= ruleHourValue ) )? ( (lv_minv_12_0= ruleMinuteValue ) )? ( (lv_secv_13_0= ruleSecondValue ) )? ( (lv_msecv_14_0= ruleMillisecondValue ) )? ) | ( ( (lv_wv_15_0= ruleWeekValue ) ) ( (lv_dv_16_0= ruleDayValue ) )? ( (lv_hv_17_0= ruleHourValue ) )? ( (lv_minv_18_0= ruleMinuteValue ) )? ( (lv_secv_19_0= ruleSecondValue ) )? ( (lv_msecv_20_0= ruleMillisecondValue ) )? ) | ( ( (lv_dv_21_0= ruleDayValue ) ) ( (lv_hv_22_0= ruleHourValue ) )? ( (lv_minv_23_0= ruleMinuteValue ) )? ( (lv_secv_24_0= ruleSecondValue ) )? ( (lv_msecv_25_0= ruleMillisecondValue ) )? ) | ( ( (lv_hv_26_0= ruleHourValue ) ) ( (lv_minv_27_0= ruleMinuteValue ) )? ( (lv_secv_28_0= ruleSecondValue ) )? ( (lv_msecv_29_0= ruleMillisecondValue ) )? ) | ( ( (lv_minv_30_0= ruleMinuteValue ) ) ( (lv_secv_31_0= ruleSecondValue ) )? ( (lv_msecv_32_0= ruleMillisecondValue ) )? ) | ( ( (lv_sv_33_0= ruleSecondValue ) ) ( (lv_msecv_34_0= ruleMillisecondValue ) )? ) | ( (lv_msecv_35_0= ruleMillisecondValue ) ) )";
        }
    }
    static final String dfa_102s = "\1\2\3\uffff";
    static final String dfa_103s = "\1\22\1\5\2\uffff";
    static final String dfa_104s = "\1\174\1\167\2\uffff";
    static final String dfa_105s = "\2\uffff\1\2\1\1";
    static final String[] dfa_106s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\3\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\1\3\3\uffff\1\2\14\uffff\1\2\1\uffff\1\3\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\10\uffff\1\2\6\uffff\1\2\3\uffff\1\2\3\uffff\1\2\50\uffff\1\1",
            "",
            ""
    };
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "13760:4: ( (lv_mv_1_0= ruleMonthValue ) )?";
        }
    }
    static final String[] dfa_107s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\3\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\14\uffff\1\2\5\uffff\1\3\2\uffff\1\2\2\uffff\1\2\10\uffff\1\3\6\uffff\1\2\3\uffff\1\2\3\uffff\1\2\50\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "13779:4: ( (lv_wv_2_0= ruleWeekValue ) )?";
        }
    }
    static final String[] dfa_108s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\3\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\14\uffff\1\2\10\uffff\1\3\2\uffff\1\2\17\uffff\1\3\3\uffff\1\2\3\uffff\1\2\50\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "13798:4: ( (lv_dv_3_0= ruleDayValue ) )?";
        }
    }
    static final String[] dfa_109s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\3\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\14\uffff\1\3\13\uffff\1\3\23\uffff\1\2\3\uffff\1\2\50\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_109 = unpackEncodedStringArray(dfa_109s);

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "13817:4: ( (lv_hv_4_0= ruleHourValue ) )?";
        }
    }
    static final String[] dfa_110s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\3\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\3\uffff\1\3\1\2\7\uffff\1\3\4\uffff\1\2\54\uffff\1\3\3\uffff\1\2\50\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "13836:4: ( (lv_minv_5_0= ruleMinuteValue ) )?";
        }
    }
    static final String[] dfa_111s = {
            "\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\20\uffff\1\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\3\uffff\6\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\5\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\1\4\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\4\uffff\1\3\14\uffff\1\3\60\uffff\1\3\50\uffff\1\1",
            "",
            ""
    };
    static final short[][] dfa_111 = unpackEncodedStringArray(dfa_111s);

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "13855:4: ( (lv_secv_6_0= ruleSecondValue ) )?";
        }
    }

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "13915:4: ( (lv_wv_9_0= ruleWeekValue ) )?";
        }
    }

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "13934:4: ( (lv_dv_10_0= ruleDayValue ) )?";
        }
    }

    class DFA180 extends DFA {

        public DFA180(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 180;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "13953:4: ( (lv_hv_11_0= ruleHourValue ) )?";
        }
    }

    class DFA181 extends DFA {

        public DFA181(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 181;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "13972:4: ( (lv_minv_12_0= ruleMinuteValue ) )?";
        }
    }

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "13991:4: ( (lv_secv_13_0= ruleSecondValue ) )?";
        }
    }

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "14051:4: ( (lv_dv_16_0= ruleDayValue ) )?";
        }
    }

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "14070:4: ( (lv_hv_17_0= ruleHourValue ) )?";
        }
    }

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "14089:4: ( (lv_minv_18_0= ruleMinuteValue ) )?";
        }
    }

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "14108:4: ( (lv_secv_19_0= ruleSecondValue ) )?";
        }
    }

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "14168:4: ( (lv_hv_22_0= ruleHourValue ) )?";
        }
    }

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "14187:4: ( (lv_minv_23_0= ruleMinuteValue ) )?";
        }
    }

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "14206:4: ( (lv_secv_24_0= ruleSecondValue ) )?";
        }
    }

    class DFA193 extends DFA {

        public DFA193(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 193;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "14266:4: ( (lv_minv_27_0= ruleMinuteValue ) )?";
        }
    }

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "14285:4: ( (lv_secv_28_0= ruleSecondValue ) )?";
        }
    }

    class DFA196 extends DFA {

        public DFA196(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 196;
            this.eot = dfa_14;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_18;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "14345:4: ( (lv_secv_31_0= ruleSecondValue ) )?";
        }
    }
    static final String dfa_112s = "\65\uffff";
    static final String dfa_113s = "\6\uffff\1\35\2\uffff\1\60\53\uffff";
    static final String dfa_114s = "\2\145\1\uffff\1\160\1\142\1\uffff\1\22\2\167\1\22\1\142\1\0\43\uffff\1\0\1\uffff\2\167\1\160\1\uffff";
    static final String dfa_115s = "\2\167\1\uffff\2\167\1\uffff\1\174\2\167\1\174\1\167\1\0\43\uffff\1\0\1\uffff\3\167\1\uffff";
    static final String dfa_116s = "\2\uffff\1\3\2\uffff\1\1\6\uffff\43\3\1\uffff\1\2\3\uffff\1\1";
    static final String dfa_117s = "\1\0\1\5\1\uffff\1\3\2\uffff\1\1\4\uffff\1\4\43\uffff\1\6\3\uffff\1\2\1\uffff}>";
    static final String[] dfa_118s = {
            "\1\2\21\uffff\1\1",
            "\1\3\12\uffff\1\5\1\4\5\uffff\1\1",
            "",
            "\1\5\1\4\5\uffff\1\6",
            "\1\10\1\uffff\1\7\22\uffff\1\11",
            "",
            "\1\40\1\47\3\uffff\1\46\3\uffff\1\45\1\51\1\uffff\1\53\2\uffff\1\50\1\uffff\1\52\20\uffff\1\41\17\uffff\1\30\2\uffff\1\42\4\uffff\1\54\3\uffff\1\22\1\uffff\1\24\1\21\1\23\1\32\2\uffff\1\27\1\uffff\1\34\1\44\1\31\1\uffff\1\16\1\uffff\1\56\1\14\1\17\1\43\1\20\1\uffff\1\15\1\uffff\1\36\1\26\1\uffff\1\25\1\uffff\1\37\1\uffff\1\55\1\13\1\12\5\uffff\1\6\4\uffff\1\33",
            "\1\11",
            "\1\11",
            "\2\60\3\uffff\1\60\3\uffff\2\60\1\uffff\1\60\2\uffff\1\60\1\uffff\1\60\20\uffff\1\60\17\uffff\1\60\2\uffff\1\60\4\uffff\1\60\3\uffff\1\60\1\uffff\4\60\2\uffff\1\60\1\uffff\3\60\1\uffff\1\60\1\uffff\5\60\1\uffff\1\60\1\uffff\2\60\1\uffff\1\60\1\uffff\1\60\1\uffff\1\60\1\57\6\uffff\1\11\4\uffff\1\60",
            "\1\62\1\uffff\1\61\22\uffff\1\63",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\63",
            "\1\63",
            "\1\5\6\uffff\1\64",
            ""
    };

    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA220 extends DFA {

        public DFA220(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 220;
            this.eot = dfa_112;
            this.eof = dfa_113;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "14854:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_8_0= ruleD ) ) ) ) | ( () ( ruleDIGIT )+ (otherlv_11= FullStop ( ruleDIGIT )* )? ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ ( (lv_d_17_0= ruleD ) )? ) | ( ( ( () ( ruleDIGIT )* FullStop ( ruleDIGIT )+ ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleD ) )? ) )=> ( () ( ruleDIGIT )* otherlv_20= FullStop ( ruleDIGIT )+ ( ( (lv_e_22_0= ruleE ) ) (otherlv_23= HyphenMinus | otherlv_24= PlusSign )? ( ruleDIGIT )+ )? ( (lv_d_26_0= ruleD ) )? ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA220_0 = input.LA(1);

                         
                        int index220_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA220_0==RULE_INT) ) {s = 1;}

                        else if ( (LA220_0==FullStop) && (synpred112_InternalSiddhiParser())) {s = 2;}

                         
                        input.seek(index220_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA220_6 = input.LA(1);

                         
                        int index220_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA220_6==E) ) {s = 10;}

                        else if ( (LA220_6==D) ) {s = 11;}

                        else if ( (LA220_6==Asterisk) && (synpred112_InternalSiddhiParser())) {s = 12;}

                        else if ( (LA220_6==Solidus) && (synpred112_InternalSiddhiParser())) {s = 13;}

                        else if ( (LA220_6==PercentSign) && (synpred112_InternalSiddhiParser())) {s = 14;}

                        else if ( (LA220_6==PlusSign) && (synpred112_InternalSiddhiParser())) {s = 15;}

                        else if ( (LA220_6==HyphenMinus) && (synpred112_InternalSiddhiParser())) {s = 16;}

                        else if ( (LA220_6==EqualsSignEqualsSign) && (synpred112_InternalSiddhiParser())) {s = 17;}

                        else if ( (LA220_6==ExclamationMarkEqualsSign) && (synpred112_InternalSiddhiParser())) {s = 18;}

                        else if ( (LA220_6==GreaterThanSignEqualsSign) && (synpred112_InternalSiddhiParser())) {s = 19;}

                        else if ( (LA220_6==LessThanSignEqualsSign) && (synpred112_InternalSiddhiParser())) {s = 20;}

                        else if ( (LA220_6==GreaterThanSign) && (synpred112_InternalSiddhiParser())) {s = 21;}

                        else if ( (LA220_6==LessThanSign) && (synpred112_InternalSiddhiParser())) {s = 22;}

                        else if ( (LA220_6==In) && (synpred112_InternalSiddhiParser())) {s = 23;}

                        else if ( (LA220_6==And) && (synpred112_InternalSiddhiParser())) {s = 24;}

                        else if ( (LA220_6==Or) && (synpred112_InternalSiddhiParser())) {s = 25;}

                        else if ( (LA220_6==As) && (synpred112_InternalSiddhiParser())) {s = 26;}

                        else if ( (LA220_6==RULE_STRING) && (synpred112_InternalSiddhiParser())) {s = 27;}

                        else if ( (LA220_6==Of) && (synpred112_InternalSiddhiParser())) {s = 28;}

                        else if ( (LA220_6==EOF) && (synpred112_InternalSiddhiParser())) {s = 29;}

                        else if ( (LA220_6==Semicolon) && (synpred112_InternalSiddhiParser())) {s = 30;}

                        else if ( (LA220_6==CommercialAt) && (synpred112_InternalSiddhiParser())) {s = 31;}

                        else if ( (LA220_6==Define) && (synpred112_InternalSiddhiParser())) {s = 32;}

                        else if ( (LA220_6==From) && (synpred112_InternalSiddhiParser())) {s = 33;}

                        else if ( (LA220_6==End) && (synpred112_InternalSiddhiParser())) {s = 34;}

                        else if ( (LA220_6==Comma) && (synpred112_InternalSiddhiParser())) {s = 35;}

                        else if ( (LA220_6==On) && (synpred112_InternalSiddhiParser())) {s = 36;}

                        else if ( (LA220_6==Output) && (synpred112_InternalSiddhiParser())) {s = 37;}

                        else if ( (LA220_6==Insert) && (synpred112_InternalSiddhiParser())) {s = 38;}

                        else if ( (LA220_6==Delete) && (synpred112_InternalSiddhiParser())) {s = 39;}

                        else if ( (LA220_6==Update) && (synpred112_InternalSiddhiParser())) {s = 40;}

                        else if ( (LA220_6==Return) && (synpred112_InternalSiddhiParser())) {s = 41;}

                        else if ( (LA220_6==Within) && (synpred112_InternalSiddhiParser())) {s = 42;}

                        else if ( (LA220_6==Select) && (synpred112_InternalSiddhiParser())) {s = 43;}

                        else if ( (LA220_6==Per) && (synpred112_InternalSiddhiParser())) {s = 44;}

                        else if ( (LA220_6==RightSquareBracket) && (synpred112_InternalSiddhiParser())) {s = 45;}

                        else if ( (LA220_6==RightParenthesis) && (synpred112_InternalSiddhiParser())) {s = 46;}

                        else if ( (LA220_6==RULE_INT) ) {s = 6;}

                         
                        input.seek(index220_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA220_51 = input.LA(1);

                         
                        int index220_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA220_51==D) && (synpred111_InternalSiddhiParser())) {s = 5;}

                        else if ( (LA220_51==RULE_INT) && (synpred111_InternalSiddhiParser())) {s = 52;}

                        else if ( (true) ) {s = 48;}

                        else if ( (synpred112_InternalSiddhiParser()) ) {s = 46;}

                         
                        input.seek(index220_51);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA220_3 = input.LA(1);

                         
                        int index220_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA220_3==RULE_INT) ) {s = 6;}

                        else if ( (LA220_3==E) ) {s = 4;}

                        else if ( (LA220_3==D) && (synpred111_InternalSiddhiParser())) {s = 5;}

                         
                        input.seek(index220_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA220_11 = input.LA(1);

                         
                        int index220_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (synpred112_InternalSiddhiParser()) ) {s = 46;}

                         
                        input.seek(index220_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA220_1 = input.LA(1);

                         
                        int index220_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA220_1==FullStop) ) {s = 3;}

                        else if ( (LA220_1==RULE_INT) ) {s = 1;}

                        else if ( (LA220_1==E) ) {s = 4;}

                        else if ( (LA220_1==D) && (synpred111_InternalSiddhiParser())) {s = 5;}

                         
                        input.seek(index220_1);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA220_47 = input.LA(1);

                         
                        int index220_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (true) ) {s = 48;}

                         
                        input.seek(index220_47);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 220, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_119s = "\2\145\1\uffff\1\161\2\uffff\1\161\1\142\1\0\2\167\1\162";
    static final String dfa_120s = "\2\167\1\uffff\1\167\2\uffff\2\167\1\0\3\167";
    static final String dfa_121s = "\2\uffff\1\2\1\uffff\2\1\6\uffff";
    static final String dfa_122s = "\1\uffff\1\1\1\uffff\1\2\4\uffff\1\0\3\uffff}>";
    static final String[] dfa_123s = {
            "\1\2\21\uffff\1\1",
            "\1\3\13\uffff\1\4\1\5\4\uffff\1\1",
            "",
            "\1\4\1\5\4\uffff\1\6",
            "",
            "",
            "\1\7\1\10\4\uffff\1\6",
            "\1\12\1\uffff\1\11\22\uffff\1\13",
            "\1\uffff",
            "\1\13",
            "\1\13",
            "\1\10\4\uffff\1\13"
    };
    static final char[] dfa_119 = DFA.unpackEncodedStringToUnsignedChars(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[][] dfa_123 = unpackEncodedStringArray(dfa_123s);

    class DFA232 extends DFA {

        public DFA232(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 232;
            this.eot = dfa_51;
            this.eof = dfa_51;
            this.min = dfa_119;
            this.max = dfa_120;
            this.accept = dfa_121;
            this.special = dfa_122;
            this.transition = dfa_123;
        }
        public String getDescription() {
            return "15220:2: ( ( ( ( () ( ruleDIGIT )+ ( FullStop ( ruleDIGIT )* )? ( ( ( ruleE ) ) ( HyphenMinus | PlusSign )? ( ruleDIGIT )+ )? ( ( ruleF ) ) ) )=> ( () ( ruleDIGIT )+ (otherlv_2= FullStop ( ruleDIGIT )* )? ( ( (lv_e_4_0= ruleE ) ) (otherlv_5= HyphenMinus | otherlv_6= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_8_0= ruleF ) ) ) ) | ( () ( ruleDIGIT )* otherlv_11= FullStop ( ruleDIGIT )+ ( ( (lv_e_13_0= ruleE ) ) (otherlv_14= HyphenMinus | otherlv_15= PlusSign )? ( ruleDIGIT )+ )? ( (lv_f_17_0= ruleF ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA232_8 = input.LA(1);

                         
                        int index232_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalSiddhiParser()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index232_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA232_1 = input.LA(1);

                         
                        int index232_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA232_1==FullStop) ) {s = 3;}

                        else if ( (LA232_1==E) && (synpred113_InternalSiddhiParser())) {s = 4;}

                        else if ( (LA232_1==F) && (synpred113_InternalSiddhiParser())) {s = 5;}

                        else if ( (LA232_1==RULE_INT) ) {s = 1;}

                         
                        input.seek(index232_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA232_3 = input.LA(1);

                         
                        int index232_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA232_3==RULE_INT) ) {s = 6;}

                        else if ( (LA232_3==E) && (synpred113_InternalSiddhiParser())) {s = 4;}

                        else if ( (LA232_3==F) && (synpred113_InternalSiddhiParser())) {s = 5;}

                         
                        input.seek(index232_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 232, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000040002L,0x0000200000000000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000040000L,0x0000210000000000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0010000000000200L,0x0000200000000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040000L,0x0000200000000000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0040000020000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0xDFFFFFFFFFFDFAB0L,0x004020003EA06FDBL});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000900000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000800000000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000206000L,0x0000000000000008L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000002000000000L,0x1000000000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0804010104100000L,0x0000000000000200L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000002000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x804B140023018000L,0x0000000000004442L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0xDFFFFFFFFFFDFAB0L,0x104020003EA06FDBL});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000002L,0x000000B000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000200L,0x0000200000000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xDFFFFFFFFFFDFAB0L,0x10C02034BEA06FDBL});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0010000000000200L,0x0000210000000080L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000002000000002L,0x1000000000200000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000002000000002L,0x1000000000000000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0010002000000200L,0x00402000A0000800L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0080000000206000L,0x0000000000000008L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000100L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0040000030000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000008008100L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000008008000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000206002L,0x0000000000000008L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x020000A000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0xDFFFFFFFFFFDFAB0L,0x10C02036BEA06FDBL});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000020000000002L,0x0000000800000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000002000000000L,0x00400000A0000800L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000800000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000120600000000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0080008000000000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000058000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000018000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000002000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000800000002L,0x0000000008000000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0520680000000000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0000000020200000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000002L,0x0000400020000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000400020000000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000010L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x00000A0000140000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000090000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000001400000000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000004240000000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0200000000000000L,0x0080000000000000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0200000000000000L,0x0080002020000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000002020000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0200000000000000L,0x0080002000000000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0xDFFFFFFFFFFDFAB0L,0x10C0203FBEA06FDBL});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0080003400000000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0080001400000000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0002000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000100002000000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x8001000000000000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0040040000000000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000001008000L,0x0000000000000400L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000020010000L,0x0000000000004000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x00000000000008A0L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0083002000000000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0082002000000000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0082000000000000L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000002L,0x0083002000000000L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0080002000000000L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0086002000000000L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0088000000000000L});
    }


}