/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Logical Absent Stateful Source</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getLogicalAbsStatefulSrc <em>Logical Abs Stateful Src</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getStdSource <em>Std Source</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getAnd <em>And</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getNot <em>Not</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBs <em>Bs</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBasicAbsentPatternSource1 <em>Basic Absent Pattern Source1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBasicAbsentPatternSource2 <em>Basic Absent Pattern Source2</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBasicAbsentPatternSource <em>Basic Absent Pattern Source</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getO <em>O</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource()
 * @model
 * @generated
 */
public interface LogicalAbsentStatefulSource extends SequenceSource
{
  /**
   * Returns the value of the '<em><b>Logical Abs Stateful Src</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Logical Abs Stateful Src</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Logical Abs Stateful Src</em>' containment reference.
   * @see #setLogicalAbsStatefulSrc(LogicalAbsentStatefulSource)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_LogicalAbsStatefulSrc()
   * @model containment="true"
   * @generated
   */
  LogicalAbsentStatefulSource getLogicalAbsStatefulSrc();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getLogicalAbsStatefulSrc <em>Logical Abs Stateful Src</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Logical Abs Stateful Src</em>' containment reference.
   * @see #getLogicalAbsStatefulSrc()
   * @generated
   */
  void setLogicalAbsStatefulSrc(LogicalAbsentStatefulSource value);

  /**
   * Returns the value of the '<em><b>Std Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Std Source</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Std Source</em>' containment reference.
   * @see #setStdSource(StandardStatefulSource)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_StdSource()
   * @model containment="true"
   * @generated
   */
  StandardStatefulSource getStdSource();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getStdSource <em>Std Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Std Source</em>' containment reference.
   * @see #getStdSource()
   * @generated
   */
  void setStdSource(StandardStatefulSource value);

  /**
   * Returns the value of the '<em><b>And</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>And</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>And</em>' containment reference.
   * @see #setAnd(AND)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_And()
   * @model containment="true"
   * @generated
   */
  AND getAnd();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getAnd <em>And</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>And</em>' containment reference.
   * @see #getAnd()
   * @generated
   */
  void setAnd(AND value);

  /**
   * Returns the value of the '<em><b>Not</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Not</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Not</em>' containment reference.
   * @see #setNot(NOT)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_Not()
   * @model containment="true"
   * @generated
   */
  NOT getNot();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getNot <em>Not</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Not</em>' containment reference.
   * @see #getNot()
   * @generated
   */
  void setNot(NOT value);

  /**
   * Returns the value of the '<em><b>Bs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Bs</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bs</em>' containment reference.
   * @see #setBs(BasicSource)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_Bs()
   * @model containment="true"
   * @generated
   */
  BasicSource getBs();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBs <em>Bs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bs</em>' containment reference.
   * @see #getBs()
   * @generated
   */
  void setBs(BasicSource value);

  /**
   * Returns the value of the '<em><b>Basic Absent Pattern Source1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Basic Absent Pattern Source1</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Basic Absent Pattern Source1</em>' containment reference.
   * @see #setBasicAbsentPatternSource1(BasicAbsentPatternSource)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_BasicAbsentPatternSource1()
   * @model containment="true"
   * @generated
   */
  BasicAbsentPatternSource getBasicAbsentPatternSource1();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBasicAbsentPatternSource1 <em>Basic Absent Pattern Source1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Basic Absent Pattern Source1</em>' containment reference.
   * @see #getBasicAbsentPatternSource1()
   * @generated
   */
  void setBasicAbsentPatternSource1(BasicAbsentPatternSource value);

  /**
   * Returns the value of the '<em><b>Basic Absent Pattern Source2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Basic Absent Pattern Source2</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Basic Absent Pattern Source2</em>' containment reference.
   * @see #setBasicAbsentPatternSource2(BasicAbsentPatternSource)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_BasicAbsentPatternSource2()
   * @model containment="true"
   * @generated
   */
  BasicAbsentPatternSource getBasicAbsentPatternSource2();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBasicAbsentPatternSource2 <em>Basic Absent Pattern Source2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Basic Absent Pattern Source2</em>' containment reference.
   * @see #getBasicAbsentPatternSource2()
   * @generated
   */
  void setBasicAbsentPatternSource2(BasicAbsentPatternSource value);

  /**
   * Returns the value of the '<em><b>Basic Absent Pattern Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Basic Absent Pattern Source</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Basic Absent Pattern Source</em>' containment reference.
   * @see #setBasicAbsentPatternSource(BasicAbsentPatternSource)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_BasicAbsentPatternSource()
   * @model containment="true"
   * @generated
   */
  BasicAbsentPatternSource getBasicAbsentPatternSource();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getBasicAbsentPatternSource <em>Basic Absent Pattern Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Basic Absent Pattern Source</em>' containment reference.
   * @see #getBasicAbsentPatternSource()
   * @generated
   */
  void setBasicAbsentPatternSource(BasicAbsentPatternSource value);

  /**
   * Returns the value of the '<em><b>O</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>O</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>O</em>' containment reference.
   * @see #setO(OR)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getLogicalAbsentStatefulSource_O()
   * @model containment="true"
   * @generated
   */
  OR getO();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.LogicalAbsentStatefulSource#getO <em>O</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>O</em>' containment reference.
   * @see #getO()
   * @generated
   */
  void setO(OR value);

} // LogicalAbsentStatefulSource
