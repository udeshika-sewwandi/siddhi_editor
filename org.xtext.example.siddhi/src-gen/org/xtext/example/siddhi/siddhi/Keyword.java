/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Keyword</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getA <em>A</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getEvery <em>Every</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getUni <em>Uni</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getOn <em>On</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getAnd <em>And</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getOr <em>Or</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getNot <em>Not</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.Keyword#getOf <em>Of</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword()
 * @model
 * @generated
 */
public interface Keyword extends Name, STREAM, DEFINE, FROM, SELECT, INSERT, INTO, ALL, EVENTS, TABLE, WINDOW, OUTPUT, RAW, EXPIRED, CURRENT, RETURN, PARTITION, WITHIN, LEFT, RIGHT, FULL, JOIN, OUTER, INNER, YEARS, MONTHS, WEEKS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, STRINGS, INTS, LONG, FLOAT, DOUBLE, BOOL, OBJECT, IS, NULL, SNAPSHOT, LAST, FIRST, GROUP, BY, HAVING, WITH, BEGIN, END, DELETE, FOR, TRUE, FALSE, UPDATE
{
  /**
   * Returns the value of the '<em><b>A</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>A</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>A</em>' containment reference.
   * @see #setA(AS)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_A()
   * @model containment="true"
   * @generated
   */
  AS getA();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getA <em>A</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>A</em>' containment reference.
   * @see #getA()
   * @generated
   */
  void setA(AS value);

  /**
   * Returns the value of the '<em><b>Every</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Every</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Every</em>' containment reference.
   * @see #setEvery(EVERY)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_Every()
   * @model containment="true"
   * @generated
   */
  EVERY getEvery();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getEvery <em>Every</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Every</em>' containment reference.
   * @see #getEvery()
   * @generated
   */
  void setEvery(EVERY value);

  /**
   * Returns the value of the '<em><b>Uni</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Uni</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Uni</em>' containment reference.
   * @see #setUni(UNIDIRECTIONAL)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_Uni()
   * @model containment="true"
   * @generated
   */
  UNIDIRECTIONAL getUni();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getUni <em>Uni</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Uni</em>' containment reference.
   * @see #getUni()
   * @generated
   */
  void setUni(UNIDIRECTIONAL value);

  /**
   * Returns the value of the '<em><b>On</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>On</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>On</em>' containment reference.
   * @see #setOn(ON)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_On()
   * @model containment="true"
   * @generated
   */
  ON getOn();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getOn <em>On</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>On</em>' containment reference.
   * @see #getOn()
   * @generated
   */
  void setOn(ON value);

  /**
   * Returns the value of the '<em><b>And</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>And</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>And</em>' containment reference.
   * @see #setAnd(AND)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_And()
   * @model containment="true"
   * @generated
   */
  AND getAnd();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getAnd <em>And</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>And</em>' containment reference.
   * @see #getAnd()
   * @generated
   */
  void setAnd(AND value);

  /**
   * Returns the value of the '<em><b>Or</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Or</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Or</em>' containment reference.
   * @see #setOr(OR)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_Or()
   * @model containment="true"
   * @generated
   */
  OR getOr();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getOr <em>Or</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Or</em>' containment reference.
   * @see #getOr()
   * @generated
   */
  void setOr(OR value);

  /**
   * Returns the value of the '<em><b>Not</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Not</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Not</em>' containment reference.
   * @see #setNot(NOT)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_Not()
   * @model containment="true"
   * @generated
   */
  NOT getNot();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getNot <em>Not</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Not</em>' containment reference.
   * @see #getNot()
   * @generated
   */
  void setNot(NOT value);

  /**
   * Returns the value of the '<em><b>Of</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Of</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Of</em>' containment reference.
   * @see #setOf(OF)
   * @see org.xtext.example.siddhi.siddhi.SiddhiPackage#getKeyword_Of()
   * @model containment="true"
   * @generated
   */
  OF getOf();

  /**
   * Sets the value of the '{@link org.xtext.example.siddhi.siddhi.Keyword#getOf <em>Of</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Of</em>' containment reference.
   * @see #getOf()
   * @generated
   */
  void setOf(OF value);

} // Keyword
