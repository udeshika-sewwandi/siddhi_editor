/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.siddhi.siddhi.EveryAbsentPatternSource;
import org.xtext.example.siddhi.siddhi.EveryPatternSourceChain;
import org.xtext.example.siddhi.siddhi.RightAbsentPatternSource;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.WithinTime;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Right Absent Pattern Source</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentPatternSourceImpl#getLeft1 <em>Left1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentPatternSourceImpl#getFb2 <em>Fb2</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentPatternSourceImpl#getRight1 <em>Right1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentPatternSourceImpl#getRightAbsPS <em>Right Abs PS</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentPatternSourceImpl#getWt3 <em>Wt3</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentPatternSourceImpl#getEveryPSC1 <em>Every PSC1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentPatternSourceImpl#getEveryAbsPS1 <em>Every Abs PS1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RightAbsentPatternSourceImpl extends AbsentPatternSourceChainImpl implements RightAbsentPatternSource
{
  /**
   * The cached value of the '{@link #getLeft1() <em>Left1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft1()
   * @generated
   * @ordered
   */
  protected RightAbsentPatternSource left1;

  /**
   * The default value of the '{@link #getFb2() <em>Fb2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFb2()
   * @generated
   * @ordered
   */
  protected static final String FB2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFb2() <em>Fb2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFb2()
   * @generated
   * @ordered
   */
  protected String fb2 = FB2_EDEFAULT;

  /**
   * The cached value of the '{@link #getRight1() <em>Right1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight1()
   * @generated
   * @ordered
   */
  protected RightAbsentPatternSource right1;

  /**
   * The cached value of the '{@link #getRightAbsPS() <em>Right Abs PS</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightAbsPS()
   * @generated
   * @ordered
   */
  protected RightAbsentPatternSource rightAbsPS;

  /**
   * The cached value of the '{@link #getWt3() <em>Wt3</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWt3()
   * @generated
   * @ordered
   */
  protected EList<WithinTime> wt3;

  /**
   * The cached value of the '{@link #getEveryPSC1() <em>Every PSC1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEveryPSC1()
   * @generated
   * @ordered
   */
  protected EveryPatternSourceChain everyPSC1;

  /**
   * The cached value of the '{@link #getEveryAbsPS1() <em>Every Abs PS1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEveryAbsPS1()
   * @generated
   * @ordered
   */
  protected EveryAbsentPatternSource everyAbsPS1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RightAbsentPatternSourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getRightAbsentPatternSource();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource getLeft1()
  {
    return left1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft1(RightAbsentPatternSource newLeft1, NotificationChain msgs)
  {
    RightAbsentPatternSource oldLeft1 = left1;
    left1 = newLeft1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1, oldLeft1, newLeft1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft1(RightAbsentPatternSource newLeft1)
  {
    if (newLeft1 != left1)
    {
      NotificationChain msgs = null;
      if (left1 != null)
        msgs = ((InternalEObject)left1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1, null, msgs);
      if (newLeft1 != null)
        msgs = ((InternalEObject)newLeft1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1, null, msgs);
      msgs = basicSetLeft1(newLeft1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1, newLeft1, newLeft1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFb2()
  {
    return fb2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFb2(String newFb2)
  {
    String oldFb2 = fb2;
    fb2 = newFb2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__FB2, oldFb2, fb2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource getRight1()
  {
    return right1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRight1(RightAbsentPatternSource newRight1, NotificationChain msgs)
  {
    RightAbsentPatternSource oldRight1 = right1;
    right1 = newRight1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1, oldRight1, newRight1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight1(RightAbsentPatternSource newRight1)
  {
    if (newRight1 != right1)
    {
      NotificationChain msgs = null;
      if (right1 != null)
        msgs = ((InternalEObject)right1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1, null, msgs);
      if (newRight1 != null)
        msgs = ((InternalEObject)newRight1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1, null, msgs);
      msgs = basicSetRight1(newRight1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1, newRight1, newRight1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource getRightAbsPS()
  {
    return rightAbsPS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRightAbsPS(RightAbsentPatternSource newRightAbsPS, NotificationChain msgs)
  {
    RightAbsentPatternSource oldRightAbsPS = rightAbsPS;
    rightAbsPS = newRightAbsPS;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS, oldRightAbsPS, newRightAbsPS);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRightAbsPS(RightAbsentPatternSource newRightAbsPS)
  {
    if (newRightAbsPS != rightAbsPS)
    {
      NotificationChain msgs = null;
      if (rightAbsPS != null)
        msgs = ((InternalEObject)rightAbsPS).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS, null, msgs);
      if (newRightAbsPS != null)
        msgs = ((InternalEObject)newRightAbsPS).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS, null, msgs);
      msgs = basicSetRightAbsPS(newRightAbsPS, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS, newRightAbsPS, newRightAbsPS));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<WithinTime> getWt3()
  {
    if (wt3 == null)
    {
      wt3 = new EObjectContainmentEList<WithinTime>(WithinTime.class, this, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3);
    }
    return wt3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryPatternSourceChain getEveryPSC1()
  {
    return everyPSC1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEveryPSC1(EveryPatternSourceChain newEveryPSC1, NotificationChain msgs)
  {
    EveryPatternSourceChain oldEveryPSC1 = everyPSC1;
    everyPSC1 = newEveryPSC1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1, oldEveryPSC1, newEveryPSC1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEveryPSC1(EveryPatternSourceChain newEveryPSC1)
  {
    if (newEveryPSC1 != everyPSC1)
    {
      NotificationChain msgs = null;
      if (everyPSC1 != null)
        msgs = ((InternalEObject)everyPSC1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1, null, msgs);
      if (newEveryPSC1 != null)
        msgs = ((InternalEObject)newEveryPSC1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1, null, msgs);
      msgs = basicSetEveryPSC1(newEveryPSC1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1, newEveryPSC1, newEveryPSC1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryAbsentPatternSource getEveryAbsPS1()
  {
    return everyAbsPS1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEveryAbsPS1(EveryAbsentPatternSource newEveryAbsPS1, NotificationChain msgs)
  {
    EveryAbsentPatternSource oldEveryAbsPS1 = everyAbsPS1;
    everyAbsPS1 = newEveryAbsPS1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1, oldEveryAbsPS1, newEveryAbsPS1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEveryAbsPS1(EveryAbsentPatternSource newEveryAbsPS1)
  {
    if (newEveryAbsPS1 != everyAbsPS1)
    {
      NotificationChain msgs = null;
      if (everyAbsPS1 != null)
        msgs = ((InternalEObject)everyAbsPS1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1, null, msgs);
      if (newEveryAbsPS1 != null)
        msgs = ((InternalEObject)newEveryAbsPS1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1, null, msgs);
      msgs = basicSetEveryAbsPS1(newEveryAbsPS1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1, newEveryAbsPS1, newEveryAbsPS1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1:
        return basicSetLeft1(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1:
        return basicSetRight1(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS:
        return basicSetRightAbsPS(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3:
        return ((InternalEList<?>)getWt3()).basicRemove(otherEnd, msgs);
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1:
        return basicSetEveryPSC1(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1:
        return basicSetEveryAbsPS1(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1:
        return getLeft1();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__FB2:
        return getFb2();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1:
        return getRight1();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS:
        return getRightAbsPS();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3:
        return getWt3();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1:
        return getEveryPSC1();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1:
        return getEveryAbsPS1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1:
        setLeft1((RightAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__FB2:
        setFb2((String)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1:
        setRight1((RightAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS:
        setRightAbsPS((RightAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3:
        getWt3().clear();
        getWt3().addAll((Collection<? extends WithinTime>)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1:
        setEveryPSC1((EveryPatternSourceChain)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1:
        setEveryAbsPS1((EveryAbsentPatternSource)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1:
        setLeft1((RightAbsentPatternSource)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__FB2:
        setFb2(FB2_EDEFAULT);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1:
        setRight1((RightAbsentPatternSource)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS:
        setRightAbsPS((RightAbsentPatternSource)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3:
        getWt3().clear();
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1:
        setEveryPSC1((EveryPatternSourceChain)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1:
        setEveryAbsPS1((EveryAbsentPatternSource)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1:
        return left1 != null;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__FB2:
        return FB2_EDEFAULT == null ? fb2 != null : !FB2_EDEFAULT.equals(fb2);
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1:
        return right1 != null;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS:
        return rightAbsPS != null;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3:
        return wt3 != null && !wt3.isEmpty();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1:
        return everyPSC1 != null;
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1:
        return everyAbsPS1 != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (fb2: ");
    result.append(fb2);
    result.append(')');
    return result.toString();
  }

} //RightAbsentPatternSourceImpl
