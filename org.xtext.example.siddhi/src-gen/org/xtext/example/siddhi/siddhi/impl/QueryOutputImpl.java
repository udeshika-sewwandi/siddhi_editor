/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.siddhi.siddhi.DELETE;
import org.xtext.example.siddhi.siddhi.Expression;
import org.xtext.example.siddhi.siddhi.FOR;
import org.xtext.example.siddhi.siddhi.INTO;
import org.xtext.example.siddhi.siddhi.ON;
import org.xtext.example.siddhi.siddhi.OR;
import org.xtext.example.siddhi.siddhi.OutputEventType;
import org.xtext.example.siddhi.siddhi.QueryOutput;
import org.xtext.example.siddhi.siddhi.RETURN;
import org.xtext.example.siddhi.siddhi.SetClause;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.Source1;
import org.xtext.example.siddhi.siddhi.UPDATE;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Query Output</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getInto <em>Into</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getDelete <em>Delete</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getFor <em>For</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getUpdate <em>Update</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getReturn <em>Return</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getOutEventType <em>Out Event Type</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getTar <em>Tar</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getOn <em>On</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getExpr <em>Expr</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getOr <em>Or</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.QueryOutputImpl#getSetClause <em>Set Clause</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QueryOutputImpl extends INSERTImpl implements QueryOutput
{
  /**
   * The default value of the '{@link #getInto() <em>Into</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInto()
   * @generated
   * @ordered
   */
  protected static final String INTO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInto() <em>Into</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInto()
   * @generated
   * @ordered
   */
  protected String into = INTO_EDEFAULT;

  /**
   * The default value of the '{@link #getDelete() <em>Delete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelete()
   * @generated
   * @ordered
   */
  protected static final String DELETE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDelete() <em>Delete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelete()
   * @generated
   * @ordered
   */
  protected String delete = DELETE_EDEFAULT;

  /**
   * The default value of the '{@link #getFor() <em>For</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFor()
   * @generated
   * @ordered
   */
  protected static final String FOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFor() <em>For</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFor()
   * @generated
   * @ordered
   */
  protected String for_ = FOR_EDEFAULT;

  /**
   * The default value of the '{@link #getUpdate() <em>Update</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdate()
   * @generated
   * @ordered
   */
  protected static final String UPDATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUpdate() <em>Update</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdate()
   * @generated
   * @ordered
   */
  protected String update = UPDATE_EDEFAULT;

  /**
   * The default value of the '{@link #getReturn() <em>Return</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturn()
   * @generated
   * @ordered
   */
  protected static final String RETURN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReturn() <em>Return</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturn()
   * @generated
   * @ordered
   */
  protected String return_ = RETURN_EDEFAULT;

  /**
   * The cached value of the '{@link #getOutEventType() <em>Out Event Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutEventType()
   * @generated
   * @ordered
   */
  protected OutputEventType outEventType;

  /**
   * The cached value of the '{@link #getTar() <em>Tar</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTar()
   * @generated
   * @ordered
   */
  protected Source1 tar;

  /**
   * The cached value of the '{@link #getOn() <em>On</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOn()
   * @generated
   * @ordered
   */
  protected ON on;

  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected Expression expr;

  /**
   * The cached value of the '{@link #getOr() <em>Or</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOr()
   * @generated
   * @ordered
   */
  protected OR or;

  /**
   * The cached value of the '{@link #getSetClause() <em>Set Clause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSetClause()
   * @generated
   * @ordered
   */
  protected SetClause setClause;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QueryOutputImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getQueryOutput();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInto()
  {
    return into;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInto(String newInto)
  {
    String oldInto = into;
    into = newInto;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__INTO, oldInto, into));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDelete()
  {
    return delete;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDelete(String newDelete)
  {
    String oldDelete = delete;
    delete = newDelete;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__DELETE, oldDelete, delete));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFor()
  {
    return for_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFor(String newFor)
  {
    String oldFor = for_;
    for_ = newFor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__FOR, oldFor, for_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUpdate()
  {
    return update;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdate(String newUpdate)
  {
    String oldUpdate = update;
    update = newUpdate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__UPDATE, oldUpdate, update));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getReturn()
  {
    return return_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReturn(String newReturn)
  {
    String oldReturn = return_;
    return_ = newReturn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__RETURN, oldReturn, return_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutputEventType getOutEventType()
  {
    return outEventType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOutEventType(OutputEventType newOutEventType, NotificationChain msgs)
  {
    OutputEventType oldOutEventType = outEventType;
    outEventType = newOutEventType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE, oldOutEventType, newOutEventType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOutEventType(OutputEventType newOutEventType)
  {
    if (newOutEventType != outEventType)
    {
      NotificationChain msgs = null;
      if (outEventType != null)
        msgs = ((InternalEObject)outEventType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE, null, msgs);
      if (newOutEventType != null)
        msgs = ((InternalEObject)newOutEventType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE, null, msgs);
      msgs = basicSetOutEventType(newOutEventType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE, newOutEventType, newOutEventType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Source1 getTar()
  {
    return tar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTar(Source1 newTar, NotificationChain msgs)
  {
    Source1 oldTar = tar;
    tar = newTar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__TAR, oldTar, newTar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTar(Source1 newTar)
  {
    if (newTar != tar)
    {
      NotificationChain msgs = null;
      if (tar != null)
        msgs = ((InternalEObject)tar).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__TAR, null, msgs);
      if (newTar != null)
        msgs = ((InternalEObject)newTar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__TAR, null, msgs);
      msgs = basicSetTar(newTar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__TAR, newTar, newTar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ON getOn()
  {
    return on;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOn(ON newOn, NotificationChain msgs)
  {
    ON oldOn = on;
    on = newOn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__ON, oldOn, newOn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOn(ON newOn)
  {
    if (newOn != on)
    {
      NotificationChain msgs = null;
      if (on != null)
        msgs = ((InternalEObject)on).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__ON, null, msgs);
      if (newOn != null)
        msgs = ((InternalEObject)newOn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__ON, null, msgs);
      msgs = basicSetOn(newOn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__ON, newOn, newOn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(Expression newExpr, NotificationChain msgs)
  {
    Expression oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpr(Expression newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OR getOr()
  {
    return or;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOr(OR newOr, NotificationChain msgs)
  {
    OR oldOr = or;
    or = newOr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__OR, oldOr, newOr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOr(OR newOr)
  {
    if (newOr != or)
    {
      NotificationChain msgs = null;
      if (or != null)
        msgs = ((InternalEObject)or).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__OR, null, msgs);
      if (newOr != null)
        msgs = ((InternalEObject)newOr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__OR, null, msgs);
      msgs = basicSetOr(newOr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__OR, newOr, newOr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetClause getSetClause()
  {
    return setClause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSetClause(SetClause newSetClause, NotificationChain msgs)
  {
    SetClause oldSetClause = setClause;
    setClause = newSetClause;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE, oldSetClause, newSetClause);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSetClause(SetClause newSetClause)
  {
    if (newSetClause != setClause)
    {
      NotificationChain msgs = null;
      if (setClause != null)
        msgs = ((InternalEObject)setClause).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE, null, msgs);
      if (newSetClause != null)
        msgs = ((InternalEObject)newSetClause).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE, null, msgs);
      msgs = basicSetSetClause(newSetClause, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE, newSetClause, newSetClause));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE:
        return basicSetOutEventType(null, msgs);
      case SiddhiPackage.QUERY_OUTPUT__TAR:
        return basicSetTar(null, msgs);
      case SiddhiPackage.QUERY_OUTPUT__ON:
        return basicSetOn(null, msgs);
      case SiddhiPackage.QUERY_OUTPUT__EXPR:
        return basicSetExpr(null, msgs);
      case SiddhiPackage.QUERY_OUTPUT__OR:
        return basicSetOr(null, msgs);
      case SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE:
        return basicSetSetClause(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.QUERY_OUTPUT__INTO:
        return getInto();
      case SiddhiPackage.QUERY_OUTPUT__DELETE:
        return getDelete();
      case SiddhiPackage.QUERY_OUTPUT__FOR:
        return getFor();
      case SiddhiPackage.QUERY_OUTPUT__UPDATE:
        return getUpdate();
      case SiddhiPackage.QUERY_OUTPUT__RETURN:
        return getReturn();
      case SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE:
        return getOutEventType();
      case SiddhiPackage.QUERY_OUTPUT__TAR:
        return getTar();
      case SiddhiPackage.QUERY_OUTPUT__ON:
        return getOn();
      case SiddhiPackage.QUERY_OUTPUT__EXPR:
        return getExpr();
      case SiddhiPackage.QUERY_OUTPUT__OR:
        return getOr();
      case SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE:
        return getSetClause();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.QUERY_OUTPUT__INTO:
        setInto((String)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__DELETE:
        setDelete((String)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__FOR:
        setFor((String)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__UPDATE:
        setUpdate((String)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__RETURN:
        setReturn((String)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE:
        setOutEventType((OutputEventType)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__TAR:
        setTar((Source1)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__ON:
        setOn((ON)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__EXPR:
        setExpr((Expression)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__OR:
        setOr((OR)newValue);
        return;
      case SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE:
        setSetClause((SetClause)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.QUERY_OUTPUT__INTO:
        setInto(INTO_EDEFAULT);
        return;
      case SiddhiPackage.QUERY_OUTPUT__DELETE:
        setDelete(DELETE_EDEFAULT);
        return;
      case SiddhiPackage.QUERY_OUTPUT__FOR:
        setFor(FOR_EDEFAULT);
        return;
      case SiddhiPackage.QUERY_OUTPUT__UPDATE:
        setUpdate(UPDATE_EDEFAULT);
        return;
      case SiddhiPackage.QUERY_OUTPUT__RETURN:
        setReturn(RETURN_EDEFAULT);
        return;
      case SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE:
        setOutEventType((OutputEventType)null);
        return;
      case SiddhiPackage.QUERY_OUTPUT__TAR:
        setTar((Source1)null);
        return;
      case SiddhiPackage.QUERY_OUTPUT__ON:
        setOn((ON)null);
        return;
      case SiddhiPackage.QUERY_OUTPUT__EXPR:
        setExpr((Expression)null);
        return;
      case SiddhiPackage.QUERY_OUTPUT__OR:
        setOr((OR)null);
        return;
      case SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE:
        setSetClause((SetClause)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.QUERY_OUTPUT__INTO:
        return INTO_EDEFAULT == null ? into != null : !INTO_EDEFAULT.equals(into);
      case SiddhiPackage.QUERY_OUTPUT__DELETE:
        return DELETE_EDEFAULT == null ? delete != null : !DELETE_EDEFAULT.equals(delete);
      case SiddhiPackage.QUERY_OUTPUT__FOR:
        return FOR_EDEFAULT == null ? for_ != null : !FOR_EDEFAULT.equals(for_);
      case SiddhiPackage.QUERY_OUTPUT__UPDATE:
        return UPDATE_EDEFAULT == null ? update != null : !UPDATE_EDEFAULT.equals(update);
      case SiddhiPackage.QUERY_OUTPUT__RETURN:
        return RETURN_EDEFAULT == null ? return_ != null : !RETURN_EDEFAULT.equals(return_);
      case SiddhiPackage.QUERY_OUTPUT__OUT_EVENT_TYPE:
        return outEventType != null;
      case SiddhiPackage.QUERY_OUTPUT__TAR:
        return tar != null;
      case SiddhiPackage.QUERY_OUTPUT__ON:
        return on != null;
      case SiddhiPackage.QUERY_OUTPUT__EXPR:
        return expr != null;
      case SiddhiPackage.QUERY_OUTPUT__OR:
        return or != null;
      case SiddhiPackage.QUERY_OUTPUT__SET_CLAUSE:
        return setClause != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == INTO.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.QUERY_OUTPUT__INTO: return SiddhiPackage.INTO__INTO;
        default: return -1;
      }
    }
    if (baseClass == DELETE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.QUERY_OUTPUT__DELETE: return SiddhiPackage.DELETE__DELETE;
        default: return -1;
      }
    }
    if (baseClass == FOR.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.QUERY_OUTPUT__FOR: return SiddhiPackage.FOR__FOR;
        default: return -1;
      }
    }
    if (baseClass == UPDATE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.QUERY_OUTPUT__UPDATE: return SiddhiPackage.UPDATE__UPDATE;
        default: return -1;
      }
    }
    if (baseClass == RETURN.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.QUERY_OUTPUT__RETURN: return SiddhiPackage.RETURN__RETURN;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == INTO.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.INTO__INTO: return SiddhiPackage.QUERY_OUTPUT__INTO;
        default: return -1;
      }
    }
    if (baseClass == DELETE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.DELETE__DELETE: return SiddhiPackage.QUERY_OUTPUT__DELETE;
        default: return -1;
      }
    }
    if (baseClass == FOR.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.FOR__FOR: return SiddhiPackage.QUERY_OUTPUT__FOR;
        default: return -1;
      }
    }
    if (baseClass == UPDATE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.UPDATE__UPDATE: return SiddhiPackage.QUERY_OUTPUT__UPDATE;
        default: return -1;
      }
    }
    if (baseClass == RETURN.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.RETURN__RETURN: return SiddhiPackage.QUERY_OUTPUT__RETURN;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (into: ");
    result.append(into);
    result.append(", delete: ");
    result.append(delete);
    result.append(", for: ");
    result.append(for_);
    result.append(", update: ");
    result.append(update);
    result.append(", return: ");
    result.append(return_);
    result.append(')');
    return result.toString();
  }

} //QueryOutputImpl
