/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.siddhi.siddhi.MathOperation;
import org.xtext.example.siddhi.siddhi.MathOtherOperations1;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Math Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.MathOperationImpl#getMlo <em>Mlo</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.MathOperationImpl#getOp <em>Op</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.MathOperationImpl#getMathOtherOperations1 <em>Math Other Operations1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MathOperationImpl extends ExpressionImpl implements MathOperation
{
  /**
   * The cached value of the '{@link #getMlo() <em>Mlo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMlo()
   * @generated
   * @ordered
   */
  protected MathOperation mlo;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected MathOperation op;

  /**
   * The cached value of the '{@link #getMathOtherOperations1() <em>Math Other Operations1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMathOtherOperations1()
   * @generated
   * @ordered
   */
  protected MathOtherOperations1 mathOtherOperations1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MathOperationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getMathOperation();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathOperation getMlo()
  {
    return mlo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMlo(MathOperation newMlo, NotificationChain msgs)
  {
    MathOperation oldMlo = mlo;
    mlo = newMlo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.MATH_OPERATION__MLO, oldMlo, newMlo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMlo(MathOperation newMlo)
  {
    if (newMlo != mlo)
    {
      NotificationChain msgs = null;
      if (mlo != null)
        msgs = ((InternalEObject)mlo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.MATH_OPERATION__MLO, null, msgs);
      if (newMlo != null)
        msgs = ((InternalEObject)newMlo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.MATH_OPERATION__MLO, null, msgs);
      msgs = basicSetMlo(newMlo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.MATH_OPERATION__MLO, newMlo, newMlo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathOperation getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOp(MathOperation newOp, NotificationChain msgs)
  {
    MathOperation oldOp = op;
    op = newOp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.MATH_OPERATION__OP, oldOp, newOp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp(MathOperation newOp)
  {
    if (newOp != op)
    {
      NotificationChain msgs = null;
      if (op != null)
        msgs = ((InternalEObject)op).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.MATH_OPERATION__OP, null, msgs);
      if (newOp != null)
        msgs = ((InternalEObject)newOp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.MATH_OPERATION__OP, null, msgs);
      msgs = basicSetOp(newOp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.MATH_OPERATION__OP, newOp, newOp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathOtherOperations1 getMathOtherOperations1()
  {
    return mathOtherOperations1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMathOtherOperations1(MathOtherOperations1 newMathOtherOperations1, NotificationChain msgs)
  {
    MathOtherOperations1 oldMathOtherOperations1 = mathOtherOperations1;
    mathOtherOperations1 = newMathOtherOperations1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1, oldMathOtherOperations1, newMathOtherOperations1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMathOtherOperations1(MathOtherOperations1 newMathOtherOperations1)
  {
    if (newMathOtherOperations1 != mathOtherOperations1)
    {
      NotificationChain msgs = null;
      if (mathOtherOperations1 != null)
        msgs = ((InternalEObject)mathOtherOperations1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1, null, msgs);
      if (newMathOtherOperations1 != null)
        msgs = ((InternalEObject)newMathOtherOperations1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1, null, msgs);
      msgs = basicSetMathOtherOperations1(newMathOtherOperations1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1, newMathOtherOperations1, newMathOtherOperations1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.MATH_OPERATION__MLO:
        return basicSetMlo(null, msgs);
      case SiddhiPackage.MATH_OPERATION__OP:
        return basicSetOp(null, msgs);
      case SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1:
        return basicSetMathOtherOperations1(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.MATH_OPERATION__MLO:
        return getMlo();
      case SiddhiPackage.MATH_OPERATION__OP:
        return getOp();
      case SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1:
        return getMathOtherOperations1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.MATH_OPERATION__MLO:
        setMlo((MathOperation)newValue);
        return;
      case SiddhiPackage.MATH_OPERATION__OP:
        setOp((MathOperation)newValue);
        return;
      case SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1:
        setMathOtherOperations1((MathOtherOperations1)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.MATH_OPERATION__MLO:
        setMlo((MathOperation)null);
        return;
      case SiddhiPackage.MATH_OPERATION__OP:
        setOp((MathOperation)null);
        return;
      case SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1:
        setMathOtherOperations1((MathOtherOperations1)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.MATH_OPERATION__MLO:
        return mlo != null;
      case SiddhiPackage.MATH_OPERATION__OP:
        return op != null;
      case SiddhiPackage.MATH_OPERATION__MATH_OTHER_OPERATIONS1:
        return mathOtherOperations1 != null;
    }
    return super.eIsSet(featureID);
  }

} //MathOperationImpl
