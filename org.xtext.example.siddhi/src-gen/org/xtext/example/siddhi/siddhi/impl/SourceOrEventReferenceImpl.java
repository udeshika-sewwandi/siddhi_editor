/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.Source1OrStandardStatefulSource;
import org.xtext.example.siddhi.siddhi.SourceOrEventReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Source Or Event Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.SourceOrEventReferenceImpl#getNa <em>Na</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SourceOrEventReferenceImpl extends MinimalEObjectImpl.Container implements SourceOrEventReference
{
  /**
   * The cached value of the '{@link #getNa() <em>Na</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNa()
   * @generated
   * @ordered
   */
  protected Source1OrStandardStatefulSource na;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SourceOrEventReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getSourceOrEventReference();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Source1OrStandardStatefulSource getNa()
  {
    if (na != null && na.eIsProxy())
    {
      InternalEObject oldNa = (InternalEObject)na;
      na = (Source1OrStandardStatefulSource)eResolveProxy(oldNa);
      if (na != oldNa)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SiddhiPackage.SOURCE_OR_EVENT_REFERENCE__NA, oldNa, na));
      }
    }
    return na;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Source1OrStandardStatefulSource basicGetNa()
  {
    return na;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNa(Source1OrStandardStatefulSource newNa)
  {
    Source1OrStandardStatefulSource oldNa = na;
    na = newNa;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.SOURCE_OR_EVENT_REFERENCE__NA, oldNa, na));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.SOURCE_OR_EVENT_REFERENCE__NA:
        if (resolve) return getNa();
        return basicGetNa();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.SOURCE_OR_EVENT_REFERENCE__NA:
        setNa((Source1OrStandardStatefulSource)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.SOURCE_OR_EVENT_REFERENCE__NA:
        setNa((Source1OrStandardStatefulSource)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.SOURCE_OR_EVENT_REFERENCE__NA:
        return na != null;
    }
    return super.eIsSet(featureID);
  }

} //SourceOrEventReferenceImpl
