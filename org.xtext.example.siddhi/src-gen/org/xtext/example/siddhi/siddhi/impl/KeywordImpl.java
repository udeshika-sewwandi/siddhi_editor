/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.siddhi.siddhi.ALL;
import org.xtext.example.siddhi.siddhi.AND;
import org.xtext.example.siddhi.siddhi.AS;
import org.xtext.example.siddhi.siddhi.BEGIN;
import org.xtext.example.siddhi.siddhi.BOOL;
import org.xtext.example.siddhi.siddhi.BY;
import org.xtext.example.siddhi.siddhi.CURRENT;
import org.xtext.example.siddhi.siddhi.DAYS;
import org.xtext.example.siddhi.siddhi.DEFINE;
import org.xtext.example.siddhi.siddhi.DELETE;
import org.xtext.example.siddhi.siddhi.DOUBLE;
import org.xtext.example.siddhi.siddhi.END;
import org.xtext.example.siddhi.siddhi.EVENTS;
import org.xtext.example.siddhi.siddhi.EVERY;
import org.xtext.example.siddhi.siddhi.EXPIRED;
import org.xtext.example.siddhi.siddhi.FALSE;
import org.xtext.example.siddhi.siddhi.FIRST;
import org.xtext.example.siddhi.siddhi.FLOAT;
import org.xtext.example.siddhi.siddhi.FOR;
import org.xtext.example.siddhi.siddhi.FROM;
import org.xtext.example.siddhi.siddhi.FULL;
import org.xtext.example.siddhi.siddhi.GROUP;
import org.xtext.example.siddhi.siddhi.HAVING;
import org.xtext.example.siddhi.siddhi.HOURS;
import org.xtext.example.siddhi.siddhi.INNER;
import org.xtext.example.siddhi.siddhi.INSERT;
import org.xtext.example.siddhi.siddhi.INTO;
import org.xtext.example.siddhi.siddhi.INTS;
import org.xtext.example.siddhi.siddhi.IS;
import org.xtext.example.siddhi.siddhi.JOIN;
import org.xtext.example.siddhi.siddhi.Keyword;
import org.xtext.example.siddhi.siddhi.LAST;
import org.xtext.example.siddhi.siddhi.LEFT;
import org.xtext.example.siddhi.siddhi.LONG;
import org.xtext.example.siddhi.siddhi.MILLISECONDS;
import org.xtext.example.siddhi.siddhi.MINUTES;
import org.xtext.example.siddhi.siddhi.MONTHS;
import org.xtext.example.siddhi.siddhi.NOT;
import org.xtext.example.siddhi.siddhi.NULL;
import org.xtext.example.siddhi.siddhi.OBJECT;
import org.xtext.example.siddhi.siddhi.OF;
import org.xtext.example.siddhi.siddhi.ON;
import org.xtext.example.siddhi.siddhi.OR;
import org.xtext.example.siddhi.siddhi.OUTER;
import org.xtext.example.siddhi.siddhi.OUTPUT;
import org.xtext.example.siddhi.siddhi.PARTITION;
import org.xtext.example.siddhi.siddhi.RAW;
import org.xtext.example.siddhi.siddhi.RETURN;
import org.xtext.example.siddhi.siddhi.RIGHT;
import org.xtext.example.siddhi.siddhi.SECONDS;
import org.xtext.example.siddhi.siddhi.SELECT;
import org.xtext.example.siddhi.siddhi.SNAPSHOT;
import org.xtext.example.siddhi.siddhi.STRINGS;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.TABLE;
import org.xtext.example.siddhi.siddhi.TRUE;
import org.xtext.example.siddhi.siddhi.UNIDIRECTIONAL;
import org.xtext.example.siddhi.siddhi.UPDATE;
import org.xtext.example.siddhi.siddhi.WEEKS;
import org.xtext.example.siddhi.siddhi.WINDOW;
import org.xtext.example.siddhi.siddhi.WITH;
import org.xtext.example.siddhi.siddhi.WITHIN;
import org.xtext.example.siddhi.siddhi.YEARS;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Keyword</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getDefine <em>Define</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getFrom <em>From</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getSelect <em>Select</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getInsert <em>Insert</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getInto <em>Into</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getAll <em>All</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getEvents <em>Events</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getTable <em>Table</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getWindow <em>Window</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getOutput <em>Output</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getRaw <em>Raw</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getExpired <em>Expired</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getCurrt <em>Currt</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getReturn <em>Return</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getPartition <em>Partition</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getWithin <em>Within</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getRight <em>Right</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getFull <em>Full</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getJoin <em>Join</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getOuter <em>Outer</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getInner <em>Inner</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getYear <em>Year</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getYears <em>Years</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMonth <em>Month</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMonths <em>Months</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getWeek <em>Week</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getWeeks <em>Weeks</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getDay <em>Day</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getDays <em>Days</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getHour <em>Hour</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getHours <em>Hours</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMinute <em>Minute</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMinutes <em>Minutes</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMin <em>Min</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getSecond <em>Second</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getSeconds <em>Seconds</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getSec <em>Sec</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMillisecond <em>Millisecond</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMilliseconds <em>Milliseconds</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getMillisec <em>Millisec</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getString <em>String</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getInt <em>Int</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getLong <em>Long</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getFloat <em>Float</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getDouble <em>Double</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getBool <em>Bool</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getObject <em>Object</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getIs <em>Is</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getNull <em>Null</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getSnapshot <em>Snapshot</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getLast <em>Last</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getFirst <em>First</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getGroup <em>Group</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getBy <em>By</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getHaving <em>Having</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getWi <em>Wi</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getBegin <em>Begin</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getEnd <em>End</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getDelete <em>Delete</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getFor <em>For</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getTr <em>Tr</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getFals <em>Fals</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getUpdate <em>Update</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getA <em>A</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getEvery <em>Every</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getUni <em>Uni</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getOn <em>On</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getAnd <em>And</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getOr <em>Or</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getNot <em>Not</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.KeywordImpl#getOf <em>Of</em>}</li>
 * </ul>
 *
 * @generated
 */
public class KeywordImpl extends STREAMImpl implements Keyword
{
  /**
   * The default value of the '{@link #getDefine() <em>Define</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefine()
   * @generated
   * @ordered
   */
  protected static final String DEFINE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefine() <em>Define</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefine()
   * @generated
   * @ordered
   */
  protected String define = DEFINE_EDEFAULT;

  /**
   * The default value of the '{@link #getFrom() <em>From</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFrom()
   * @generated
   * @ordered
   */
  protected static final String FROM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFrom() <em>From</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFrom()
   * @generated
   * @ordered
   */
  protected String from = FROM_EDEFAULT;

  /**
   * The default value of the '{@link #getSelect() <em>Select</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelect()
   * @generated
   * @ordered
   */
  protected static final String SELECT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSelect() <em>Select</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelect()
   * @generated
   * @ordered
   */
  protected String select = SELECT_EDEFAULT;

  /**
   * The default value of the '{@link #getInsert() <em>Insert</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInsert()
   * @generated
   * @ordered
   */
  protected static final String INSERT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInsert() <em>Insert</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInsert()
   * @generated
   * @ordered
   */
  protected String insert = INSERT_EDEFAULT;

  /**
   * The default value of the '{@link #getInto() <em>Into</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInto()
   * @generated
   * @ordered
   */
  protected static final String INTO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInto() <em>Into</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInto()
   * @generated
   * @ordered
   */
  protected String into = INTO_EDEFAULT;

  /**
   * The default value of the '{@link #getAll() <em>All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAll()
   * @generated
   * @ordered
   */
  protected static final String ALL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAll() <em>All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAll()
   * @generated
   * @ordered
   */
  protected String all = ALL_EDEFAULT;

  /**
   * The default value of the '{@link #getEvents() <em>Events</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected static final String EVENTS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEvents() <em>Events</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected String events = EVENTS_EDEFAULT;

  /**
   * The default value of the '{@link #getTable() <em>Table</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTable()
   * @generated
   * @ordered
   */
  protected static final String TABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTable() <em>Table</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTable()
   * @generated
   * @ordered
   */
  protected String table = TABLE_EDEFAULT;

  /**
   * The default value of the '{@link #getWindow() <em>Window</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWindow()
   * @generated
   * @ordered
   */
  protected static final String WINDOW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWindow() <em>Window</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWindow()
   * @generated
   * @ordered
   */
  protected String window = WINDOW_EDEFAULT;

  /**
   * The default value of the '{@link #getOutput() <em>Output</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutput()
   * @generated
   * @ordered
   */
  protected static final String OUTPUT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOutput() <em>Output</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutput()
   * @generated
   * @ordered
   */
  protected String output = OUTPUT_EDEFAULT;

  /**
   * The default value of the '{@link #getRaw() <em>Raw</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRaw()
   * @generated
   * @ordered
   */
  protected static final String RAW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRaw() <em>Raw</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRaw()
   * @generated
   * @ordered
   */
  protected String raw = RAW_EDEFAULT;

  /**
   * The default value of the '{@link #getExpired() <em>Expired</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpired()
   * @generated
   * @ordered
   */
  protected static final String EXPIRED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpired() <em>Expired</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpired()
   * @generated
   * @ordered
   */
  protected String expired = EXPIRED_EDEFAULT;

  /**
   * The default value of the '{@link #getCurrt() <em>Currt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrt()
   * @generated
   * @ordered
   */
  protected static final String CURRT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrt() <em>Currt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrt()
   * @generated
   * @ordered
   */
  protected String currt = CURRT_EDEFAULT;

  /**
   * The default value of the '{@link #getReturn() <em>Return</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturn()
   * @generated
   * @ordered
   */
  protected static final String RETURN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReturn() <em>Return</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturn()
   * @generated
   * @ordered
   */
  protected String return_ = RETURN_EDEFAULT;

  /**
   * The default value of the '{@link #getPartition() <em>Partition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPartition()
   * @generated
   * @ordered
   */
  protected static final String PARTITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPartition() <em>Partition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPartition()
   * @generated
   * @ordered
   */
  protected String partition = PARTITION_EDEFAULT;

  /**
   * The default value of the '{@link #getWithin() <em>Within</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWithin()
   * @generated
   * @ordered
   */
  protected static final String WITHIN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWithin() <em>Within</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWithin()
   * @generated
   * @ordered
   */
  protected String within = WITHIN_EDEFAULT;

  /**
   * The default value of the '{@link #getLeft() <em>Left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected static final String LEFT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected String left = LEFT_EDEFAULT;

  /**
   * The default value of the '{@link #getRight() <em>Right</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight()
   * @generated
   * @ordered
   */
  protected static final String RIGHT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRight() <em>Right</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight()
   * @generated
   * @ordered
   */
  protected String right = RIGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getFull() <em>Full</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFull()
   * @generated
   * @ordered
   */
  protected static final String FULL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFull() <em>Full</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFull()
   * @generated
   * @ordered
   */
  protected String full = FULL_EDEFAULT;

  /**
   * The default value of the '{@link #getJoin() <em>Join</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoin()
   * @generated
   * @ordered
   */
  protected static final String JOIN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getJoin() <em>Join</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoin()
   * @generated
   * @ordered
   */
  protected String join = JOIN_EDEFAULT;

  /**
   * The default value of the '{@link #getOuter() <em>Outer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOuter()
   * @generated
   * @ordered
   */
  protected static final String OUTER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOuter() <em>Outer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOuter()
   * @generated
   * @ordered
   */
  protected String outer = OUTER_EDEFAULT;

  /**
   * The default value of the '{@link #getInner() <em>Inner</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInner()
   * @generated
   * @ordered
   */
  protected static final String INNER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInner() <em>Inner</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInner()
   * @generated
   * @ordered
   */
  protected String inner = INNER_EDEFAULT;

  /**
   * The default value of the '{@link #getYear() <em>Year</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYear()
   * @generated
   * @ordered
   */
  protected static final String YEAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYear() <em>Year</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYear()
   * @generated
   * @ordered
   */
  protected String year = YEAR_EDEFAULT;

  /**
   * The default value of the '{@link #getYears() <em>Years</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYears()
   * @generated
   * @ordered
   */
  protected static final String YEARS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYears() <em>Years</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYears()
   * @generated
   * @ordered
   */
  protected String years = YEARS_EDEFAULT;

  /**
   * The default value of the '{@link #getMonth() <em>Month</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonth()
   * @generated
   * @ordered
   */
  protected static final String MONTH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMonth() <em>Month</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonth()
   * @generated
   * @ordered
   */
  protected String month = MONTH_EDEFAULT;

  /**
   * The default value of the '{@link #getMonths() <em>Months</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonths()
   * @generated
   * @ordered
   */
  protected static final String MONTHS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMonths() <em>Months</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonths()
   * @generated
   * @ordered
   */
  protected String months = MONTHS_EDEFAULT;

  /**
   * The default value of the '{@link #getWeek() <em>Week</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeek()
   * @generated
   * @ordered
   */
  protected static final String WEEK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWeek() <em>Week</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeek()
   * @generated
   * @ordered
   */
  protected String week = WEEK_EDEFAULT;

  /**
   * The default value of the '{@link #getWeeks() <em>Weeks</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeeks()
   * @generated
   * @ordered
   */
  protected static final String WEEKS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWeeks() <em>Weeks</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeeks()
   * @generated
   * @ordered
   */
  protected String weeks = WEEKS_EDEFAULT;

  /**
   * The default value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected static final String DAY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected String day = DAY_EDEFAULT;

  /**
   * The default value of the '{@link #getDays() <em>Days</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDays()
   * @generated
   * @ordered
   */
  protected static final String DAYS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDays() <em>Days</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDays()
   * @generated
   * @ordered
   */
  protected String days = DAYS_EDEFAULT;

  /**
   * The default value of the '{@link #getHour() <em>Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHour()
   * @generated
   * @ordered
   */
  protected static final String HOUR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHour() <em>Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHour()
   * @generated
   * @ordered
   */
  protected String hour = HOUR_EDEFAULT;

  /**
   * The default value of the '{@link #getHours() <em>Hours</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHours()
   * @generated
   * @ordered
   */
  protected static final String HOURS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHours() <em>Hours</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHours()
   * @generated
   * @ordered
   */
  protected String hours = HOURS_EDEFAULT;

  /**
   * The default value of the '{@link #getMinute() <em>Minute</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinute()
   * @generated
   * @ordered
   */
  protected static final String MINUTE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinute() <em>Minute</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinute()
   * @generated
   * @ordered
   */
  protected String minute = MINUTE_EDEFAULT;

  /**
   * The default value of the '{@link #getMinutes() <em>Minutes</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinutes()
   * @generated
   * @ordered
   */
  protected static final String MINUTES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinutes() <em>Minutes</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinutes()
   * @generated
   * @ordered
   */
  protected String minutes = MINUTES_EDEFAULT;

  /**
   * The default value of the '{@link #getMin() <em>Min</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMin()
   * @generated
   * @ordered
   */
  protected static final String MIN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMin() <em>Min</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMin()
   * @generated
   * @ordered
   */
  protected String min = MIN_EDEFAULT;

  /**
   * The default value of the '{@link #getSecond() <em>Second</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecond()
   * @generated
   * @ordered
   */
  protected static final String SECOND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSecond() <em>Second</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecond()
   * @generated
   * @ordered
   */
  protected String second = SECOND_EDEFAULT;

  /**
   * The default value of the '{@link #getSeconds() <em>Seconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeconds()
   * @generated
   * @ordered
   */
  protected static final String SECONDS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSeconds() <em>Seconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeconds()
   * @generated
   * @ordered
   */
  protected String seconds = SECONDS_EDEFAULT;

  /**
   * The default value of the '{@link #getSec() <em>Sec</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSec()
   * @generated
   * @ordered
   */
  protected static final String SEC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSec() <em>Sec</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSec()
   * @generated
   * @ordered
   */
  protected String sec = SEC_EDEFAULT;

  /**
   * The default value of the '{@link #getMillisecond() <em>Millisecond</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMillisecond()
   * @generated
   * @ordered
   */
  protected static final String MILLISECOND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMillisecond() <em>Millisecond</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMillisecond()
   * @generated
   * @ordered
   */
  protected String millisecond = MILLISECOND_EDEFAULT;

  /**
   * The default value of the '{@link #getMilliseconds() <em>Milliseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMilliseconds()
   * @generated
   * @ordered
   */
  protected static final String MILLISECONDS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMilliseconds() <em>Milliseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMilliseconds()
   * @generated
   * @ordered
   */
  protected String milliseconds = MILLISECONDS_EDEFAULT;

  /**
   * The default value of the '{@link #getMillisec() <em>Millisec</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMillisec()
   * @generated
   * @ordered
   */
  protected static final String MILLISEC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMillisec() <em>Millisec</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMillisec()
   * @generated
   * @ordered
   */
  protected String millisec = MILLISEC_EDEFAULT;

  /**
   * The default value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected static final String STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected String string = STRING_EDEFAULT;

  /**
   * The default value of the '{@link #getInt() <em>Int</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInt()
   * @generated
   * @ordered
   */
  protected static final String INT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInt() <em>Int</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInt()
   * @generated
   * @ordered
   */
  protected String int_ = INT_EDEFAULT;

  /**
   * The default value of the '{@link #getLong() <em>Long</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLong()
   * @generated
   * @ordered
   */
  protected static final String LONG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLong() <em>Long</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLong()
   * @generated
   * @ordered
   */
  protected String long_ = LONG_EDEFAULT;

  /**
   * The default value of the '{@link #getFloat() <em>Float</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFloat()
   * @generated
   * @ordered
   */
  protected static final String FLOAT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFloat() <em>Float</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFloat()
   * @generated
   * @ordered
   */
  protected String float_ = FLOAT_EDEFAULT;

  /**
   * The default value of the '{@link #getDouble() <em>Double</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDouble()
   * @generated
   * @ordered
   */
  protected static final String DOUBLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDouble() <em>Double</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDouble()
   * @generated
   * @ordered
   */
  protected String double_ = DOUBLE_EDEFAULT;

  /**
   * The default value of the '{@link #getBool() <em>Bool</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBool()
   * @generated
   * @ordered
   */
  protected static final String BOOL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBool() <em>Bool</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBool()
   * @generated
   * @ordered
   */
  protected String bool = BOOL_EDEFAULT;

  /**
   * The default value of the '{@link #getObject() <em>Object</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObject()
   * @generated
   * @ordered
   */
  protected static final String OBJECT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getObject() <em>Object</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObject()
   * @generated
   * @ordered
   */
  protected String object = OBJECT_EDEFAULT;

  /**
   * The default value of the '{@link #getIs() <em>Is</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIs()
   * @generated
   * @ordered
   */
  protected static final String IS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIs() <em>Is</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIs()
   * @generated
   * @ordered
   */
  protected String is = IS_EDEFAULT;

  /**
   * The default value of the '{@link #getNull() <em>Null</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNull()
   * @generated
   * @ordered
   */
  protected static final String NULL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNull() <em>Null</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNull()
   * @generated
   * @ordered
   */
  protected String null_ = NULL_EDEFAULT;

  /**
   * The default value of the '{@link #getSnapshot() <em>Snapshot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSnapshot()
   * @generated
   * @ordered
   */
  protected static final String SNAPSHOT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSnapshot() <em>Snapshot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSnapshot()
   * @generated
   * @ordered
   */
  protected String snapshot = SNAPSHOT_EDEFAULT;

  /**
   * The default value of the '{@link #getLast() <em>Last</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLast()
   * @generated
   * @ordered
   */
  protected static final String LAST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLast() <em>Last</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLast()
   * @generated
   * @ordered
   */
  protected String last = LAST_EDEFAULT;

  /**
   * The default value of the '{@link #getFirst() <em>First</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirst()
   * @generated
   * @ordered
   */
  protected static final String FIRST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFirst() <em>First</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirst()
   * @generated
   * @ordered
   */
  protected String first = FIRST_EDEFAULT;

  /**
   * The default value of the '{@link #getGroup() <em>Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroup()
   * @generated
   * @ordered
   */
  protected static final String GROUP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGroup() <em>Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroup()
   * @generated
   * @ordered
   */
  protected String group = GROUP_EDEFAULT;

  /**
   * The default value of the '{@link #getBy() <em>By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBy()
   * @generated
   * @ordered
   */
  protected static final String BY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBy() <em>By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBy()
   * @generated
   * @ordered
   */
  protected String by = BY_EDEFAULT;

  /**
   * The default value of the '{@link #getHaving() <em>Having</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHaving()
   * @generated
   * @ordered
   */
  protected static final String HAVING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHaving() <em>Having</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHaving()
   * @generated
   * @ordered
   */
  protected String having = HAVING_EDEFAULT;

  /**
   * The default value of the '{@link #getWi() <em>Wi</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWi()
   * @generated
   * @ordered
   */
  protected static final String WI_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWi() <em>Wi</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWi()
   * @generated
   * @ordered
   */
  protected String wi = WI_EDEFAULT;

  /**
   * The default value of the '{@link #getBegin() <em>Begin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBegin()
   * @generated
   * @ordered
   */
  protected static final String BEGIN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBegin() <em>Begin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBegin()
   * @generated
   * @ordered
   */
  protected String begin = BEGIN_EDEFAULT;

  /**
   * The default value of the '{@link #getEnd() <em>End</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnd()
   * @generated
   * @ordered
   */
  protected static final String END_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEnd() <em>End</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnd()
   * @generated
   * @ordered
   */
  protected String end = END_EDEFAULT;

  /**
   * The default value of the '{@link #getDelete() <em>Delete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelete()
   * @generated
   * @ordered
   */
  protected static final String DELETE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDelete() <em>Delete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelete()
   * @generated
   * @ordered
   */
  protected String delete = DELETE_EDEFAULT;

  /**
   * The default value of the '{@link #getFor() <em>For</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFor()
   * @generated
   * @ordered
   */
  protected static final String FOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFor() <em>For</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFor()
   * @generated
   * @ordered
   */
  protected String for_ = FOR_EDEFAULT;

  /**
   * The default value of the '{@link #getTr() <em>Tr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTr()
   * @generated
   * @ordered
   */
  protected static final String TR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTr() <em>Tr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTr()
   * @generated
   * @ordered
   */
  protected String tr = TR_EDEFAULT;

  /**
   * The default value of the '{@link #getFals() <em>Fals</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFals()
   * @generated
   * @ordered
   */
  protected static final String FALS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFals() <em>Fals</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFals()
   * @generated
   * @ordered
   */
  protected String fals = FALS_EDEFAULT;

  /**
   * The default value of the '{@link #getUpdate() <em>Update</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdate()
   * @generated
   * @ordered
   */
  protected static final String UPDATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUpdate() <em>Update</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdate()
   * @generated
   * @ordered
   */
  protected String update = UPDATE_EDEFAULT;

  /**
   * The cached value of the '{@link #getA() <em>A</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getA()
   * @generated
   * @ordered
   */
  protected AS a;

  /**
   * The cached value of the '{@link #getEvery() <em>Every</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvery()
   * @generated
   * @ordered
   */
  protected EVERY every;

  /**
   * The cached value of the '{@link #getUni() <em>Uni</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUni()
   * @generated
   * @ordered
   */
  protected UNIDIRECTIONAL uni;

  /**
   * The cached value of the '{@link #getOn() <em>On</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOn()
   * @generated
   * @ordered
   */
  protected ON on;

  /**
   * The cached value of the '{@link #getAnd() <em>And</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnd()
   * @generated
   * @ordered
   */
  protected AND and;

  /**
   * The cached value of the '{@link #getOr() <em>Or</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOr()
   * @generated
   * @ordered
   */
  protected OR or;

  /**
   * The cached value of the '{@link #getNot() <em>Not</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNot()
   * @generated
   * @ordered
   */
  protected NOT not;

  /**
   * The cached value of the '{@link #getOf() <em>Of</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOf()
   * @generated
   * @ordered
   */
  protected OF of;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected KeywordImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getKeyword();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDefine()
  {
    return define;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDefine(String newDefine)
  {
    String oldDefine = define;
    define = newDefine;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__DEFINE, oldDefine, define));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFrom()
  {
    return from;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFrom(String newFrom)
  {
    String oldFrom = from;
    from = newFrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__FROM, oldFrom, from));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSelect()
  {
    return select;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSelect(String newSelect)
  {
    String oldSelect = select;
    select = newSelect;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__SELECT, oldSelect, select));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInsert()
  {
    return insert;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInsert(String newInsert)
  {
    String oldInsert = insert;
    insert = newInsert;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__INSERT, oldInsert, insert));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInto()
  {
    return into;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInto(String newInto)
  {
    String oldInto = into;
    into = newInto;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__INTO, oldInto, into));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAll()
  {
    return all;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAll(String newAll)
  {
    String oldAll = all;
    all = newAll;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__ALL, oldAll, all));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEvents()
  {
    return events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvents(String newEvents)
  {
    String oldEvents = events;
    events = newEvents;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__EVENTS, oldEvents, events));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTable()
  {
    return table;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTable(String newTable)
  {
    String oldTable = table;
    table = newTable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__TABLE, oldTable, table));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getWindow()
  {
    return window;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWindow(String newWindow)
  {
    String oldWindow = window;
    window = newWindow;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__WINDOW, oldWindow, window));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOutput()
  {
    return output;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOutput(String newOutput)
  {
    String oldOutput = output;
    output = newOutput;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__OUTPUT, oldOutput, output));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRaw()
  {
    return raw;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRaw(String newRaw)
  {
    String oldRaw = raw;
    raw = newRaw;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__RAW, oldRaw, raw));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getExpired()
  {
    return expired;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpired(String newExpired)
  {
    String oldExpired = expired;
    expired = newExpired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__EXPIRED, oldExpired, expired));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCurrt()
  {
    return currt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCurrt(String newCurrt)
  {
    String oldCurrt = currt;
    currt = newCurrt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__CURRT, oldCurrt, currt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getReturn()
  {
    return return_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReturn(String newReturn)
  {
    String oldReturn = return_;
    return_ = newReturn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__RETURN, oldReturn, return_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPartition()
  {
    return partition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPartition(String newPartition)
  {
    String oldPartition = partition;
    partition = newPartition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__PARTITION, oldPartition, partition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getWithin()
  {
    return within;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWithin(String newWithin)
  {
    String oldWithin = within;
    within = newWithin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__WITHIN, oldWithin, within));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft(String newLeft)
  {
    String oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__LEFT, oldLeft, left));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRight()
  {
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight(String newRight)
  {
    String oldRight = right;
    right = newRight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__RIGHT, oldRight, right));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFull()
  {
    return full;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFull(String newFull)
  {
    String oldFull = full;
    full = newFull;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__FULL, oldFull, full));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getJoin()
  {
    return join;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setJoin(String newJoin)
  {
    String oldJoin = join;
    join = newJoin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__JOIN, oldJoin, join));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOuter()
  {
    return outer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOuter(String newOuter)
  {
    String oldOuter = outer;
    outer = newOuter;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__OUTER, oldOuter, outer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInner()
  {
    return inner;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInner(String newInner)
  {
    String oldInner = inner;
    inner = newInner;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__INNER, oldInner, inner));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getYear()
  {
    return year;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setYear(String newYear)
  {
    String oldYear = year;
    year = newYear;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__YEAR, oldYear, year));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getYears()
  {
    return years;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setYears(String newYears)
  {
    String oldYears = years;
    years = newYears;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__YEARS, oldYears, years));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMonth()
  {
    return month;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMonth(String newMonth)
  {
    String oldMonth = month;
    month = newMonth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MONTH, oldMonth, month));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMonths()
  {
    return months;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMonths(String newMonths)
  {
    String oldMonths = months;
    months = newMonths;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MONTHS, oldMonths, months));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getWeek()
  {
    return week;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWeek(String newWeek)
  {
    String oldWeek = week;
    week = newWeek;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__WEEK, oldWeek, week));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getWeeks()
  {
    return weeks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWeeks(String newWeeks)
  {
    String oldWeeks = weeks;
    weeks = newWeeks;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__WEEKS, oldWeeks, weeks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDay()
  {
    return day;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDay(String newDay)
  {
    String oldDay = day;
    day = newDay;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__DAY, oldDay, day));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDays()
  {
    return days;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDays(String newDays)
  {
    String oldDays = days;
    days = newDays;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__DAYS, oldDays, days));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHour()
  {
    return hour;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHour(String newHour)
  {
    String oldHour = hour;
    hour = newHour;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__HOUR, oldHour, hour));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHours()
  {
    return hours;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHours(String newHours)
  {
    String oldHours = hours;
    hours = newHours;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__HOURS, oldHours, hours));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMinute()
  {
    return minute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinute(String newMinute)
  {
    String oldMinute = minute;
    minute = newMinute;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MINUTE, oldMinute, minute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMinutes()
  {
    return minutes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinutes(String newMinutes)
  {
    String oldMinutes = minutes;
    minutes = newMinutes;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MINUTES, oldMinutes, minutes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMin()
  {
    return min;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMin(String newMin)
  {
    String oldMin = min;
    min = newMin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MIN, oldMin, min));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSecond()
  {
    return second;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSecond(String newSecond)
  {
    String oldSecond = second;
    second = newSecond;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__SECOND, oldSecond, second));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSeconds()
  {
    return seconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSeconds(String newSeconds)
  {
    String oldSeconds = seconds;
    seconds = newSeconds;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__SECONDS, oldSeconds, seconds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSec()
  {
    return sec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSec(String newSec)
  {
    String oldSec = sec;
    sec = newSec;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__SEC, oldSec, sec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMillisecond()
  {
    return millisecond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMillisecond(String newMillisecond)
  {
    String oldMillisecond = millisecond;
    millisecond = newMillisecond;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MILLISECOND, oldMillisecond, millisecond));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMilliseconds()
  {
    return milliseconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMilliseconds(String newMilliseconds)
  {
    String oldMilliseconds = milliseconds;
    milliseconds = newMilliseconds;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MILLISECONDS, oldMilliseconds, milliseconds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMillisec()
  {
    return millisec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMillisec(String newMillisec)
  {
    String oldMillisec = millisec;
    millisec = newMillisec;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__MILLISEC, oldMillisec, millisec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getString()
  {
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setString(String newString)
  {
    String oldString = string;
    string = newString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__STRING, oldString, string));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInt()
  {
    return int_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInt(String newInt)
  {
    String oldInt = int_;
    int_ = newInt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__INT, oldInt, int_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLong()
  {
    return long_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLong(String newLong)
  {
    String oldLong = long_;
    long_ = newLong;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__LONG, oldLong, long_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFloat()
  {
    return float_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFloat(String newFloat)
  {
    String oldFloat = float_;
    float_ = newFloat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__FLOAT, oldFloat, float_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDouble()
  {
    return double_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDouble(String newDouble)
  {
    String oldDouble = double_;
    double_ = newDouble;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__DOUBLE, oldDouble, double_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBool()
  {
    return bool;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBool(String newBool)
  {
    String oldBool = bool;
    bool = newBool;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__BOOL, oldBool, bool));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getObject()
  {
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setObject(String newObject)
  {
    String oldObject = object;
    object = newObject;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__OBJECT, oldObject, object));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIs()
  {
    return is;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIs(String newIs)
  {
    String oldIs = is;
    is = newIs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__IS, oldIs, is));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNull()
  {
    return null_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNull(String newNull)
  {
    String oldNull = null_;
    null_ = newNull;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__NULL, oldNull, null_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSnapshot()
  {
    return snapshot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSnapshot(String newSnapshot)
  {
    String oldSnapshot = snapshot;
    snapshot = newSnapshot;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__SNAPSHOT, oldSnapshot, snapshot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLast()
  {
    return last;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLast(String newLast)
  {
    String oldLast = last;
    last = newLast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__LAST, oldLast, last));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFirst()
  {
    return first;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFirst(String newFirst)
  {
    String oldFirst = first;
    first = newFirst;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__FIRST, oldFirst, first));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGroup()
  {
    return group;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGroup(String newGroup)
  {
    String oldGroup = group;
    group = newGroup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__GROUP, oldGroup, group));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBy()
  {
    return by;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBy(String newBy)
  {
    String oldBy = by;
    by = newBy;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__BY, oldBy, by));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHaving()
  {
    return having;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHaving(String newHaving)
  {
    String oldHaving = having;
    having = newHaving;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__HAVING, oldHaving, having));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getWi()
  {
    return wi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWi(String newWi)
  {
    String oldWi = wi;
    wi = newWi;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__WI, oldWi, wi));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBegin()
  {
    return begin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBegin(String newBegin)
  {
    String oldBegin = begin;
    begin = newBegin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__BEGIN, oldBegin, begin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEnd()
  {
    return end;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnd(String newEnd)
  {
    String oldEnd = end;
    end = newEnd;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__END, oldEnd, end));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDelete()
  {
    return delete;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDelete(String newDelete)
  {
    String oldDelete = delete;
    delete = newDelete;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__DELETE, oldDelete, delete));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFor()
  {
    return for_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFor(String newFor)
  {
    String oldFor = for_;
    for_ = newFor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__FOR, oldFor, for_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTr()
  {
    return tr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTr(String newTr)
  {
    String oldTr = tr;
    tr = newTr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__TR, oldTr, tr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFals()
  {
    return fals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFals(String newFals)
  {
    String oldFals = fals;
    fals = newFals;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__FALS, oldFals, fals));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUpdate()
  {
    return update;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdate(String newUpdate)
  {
    String oldUpdate = update;
    update = newUpdate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__UPDATE, oldUpdate, update));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AS getA()
  {
    return a;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetA(AS newA, NotificationChain msgs)
  {
    AS oldA = a;
    a = newA;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__A, oldA, newA);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setA(AS newA)
  {
    if (newA != a)
    {
      NotificationChain msgs = null;
      if (a != null)
        msgs = ((InternalEObject)a).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__A, null, msgs);
      if (newA != null)
        msgs = ((InternalEObject)newA).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__A, null, msgs);
      msgs = basicSetA(newA, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__A, newA, newA));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EVERY getEvery()
  {
    return every;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEvery(EVERY newEvery, NotificationChain msgs)
  {
    EVERY oldEvery = every;
    every = newEvery;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__EVERY, oldEvery, newEvery);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvery(EVERY newEvery)
  {
    if (newEvery != every)
    {
      NotificationChain msgs = null;
      if (every != null)
        msgs = ((InternalEObject)every).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__EVERY, null, msgs);
      if (newEvery != null)
        msgs = ((InternalEObject)newEvery).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__EVERY, null, msgs);
      msgs = basicSetEvery(newEvery, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__EVERY, newEvery, newEvery));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UNIDIRECTIONAL getUni()
  {
    return uni;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUni(UNIDIRECTIONAL newUni, NotificationChain msgs)
  {
    UNIDIRECTIONAL oldUni = uni;
    uni = newUni;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__UNI, oldUni, newUni);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUni(UNIDIRECTIONAL newUni)
  {
    if (newUni != uni)
    {
      NotificationChain msgs = null;
      if (uni != null)
        msgs = ((InternalEObject)uni).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__UNI, null, msgs);
      if (newUni != null)
        msgs = ((InternalEObject)newUni).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__UNI, null, msgs);
      msgs = basicSetUni(newUni, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__UNI, newUni, newUni));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ON getOn()
  {
    return on;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOn(ON newOn, NotificationChain msgs)
  {
    ON oldOn = on;
    on = newOn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__ON, oldOn, newOn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOn(ON newOn)
  {
    if (newOn != on)
    {
      NotificationChain msgs = null;
      if (on != null)
        msgs = ((InternalEObject)on).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__ON, null, msgs);
      if (newOn != null)
        msgs = ((InternalEObject)newOn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__ON, null, msgs);
      msgs = basicSetOn(newOn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__ON, newOn, newOn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AND getAnd()
  {
    return and;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAnd(AND newAnd, NotificationChain msgs)
  {
    AND oldAnd = and;
    and = newAnd;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__AND, oldAnd, newAnd);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAnd(AND newAnd)
  {
    if (newAnd != and)
    {
      NotificationChain msgs = null;
      if (and != null)
        msgs = ((InternalEObject)and).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__AND, null, msgs);
      if (newAnd != null)
        msgs = ((InternalEObject)newAnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__AND, null, msgs);
      msgs = basicSetAnd(newAnd, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__AND, newAnd, newAnd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OR getOr()
  {
    return or;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOr(OR newOr, NotificationChain msgs)
  {
    OR oldOr = or;
    or = newOr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__OR, oldOr, newOr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOr(OR newOr)
  {
    if (newOr != or)
    {
      NotificationChain msgs = null;
      if (or != null)
        msgs = ((InternalEObject)or).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__OR, null, msgs);
      if (newOr != null)
        msgs = ((InternalEObject)newOr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__OR, null, msgs);
      msgs = basicSetOr(newOr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__OR, newOr, newOr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NOT getNot()
  {
    return not;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNot(NOT newNot, NotificationChain msgs)
  {
    NOT oldNot = not;
    not = newNot;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__NOT, oldNot, newNot);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNot(NOT newNot)
  {
    if (newNot != not)
    {
      NotificationChain msgs = null;
      if (not != null)
        msgs = ((InternalEObject)not).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__NOT, null, msgs);
      if (newNot != null)
        msgs = ((InternalEObject)newNot).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__NOT, null, msgs);
      msgs = basicSetNot(newNot, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__NOT, newNot, newNot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OF getOf()
  {
    return of;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOf(OF newOf, NotificationChain msgs)
  {
    OF oldOf = of;
    of = newOf;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__OF, oldOf, newOf);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOf(OF newOf)
  {
    if (newOf != of)
    {
      NotificationChain msgs = null;
      if (of != null)
        msgs = ((InternalEObject)of).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__OF, null, msgs);
      if (newOf != null)
        msgs = ((InternalEObject)newOf).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.KEYWORD__OF, null, msgs);
      msgs = basicSetOf(newOf, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.KEYWORD__OF, newOf, newOf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.KEYWORD__A:
        return basicSetA(null, msgs);
      case SiddhiPackage.KEYWORD__EVERY:
        return basicSetEvery(null, msgs);
      case SiddhiPackage.KEYWORD__UNI:
        return basicSetUni(null, msgs);
      case SiddhiPackage.KEYWORD__ON:
        return basicSetOn(null, msgs);
      case SiddhiPackage.KEYWORD__AND:
        return basicSetAnd(null, msgs);
      case SiddhiPackage.KEYWORD__OR:
        return basicSetOr(null, msgs);
      case SiddhiPackage.KEYWORD__NOT:
        return basicSetNot(null, msgs);
      case SiddhiPackage.KEYWORD__OF:
        return basicSetOf(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.KEYWORD__DEFINE:
        return getDefine();
      case SiddhiPackage.KEYWORD__FROM:
        return getFrom();
      case SiddhiPackage.KEYWORD__SELECT:
        return getSelect();
      case SiddhiPackage.KEYWORD__INSERT:
        return getInsert();
      case SiddhiPackage.KEYWORD__INTO:
        return getInto();
      case SiddhiPackage.KEYWORD__ALL:
        return getAll();
      case SiddhiPackage.KEYWORD__EVENTS:
        return getEvents();
      case SiddhiPackage.KEYWORD__TABLE:
        return getTable();
      case SiddhiPackage.KEYWORD__WINDOW:
        return getWindow();
      case SiddhiPackage.KEYWORD__OUTPUT:
        return getOutput();
      case SiddhiPackage.KEYWORD__RAW:
        return getRaw();
      case SiddhiPackage.KEYWORD__EXPIRED:
        return getExpired();
      case SiddhiPackage.KEYWORD__CURRT:
        return getCurrt();
      case SiddhiPackage.KEYWORD__RETURN:
        return getReturn();
      case SiddhiPackage.KEYWORD__PARTITION:
        return getPartition();
      case SiddhiPackage.KEYWORD__WITHIN:
        return getWithin();
      case SiddhiPackage.KEYWORD__LEFT:
        return getLeft();
      case SiddhiPackage.KEYWORD__RIGHT:
        return getRight();
      case SiddhiPackage.KEYWORD__FULL:
        return getFull();
      case SiddhiPackage.KEYWORD__JOIN:
        return getJoin();
      case SiddhiPackage.KEYWORD__OUTER:
        return getOuter();
      case SiddhiPackage.KEYWORD__INNER:
        return getInner();
      case SiddhiPackage.KEYWORD__YEAR:
        return getYear();
      case SiddhiPackage.KEYWORD__YEARS:
        return getYears();
      case SiddhiPackage.KEYWORD__MONTH:
        return getMonth();
      case SiddhiPackage.KEYWORD__MONTHS:
        return getMonths();
      case SiddhiPackage.KEYWORD__WEEK:
        return getWeek();
      case SiddhiPackage.KEYWORD__WEEKS:
        return getWeeks();
      case SiddhiPackage.KEYWORD__DAY:
        return getDay();
      case SiddhiPackage.KEYWORD__DAYS:
        return getDays();
      case SiddhiPackage.KEYWORD__HOUR:
        return getHour();
      case SiddhiPackage.KEYWORD__HOURS:
        return getHours();
      case SiddhiPackage.KEYWORD__MINUTE:
        return getMinute();
      case SiddhiPackage.KEYWORD__MINUTES:
        return getMinutes();
      case SiddhiPackage.KEYWORD__MIN:
        return getMin();
      case SiddhiPackage.KEYWORD__SECOND:
        return getSecond();
      case SiddhiPackage.KEYWORD__SECONDS:
        return getSeconds();
      case SiddhiPackage.KEYWORD__SEC:
        return getSec();
      case SiddhiPackage.KEYWORD__MILLISECOND:
        return getMillisecond();
      case SiddhiPackage.KEYWORD__MILLISECONDS:
        return getMilliseconds();
      case SiddhiPackage.KEYWORD__MILLISEC:
        return getMillisec();
      case SiddhiPackage.KEYWORD__STRING:
        return getString();
      case SiddhiPackage.KEYWORD__INT:
        return getInt();
      case SiddhiPackage.KEYWORD__LONG:
        return getLong();
      case SiddhiPackage.KEYWORD__FLOAT:
        return getFloat();
      case SiddhiPackage.KEYWORD__DOUBLE:
        return getDouble();
      case SiddhiPackage.KEYWORD__BOOL:
        return getBool();
      case SiddhiPackage.KEYWORD__OBJECT:
        return getObject();
      case SiddhiPackage.KEYWORD__IS:
        return getIs();
      case SiddhiPackage.KEYWORD__NULL:
        return getNull();
      case SiddhiPackage.KEYWORD__SNAPSHOT:
        return getSnapshot();
      case SiddhiPackage.KEYWORD__LAST:
        return getLast();
      case SiddhiPackage.KEYWORD__FIRST:
        return getFirst();
      case SiddhiPackage.KEYWORD__GROUP:
        return getGroup();
      case SiddhiPackage.KEYWORD__BY:
        return getBy();
      case SiddhiPackage.KEYWORD__HAVING:
        return getHaving();
      case SiddhiPackage.KEYWORD__WI:
        return getWi();
      case SiddhiPackage.KEYWORD__BEGIN:
        return getBegin();
      case SiddhiPackage.KEYWORD__END:
        return getEnd();
      case SiddhiPackage.KEYWORD__DELETE:
        return getDelete();
      case SiddhiPackage.KEYWORD__FOR:
        return getFor();
      case SiddhiPackage.KEYWORD__TR:
        return getTr();
      case SiddhiPackage.KEYWORD__FALS:
        return getFals();
      case SiddhiPackage.KEYWORD__UPDATE:
        return getUpdate();
      case SiddhiPackage.KEYWORD__A:
        return getA();
      case SiddhiPackage.KEYWORD__EVERY:
        return getEvery();
      case SiddhiPackage.KEYWORD__UNI:
        return getUni();
      case SiddhiPackage.KEYWORD__ON:
        return getOn();
      case SiddhiPackage.KEYWORD__AND:
        return getAnd();
      case SiddhiPackage.KEYWORD__OR:
        return getOr();
      case SiddhiPackage.KEYWORD__NOT:
        return getNot();
      case SiddhiPackage.KEYWORD__OF:
        return getOf();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.KEYWORD__DEFINE:
        setDefine((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__FROM:
        setFrom((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__SELECT:
        setSelect((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__INSERT:
        setInsert((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__INTO:
        setInto((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__ALL:
        setAll((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__EVENTS:
        setEvents((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__TABLE:
        setTable((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__WINDOW:
        setWindow((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__OUTPUT:
        setOutput((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__RAW:
        setRaw((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__EXPIRED:
        setExpired((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__CURRT:
        setCurrt((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__RETURN:
        setReturn((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__PARTITION:
        setPartition((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__WITHIN:
        setWithin((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__LEFT:
        setLeft((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__RIGHT:
        setRight((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__FULL:
        setFull((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__JOIN:
        setJoin((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__OUTER:
        setOuter((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__INNER:
        setInner((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__YEAR:
        setYear((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__YEARS:
        setYears((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MONTH:
        setMonth((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MONTHS:
        setMonths((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__WEEK:
        setWeek((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__WEEKS:
        setWeeks((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__DAY:
        setDay((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__DAYS:
        setDays((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__HOUR:
        setHour((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__HOURS:
        setHours((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MINUTE:
        setMinute((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MINUTES:
        setMinutes((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MIN:
        setMin((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__SECOND:
        setSecond((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__SECONDS:
        setSeconds((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__SEC:
        setSec((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MILLISECOND:
        setMillisecond((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MILLISECONDS:
        setMilliseconds((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__MILLISEC:
        setMillisec((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__STRING:
        setString((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__INT:
        setInt((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__LONG:
        setLong((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__FLOAT:
        setFloat((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__DOUBLE:
        setDouble((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__BOOL:
        setBool((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__OBJECT:
        setObject((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__IS:
        setIs((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__NULL:
        setNull((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__SNAPSHOT:
        setSnapshot((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__LAST:
        setLast((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__FIRST:
        setFirst((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__GROUP:
        setGroup((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__BY:
        setBy((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__HAVING:
        setHaving((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__WI:
        setWi((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__BEGIN:
        setBegin((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__END:
        setEnd((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__DELETE:
        setDelete((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__FOR:
        setFor((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__TR:
        setTr((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__FALS:
        setFals((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__UPDATE:
        setUpdate((String)newValue);
        return;
      case SiddhiPackage.KEYWORD__A:
        setA((AS)newValue);
        return;
      case SiddhiPackage.KEYWORD__EVERY:
        setEvery((EVERY)newValue);
        return;
      case SiddhiPackage.KEYWORD__UNI:
        setUni((UNIDIRECTIONAL)newValue);
        return;
      case SiddhiPackage.KEYWORD__ON:
        setOn((ON)newValue);
        return;
      case SiddhiPackage.KEYWORD__AND:
        setAnd((AND)newValue);
        return;
      case SiddhiPackage.KEYWORD__OR:
        setOr((OR)newValue);
        return;
      case SiddhiPackage.KEYWORD__NOT:
        setNot((NOT)newValue);
        return;
      case SiddhiPackage.KEYWORD__OF:
        setOf((OF)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.KEYWORD__DEFINE:
        setDefine(DEFINE_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__FROM:
        setFrom(FROM_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__SELECT:
        setSelect(SELECT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__INSERT:
        setInsert(INSERT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__INTO:
        setInto(INTO_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__ALL:
        setAll(ALL_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__EVENTS:
        setEvents(EVENTS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__TABLE:
        setTable(TABLE_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__WINDOW:
        setWindow(WINDOW_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__OUTPUT:
        setOutput(OUTPUT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__RAW:
        setRaw(RAW_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__EXPIRED:
        setExpired(EXPIRED_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__CURRT:
        setCurrt(CURRT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__RETURN:
        setReturn(RETURN_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__PARTITION:
        setPartition(PARTITION_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__WITHIN:
        setWithin(WITHIN_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__LEFT:
        setLeft(LEFT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__RIGHT:
        setRight(RIGHT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__FULL:
        setFull(FULL_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__JOIN:
        setJoin(JOIN_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__OUTER:
        setOuter(OUTER_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__INNER:
        setInner(INNER_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__YEAR:
        setYear(YEAR_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__YEARS:
        setYears(YEARS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MONTH:
        setMonth(MONTH_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MONTHS:
        setMonths(MONTHS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__WEEK:
        setWeek(WEEK_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__WEEKS:
        setWeeks(WEEKS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__DAY:
        setDay(DAY_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__DAYS:
        setDays(DAYS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__HOUR:
        setHour(HOUR_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__HOURS:
        setHours(HOURS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MINUTE:
        setMinute(MINUTE_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MINUTES:
        setMinutes(MINUTES_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MIN:
        setMin(MIN_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__SECOND:
        setSecond(SECOND_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__SECONDS:
        setSeconds(SECONDS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__SEC:
        setSec(SEC_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MILLISECOND:
        setMillisecond(MILLISECOND_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MILLISECONDS:
        setMilliseconds(MILLISECONDS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__MILLISEC:
        setMillisec(MILLISEC_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__STRING:
        setString(STRING_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__INT:
        setInt(INT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__LONG:
        setLong(LONG_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__FLOAT:
        setFloat(FLOAT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__DOUBLE:
        setDouble(DOUBLE_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__BOOL:
        setBool(BOOL_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__OBJECT:
        setObject(OBJECT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__IS:
        setIs(IS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__NULL:
        setNull(NULL_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__SNAPSHOT:
        setSnapshot(SNAPSHOT_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__LAST:
        setLast(LAST_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__FIRST:
        setFirst(FIRST_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__GROUP:
        setGroup(GROUP_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__BY:
        setBy(BY_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__HAVING:
        setHaving(HAVING_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__WI:
        setWi(WI_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__BEGIN:
        setBegin(BEGIN_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__END:
        setEnd(END_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__DELETE:
        setDelete(DELETE_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__FOR:
        setFor(FOR_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__TR:
        setTr(TR_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__FALS:
        setFals(FALS_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__UPDATE:
        setUpdate(UPDATE_EDEFAULT);
        return;
      case SiddhiPackage.KEYWORD__A:
        setA((AS)null);
        return;
      case SiddhiPackage.KEYWORD__EVERY:
        setEvery((EVERY)null);
        return;
      case SiddhiPackage.KEYWORD__UNI:
        setUni((UNIDIRECTIONAL)null);
        return;
      case SiddhiPackage.KEYWORD__ON:
        setOn((ON)null);
        return;
      case SiddhiPackage.KEYWORD__AND:
        setAnd((AND)null);
        return;
      case SiddhiPackage.KEYWORD__OR:
        setOr((OR)null);
        return;
      case SiddhiPackage.KEYWORD__NOT:
        setNot((NOT)null);
        return;
      case SiddhiPackage.KEYWORD__OF:
        setOf((OF)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.KEYWORD__DEFINE:
        return DEFINE_EDEFAULT == null ? define != null : !DEFINE_EDEFAULT.equals(define);
      case SiddhiPackage.KEYWORD__FROM:
        return FROM_EDEFAULT == null ? from != null : !FROM_EDEFAULT.equals(from);
      case SiddhiPackage.KEYWORD__SELECT:
        return SELECT_EDEFAULT == null ? select != null : !SELECT_EDEFAULT.equals(select);
      case SiddhiPackage.KEYWORD__INSERT:
        return INSERT_EDEFAULT == null ? insert != null : !INSERT_EDEFAULT.equals(insert);
      case SiddhiPackage.KEYWORD__INTO:
        return INTO_EDEFAULT == null ? into != null : !INTO_EDEFAULT.equals(into);
      case SiddhiPackage.KEYWORD__ALL:
        return ALL_EDEFAULT == null ? all != null : !ALL_EDEFAULT.equals(all);
      case SiddhiPackage.KEYWORD__EVENTS:
        return EVENTS_EDEFAULT == null ? events != null : !EVENTS_EDEFAULT.equals(events);
      case SiddhiPackage.KEYWORD__TABLE:
        return TABLE_EDEFAULT == null ? table != null : !TABLE_EDEFAULT.equals(table);
      case SiddhiPackage.KEYWORD__WINDOW:
        return WINDOW_EDEFAULT == null ? window != null : !WINDOW_EDEFAULT.equals(window);
      case SiddhiPackage.KEYWORD__OUTPUT:
        return OUTPUT_EDEFAULT == null ? output != null : !OUTPUT_EDEFAULT.equals(output);
      case SiddhiPackage.KEYWORD__RAW:
        return RAW_EDEFAULT == null ? raw != null : !RAW_EDEFAULT.equals(raw);
      case SiddhiPackage.KEYWORD__EXPIRED:
        return EXPIRED_EDEFAULT == null ? expired != null : !EXPIRED_EDEFAULT.equals(expired);
      case SiddhiPackage.KEYWORD__CURRT:
        return CURRT_EDEFAULT == null ? currt != null : !CURRT_EDEFAULT.equals(currt);
      case SiddhiPackage.KEYWORD__RETURN:
        return RETURN_EDEFAULT == null ? return_ != null : !RETURN_EDEFAULT.equals(return_);
      case SiddhiPackage.KEYWORD__PARTITION:
        return PARTITION_EDEFAULT == null ? partition != null : !PARTITION_EDEFAULT.equals(partition);
      case SiddhiPackage.KEYWORD__WITHIN:
        return WITHIN_EDEFAULT == null ? within != null : !WITHIN_EDEFAULT.equals(within);
      case SiddhiPackage.KEYWORD__LEFT:
        return LEFT_EDEFAULT == null ? left != null : !LEFT_EDEFAULT.equals(left);
      case SiddhiPackage.KEYWORD__RIGHT:
        return RIGHT_EDEFAULT == null ? right != null : !RIGHT_EDEFAULT.equals(right);
      case SiddhiPackage.KEYWORD__FULL:
        return FULL_EDEFAULT == null ? full != null : !FULL_EDEFAULT.equals(full);
      case SiddhiPackage.KEYWORD__JOIN:
        return JOIN_EDEFAULT == null ? join != null : !JOIN_EDEFAULT.equals(join);
      case SiddhiPackage.KEYWORD__OUTER:
        return OUTER_EDEFAULT == null ? outer != null : !OUTER_EDEFAULT.equals(outer);
      case SiddhiPackage.KEYWORD__INNER:
        return INNER_EDEFAULT == null ? inner != null : !INNER_EDEFAULT.equals(inner);
      case SiddhiPackage.KEYWORD__YEAR:
        return YEAR_EDEFAULT == null ? year != null : !YEAR_EDEFAULT.equals(year);
      case SiddhiPackage.KEYWORD__YEARS:
        return YEARS_EDEFAULT == null ? years != null : !YEARS_EDEFAULT.equals(years);
      case SiddhiPackage.KEYWORD__MONTH:
        return MONTH_EDEFAULT == null ? month != null : !MONTH_EDEFAULT.equals(month);
      case SiddhiPackage.KEYWORD__MONTHS:
        return MONTHS_EDEFAULT == null ? months != null : !MONTHS_EDEFAULT.equals(months);
      case SiddhiPackage.KEYWORD__WEEK:
        return WEEK_EDEFAULT == null ? week != null : !WEEK_EDEFAULT.equals(week);
      case SiddhiPackage.KEYWORD__WEEKS:
        return WEEKS_EDEFAULT == null ? weeks != null : !WEEKS_EDEFAULT.equals(weeks);
      case SiddhiPackage.KEYWORD__DAY:
        return DAY_EDEFAULT == null ? day != null : !DAY_EDEFAULT.equals(day);
      case SiddhiPackage.KEYWORD__DAYS:
        return DAYS_EDEFAULT == null ? days != null : !DAYS_EDEFAULT.equals(days);
      case SiddhiPackage.KEYWORD__HOUR:
        return HOUR_EDEFAULT == null ? hour != null : !HOUR_EDEFAULT.equals(hour);
      case SiddhiPackage.KEYWORD__HOURS:
        return HOURS_EDEFAULT == null ? hours != null : !HOURS_EDEFAULT.equals(hours);
      case SiddhiPackage.KEYWORD__MINUTE:
        return MINUTE_EDEFAULT == null ? minute != null : !MINUTE_EDEFAULT.equals(minute);
      case SiddhiPackage.KEYWORD__MINUTES:
        return MINUTES_EDEFAULT == null ? minutes != null : !MINUTES_EDEFAULT.equals(minutes);
      case SiddhiPackage.KEYWORD__MIN:
        return MIN_EDEFAULT == null ? min != null : !MIN_EDEFAULT.equals(min);
      case SiddhiPackage.KEYWORD__SECOND:
        return SECOND_EDEFAULT == null ? second != null : !SECOND_EDEFAULT.equals(second);
      case SiddhiPackage.KEYWORD__SECONDS:
        return SECONDS_EDEFAULT == null ? seconds != null : !SECONDS_EDEFAULT.equals(seconds);
      case SiddhiPackage.KEYWORD__SEC:
        return SEC_EDEFAULT == null ? sec != null : !SEC_EDEFAULT.equals(sec);
      case SiddhiPackage.KEYWORD__MILLISECOND:
        return MILLISECOND_EDEFAULT == null ? millisecond != null : !MILLISECOND_EDEFAULT.equals(millisecond);
      case SiddhiPackage.KEYWORD__MILLISECONDS:
        return MILLISECONDS_EDEFAULT == null ? milliseconds != null : !MILLISECONDS_EDEFAULT.equals(milliseconds);
      case SiddhiPackage.KEYWORD__MILLISEC:
        return MILLISEC_EDEFAULT == null ? millisec != null : !MILLISEC_EDEFAULT.equals(millisec);
      case SiddhiPackage.KEYWORD__STRING:
        return STRING_EDEFAULT == null ? string != null : !STRING_EDEFAULT.equals(string);
      case SiddhiPackage.KEYWORD__INT:
        return INT_EDEFAULT == null ? int_ != null : !INT_EDEFAULT.equals(int_);
      case SiddhiPackage.KEYWORD__LONG:
        return LONG_EDEFAULT == null ? long_ != null : !LONG_EDEFAULT.equals(long_);
      case SiddhiPackage.KEYWORD__FLOAT:
        return FLOAT_EDEFAULT == null ? float_ != null : !FLOAT_EDEFAULT.equals(float_);
      case SiddhiPackage.KEYWORD__DOUBLE:
        return DOUBLE_EDEFAULT == null ? double_ != null : !DOUBLE_EDEFAULT.equals(double_);
      case SiddhiPackage.KEYWORD__BOOL:
        return BOOL_EDEFAULT == null ? bool != null : !BOOL_EDEFAULT.equals(bool);
      case SiddhiPackage.KEYWORD__OBJECT:
        return OBJECT_EDEFAULT == null ? object != null : !OBJECT_EDEFAULT.equals(object);
      case SiddhiPackage.KEYWORD__IS:
        return IS_EDEFAULT == null ? is != null : !IS_EDEFAULT.equals(is);
      case SiddhiPackage.KEYWORD__NULL:
        return NULL_EDEFAULT == null ? null_ != null : !NULL_EDEFAULT.equals(null_);
      case SiddhiPackage.KEYWORD__SNAPSHOT:
        return SNAPSHOT_EDEFAULT == null ? snapshot != null : !SNAPSHOT_EDEFAULT.equals(snapshot);
      case SiddhiPackage.KEYWORD__LAST:
        return LAST_EDEFAULT == null ? last != null : !LAST_EDEFAULT.equals(last);
      case SiddhiPackage.KEYWORD__FIRST:
        return FIRST_EDEFAULT == null ? first != null : !FIRST_EDEFAULT.equals(first);
      case SiddhiPackage.KEYWORD__GROUP:
        return GROUP_EDEFAULT == null ? group != null : !GROUP_EDEFAULT.equals(group);
      case SiddhiPackage.KEYWORD__BY:
        return BY_EDEFAULT == null ? by != null : !BY_EDEFAULT.equals(by);
      case SiddhiPackage.KEYWORD__HAVING:
        return HAVING_EDEFAULT == null ? having != null : !HAVING_EDEFAULT.equals(having);
      case SiddhiPackage.KEYWORD__WI:
        return WI_EDEFAULT == null ? wi != null : !WI_EDEFAULT.equals(wi);
      case SiddhiPackage.KEYWORD__BEGIN:
        return BEGIN_EDEFAULT == null ? begin != null : !BEGIN_EDEFAULT.equals(begin);
      case SiddhiPackage.KEYWORD__END:
        return END_EDEFAULT == null ? end != null : !END_EDEFAULT.equals(end);
      case SiddhiPackage.KEYWORD__DELETE:
        return DELETE_EDEFAULT == null ? delete != null : !DELETE_EDEFAULT.equals(delete);
      case SiddhiPackage.KEYWORD__FOR:
        return FOR_EDEFAULT == null ? for_ != null : !FOR_EDEFAULT.equals(for_);
      case SiddhiPackage.KEYWORD__TR:
        return TR_EDEFAULT == null ? tr != null : !TR_EDEFAULT.equals(tr);
      case SiddhiPackage.KEYWORD__FALS:
        return FALS_EDEFAULT == null ? fals != null : !FALS_EDEFAULT.equals(fals);
      case SiddhiPackage.KEYWORD__UPDATE:
        return UPDATE_EDEFAULT == null ? update != null : !UPDATE_EDEFAULT.equals(update);
      case SiddhiPackage.KEYWORD__A:
        return a != null;
      case SiddhiPackage.KEYWORD__EVERY:
        return every != null;
      case SiddhiPackage.KEYWORD__UNI:
        return uni != null;
      case SiddhiPackage.KEYWORD__ON:
        return on != null;
      case SiddhiPackage.KEYWORD__AND:
        return and != null;
      case SiddhiPackage.KEYWORD__OR:
        return or != null;
      case SiddhiPackage.KEYWORD__NOT:
        return not != null;
      case SiddhiPackage.KEYWORD__OF:
        return of != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == DEFINE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__DEFINE: return SiddhiPackage.DEFINE__DEFINE;
        default: return -1;
      }
    }
    if (baseClass == FROM.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__FROM: return SiddhiPackage.FROM__FROM;
        default: return -1;
      }
    }
    if (baseClass == SELECT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__SELECT: return SiddhiPackage.SELECT__SELECT;
        default: return -1;
      }
    }
    if (baseClass == INSERT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__INSERT: return SiddhiPackage.INSERT__INSERT;
        default: return -1;
      }
    }
    if (baseClass == INTO.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__INTO: return SiddhiPackage.INTO__INTO;
        default: return -1;
      }
    }
    if (baseClass == ALL.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__ALL: return SiddhiPackage.ALL__ALL;
        default: return -1;
      }
    }
    if (baseClass == EVENTS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__EVENTS: return SiddhiPackage.EVENTS__EVENTS;
        default: return -1;
      }
    }
    if (baseClass == TABLE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__TABLE: return SiddhiPackage.TABLE__TABLE;
        default: return -1;
      }
    }
    if (baseClass == WINDOW.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__WINDOW: return SiddhiPackage.WINDOW__WINDOW;
        default: return -1;
      }
    }
    if (baseClass == OUTPUT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__OUTPUT: return SiddhiPackage.OUTPUT__OUTPUT;
        default: return -1;
      }
    }
    if (baseClass == RAW.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__RAW: return SiddhiPackage.RAW__RAW;
        default: return -1;
      }
    }
    if (baseClass == EXPIRED.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__EXPIRED: return SiddhiPackage.EXPIRED__EXPIRED;
        default: return -1;
      }
    }
    if (baseClass == CURRENT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__CURRT: return SiddhiPackage.CURRENT__CURRT;
        default: return -1;
      }
    }
    if (baseClass == RETURN.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__RETURN: return SiddhiPackage.RETURN__RETURN;
        default: return -1;
      }
    }
    if (baseClass == PARTITION.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__PARTITION: return SiddhiPackage.PARTITION__PARTITION;
        default: return -1;
      }
    }
    if (baseClass == WITHIN.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__WITHIN: return SiddhiPackage.WITHIN__WITHIN;
        default: return -1;
      }
    }
    if (baseClass == LEFT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__LEFT: return SiddhiPackage.LEFT__LEFT;
        default: return -1;
      }
    }
    if (baseClass == RIGHT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__RIGHT: return SiddhiPackage.RIGHT__RIGHT;
        default: return -1;
      }
    }
    if (baseClass == FULL.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__FULL: return SiddhiPackage.FULL__FULL;
        default: return -1;
      }
    }
    if (baseClass == JOIN.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__JOIN: return SiddhiPackage.JOIN__JOIN;
        default: return -1;
      }
    }
    if (baseClass == OUTER.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__OUTER: return SiddhiPackage.OUTER__OUTER;
        default: return -1;
      }
    }
    if (baseClass == INNER.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__INNER: return SiddhiPackage.INNER__INNER;
        default: return -1;
      }
    }
    if (baseClass == YEARS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__YEAR: return SiddhiPackage.YEARS__YEAR;
        case SiddhiPackage.KEYWORD__YEARS: return SiddhiPackage.YEARS__YEARS;
        default: return -1;
      }
    }
    if (baseClass == MONTHS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__MONTH: return SiddhiPackage.MONTHS__MONTH;
        case SiddhiPackage.KEYWORD__MONTHS: return SiddhiPackage.MONTHS__MONTHS;
        default: return -1;
      }
    }
    if (baseClass == WEEKS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__WEEK: return SiddhiPackage.WEEKS__WEEK;
        case SiddhiPackage.KEYWORD__WEEKS: return SiddhiPackage.WEEKS__WEEKS;
        default: return -1;
      }
    }
    if (baseClass == DAYS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__DAY: return SiddhiPackage.DAYS__DAY;
        case SiddhiPackage.KEYWORD__DAYS: return SiddhiPackage.DAYS__DAYS;
        default: return -1;
      }
    }
    if (baseClass == HOURS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__HOUR: return SiddhiPackage.HOURS__HOUR;
        case SiddhiPackage.KEYWORD__HOURS: return SiddhiPackage.HOURS__HOURS;
        default: return -1;
      }
    }
    if (baseClass == MINUTES.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__MINUTE: return SiddhiPackage.MINUTES__MINUTE;
        case SiddhiPackage.KEYWORD__MINUTES: return SiddhiPackage.MINUTES__MINUTES;
        case SiddhiPackage.KEYWORD__MIN: return SiddhiPackage.MINUTES__MIN;
        default: return -1;
      }
    }
    if (baseClass == SECONDS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__SECOND: return SiddhiPackage.SECONDS__SECOND;
        case SiddhiPackage.KEYWORD__SECONDS: return SiddhiPackage.SECONDS__SECONDS;
        case SiddhiPackage.KEYWORD__SEC: return SiddhiPackage.SECONDS__SEC;
        default: return -1;
      }
    }
    if (baseClass == MILLISECONDS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__MILLISECOND: return SiddhiPackage.MILLISECONDS__MILLISECOND;
        case SiddhiPackage.KEYWORD__MILLISECONDS: return SiddhiPackage.MILLISECONDS__MILLISECONDS;
        case SiddhiPackage.KEYWORD__MILLISEC: return SiddhiPackage.MILLISECONDS__MILLISEC;
        default: return -1;
      }
    }
    if (baseClass == STRINGS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__STRING: return SiddhiPackage.STRINGS__STRING;
        default: return -1;
      }
    }
    if (baseClass == INTS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__INT: return SiddhiPackage.INTS__INT;
        default: return -1;
      }
    }
    if (baseClass == LONG.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__LONG: return SiddhiPackage.LONG__LONG;
        default: return -1;
      }
    }
    if (baseClass == FLOAT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__FLOAT: return SiddhiPackage.FLOAT__FLOAT;
        default: return -1;
      }
    }
    if (baseClass == DOUBLE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__DOUBLE: return SiddhiPackage.DOUBLE__DOUBLE;
        default: return -1;
      }
    }
    if (baseClass == BOOL.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__BOOL: return SiddhiPackage.BOOL__BOOL;
        default: return -1;
      }
    }
    if (baseClass == OBJECT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__OBJECT: return SiddhiPackage.OBJECT__OBJECT;
        default: return -1;
      }
    }
    if (baseClass == IS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__IS: return SiddhiPackage.IS__IS;
        default: return -1;
      }
    }
    if (baseClass == NULL.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__NULL: return SiddhiPackage.NULL__NULL;
        default: return -1;
      }
    }
    if (baseClass == SNAPSHOT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__SNAPSHOT: return SiddhiPackage.SNAPSHOT__SNAPSHOT;
        default: return -1;
      }
    }
    if (baseClass == LAST.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__LAST: return SiddhiPackage.LAST__LAST;
        default: return -1;
      }
    }
    if (baseClass == FIRST.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__FIRST: return SiddhiPackage.FIRST__FIRST;
        default: return -1;
      }
    }
    if (baseClass == GROUP.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__GROUP: return SiddhiPackage.GROUP__GROUP;
        default: return -1;
      }
    }
    if (baseClass == BY.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__BY: return SiddhiPackage.BY__BY;
        default: return -1;
      }
    }
    if (baseClass == HAVING.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__HAVING: return SiddhiPackage.HAVING__HAVING;
        default: return -1;
      }
    }
    if (baseClass == WITH.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__WI: return SiddhiPackage.WITH__WI;
        default: return -1;
      }
    }
    if (baseClass == BEGIN.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__BEGIN: return SiddhiPackage.BEGIN__BEGIN;
        default: return -1;
      }
    }
    if (baseClass == END.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__END: return SiddhiPackage.END__END;
        default: return -1;
      }
    }
    if (baseClass == DELETE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__DELETE: return SiddhiPackage.DELETE__DELETE;
        default: return -1;
      }
    }
    if (baseClass == FOR.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__FOR: return SiddhiPackage.FOR__FOR;
        default: return -1;
      }
    }
    if (baseClass == TRUE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__TR: return SiddhiPackage.TRUE__TR;
        default: return -1;
      }
    }
    if (baseClass == FALSE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__FALS: return SiddhiPackage.FALSE__FALS;
        default: return -1;
      }
    }
    if (baseClass == UPDATE.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.KEYWORD__UPDATE: return SiddhiPackage.UPDATE__UPDATE;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == DEFINE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.DEFINE__DEFINE: return SiddhiPackage.KEYWORD__DEFINE;
        default: return -1;
      }
    }
    if (baseClass == FROM.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.FROM__FROM: return SiddhiPackage.KEYWORD__FROM;
        default: return -1;
      }
    }
    if (baseClass == SELECT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.SELECT__SELECT: return SiddhiPackage.KEYWORD__SELECT;
        default: return -1;
      }
    }
    if (baseClass == INSERT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.INSERT__INSERT: return SiddhiPackage.KEYWORD__INSERT;
        default: return -1;
      }
    }
    if (baseClass == INTO.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.INTO__INTO: return SiddhiPackage.KEYWORD__INTO;
        default: return -1;
      }
    }
    if (baseClass == ALL.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.ALL__ALL: return SiddhiPackage.KEYWORD__ALL;
        default: return -1;
      }
    }
    if (baseClass == EVENTS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EVENTS__EVENTS: return SiddhiPackage.KEYWORD__EVENTS;
        default: return -1;
      }
    }
    if (baseClass == TABLE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.TABLE__TABLE: return SiddhiPackage.KEYWORD__TABLE;
        default: return -1;
      }
    }
    if (baseClass == WINDOW.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.WINDOW__WINDOW: return SiddhiPackage.KEYWORD__WINDOW;
        default: return -1;
      }
    }
    if (baseClass == OUTPUT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.OUTPUT__OUTPUT: return SiddhiPackage.KEYWORD__OUTPUT;
        default: return -1;
      }
    }
    if (baseClass == RAW.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.RAW__RAW: return SiddhiPackage.KEYWORD__RAW;
        default: return -1;
      }
    }
    if (baseClass == EXPIRED.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EXPIRED__EXPIRED: return SiddhiPackage.KEYWORD__EXPIRED;
        default: return -1;
      }
    }
    if (baseClass == CURRENT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.CURRENT__CURRT: return SiddhiPackage.KEYWORD__CURRT;
        default: return -1;
      }
    }
    if (baseClass == RETURN.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.RETURN__RETURN: return SiddhiPackage.KEYWORD__RETURN;
        default: return -1;
      }
    }
    if (baseClass == PARTITION.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.PARTITION__PARTITION: return SiddhiPackage.KEYWORD__PARTITION;
        default: return -1;
      }
    }
    if (baseClass == WITHIN.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.WITHIN__WITHIN: return SiddhiPackage.KEYWORD__WITHIN;
        default: return -1;
      }
    }
    if (baseClass == LEFT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.LEFT__LEFT: return SiddhiPackage.KEYWORD__LEFT;
        default: return -1;
      }
    }
    if (baseClass == RIGHT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.RIGHT__RIGHT: return SiddhiPackage.KEYWORD__RIGHT;
        default: return -1;
      }
    }
    if (baseClass == FULL.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.FULL__FULL: return SiddhiPackage.KEYWORD__FULL;
        default: return -1;
      }
    }
    if (baseClass == JOIN.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.JOIN__JOIN: return SiddhiPackage.KEYWORD__JOIN;
        default: return -1;
      }
    }
    if (baseClass == OUTER.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.OUTER__OUTER: return SiddhiPackage.KEYWORD__OUTER;
        default: return -1;
      }
    }
    if (baseClass == INNER.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.INNER__INNER: return SiddhiPackage.KEYWORD__INNER;
        default: return -1;
      }
    }
    if (baseClass == YEARS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.YEARS__YEAR: return SiddhiPackage.KEYWORD__YEAR;
        case SiddhiPackage.YEARS__YEARS: return SiddhiPackage.KEYWORD__YEARS;
        default: return -1;
      }
    }
    if (baseClass == MONTHS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.MONTHS__MONTH: return SiddhiPackage.KEYWORD__MONTH;
        case SiddhiPackage.MONTHS__MONTHS: return SiddhiPackage.KEYWORD__MONTHS;
        default: return -1;
      }
    }
    if (baseClass == WEEKS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.WEEKS__WEEK: return SiddhiPackage.KEYWORD__WEEK;
        case SiddhiPackage.WEEKS__WEEKS: return SiddhiPackage.KEYWORD__WEEKS;
        default: return -1;
      }
    }
    if (baseClass == DAYS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.DAYS__DAY: return SiddhiPackage.KEYWORD__DAY;
        case SiddhiPackage.DAYS__DAYS: return SiddhiPackage.KEYWORD__DAYS;
        default: return -1;
      }
    }
    if (baseClass == HOURS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.HOURS__HOUR: return SiddhiPackage.KEYWORD__HOUR;
        case SiddhiPackage.HOURS__HOURS: return SiddhiPackage.KEYWORD__HOURS;
        default: return -1;
      }
    }
    if (baseClass == MINUTES.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.MINUTES__MINUTE: return SiddhiPackage.KEYWORD__MINUTE;
        case SiddhiPackage.MINUTES__MINUTES: return SiddhiPackage.KEYWORD__MINUTES;
        case SiddhiPackage.MINUTES__MIN: return SiddhiPackage.KEYWORD__MIN;
        default: return -1;
      }
    }
    if (baseClass == SECONDS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.SECONDS__SECOND: return SiddhiPackage.KEYWORD__SECOND;
        case SiddhiPackage.SECONDS__SECONDS: return SiddhiPackage.KEYWORD__SECONDS;
        case SiddhiPackage.SECONDS__SEC: return SiddhiPackage.KEYWORD__SEC;
        default: return -1;
      }
    }
    if (baseClass == MILLISECONDS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.MILLISECONDS__MILLISECOND: return SiddhiPackage.KEYWORD__MILLISECOND;
        case SiddhiPackage.MILLISECONDS__MILLISECONDS: return SiddhiPackage.KEYWORD__MILLISECONDS;
        case SiddhiPackage.MILLISECONDS__MILLISEC: return SiddhiPackage.KEYWORD__MILLISEC;
        default: return -1;
      }
    }
    if (baseClass == STRINGS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.STRINGS__STRING: return SiddhiPackage.KEYWORD__STRING;
        default: return -1;
      }
    }
    if (baseClass == INTS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.INTS__INT: return SiddhiPackage.KEYWORD__INT;
        default: return -1;
      }
    }
    if (baseClass == LONG.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.LONG__LONG: return SiddhiPackage.KEYWORD__LONG;
        default: return -1;
      }
    }
    if (baseClass == FLOAT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.FLOAT__FLOAT: return SiddhiPackage.KEYWORD__FLOAT;
        default: return -1;
      }
    }
    if (baseClass == DOUBLE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.DOUBLE__DOUBLE: return SiddhiPackage.KEYWORD__DOUBLE;
        default: return -1;
      }
    }
    if (baseClass == BOOL.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.BOOL__BOOL: return SiddhiPackage.KEYWORD__BOOL;
        default: return -1;
      }
    }
    if (baseClass == OBJECT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.OBJECT__OBJECT: return SiddhiPackage.KEYWORD__OBJECT;
        default: return -1;
      }
    }
    if (baseClass == IS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.IS__IS: return SiddhiPackage.KEYWORD__IS;
        default: return -1;
      }
    }
    if (baseClass == NULL.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.NULL__NULL: return SiddhiPackage.KEYWORD__NULL;
        default: return -1;
      }
    }
    if (baseClass == SNAPSHOT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.SNAPSHOT__SNAPSHOT: return SiddhiPackage.KEYWORD__SNAPSHOT;
        default: return -1;
      }
    }
    if (baseClass == LAST.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.LAST__LAST: return SiddhiPackage.KEYWORD__LAST;
        default: return -1;
      }
    }
    if (baseClass == FIRST.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.FIRST__FIRST: return SiddhiPackage.KEYWORD__FIRST;
        default: return -1;
      }
    }
    if (baseClass == GROUP.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.GROUP__GROUP: return SiddhiPackage.KEYWORD__GROUP;
        default: return -1;
      }
    }
    if (baseClass == BY.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.BY__BY: return SiddhiPackage.KEYWORD__BY;
        default: return -1;
      }
    }
    if (baseClass == HAVING.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.HAVING__HAVING: return SiddhiPackage.KEYWORD__HAVING;
        default: return -1;
      }
    }
    if (baseClass == WITH.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.WITH__WI: return SiddhiPackage.KEYWORD__WI;
        default: return -1;
      }
    }
    if (baseClass == BEGIN.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.BEGIN__BEGIN: return SiddhiPackage.KEYWORD__BEGIN;
        default: return -1;
      }
    }
    if (baseClass == END.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.END__END: return SiddhiPackage.KEYWORD__END;
        default: return -1;
      }
    }
    if (baseClass == DELETE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.DELETE__DELETE: return SiddhiPackage.KEYWORD__DELETE;
        default: return -1;
      }
    }
    if (baseClass == FOR.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.FOR__FOR: return SiddhiPackage.KEYWORD__FOR;
        default: return -1;
      }
    }
    if (baseClass == TRUE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.TRUE__TR: return SiddhiPackage.KEYWORD__TR;
        default: return -1;
      }
    }
    if (baseClass == FALSE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.FALSE__FALS: return SiddhiPackage.KEYWORD__FALS;
        default: return -1;
      }
    }
    if (baseClass == UPDATE.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.UPDATE__UPDATE: return SiddhiPackage.KEYWORD__UPDATE;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (define: ");
    result.append(define);
    result.append(", from: ");
    result.append(from);
    result.append(", select: ");
    result.append(select);
    result.append(", insert: ");
    result.append(insert);
    result.append(", into: ");
    result.append(into);
    result.append(", all: ");
    result.append(all);
    result.append(", events: ");
    result.append(events);
    result.append(", table: ");
    result.append(table);
    result.append(", window: ");
    result.append(window);
    result.append(", output: ");
    result.append(output);
    result.append(", raw: ");
    result.append(raw);
    result.append(", expired: ");
    result.append(expired);
    result.append(", currt: ");
    result.append(currt);
    result.append(", return: ");
    result.append(return_);
    result.append(", partition: ");
    result.append(partition);
    result.append(", within: ");
    result.append(within);
    result.append(", left: ");
    result.append(left);
    result.append(", right: ");
    result.append(right);
    result.append(", full: ");
    result.append(full);
    result.append(", join: ");
    result.append(join);
    result.append(", outer: ");
    result.append(outer);
    result.append(", inner: ");
    result.append(inner);
    result.append(", year: ");
    result.append(year);
    result.append(", years: ");
    result.append(years);
    result.append(", month: ");
    result.append(month);
    result.append(", months: ");
    result.append(months);
    result.append(", week: ");
    result.append(week);
    result.append(", weeks: ");
    result.append(weeks);
    result.append(", day: ");
    result.append(day);
    result.append(", days: ");
    result.append(days);
    result.append(", hour: ");
    result.append(hour);
    result.append(", hours: ");
    result.append(hours);
    result.append(", minute: ");
    result.append(minute);
    result.append(", minutes: ");
    result.append(minutes);
    result.append(", min: ");
    result.append(min);
    result.append(", second: ");
    result.append(second);
    result.append(", seconds: ");
    result.append(seconds);
    result.append(", sec: ");
    result.append(sec);
    result.append(", millisecond: ");
    result.append(millisecond);
    result.append(", milliseconds: ");
    result.append(milliseconds);
    result.append(", millisec: ");
    result.append(millisec);
    result.append(", string: ");
    result.append(string);
    result.append(", int: ");
    result.append(int_);
    result.append(", long: ");
    result.append(long_);
    result.append(", float: ");
    result.append(float_);
    result.append(", double: ");
    result.append(double_);
    result.append(", bool: ");
    result.append(bool);
    result.append(", object: ");
    result.append(object);
    result.append(", is: ");
    result.append(is);
    result.append(", null: ");
    result.append(null_);
    result.append(", snapshot: ");
    result.append(snapshot);
    result.append(", last: ");
    result.append(last);
    result.append(", first: ");
    result.append(first);
    result.append(", group: ");
    result.append(group);
    result.append(", by: ");
    result.append(by);
    result.append(", having: ");
    result.append(having);
    result.append(", wi: ");
    result.append(wi);
    result.append(", begin: ");
    result.append(begin);
    result.append(", end: ");
    result.append(end);
    result.append(", delete: ");
    result.append(delete);
    result.append(", for: ");
    result.append(for_);
    result.append(", tr: ");
    result.append(tr);
    result.append(", fals: ");
    result.append(fals);
    result.append(", update: ");
    result.append(update);
    result.append(')');
    return result.toString();
  }

} //KeywordImpl
