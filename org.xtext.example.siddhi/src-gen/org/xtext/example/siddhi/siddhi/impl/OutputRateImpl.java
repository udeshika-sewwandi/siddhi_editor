/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.siddhi.siddhi.EVENTS;
import org.xtext.example.siddhi.siddhi.EVERY;
import org.xtext.example.siddhi.siddhi.OutputRate;
import org.xtext.example.siddhi.siddhi.OutputRateType;
import org.xtext.example.siddhi.siddhi.SNAPSHOT;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.TimeValue;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Output Rate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputRateImpl#getEvents <em>Events</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputRateImpl#getSnapshot <em>Snapshot</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputRateImpl#getOp_rate_type <em>Op rate type</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputRateImpl#getEvery <em>Every</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputRateImpl#getTv <em>Tv</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OutputRateImpl extends OUTPUTImpl implements OutputRate
{
  /**
   * The default value of the '{@link #getEvents() <em>Events</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected static final String EVENTS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEvents() <em>Events</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected String events = EVENTS_EDEFAULT;

  /**
   * The default value of the '{@link #getSnapshot() <em>Snapshot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSnapshot()
   * @generated
   * @ordered
   */
  protected static final String SNAPSHOT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSnapshot() <em>Snapshot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSnapshot()
   * @generated
   * @ordered
   */
  protected String snapshot = SNAPSHOT_EDEFAULT;

  /**
   * The cached value of the '{@link #getOp_rate_type() <em>Op rate type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp_rate_type()
   * @generated
   * @ordered
   */
  protected OutputRateType op_rate_type;

  /**
   * The cached value of the '{@link #getEvery() <em>Every</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvery()
   * @generated
   * @ordered
   */
  protected EVERY every;

  /**
   * The cached value of the '{@link #getTv() <em>Tv</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTv()
   * @generated
   * @ordered
   */
  protected TimeValue tv;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OutputRateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getOutputRate();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEvents()
  {
    return events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvents(String newEvents)
  {
    String oldEvents = events;
    events = newEvents;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__EVENTS, oldEvents, events));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSnapshot()
  {
    return snapshot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSnapshot(String newSnapshot)
  {
    String oldSnapshot = snapshot;
    snapshot = newSnapshot;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__SNAPSHOT, oldSnapshot, snapshot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutputRateType getOp_rate_type()
  {
    return op_rate_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOp_rate_type(OutputRateType newOp_rate_type, NotificationChain msgs)
  {
    OutputRateType oldOp_rate_type = op_rate_type;
    op_rate_type = newOp_rate_type;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE, oldOp_rate_type, newOp_rate_type);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp_rate_type(OutputRateType newOp_rate_type)
  {
    if (newOp_rate_type != op_rate_type)
    {
      NotificationChain msgs = null;
      if (op_rate_type != null)
        msgs = ((InternalEObject)op_rate_type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE, null, msgs);
      if (newOp_rate_type != null)
        msgs = ((InternalEObject)newOp_rate_type).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE, null, msgs);
      msgs = basicSetOp_rate_type(newOp_rate_type, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE, newOp_rate_type, newOp_rate_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EVERY getEvery()
  {
    return every;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEvery(EVERY newEvery, NotificationChain msgs)
  {
    EVERY oldEvery = every;
    every = newEvery;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__EVERY, oldEvery, newEvery);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvery(EVERY newEvery)
  {
    if (newEvery != every)
    {
      NotificationChain msgs = null;
      if (every != null)
        msgs = ((InternalEObject)every).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.OUTPUT_RATE__EVERY, null, msgs);
      if (newEvery != null)
        msgs = ((InternalEObject)newEvery).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.OUTPUT_RATE__EVERY, null, msgs);
      msgs = basicSetEvery(newEvery, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__EVERY, newEvery, newEvery));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TimeValue getTv()
  {
    return tv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTv(TimeValue newTv, NotificationChain msgs)
  {
    TimeValue oldTv = tv;
    tv = newTv;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__TV, oldTv, newTv);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTv(TimeValue newTv)
  {
    if (newTv != tv)
    {
      NotificationChain msgs = null;
      if (tv != null)
        msgs = ((InternalEObject)tv).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.OUTPUT_RATE__TV, null, msgs);
      if (newTv != null)
        msgs = ((InternalEObject)newTv).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.OUTPUT_RATE__TV, null, msgs);
      msgs = basicSetTv(newTv, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_RATE__TV, newTv, newTv));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE:
        return basicSetOp_rate_type(null, msgs);
      case SiddhiPackage.OUTPUT_RATE__EVERY:
        return basicSetEvery(null, msgs);
      case SiddhiPackage.OUTPUT_RATE__TV:
        return basicSetTv(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_RATE__EVENTS:
        return getEvents();
      case SiddhiPackage.OUTPUT_RATE__SNAPSHOT:
        return getSnapshot();
      case SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE:
        return getOp_rate_type();
      case SiddhiPackage.OUTPUT_RATE__EVERY:
        return getEvery();
      case SiddhiPackage.OUTPUT_RATE__TV:
        return getTv();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_RATE__EVENTS:
        setEvents((String)newValue);
        return;
      case SiddhiPackage.OUTPUT_RATE__SNAPSHOT:
        setSnapshot((String)newValue);
        return;
      case SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE:
        setOp_rate_type((OutputRateType)newValue);
        return;
      case SiddhiPackage.OUTPUT_RATE__EVERY:
        setEvery((EVERY)newValue);
        return;
      case SiddhiPackage.OUTPUT_RATE__TV:
        setTv((TimeValue)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_RATE__EVENTS:
        setEvents(EVENTS_EDEFAULT);
        return;
      case SiddhiPackage.OUTPUT_RATE__SNAPSHOT:
        setSnapshot(SNAPSHOT_EDEFAULT);
        return;
      case SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE:
        setOp_rate_type((OutputRateType)null);
        return;
      case SiddhiPackage.OUTPUT_RATE__EVERY:
        setEvery((EVERY)null);
        return;
      case SiddhiPackage.OUTPUT_RATE__TV:
        setTv((TimeValue)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_RATE__EVENTS:
        return EVENTS_EDEFAULT == null ? events != null : !EVENTS_EDEFAULT.equals(events);
      case SiddhiPackage.OUTPUT_RATE__SNAPSHOT:
        return SNAPSHOT_EDEFAULT == null ? snapshot != null : !SNAPSHOT_EDEFAULT.equals(snapshot);
      case SiddhiPackage.OUTPUT_RATE__OP_RATE_TYPE:
        return op_rate_type != null;
      case SiddhiPackage.OUTPUT_RATE__EVERY:
        return every != null;
      case SiddhiPackage.OUTPUT_RATE__TV:
        return tv != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == EVENTS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.OUTPUT_RATE__EVENTS: return SiddhiPackage.EVENTS__EVENTS;
        default: return -1;
      }
    }
    if (baseClass == SNAPSHOT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.OUTPUT_RATE__SNAPSHOT: return SiddhiPackage.SNAPSHOT__SNAPSHOT;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == EVENTS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EVENTS__EVENTS: return SiddhiPackage.OUTPUT_RATE__EVENTS;
        default: return -1;
      }
    }
    if (baseClass == SNAPSHOT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.SNAPSHOT__SNAPSHOT: return SiddhiPackage.OUTPUT_RATE__SNAPSHOT;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (events: ");
    result.append(events);
    result.append(", snapshot: ");
    result.append(snapshot);
    result.append(')');
    return result.toString();
  }

} //OutputRateImpl
