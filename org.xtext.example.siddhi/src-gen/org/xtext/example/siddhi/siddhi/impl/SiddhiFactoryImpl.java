/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.siddhi.siddhi.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SiddhiFactoryImpl extends EFactoryImpl implements SiddhiFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SiddhiFactory init()
  {
    try
    {
      SiddhiFactory theSiddhiFactory = (SiddhiFactory)EPackage.Registry.INSTANCE.getEFactory(SiddhiPackage.eNS_URI);
      if (theSiddhiFactory != null)
      {
        return theSiddhiFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SiddhiFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SiddhiFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SiddhiPackage.SIDDHI_QL: return createSiddhiQL();
      case SiddhiPackage.EXECUTION_PLAN: return createExecutionPlan();
      case SiddhiPackage.EXECUTION_ELEMENT: return createExecutionElement();
      case SiddhiPackage.DEFINITION_STREAM: return createDefinitionStream();
      case SiddhiPackage.DEFINITION_TABLE: return createDefinitionTable();
      case SiddhiPackage.DEFINITION_WINDOW: return createDefinitionWindow();
      case SiddhiPackage.DEFINITION_TRIGGER: return createDefinitionTrigger();
      case SiddhiPackage.DEFINITION_FUNCTION: return createDefinitionFunction();
      case SiddhiPackage.DEFINITION_AGGREGATION: return createDefinitionAggregation();
      case SiddhiPackage.AGGREGATION_TIME: return createAggregationTime();
      case SiddhiPackage.AGGREGATION_TIME_INTERVAL: return createAggregationTimeInterval();
      case SiddhiPackage.AGGREGATION_TIME_DURATION: return createAggregationTimeDuration();
      case SiddhiPackage.AGGREGATION_TIME_RANGE: return createAggregationTimeRange();
      case SiddhiPackage.FUNCTION_NAME: return createFunctionName();
      case SiddhiPackage.LANGUAGE_NAME: return createLanguageName();
      case SiddhiPackage.FUNCTION_BODY: return createFunctionBody();
      case SiddhiPackage.TRIGGER_NAME: return createTriggerName();
      case SiddhiPackage.APP_ANNOTATION: return createAppAnnotation();
      case SiddhiPackage.ANNOTATION: return createAnnotation();
      case SiddhiPackage.ANNOTATION_ELEMENT: return createAnnotationElement();
      case SiddhiPackage.PROPERTY_VALUE: return createPropertyValue();
      case SiddhiPackage.PROPERTY_NAME: return createPropertyName();
      case SiddhiPackage.PROPERTY_SEPARATOR: return createPropertySeparator();
      case SiddhiPackage.FEATURES: return createFeatures();
      case SiddhiPackage.ATTRIBUTE_TYPE: return createAttributeType();
      case SiddhiPackage.SOURCE: return createSource();
      case SiddhiPackage.SOURCE1: return createSource1();
      case SiddhiPackage.EXEC_PARTITION: return createExecPartition();
      case SiddhiPackage.PARTITION_WITH_STREAM: return createPartitionWithStream();
      case SiddhiPackage.CONDITION_RANGES: return createConditionRanges();
      case SiddhiPackage.CONDITION_RANGE: return createConditionRange();
      case SiddhiPackage.QUERY: return createQuery();
      case SiddhiPackage.QUERY_OUTPUT: return createQueryOutput();
      case SiddhiPackage.TARGET: return createTarget();
      case SiddhiPackage.SET_CLAUSE: return createSetClause();
      case SiddhiPackage.SET_ASSIGNMENT: return createSetAssignment();
      case SiddhiPackage.OUTPUT_EVENT_TYPE: return createOutputEventType();
      case SiddhiPackage.OUTPUT_RATE: return createOutputRate();
      case SiddhiPackage.OUTPUT_RATE_TYPE: return createOutputRateType();
      case SiddhiPackage.GROUP_BY_QUERY_SELECTION: return createGroupByQuerySelection();
      case SiddhiPackage.QUERY_SECTION: return createQuerySection();
      case SiddhiPackage.GROUP_BY: return createGroupBy();
      case SiddhiPackage.HAVING_EXPR: return createHavingExpr();
      case SiddhiPackage.OUTPUT_ATTRIBUTE: return createOutputAttribute();
      case SiddhiPackage.OUT_ATTR: return createOutAttr();
      case SiddhiPackage.QUERY_INPUT: return createQueryInput();
      case SiddhiPackage.SEQUENCE_STREAM: return createSequenceStream();
      case SiddhiPackage.EVERY_SEQUENCE_SOURCE_CHAIN: return createEverySequenceSourceChain();
      case SiddhiPackage.EVERY_ABSENT_SEQUENCE_SOURCE_CHAIN: return createEveryAbsentSequenceSourceChain();
      case SiddhiPackage.ABSENT_SEQUENCE_SOURCE_CHAIN: return createAbsentSequenceSourceChain();
      case SiddhiPackage.LEFT_ABSENT_SEQUENCE_SOURCE: return createLeftAbsentSequenceSource();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE: return createRightAbsentSequenceSource();
      case SiddhiPackage.SEQUENCE_SOURCE_CHAIN: return createSequenceSourceChain();
      case SiddhiPackage.SEQUENCE_SOURCE: return createSequenceSource();
      case SiddhiPackage.SEQUENCE_COLLECTION_STATEFUL_SOURCE: return createSequenceCollectionStatefulSource();
      case SiddhiPackage.ANONYMOUS_STREAM: return createAnonymousStream();
      case SiddhiPackage.PATTERN_STREAM: return createPatternStream();
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN: return createEveryPatternSourceChain();
      case SiddhiPackage.PATTERN_SOURCE_CHAIN: return createPatternSourceChain();
      case SiddhiPackage.PATTERN_SOURCE: return createPatternSource();
      case SiddhiPackage.LOGICAL_STATEFUL_SOURCE: return createLogicalStatefulSource();
      case SiddhiPackage.PATTERN_COLLECTION_STATEFUL_SOURCE: return createPatternCollectionStatefulSource();
      case SiddhiPackage.COLLECT: return createCollect();
      case SiddhiPackage.LOGICAL_ABSENT_STATEFUL_SOURCE: return createLogicalAbsentStatefulSource();
      case SiddhiPackage.ABSENT_PATTERN_SOURCE_CHAIN: return createAbsentPatternSourceChain();
      case SiddhiPackage.EVERY_ABSENT_PATTERN_SOURCE: return createEveryAbsentPatternSource();
      case SiddhiPackage.BASIC_ABSENT_PATTERN_SOURCE: return createBasicAbsentPatternSource();
      case SiddhiPackage.FOR_TIME: return createForTime();
      case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE: return createLeftAbsentPatternSource();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE: return createRightAbsentPatternSource();
      case SiddhiPackage.JOIN_STREAM: return createJoinStream();
      case SiddhiPackage.WITHIN_TIME_RANGE: return createWithinTimeRange();
      case SiddhiPackage.PER1: return createPer1();
      case SiddhiPackage.JOIN_SOURCE: return createJoinSource();
      case SiddhiPackage.STREAM_ALIAS: return createStreamAlias();
      case SiddhiPackage.WITHIN_TIME: return createWithinTime();
      case SiddhiPackage.JOINS: return createjoins();
      case SiddhiPackage.STANDARD_STREAM: return createStandardStream();
      case SiddhiPackage.MAIN_SOURCE: return createMainSource();
      case SiddhiPackage.BASIC_SOURCE_STREAM_HANDLERS: return createBasicSourceStreamHandlers();
      case SiddhiPackage.BASIC_SOURCE_STREAM_HANDLERS1: return createBasicSourceStreamHandlers1();
      case SiddhiPackage.BASIC_SOURCE_STREAM_HANDLER: return createBasicSourceStreamHandler();
      case SiddhiPackage.FILTER: return createFilter();
      case SiddhiPackage.STREAM_FUNCTION: return createStreamFunction();
      case SiddhiPackage.WIN: return createWin();
      case SiddhiPackage.EXPRESSION: return createExpression();
      case SiddhiPackage.MATH_OPERATION: return createMathOperation();
      case SiddhiPackage.MATH_ADDSUB_OPERATION: return createMathAddsubOperation();
      case SiddhiPackage.MATH_DIVMUL_OPERATION: return createMathDivmulOperation();
      case SiddhiPackage.MATH_OTHER_OPERATIONS: return createMathOtherOperations();
      case SiddhiPackage.NULL_CHECK: return createNullCheck();
      case SiddhiPackage.STREAM_REFERENCE: return createStreamReference();
      case SiddhiPackage.LITERAL: return createLiteral();
      case SiddhiPackage.ATTRIBUTE_REFERENCE: return createAttributeReference();
      case SiddhiPackage.FEATURES_OR_OUT_ATTR: return createFeaturesOrOutAttr();
      case SiddhiPackage.FEATURES_OR_OUT_ATTR_REFERENCE: return createFeaturesOrOutAttrReference();
      case SiddhiPackage.STANDARD_STATEFUL_SOURCE: return createStandardStatefulSource();
      case SiddhiPackage.BASIC_SOURCE: return createBasicSource();
      case SiddhiPackage.SOURCE1_OR_STANDARD_STATEFUL_SOURCE: return createSource1OrStandardStatefulSource();
      case SiddhiPackage.SOURCE_OR_EVENT_REFERENCE: return createSourceOrEventReference();
      case SiddhiPackage.ATTRIBUTE_NAME_REFERENCE: return createAttributeNameReference();
      case SiddhiPackage.ATTRIBUTE_INDEX: return createAttributeIndex();
      case SiddhiPackage.CONSTANT_VALUE: return createConstantValue();
      case SiddhiPackage.FUNCTION_OPERATION: return createFunctionOperation();
      case SiddhiPackage.FUNCTION_NAMESPACE: return createFunctionNamespace();
      case SiddhiPackage.FUNCTION_ID: return createFunctionId();
      case SiddhiPackage.ATTRIBUTE_LIST: return createAttributeList();
      case SiddhiPackage.ATTRIBUTE: return createAttribute();
      case SiddhiPackage.NAME: return createName();
      case SiddhiPackage.BOOL_VALUE: return createBoolValue();
      case SiddhiPackage.SIGNED_DOUBLE_VALUE: return createSignedDoubleValue();
      case SiddhiPackage.SIGNED_FLOAT_VALUE: return createSignedFloatValue();
      case SiddhiPackage.SIGNED_LONG_VALUE: return createSignedLongValue();
      case SiddhiPackage.STRING_VALUE: return createStringValue();
      case SiddhiPackage.TIME_VALUE: return createTimeValue();
      case SiddhiPackage.YEAR_VALUE: return createYearValue();
      case SiddhiPackage.MONTH_VALUE: return createMonthValue();
      case SiddhiPackage.WEEK_VALUE: return createWeekValue();
      case SiddhiPackage.DAY_VALUE: return createDayValue();
      case SiddhiPackage.HOUR_VALUE: return createHourValue();
      case SiddhiPackage.MINUTE_VALUE: return createMinuteValue();
      case SiddhiPackage.SECOND_VALUE: return createSecondValue();
      case SiddhiPackage.MILLISECOND_VALUE: return createMillisecondValue();
      case SiddhiPackage.DOUBLE_LITERAL: return createDOUBLE_LITERAL();
      case SiddhiPackage.FLOAT_LITERAL: return createFLOAT_LITERAL();
      case SiddhiPackage.LONG_LITERAL: return createLONG_LITERAL();
      case SiddhiPackage.KEYWORD: return createKeyword();
      case SiddhiPackage.AS: return createAS();
      case SiddhiPackage.ON: return createON();
      case SiddhiPackage.UNIDIRECTIONAL: return createUNIDIRECTIONAL();
      case SiddhiPackage.NOT: return createNOT();
      case SiddhiPackage.EVERY: return createEVERY();
      case SiddhiPackage.AND: return createAND();
      case SiddhiPackage.OR: return createOR();
      case SiddhiPackage.IN: return createIN();
      case SiddhiPackage.OF: return createOF();
      case SiddhiPackage.E: return createE();
      case SiddhiPackage.D: return createD();
      case SiddhiPackage.F: return createF();
      case SiddhiPackage.L: return createL();
      case SiddhiPackage.APP: return createAPP();
      case SiddhiPackage.STREAM: return createSTREAM();
      case SiddhiPackage.DEFINE: return createDEFINE();
      case SiddhiPackage.TABLE: return createTABLE();
      case SiddhiPackage.WINDOW: return createWINDOW();
      case SiddhiPackage.OUTPUT: return createOUTPUT();
      case SiddhiPackage.STRINGS: return createSTRINGS();
      case SiddhiPackage.INTS: return createINTS();
      case SiddhiPackage.LONG: return createLONG();
      case SiddhiPackage.DOUBLE: return createDOUBLE();
      case SiddhiPackage.FLOAT: return createFLOAT();
      case SiddhiPackage.BOOL: return createBOOL();
      case SiddhiPackage.OBJECT: return createOBJECT();
      case SiddhiPackage.ALL: return createALL();
      case SiddhiPackage.EVENTS: return createEVENTS();
      case SiddhiPackage.RAW: return createRAW();
      case SiddhiPackage.EXPIRED: return createEXPIRED();
      case SiddhiPackage.CURRENT: return createCURRENT();
      case SiddhiPackage.LAST: return createLAST();
      case SiddhiPackage.IS: return createIS();
      case SiddhiPackage.NULL: return createNULL();
      case SiddhiPackage.TRIGGER: return createTRIGGER();
      case SiddhiPackage.AT: return createAT();
      case SiddhiPackage.FUNCTION: return createFUNCTION();
      case SiddhiPackage.RETURN: return createRETURN();
      case SiddhiPackage.FROM: return createFROM();
      case SiddhiPackage.WITHIN: return createWITHIN();
      case SiddhiPackage.LEFT: return createLEFT();
      case SiddhiPackage.RIGHT: return createRIGHT();
      case SiddhiPackage.FULL: return createFULL();
      case SiddhiPackage.JOIN: return createJOIN();
      case SiddhiPackage.INNER: return createINNER();
      case SiddhiPackage.OUTER: return createOUTER();
      case SiddhiPackage.SELECT: return createSELECT();
      case SiddhiPackage.GROUP: return createGROUP();
      case SiddhiPackage.BY: return createBY();
      case SiddhiPackage.HAVING: return createHAVING();
      case SiddhiPackage.SNAPSHOT: return createSNAPSHOT();
      case SiddhiPackage.FIRST: return createFIRST();
      case SiddhiPackage.INSERT: return createINSERT();
      case SiddhiPackage.INTO: return createINTO();
      case SiddhiPackage.BEGIN: return createBEGIN();
      case SiddhiPackage.PLAN: return createPLAN();
      case SiddhiPackage.DELETE: return createDELETE();
      case SiddhiPackage.FOR: return createFOR();
      case SiddhiPackage.UPDATE: return createUPDATE();
      case SiddhiPackage.END: return createEND();
      case SiddhiPackage.PARTITION: return createPARTITION();
      case SiddhiPackage.WITH: return createWITH();
      case SiddhiPackage.AGGREGATION: return createAGGREGATION();
      case SiddhiPackage.AGGREGATE: return createAGGREGATE();
      case SiddhiPackage.SET: return createSET();
      case SiddhiPackage.PER: return createPER();
      case SiddhiPackage.YEARS: return createYEARS();
      case SiddhiPackage.MONTHS: return createMONTHS();
      case SiddhiPackage.WEEKS: return createWEEKS();
      case SiddhiPackage.DAYS: return createDAYS();
      case SiddhiPackage.HOURS: return createHOURS();
      case SiddhiPackage.MINUTES: return createMINUTES();
      case SiddhiPackage.SECONDS: return createSECONDS();
      case SiddhiPackage.MILLISECONDS: return createMILLISECONDS();
      case SiddhiPackage.FALSE: return createFALSE();
      case SiddhiPackage.TRUE: return createTRUE();
      case SiddhiPackage.LEFT_ABSENT_SEQUENCE_SOURCE1: return createLeftAbsentSequenceSource1();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE1: return createRightAbsentSequenceSource1();
      case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE1: return createLeftAbsentPatternSource1();
      case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE1: return createRightAbsentPatternSource1();
      case SiddhiPackage.MATH_LOGICAL_OPERATION: return createMathLogicalOperation();
      case SiddhiPackage.MATH_IN_OPERATION: return createMathInOperation();
      case SiddhiPackage.MATH_GT_LT_OPERATION: return createMathGtLtOperation();
      case SiddhiPackage.MATH_EQUAL_OPERATION: return createMathEqualOperation();
      case SiddhiPackage.NOT_OPERATION: return createNotOperation();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SiddhiQL createSiddhiQL()
  {
    SiddhiQLImpl siddhiQL = new SiddhiQLImpl();
    return siddhiQL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExecutionPlan createExecutionPlan()
  {
    ExecutionPlanImpl executionPlan = new ExecutionPlanImpl();
    return executionPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExecutionElement createExecutionElement()
  {
    ExecutionElementImpl executionElement = new ExecutionElementImpl();
    return executionElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefinitionStream createDefinitionStream()
  {
    DefinitionStreamImpl definitionStream = new DefinitionStreamImpl();
    return definitionStream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefinitionTable createDefinitionTable()
  {
    DefinitionTableImpl definitionTable = new DefinitionTableImpl();
    return definitionTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefinitionWindow createDefinitionWindow()
  {
    DefinitionWindowImpl definitionWindow = new DefinitionWindowImpl();
    return definitionWindow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefinitionTrigger createDefinitionTrigger()
  {
    DefinitionTriggerImpl definitionTrigger = new DefinitionTriggerImpl();
    return definitionTrigger;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefinitionFunction createDefinitionFunction()
  {
    DefinitionFunctionImpl definitionFunction = new DefinitionFunctionImpl();
    return definitionFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefinitionAggregation createDefinitionAggregation()
  {
    DefinitionAggregationImpl definitionAggregation = new DefinitionAggregationImpl();
    return definitionAggregation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AggregationTime createAggregationTime()
  {
    AggregationTimeImpl aggregationTime = new AggregationTimeImpl();
    return aggregationTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AggregationTimeInterval createAggregationTimeInterval()
  {
    AggregationTimeIntervalImpl aggregationTimeInterval = new AggregationTimeIntervalImpl();
    return aggregationTimeInterval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AggregationTimeDuration createAggregationTimeDuration()
  {
    AggregationTimeDurationImpl aggregationTimeDuration = new AggregationTimeDurationImpl();
    return aggregationTimeDuration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AggregationTimeRange createAggregationTimeRange()
  {
    AggregationTimeRangeImpl aggregationTimeRange = new AggregationTimeRangeImpl();
    return aggregationTimeRange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionName createFunctionName()
  {
    FunctionNameImpl functionName = new FunctionNameImpl();
    return functionName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LanguageName createLanguageName()
  {
    LanguageNameImpl languageName = new LanguageNameImpl();
    return languageName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionBody createFunctionBody()
  {
    FunctionBodyImpl functionBody = new FunctionBodyImpl();
    return functionBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TriggerName createTriggerName()
  {
    TriggerNameImpl triggerName = new TriggerNameImpl();
    return triggerName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AppAnnotation createAppAnnotation()
  {
    AppAnnotationImpl appAnnotation = new AppAnnotationImpl();
    return appAnnotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Annotation createAnnotation()
  {
    AnnotationImpl annotation = new AnnotationImpl();
    return annotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnnotationElement createAnnotationElement()
  {
    AnnotationElementImpl annotationElement = new AnnotationElementImpl();
    return annotationElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyValue createPropertyValue()
  {
    PropertyValueImpl propertyValue = new PropertyValueImpl();
    return propertyValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyName createPropertyName()
  {
    PropertyNameImpl propertyName = new PropertyNameImpl();
    return propertyName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertySeparator createPropertySeparator()
  {
    PropertySeparatorImpl propertySeparator = new PropertySeparatorImpl();
    return propertySeparator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Features createFeatures()
  {
    FeaturesImpl features = new FeaturesImpl();
    return features;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeType createAttributeType()
  {
    AttributeTypeImpl attributeType = new AttributeTypeImpl();
    return attributeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Source createSource()
  {
    SourceImpl source = new SourceImpl();
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Source1 createSource1()
  {
    Source1Impl source1 = new Source1Impl();
    return source1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExecPartition createExecPartition()
  {
    ExecPartitionImpl execPartition = new ExecPartitionImpl();
    return execPartition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PartitionWithStream createPartitionWithStream()
  {
    PartitionWithStreamImpl partitionWithStream = new PartitionWithStreamImpl();
    return partitionWithStream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConditionRanges createConditionRanges()
  {
    ConditionRangesImpl conditionRanges = new ConditionRangesImpl();
    return conditionRanges;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConditionRange createConditionRange()
  {
    ConditionRangeImpl conditionRange = new ConditionRangeImpl();
    return conditionRange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Query createQuery()
  {
    QueryImpl query = new QueryImpl();
    return query;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QueryOutput createQueryOutput()
  {
    QueryOutputImpl queryOutput = new QueryOutputImpl();
    return queryOutput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Target createTarget()
  {
    TargetImpl target = new TargetImpl();
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetClause createSetClause()
  {
    SetClauseImpl setClause = new SetClauseImpl();
    return setClause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetAssignment createSetAssignment()
  {
    SetAssignmentImpl setAssignment = new SetAssignmentImpl();
    return setAssignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutputEventType createOutputEventType()
  {
    OutputEventTypeImpl outputEventType = new OutputEventTypeImpl();
    return outputEventType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutputRate createOutputRate()
  {
    OutputRateImpl outputRate = new OutputRateImpl();
    return outputRate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutputRateType createOutputRateType()
  {
    OutputRateTypeImpl outputRateType = new OutputRateTypeImpl();
    return outputRateType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupByQuerySelection createGroupByQuerySelection()
  {
    GroupByQuerySelectionImpl groupByQuerySelection = new GroupByQuerySelectionImpl();
    return groupByQuerySelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QuerySection createQuerySection()
  {
    QuerySectionImpl querySection = new QuerySectionImpl();
    return querySection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupBy createGroupBy()
  {
    GroupByImpl groupBy = new GroupByImpl();
    return groupBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HavingExpr createHavingExpr()
  {
    HavingExprImpl havingExpr = new HavingExprImpl();
    return havingExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutputAttribute createOutputAttribute()
  {
    OutputAttributeImpl outputAttribute = new OutputAttributeImpl();
    return outputAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutAttr createOutAttr()
  {
    OutAttrImpl outAttr = new OutAttrImpl();
    return outAttr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QueryInput createQueryInput()
  {
    QueryInputImpl queryInput = new QueryInputImpl();
    return queryInput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceStream createSequenceStream()
  {
    SequenceStreamImpl sequenceStream = new SequenceStreamImpl();
    return sequenceStream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EverySequenceSourceChain createEverySequenceSourceChain()
  {
    EverySequenceSourceChainImpl everySequenceSourceChain = new EverySequenceSourceChainImpl();
    return everySequenceSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryAbsentSequenceSourceChain createEveryAbsentSequenceSourceChain()
  {
    EveryAbsentSequenceSourceChainImpl everyAbsentSequenceSourceChain = new EveryAbsentSequenceSourceChainImpl();
    return everyAbsentSequenceSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbsentSequenceSourceChain createAbsentSequenceSourceChain()
  {
    AbsentSequenceSourceChainImpl absentSequenceSourceChain = new AbsentSequenceSourceChainImpl();
    return absentSequenceSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeftAbsentSequenceSource createLeftAbsentSequenceSource()
  {
    LeftAbsentSequenceSourceImpl leftAbsentSequenceSource = new LeftAbsentSequenceSourceImpl();
    return leftAbsentSequenceSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentSequenceSource createRightAbsentSequenceSource()
  {
    RightAbsentSequenceSourceImpl rightAbsentSequenceSource = new RightAbsentSequenceSourceImpl();
    return rightAbsentSequenceSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceSourceChain createSequenceSourceChain()
  {
    SequenceSourceChainImpl sequenceSourceChain = new SequenceSourceChainImpl();
    return sequenceSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceSource createSequenceSource()
  {
    SequenceSourceImpl sequenceSource = new SequenceSourceImpl();
    return sequenceSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceCollectionStatefulSource createSequenceCollectionStatefulSource()
  {
    SequenceCollectionStatefulSourceImpl sequenceCollectionStatefulSource = new SequenceCollectionStatefulSourceImpl();
    return sequenceCollectionStatefulSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnonymousStream createAnonymousStream()
  {
    AnonymousStreamImpl anonymousStream = new AnonymousStreamImpl();
    return anonymousStream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PatternStream createPatternStream()
  {
    PatternStreamImpl patternStream = new PatternStreamImpl();
    return patternStream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryPatternSourceChain createEveryPatternSourceChain()
  {
    EveryPatternSourceChainImpl everyPatternSourceChain = new EveryPatternSourceChainImpl();
    return everyPatternSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PatternSourceChain createPatternSourceChain()
  {
    PatternSourceChainImpl patternSourceChain = new PatternSourceChainImpl();
    return patternSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PatternSource createPatternSource()
  {
    PatternSourceImpl patternSource = new PatternSourceImpl();
    return patternSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LogicalStatefulSource createLogicalStatefulSource()
  {
    LogicalStatefulSourceImpl logicalStatefulSource = new LogicalStatefulSourceImpl();
    return logicalStatefulSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PatternCollectionStatefulSource createPatternCollectionStatefulSource()
  {
    PatternCollectionStatefulSourceImpl patternCollectionStatefulSource = new PatternCollectionStatefulSourceImpl();
    return patternCollectionStatefulSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Collect createCollect()
  {
    CollectImpl collect = new CollectImpl();
    return collect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LogicalAbsentStatefulSource createLogicalAbsentStatefulSource()
  {
    LogicalAbsentStatefulSourceImpl logicalAbsentStatefulSource = new LogicalAbsentStatefulSourceImpl();
    return logicalAbsentStatefulSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbsentPatternSourceChain createAbsentPatternSourceChain()
  {
    AbsentPatternSourceChainImpl absentPatternSourceChain = new AbsentPatternSourceChainImpl();
    return absentPatternSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryAbsentPatternSource createEveryAbsentPatternSource()
  {
    EveryAbsentPatternSourceImpl everyAbsentPatternSource = new EveryAbsentPatternSourceImpl();
    return everyAbsentPatternSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicAbsentPatternSource createBasicAbsentPatternSource()
  {
    BasicAbsentPatternSourceImpl basicAbsentPatternSource = new BasicAbsentPatternSourceImpl();
    return basicAbsentPatternSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ForTime createForTime()
  {
    ForTimeImpl forTime = new ForTimeImpl();
    return forTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeftAbsentPatternSource createLeftAbsentPatternSource()
  {
    LeftAbsentPatternSourceImpl leftAbsentPatternSource = new LeftAbsentPatternSourceImpl();
    return leftAbsentPatternSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource createRightAbsentPatternSource()
  {
    RightAbsentPatternSourceImpl rightAbsentPatternSource = new RightAbsentPatternSourceImpl();
    return rightAbsentPatternSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JoinStream createJoinStream()
  {
    JoinStreamImpl joinStream = new JoinStreamImpl();
    return joinStream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WithinTimeRange createWithinTimeRange()
  {
    WithinTimeRangeImpl withinTimeRange = new WithinTimeRangeImpl();
    return withinTimeRange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Per1 createPer1()
  {
    Per1Impl per1 = new Per1Impl();
    return per1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JoinSource createJoinSource()
  {
    JoinSourceImpl joinSource = new JoinSourceImpl();
    return joinSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StreamAlias createStreamAlias()
  {
    StreamAliasImpl streamAlias = new StreamAliasImpl();
    return streamAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WithinTime createWithinTime()
  {
    WithinTimeImpl withinTime = new WithinTimeImpl();
    return withinTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public joins createjoins()
  {
    joinsImpl joins = new joinsImpl();
    return joins;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StandardStream createStandardStream()
  {
    StandardStreamImpl standardStream = new StandardStreamImpl();
    return standardStream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MainSource createMainSource()
  {
    MainSourceImpl mainSource = new MainSourceImpl();
    return mainSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicSourceStreamHandlers createBasicSourceStreamHandlers()
  {
    BasicSourceStreamHandlersImpl basicSourceStreamHandlers = new BasicSourceStreamHandlersImpl();
    return basicSourceStreamHandlers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicSourceStreamHandlers1 createBasicSourceStreamHandlers1()
  {
    BasicSourceStreamHandlers1Impl basicSourceStreamHandlers1 = new BasicSourceStreamHandlers1Impl();
    return basicSourceStreamHandlers1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicSourceStreamHandler createBasicSourceStreamHandler()
  {
    BasicSourceStreamHandlerImpl basicSourceStreamHandler = new BasicSourceStreamHandlerImpl();
    return basicSourceStreamHandler;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Filter createFilter()
  {
    FilterImpl filter = new FilterImpl();
    return filter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StreamFunction createStreamFunction()
  {
    StreamFunctionImpl streamFunction = new StreamFunctionImpl();
    return streamFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Win createWin()
  {
    WinImpl win = new WinImpl();
    return win;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathOperation createMathOperation()
  {
    MathOperationImpl mathOperation = new MathOperationImpl();
    return mathOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathAddsubOperation createMathAddsubOperation()
  {
    MathAddsubOperationImpl mathAddsubOperation = new MathAddsubOperationImpl();
    return mathAddsubOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathDivmulOperation createMathDivmulOperation()
  {
    MathDivmulOperationImpl mathDivmulOperation = new MathDivmulOperationImpl();
    return mathDivmulOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathOtherOperations createMathOtherOperations()
  {
    MathOtherOperationsImpl mathOtherOperations = new MathOtherOperationsImpl();
    return mathOtherOperations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NullCheck createNullCheck()
  {
    NullCheckImpl nullCheck = new NullCheckImpl();
    return nullCheck;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StreamReference createStreamReference()
  {
    StreamReferenceImpl streamReference = new StreamReferenceImpl();
    return streamReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Literal createLiteral()
  {
    LiteralImpl literal = new LiteralImpl();
    return literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeReference createAttributeReference()
  {
    AttributeReferenceImpl attributeReference = new AttributeReferenceImpl();
    return attributeReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FeaturesOrOutAttr createFeaturesOrOutAttr()
  {
    FeaturesOrOutAttrImpl featuresOrOutAttr = new FeaturesOrOutAttrImpl();
    return featuresOrOutAttr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FeaturesOrOutAttrReference createFeaturesOrOutAttrReference()
  {
    FeaturesOrOutAttrReferenceImpl featuresOrOutAttrReference = new FeaturesOrOutAttrReferenceImpl();
    return featuresOrOutAttrReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StandardStatefulSource createStandardStatefulSource()
  {
    StandardStatefulSourceImpl standardStatefulSource = new StandardStatefulSourceImpl();
    return standardStatefulSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicSource createBasicSource()
  {
    BasicSourceImpl basicSource = new BasicSourceImpl();
    return basicSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Source1OrStandardStatefulSource createSource1OrStandardStatefulSource()
  {
    Source1OrStandardStatefulSourceImpl source1OrStandardStatefulSource = new Source1OrStandardStatefulSourceImpl();
    return source1OrStandardStatefulSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SourceOrEventReference createSourceOrEventReference()
  {
    SourceOrEventReferenceImpl sourceOrEventReference = new SourceOrEventReferenceImpl();
    return sourceOrEventReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeNameReference createAttributeNameReference()
  {
    AttributeNameReferenceImpl attributeNameReference = new AttributeNameReferenceImpl();
    return attributeNameReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeIndex createAttributeIndex()
  {
    AttributeIndexImpl attributeIndex = new AttributeIndexImpl();
    return attributeIndex;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConstantValue createConstantValue()
  {
    ConstantValueImpl constantValue = new ConstantValueImpl();
    return constantValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionOperation createFunctionOperation()
  {
    FunctionOperationImpl functionOperation = new FunctionOperationImpl();
    return functionOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionNamespace createFunctionNamespace()
  {
    FunctionNamespaceImpl functionNamespace = new FunctionNamespaceImpl();
    return functionNamespace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionId createFunctionId()
  {
    FunctionIdImpl functionId = new FunctionIdImpl();
    return functionId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeList createAttributeList()
  {
    AttributeListImpl attributeList = new AttributeListImpl();
    return attributeList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Name createName()
  {
    NameImpl name = new NameImpl();
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolValue createBoolValue()
  {
    BoolValueImpl boolValue = new BoolValueImpl();
    return boolValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SignedDoubleValue createSignedDoubleValue()
  {
    SignedDoubleValueImpl signedDoubleValue = new SignedDoubleValueImpl();
    return signedDoubleValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SignedFloatValue createSignedFloatValue()
  {
    SignedFloatValueImpl signedFloatValue = new SignedFloatValueImpl();
    return signedFloatValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SignedLongValue createSignedLongValue()
  {
    SignedLongValueImpl signedLongValue = new SignedLongValueImpl();
    return signedLongValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringValue createStringValue()
  {
    StringValueImpl stringValue = new StringValueImpl();
    return stringValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TimeValue createTimeValue()
  {
    TimeValueImpl timeValue = new TimeValueImpl();
    return timeValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YearValue createYearValue()
  {
    YearValueImpl yearValue = new YearValueImpl();
    return yearValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MonthValue createMonthValue()
  {
    MonthValueImpl monthValue = new MonthValueImpl();
    return monthValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WeekValue createWeekValue()
  {
    WeekValueImpl weekValue = new WeekValueImpl();
    return weekValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DayValue createDayValue()
  {
    DayValueImpl dayValue = new DayValueImpl();
    return dayValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HourValue createHourValue()
  {
    HourValueImpl hourValue = new HourValueImpl();
    return hourValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MinuteValue createMinuteValue()
  {
    MinuteValueImpl minuteValue = new MinuteValueImpl();
    return minuteValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SecondValue createSecondValue()
  {
    SecondValueImpl secondValue = new SecondValueImpl();
    return secondValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MillisecondValue createMillisecondValue()
  {
    MillisecondValueImpl millisecondValue = new MillisecondValueImpl();
    return millisecondValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DOUBLE_LITERAL createDOUBLE_LITERAL()
  {
    DOUBLE_LITERALImpl doublE_LITERAL = new DOUBLE_LITERALImpl();
    return doublE_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FLOAT_LITERAL createFLOAT_LITERAL()
  {
    FLOAT_LITERALImpl floaT_LITERAL = new FLOAT_LITERALImpl();
    return floaT_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LONG_LITERAL createLONG_LITERAL()
  {
    LONG_LITERALImpl lonG_LITERAL = new LONG_LITERALImpl();
    return lonG_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Keyword createKeyword()
  {
    KeywordImpl keyword = new KeywordImpl();
    return keyword;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AS createAS()
  {
    ASImpl as = new ASImpl();
    return as;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ON createON()
  {
    ONImpl on = new ONImpl();
    return on;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UNIDIRECTIONAL createUNIDIRECTIONAL()
  {
    UNIDIRECTIONALImpl unidirectional = new UNIDIRECTIONALImpl();
    return unidirectional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NOT createNOT()
  {
    NOTImpl not = new NOTImpl();
    return not;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EVERY createEVERY()
  {
    EVERYImpl every = new EVERYImpl();
    return every;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AND createAND()
  {
    ANDImpl and = new ANDImpl();
    return and;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OR createOR()
  {
    ORImpl or = new ORImpl();
    return or;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IN createIN()
  {
    INImpl in = new INImpl();
    return in;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OF createOF()
  {
    OFImpl of = new OFImpl();
    return of;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public E createE()
  {
    EImpl e = new EImpl();
    return e;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public D createD()
  {
    DImpl d = new DImpl();
    return d;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public F createF()
  {
    FImpl f = new FImpl();
    return f;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public L createL()
  {
    LImpl l = new LImpl();
    return l;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public APP createAPP()
  {
    APPImpl app = new APPImpl();
    return app;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public STREAM createSTREAM()
  {
    STREAMImpl stream = new STREAMImpl();
    return stream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DEFINE createDEFINE()
  {
    DEFINEImpl define = new DEFINEImpl();
    return define;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TABLE createTABLE()
  {
    TABLEImpl table = new TABLEImpl();
    return table;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WINDOW createWINDOW()
  {
    WINDOWImpl window = new WINDOWImpl();
    return window;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OUTPUT createOUTPUT()
  {
    OUTPUTImpl output = new OUTPUTImpl();
    return output;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public STRINGS createSTRINGS()
  {
    STRINGSImpl strings = new STRINGSImpl();
    return strings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public INTS createINTS()
  {
    INTSImpl ints = new INTSImpl();
    return ints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LONG createLONG()
  {
    LONGImpl long_ = new LONGImpl();
    return long_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DOUBLE createDOUBLE()
  {
    DOUBLEImpl double_ = new DOUBLEImpl();
    return double_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FLOAT createFLOAT()
  {
    FLOATImpl float_ = new FLOATImpl();
    return float_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BOOL createBOOL()
  {
    BOOLImpl bool = new BOOLImpl();
    return bool;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OBJECT createOBJECT()
  {
    OBJECTImpl object = new OBJECTImpl();
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ALL createALL()
  {
    ALLImpl all = new ALLImpl();
    return all;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EVENTS createEVENTS()
  {
    EVENTSImpl events = new EVENTSImpl();
    return events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RAW createRAW()
  {
    RAWImpl raw = new RAWImpl();
    return raw;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EXPIRED createEXPIRED()
  {
    EXPIREDImpl expired = new EXPIREDImpl();
    return expired;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CURRENT createCURRENT()
  {
    CURRENTImpl current = new CURRENTImpl();
    return current;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LAST createLAST()
  {
    LASTImpl last = new LASTImpl();
    return last;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IS createIS()
  {
    ISImpl is = new ISImpl();
    return is;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NULL createNULL()
  {
    NULLImpl null_ = new NULLImpl();
    return null_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TRIGGER createTRIGGER()
  {
    TRIGGERImpl trigger = new TRIGGERImpl();
    return trigger;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AT createAT()
  {
    ATImpl at = new ATImpl();
    return at;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FUNCTION createFUNCTION()
  {
    FUNCTIONImpl function = new FUNCTIONImpl();
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RETURN createRETURN()
  {
    RETURNImpl return_ = new RETURNImpl();
    return return_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FROM createFROM()
  {
    FROMImpl from = new FROMImpl();
    return from;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WITHIN createWITHIN()
  {
    WITHINImpl within = new WITHINImpl();
    return within;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LEFT createLEFT()
  {
    LEFTImpl left = new LEFTImpl();
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RIGHT createRIGHT()
  {
    RIGHTImpl right = new RIGHTImpl();
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FULL createFULL()
  {
    FULLImpl full = new FULLImpl();
    return full;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JOIN createJOIN()
  {
    JOINImpl join = new JOINImpl();
    return join;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public INNER createINNER()
  {
    INNERImpl inner = new INNERImpl();
    return inner;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OUTER createOUTER()
  {
    OUTERImpl outer = new OUTERImpl();
    return outer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SELECT createSELECT()
  {
    SELECTImpl select = new SELECTImpl();
    return select;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GROUP createGROUP()
  {
    GROUPImpl group = new GROUPImpl();
    return group;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BY createBY()
  {
    BYImpl by = new BYImpl();
    return by;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HAVING createHAVING()
  {
    HAVINGImpl having = new HAVINGImpl();
    return having;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SNAPSHOT createSNAPSHOT()
  {
    SNAPSHOTImpl snapshot = new SNAPSHOTImpl();
    return snapshot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FIRST createFIRST()
  {
    FIRSTImpl first = new FIRSTImpl();
    return first;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public INSERT createINSERT()
  {
    INSERTImpl insert = new INSERTImpl();
    return insert;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public INTO createINTO()
  {
    INTOImpl into = new INTOImpl();
    return into;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BEGIN createBEGIN()
  {
    BEGINImpl begin = new BEGINImpl();
    return begin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PLAN createPLAN()
  {
    PLANImpl plan = new PLANImpl();
    return plan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DELETE createDELETE()
  {
    DELETEImpl delete = new DELETEImpl();
    return delete;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FOR createFOR()
  {
    FORImpl for_ = new FORImpl();
    return for_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UPDATE createUPDATE()
  {
    UPDATEImpl update = new UPDATEImpl();
    return update;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public END createEND()
  {
    ENDImpl end = new ENDImpl();
    return end;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PARTITION createPARTITION()
  {
    PARTITIONImpl partition = new PARTITIONImpl();
    return partition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WITH createWITH()
  {
    WITHImpl with = new WITHImpl();
    return with;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AGGREGATION createAGGREGATION()
  {
    AGGREGATIONImpl aggregation = new AGGREGATIONImpl();
    return aggregation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AGGREGATE createAGGREGATE()
  {
    AGGREGATEImpl aggregate = new AGGREGATEImpl();
    return aggregate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SET createSET()
  {
    SETImpl set = new SETImpl();
    return set;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PER createPER()
  {
    PERImpl per = new PERImpl();
    return per;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YEARS createYEARS()
  {
    YEARSImpl years = new YEARSImpl();
    return years;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MONTHS createMONTHS()
  {
    MONTHSImpl months = new MONTHSImpl();
    return months;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WEEKS createWEEKS()
  {
    WEEKSImpl weeks = new WEEKSImpl();
    return weeks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DAYS createDAYS()
  {
    DAYSImpl days = new DAYSImpl();
    return days;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HOURS createHOURS()
  {
    HOURSImpl hours = new HOURSImpl();
    return hours;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MINUTES createMINUTES()
  {
    MINUTESImpl minutes = new MINUTESImpl();
    return minutes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SECONDS createSECONDS()
  {
    SECONDSImpl seconds = new SECONDSImpl();
    return seconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MILLISECONDS createMILLISECONDS()
  {
    MILLISECONDSImpl milliseconds = new MILLISECONDSImpl();
    return milliseconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FALSE createFALSE()
  {
    FALSEImpl false_ = new FALSEImpl();
    return false_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TRUE createTRUE()
  {
    TRUEImpl true_ = new TRUEImpl();
    return true_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeftAbsentSequenceSource1 createLeftAbsentSequenceSource1()
  {
    LeftAbsentSequenceSource1Impl leftAbsentSequenceSource1 = new LeftAbsentSequenceSource1Impl();
    return leftAbsentSequenceSource1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentSequenceSource1 createRightAbsentSequenceSource1()
  {
    RightAbsentSequenceSource1Impl rightAbsentSequenceSource1 = new RightAbsentSequenceSource1Impl();
    return rightAbsentSequenceSource1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeftAbsentPatternSource1 createLeftAbsentPatternSource1()
  {
    LeftAbsentPatternSource1Impl leftAbsentPatternSource1 = new LeftAbsentPatternSource1Impl();
    return leftAbsentPatternSource1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource1 createRightAbsentPatternSource1()
  {
    RightAbsentPatternSource1Impl rightAbsentPatternSource1 = new RightAbsentPatternSource1Impl();
    return rightAbsentPatternSource1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathLogicalOperation createMathLogicalOperation()
  {
    MathLogicalOperationImpl mathLogicalOperation = new MathLogicalOperationImpl();
    return mathLogicalOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathInOperation createMathInOperation()
  {
    MathInOperationImpl mathInOperation = new MathInOperationImpl();
    return mathInOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathGtLtOperation createMathGtLtOperation()
  {
    MathGtLtOperationImpl mathGtLtOperation = new MathGtLtOperationImpl();
    return mathGtLtOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathEqualOperation createMathEqualOperation()
  {
    MathEqualOperationImpl mathEqualOperation = new MathEqualOperationImpl();
    return mathEqualOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotOperation createNotOperation()
  {
    NotOperationImpl notOperation = new NotOperationImpl();
    return notOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SiddhiPackage getSiddhiPackage()
  {
    return (SiddhiPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SiddhiPackage getPackage()
  {
    return SiddhiPackage.eINSTANCE;
  }

} //SiddhiFactoryImpl
