/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.siddhi.siddhi.Name;
import org.xtext.example.siddhi.siddhi.PropertyName;
import org.xtext.example.siddhi.siddhi.PropertySeparator;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Property Name</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.PropertyNameImpl#getNa <em>Na</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.PropertyNameImpl#getPs <em>Ps</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PropertyNameImpl extends MinimalEObjectImpl.Container implements PropertyName
{
  /**
   * The cached value of the '{@link #getNa() <em>Na</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNa()
   * @generated
   * @ordered
   */
  protected EList<Name> na;

  /**
   * The cached value of the '{@link #getPs() <em>Ps</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPs()
   * @generated
   * @ordered
   */
  protected EList<PropertySeparator> ps;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PropertyNameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getPropertyName();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Name> getNa()
  {
    if (na == null)
    {
      na = new EObjectContainmentEList<Name>(Name.class, this, SiddhiPackage.PROPERTY_NAME__NA);
    }
    return na;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PropertySeparator> getPs()
  {
    if (ps == null)
    {
      ps = new EObjectContainmentEList<PropertySeparator>(PropertySeparator.class, this, SiddhiPackage.PROPERTY_NAME__PS);
    }
    return ps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.PROPERTY_NAME__NA:
        return ((InternalEList<?>)getNa()).basicRemove(otherEnd, msgs);
      case SiddhiPackage.PROPERTY_NAME__PS:
        return ((InternalEList<?>)getPs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.PROPERTY_NAME__NA:
        return getNa();
      case SiddhiPackage.PROPERTY_NAME__PS:
        return getPs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.PROPERTY_NAME__NA:
        getNa().clear();
        getNa().addAll((Collection<? extends Name>)newValue);
        return;
      case SiddhiPackage.PROPERTY_NAME__PS:
        getPs().clear();
        getPs().addAll((Collection<? extends PropertySeparator>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.PROPERTY_NAME__NA:
        getNa().clear();
        return;
      case SiddhiPackage.PROPERTY_NAME__PS:
        getPs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.PROPERTY_NAME__NA:
        return na != null && !na.isEmpty();
      case SiddhiPackage.PROPERTY_NAME__PS:
        return ps != null && !ps.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //PropertyNameImpl
