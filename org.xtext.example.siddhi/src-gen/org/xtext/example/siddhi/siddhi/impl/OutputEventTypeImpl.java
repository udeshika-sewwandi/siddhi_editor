/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.siddhi.siddhi.CURRENT;
import org.xtext.example.siddhi.siddhi.EVENTS;
import org.xtext.example.siddhi.siddhi.EXPIRED;
import org.xtext.example.siddhi.siddhi.OutputEventType;
import org.xtext.example.siddhi.siddhi.RAW;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Output Event Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputEventTypeImpl#getEvents <em>Events</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputEventTypeImpl#getRaw <em>Raw</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputEventTypeImpl#getExpired <em>Expired</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.OutputEventTypeImpl#getCurrt <em>Currt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OutputEventTypeImpl extends ALLImpl implements OutputEventType
{
  /**
   * The default value of the '{@link #getEvents() <em>Events</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected static final String EVENTS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEvents() <em>Events</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected String events = EVENTS_EDEFAULT;

  /**
   * The default value of the '{@link #getRaw() <em>Raw</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRaw()
   * @generated
   * @ordered
   */
  protected static final String RAW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRaw() <em>Raw</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRaw()
   * @generated
   * @ordered
   */
  protected String raw = RAW_EDEFAULT;

  /**
   * The default value of the '{@link #getExpired() <em>Expired</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpired()
   * @generated
   * @ordered
   */
  protected static final String EXPIRED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpired() <em>Expired</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpired()
   * @generated
   * @ordered
   */
  protected String expired = EXPIRED_EDEFAULT;

  /**
   * The default value of the '{@link #getCurrt() <em>Currt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrt()
   * @generated
   * @ordered
   */
  protected static final String CURRT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrt() <em>Currt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrt()
   * @generated
   * @ordered
   */
  protected String currt = CURRT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OutputEventTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getOutputEventType();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEvents()
  {
    return events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvents(String newEvents)
  {
    String oldEvents = events;
    events = newEvents;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_EVENT_TYPE__EVENTS, oldEvents, events));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRaw()
  {
    return raw;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRaw(String newRaw)
  {
    String oldRaw = raw;
    raw = newRaw;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_EVENT_TYPE__RAW, oldRaw, raw));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getExpired()
  {
    return expired;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpired(String newExpired)
  {
    String oldExpired = expired;
    expired = newExpired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_EVENT_TYPE__EXPIRED, oldExpired, expired));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCurrt()
  {
    return currt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCurrt(String newCurrt)
  {
    String oldCurrt = currt;
    currt = newCurrt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.OUTPUT_EVENT_TYPE__CURRT, oldCurrt, currt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EVENTS:
        return getEvents();
      case SiddhiPackage.OUTPUT_EVENT_TYPE__RAW:
        return getRaw();
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EXPIRED:
        return getExpired();
      case SiddhiPackage.OUTPUT_EVENT_TYPE__CURRT:
        return getCurrt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EVENTS:
        setEvents((String)newValue);
        return;
      case SiddhiPackage.OUTPUT_EVENT_TYPE__RAW:
        setRaw((String)newValue);
        return;
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EXPIRED:
        setExpired((String)newValue);
        return;
      case SiddhiPackage.OUTPUT_EVENT_TYPE__CURRT:
        setCurrt((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EVENTS:
        setEvents(EVENTS_EDEFAULT);
        return;
      case SiddhiPackage.OUTPUT_EVENT_TYPE__RAW:
        setRaw(RAW_EDEFAULT);
        return;
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EXPIRED:
        setExpired(EXPIRED_EDEFAULT);
        return;
      case SiddhiPackage.OUTPUT_EVENT_TYPE__CURRT:
        setCurrt(CURRT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EVENTS:
        return EVENTS_EDEFAULT == null ? events != null : !EVENTS_EDEFAULT.equals(events);
      case SiddhiPackage.OUTPUT_EVENT_TYPE__RAW:
        return RAW_EDEFAULT == null ? raw != null : !RAW_EDEFAULT.equals(raw);
      case SiddhiPackage.OUTPUT_EVENT_TYPE__EXPIRED:
        return EXPIRED_EDEFAULT == null ? expired != null : !EXPIRED_EDEFAULT.equals(expired);
      case SiddhiPackage.OUTPUT_EVENT_TYPE__CURRT:
        return CURRT_EDEFAULT == null ? currt != null : !CURRT_EDEFAULT.equals(currt);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == EVENTS.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.OUTPUT_EVENT_TYPE__EVENTS: return SiddhiPackage.EVENTS__EVENTS;
        default: return -1;
      }
    }
    if (baseClass == RAW.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.OUTPUT_EVENT_TYPE__RAW: return SiddhiPackage.RAW__RAW;
        default: return -1;
      }
    }
    if (baseClass == EXPIRED.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.OUTPUT_EVENT_TYPE__EXPIRED: return SiddhiPackage.EXPIRED__EXPIRED;
        default: return -1;
      }
    }
    if (baseClass == CURRENT.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.OUTPUT_EVENT_TYPE__CURRT: return SiddhiPackage.CURRENT__CURRT;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == EVENTS.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EVENTS__EVENTS: return SiddhiPackage.OUTPUT_EVENT_TYPE__EVENTS;
        default: return -1;
      }
    }
    if (baseClass == RAW.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.RAW__RAW: return SiddhiPackage.OUTPUT_EVENT_TYPE__RAW;
        default: return -1;
      }
    }
    if (baseClass == EXPIRED.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EXPIRED__EXPIRED: return SiddhiPackage.OUTPUT_EVENT_TYPE__EXPIRED;
        default: return -1;
      }
    }
    if (baseClass == CURRENT.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.CURRENT__CURRT: return SiddhiPackage.OUTPUT_EVENT_TYPE__CURRT;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (events: ");
    result.append(events);
    result.append(", raw: ");
    result.append(raw);
    result.append(", expired: ");
    result.append(expired);
    result.append(", currt: ");
    result.append(currt);
    result.append(')');
    return result.toString();
  }

} //OutputEventTypeImpl
