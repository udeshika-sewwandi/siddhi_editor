/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.siddhi.siddhi.AbsentPatternSourceChain;
import org.xtext.example.siddhi.siddhi.AbsentSequenceSourceChain;
import org.xtext.example.siddhi.siddhi.BasicAbsentPatternSource;
import org.xtext.example.siddhi.siddhi.EVERY;
import org.xtext.example.siddhi.siddhi.EveryAbsentPatternSource;
import org.xtext.example.siddhi.siddhi.EveryAbsentSequenceSourceChain;
import org.xtext.example.siddhi.siddhi.EveryPatternSourceChain;
import org.xtext.example.siddhi.siddhi.EverySequenceSourceChain;
import org.xtext.example.siddhi.siddhi.LeftAbsentPatternSource;
import org.xtext.example.siddhi.siddhi.RightAbsentPatternSource;
import org.xtext.example.siddhi.siddhi.SequenceSource;
import org.xtext.example.siddhi.siddhi.SequenceSourceChain;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.WithinTime;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>EVERY</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getBasicAbsentPS <em>Basic Absent PS</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getFb1 <em>Fb1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getRight <em>Right</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getLeftAbsPS <em>Left Abs PS</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getWt2 <em>Wt2</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getEveryAbsPS <em>Every Abs PS</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getEveryPSC <em>Every PSC</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getLeftAbsPatternSrc <em>Left Abs Pattern Src</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getLeft1 <em>Left1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getFb2 <em>Fb2</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getRight1 <em>Right1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getRightAbsPS <em>Right Abs PS</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getWt3 <em>Wt3</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getEveryPSC1 <em>Every PSC1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getEveryAbsPS1 <em>Every Abs PS1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getSeqSource <em>Seq Source</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getWt <em>Wt</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getSsc <em>Ssc</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getAbsSeqSrcChain <em>Abs Seq Src Chain</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getSeqSrcChain <em>Seq Src Chain</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EVERYImpl#getEvery <em>Every</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EVERYImpl extends AbsentPatternSourceChainImpl implements EVERY
{
  /**
   * The cached value of the '{@link #getBasicAbsentPS() <em>Basic Absent PS</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasicAbsentPS()
   * @generated
   * @ordered
   */
  protected BasicAbsentPatternSource basicAbsentPS;

  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected LeftAbsentPatternSource left;

  /**
   * The default value of the '{@link #getFb1() <em>Fb1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFb1()
   * @generated
   * @ordered
   */
  protected static final String FB1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFb1() <em>Fb1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFb1()
   * @generated
   * @ordered
   */
  protected String fb1 = FB1_EDEFAULT;

  /**
   * The cached value of the '{@link #getRight() <em>Right</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight()
   * @generated
   * @ordered
   */
  protected AbsentPatternSourceChain right;

  /**
   * The cached value of the '{@link #getLeftAbsPS() <em>Left Abs PS</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftAbsPS()
   * @generated
   * @ordered
   */
  protected LeftAbsentPatternSource leftAbsPS;

  /**
   * The cached value of the '{@link #getWt2() <em>Wt2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWt2()
   * @generated
   * @ordered
   */
  protected EList<WithinTime> wt2;

  /**
   * The cached value of the '{@link #getEveryAbsPS() <em>Every Abs PS</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEveryAbsPS()
   * @generated
   * @ordered
   */
  protected EveryAbsentPatternSource everyAbsPS;

  /**
   * The cached value of the '{@link #getEveryPSC() <em>Every PSC</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEveryPSC()
   * @generated
   * @ordered
   */
  protected EveryPatternSourceChain everyPSC;

  /**
   * The cached value of the '{@link #getLeftAbsPatternSrc() <em>Left Abs Pattern Src</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftAbsPatternSrc()
   * @generated
   * @ordered
   */
  protected LeftAbsentPatternSource leftAbsPatternSrc;

  /**
   * The cached value of the '{@link #getLeft1() <em>Left1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft1()
   * @generated
   * @ordered
   */
  protected RightAbsentPatternSource left1;

  /**
   * The default value of the '{@link #getFb2() <em>Fb2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFb2()
   * @generated
   * @ordered
   */
  protected static final String FB2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFb2() <em>Fb2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFb2()
   * @generated
   * @ordered
   */
  protected String fb2 = FB2_EDEFAULT;

  /**
   * The cached value of the '{@link #getRight1() <em>Right1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight1()
   * @generated
   * @ordered
   */
  protected RightAbsentPatternSource right1;

  /**
   * The cached value of the '{@link #getRightAbsPS() <em>Right Abs PS</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightAbsPS()
   * @generated
   * @ordered
   */
  protected RightAbsentPatternSource rightAbsPS;

  /**
   * The cached value of the '{@link #getWt3() <em>Wt3</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWt3()
   * @generated
   * @ordered
   */
  protected EList<WithinTime> wt3;

  /**
   * The cached value of the '{@link #getEveryPSC1() <em>Every PSC1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEveryPSC1()
   * @generated
   * @ordered
   */
  protected EveryPatternSourceChain everyPSC1;

  /**
   * The cached value of the '{@link #getEveryAbsPS1() <em>Every Abs PS1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEveryAbsPS1()
   * @generated
   * @ordered
   */
  protected EveryAbsentPatternSource everyAbsPS1;

  /**
   * The cached value of the '{@link #getSeqSource() <em>Seq Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeqSource()
   * @generated
   * @ordered
   */
  protected SequenceSource seqSource;

  /**
   * The cached value of the '{@link #getWt() <em>Wt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWt()
   * @generated
   * @ordered
   */
  protected WithinTime wt;

  /**
   * The cached value of the '{@link #getSsc() <em>Ssc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSsc()
   * @generated
   * @ordered
   */
  protected SequenceSourceChain ssc;

  /**
   * The cached value of the '{@link #getAbsSeqSrcChain() <em>Abs Seq Src Chain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbsSeqSrcChain()
   * @generated
   * @ordered
   */
  protected AbsentSequenceSourceChain absSeqSrcChain;

  /**
   * The cached value of the '{@link #getSeqSrcChain() <em>Seq Src Chain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeqSrcChain()
   * @generated
   * @ordered
   */
  protected SequenceSourceChain seqSrcChain;

  /**
   * The default value of the '{@link #getEvery() <em>Every</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvery()
   * @generated
   * @ordered
   */
  protected static final String EVERY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEvery() <em>Every</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvery()
   * @generated
   * @ordered
   */
  protected String every = EVERY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EVERYImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getEVERY();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicAbsentPatternSource getBasicAbsentPS()
  {
    return basicAbsentPS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBasicAbsentPS(BasicAbsentPatternSource newBasicAbsentPS, NotificationChain msgs)
  {
    BasicAbsentPatternSource oldBasicAbsentPS = basicAbsentPS;
    basicAbsentPS = newBasicAbsentPS;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__BASIC_ABSENT_PS, oldBasicAbsentPS, newBasicAbsentPS);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBasicAbsentPS(BasicAbsentPatternSource newBasicAbsentPS)
  {
    if (newBasicAbsentPS != basicAbsentPS)
    {
      NotificationChain msgs = null;
      if (basicAbsentPS != null)
        msgs = ((InternalEObject)basicAbsentPS).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__BASIC_ABSENT_PS, null, msgs);
      if (newBasicAbsentPS != null)
        msgs = ((InternalEObject)newBasicAbsentPS).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__BASIC_ABSENT_PS, null, msgs);
      msgs = basicSetBasicAbsentPS(newBasicAbsentPS, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__BASIC_ABSENT_PS, newBasicAbsentPS, newBasicAbsentPS));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeftAbsentPatternSource getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft(LeftAbsentPatternSource newLeft, NotificationChain msgs)
  {
    LeftAbsentPatternSource oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT, oldLeft, newLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft(LeftAbsentPatternSource newLeft)
  {
    if (newLeft != left)
    {
      NotificationChain msgs = null;
      if (left != null)
        msgs = ((InternalEObject)left).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT, null, msgs);
      if (newLeft != null)
        msgs = ((InternalEObject)newLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT, null, msgs);
      msgs = basicSetLeft(newLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT, newLeft, newLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFb1()
  {
    return fb1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFb1(String newFb1)
  {
    String oldFb1 = fb1;
    fb1 = newFb1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__FB1, oldFb1, fb1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbsentPatternSourceChain getRight()
  {
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRight(AbsentPatternSourceChain newRight, NotificationChain msgs)
  {
    AbsentPatternSourceChain oldRight = right;
    right = newRight;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__RIGHT, oldRight, newRight);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight(AbsentPatternSourceChain newRight)
  {
    if (newRight != right)
    {
      NotificationChain msgs = null;
      if (right != null)
        msgs = ((InternalEObject)right).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__RIGHT, null, msgs);
      if (newRight != null)
        msgs = ((InternalEObject)newRight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__RIGHT, null, msgs);
      msgs = basicSetRight(newRight, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__RIGHT, newRight, newRight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeftAbsentPatternSource getLeftAbsPS()
  {
    return leftAbsPS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeftAbsPS(LeftAbsentPatternSource newLeftAbsPS, NotificationChain msgs)
  {
    LeftAbsentPatternSource oldLeftAbsPS = leftAbsPS;
    leftAbsPS = newLeftAbsPS;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT_ABS_PS, oldLeftAbsPS, newLeftAbsPS);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeftAbsPS(LeftAbsentPatternSource newLeftAbsPS)
  {
    if (newLeftAbsPS != leftAbsPS)
    {
      NotificationChain msgs = null;
      if (leftAbsPS != null)
        msgs = ((InternalEObject)leftAbsPS).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT_ABS_PS, null, msgs);
      if (newLeftAbsPS != null)
        msgs = ((InternalEObject)newLeftAbsPS).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT_ABS_PS, null, msgs);
      msgs = basicSetLeftAbsPS(newLeftAbsPS, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT_ABS_PS, newLeftAbsPS, newLeftAbsPS));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<WithinTime> getWt2()
  {
    if (wt2 == null)
    {
      wt2 = new EObjectContainmentEList<WithinTime>(WithinTime.class, this, SiddhiPackage.EVERY__WT2);
    }
    return wt2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryAbsentPatternSource getEveryAbsPS()
  {
    return everyAbsPS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEveryAbsPS(EveryAbsentPatternSource newEveryAbsPS, NotificationChain msgs)
  {
    EveryAbsentPatternSource oldEveryAbsPS = everyAbsPS;
    everyAbsPS = newEveryAbsPS;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_ABS_PS, oldEveryAbsPS, newEveryAbsPS);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEveryAbsPS(EveryAbsentPatternSource newEveryAbsPS)
  {
    if (newEveryAbsPS != everyAbsPS)
    {
      NotificationChain msgs = null;
      if (everyAbsPS != null)
        msgs = ((InternalEObject)everyAbsPS).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_ABS_PS, null, msgs);
      if (newEveryAbsPS != null)
        msgs = ((InternalEObject)newEveryAbsPS).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_ABS_PS, null, msgs);
      msgs = basicSetEveryAbsPS(newEveryAbsPS, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_ABS_PS, newEveryAbsPS, newEveryAbsPS));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryPatternSourceChain getEveryPSC()
  {
    return everyPSC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEveryPSC(EveryPatternSourceChain newEveryPSC, NotificationChain msgs)
  {
    EveryPatternSourceChain oldEveryPSC = everyPSC;
    everyPSC = newEveryPSC;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_PSC, oldEveryPSC, newEveryPSC);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEveryPSC(EveryPatternSourceChain newEveryPSC)
  {
    if (newEveryPSC != everyPSC)
    {
      NotificationChain msgs = null;
      if (everyPSC != null)
        msgs = ((InternalEObject)everyPSC).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_PSC, null, msgs);
      if (newEveryPSC != null)
        msgs = ((InternalEObject)newEveryPSC).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_PSC, null, msgs);
      msgs = basicSetEveryPSC(newEveryPSC, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_PSC, newEveryPSC, newEveryPSC));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeftAbsentPatternSource getLeftAbsPatternSrc()
  {
    return leftAbsPatternSrc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeftAbsPatternSrc(LeftAbsentPatternSource newLeftAbsPatternSrc, NotificationChain msgs)
  {
    LeftAbsentPatternSource oldLeftAbsPatternSrc = leftAbsPatternSrc;
    leftAbsPatternSrc = newLeftAbsPatternSrc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC, oldLeftAbsPatternSrc, newLeftAbsPatternSrc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeftAbsPatternSrc(LeftAbsentPatternSource newLeftAbsPatternSrc)
  {
    if (newLeftAbsPatternSrc != leftAbsPatternSrc)
    {
      NotificationChain msgs = null;
      if (leftAbsPatternSrc != null)
        msgs = ((InternalEObject)leftAbsPatternSrc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC, null, msgs);
      if (newLeftAbsPatternSrc != null)
        msgs = ((InternalEObject)newLeftAbsPatternSrc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC, null, msgs);
      msgs = basicSetLeftAbsPatternSrc(newLeftAbsPatternSrc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC, newLeftAbsPatternSrc, newLeftAbsPatternSrc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource getLeft1()
  {
    return left1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft1(RightAbsentPatternSource newLeft1, NotificationChain msgs)
  {
    RightAbsentPatternSource oldLeft1 = left1;
    left1 = newLeft1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT1, oldLeft1, newLeft1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft1(RightAbsentPatternSource newLeft1)
  {
    if (newLeft1 != left1)
    {
      NotificationChain msgs = null;
      if (left1 != null)
        msgs = ((InternalEObject)left1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT1, null, msgs);
      if (newLeft1 != null)
        msgs = ((InternalEObject)newLeft1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__LEFT1, null, msgs);
      msgs = basicSetLeft1(newLeft1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__LEFT1, newLeft1, newLeft1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFb2()
  {
    return fb2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFb2(String newFb2)
  {
    String oldFb2 = fb2;
    fb2 = newFb2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__FB2, oldFb2, fb2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource getRight1()
  {
    return right1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRight1(RightAbsentPatternSource newRight1, NotificationChain msgs)
  {
    RightAbsentPatternSource oldRight1 = right1;
    right1 = newRight1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__RIGHT1, oldRight1, newRight1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight1(RightAbsentPatternSource newRight1)
  {
    if (newRight1 != right1)
    {
      NotificationChain msgs = null;
      if (right1 != null)
        msgs = ((InternalEObject)right1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__RIGHT1, null, msgs);
      if (newRight1 != null)
        msgs = ((InternalEObject)newRight1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__RIGHT1, null, msgs);
      msgs = basicSetRight1(newRight1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__RIGHT1, newRight1, newRight1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentPatternSource getRightAbsPS()
  {
    return rightAbsPS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRightAbsPS(RightAbsentPatternSource newRightAbsPS, NotificationChain msgs)
  {
    RightAbsentPatternSource oldRightAbsPS = rightAbsPS;
    rightAbsPS = newRightAbsPS;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__RIGHT_ABS_PS, oldRightAbsPS, newRightAbsPS);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRightAbsPS(RightAbsentPatternSource newRightAbsPS)
  {
    if (newRightAbsPS != rightAbsPS)
    {
      NotificationChain msgs = null;
      if (rightAbsPS != null)
        msgs = ((InternalEObject)rightAbsPS).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__RIGHT_ABS_PS, null, msgs);
      if (newRightAbsPS != null)
        msgs = ((InternalEObject)newRightAbsPS).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__RIGHT_ABS_PS, null, msgs);
      msgs = basicSetRightAbsPS(newRightAbsPS, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__RIGHT_ABS_PS, newRightAbsPS, newRightAbsPS));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<WithinTime> getWt3()
  {
    if (wt3 == null)
    {
      wt3 = new EObjectContainmentEList<WithinTime>(WithinTime.class, this, SiddhiPackage.EVERY__WT3);
    }
    return wt3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryPatternSourceChain getEveryPSC1()
  {
    return everyPSC1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEveryPSC1(EveryPatternSourceChain newEveryPSC1, NotificationChain msgs)
  {
    EveryPatternSourceChain oldEveryPSC1 = everyPSC1;
    everyPSC1 = newEveryPSC1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_PSC1, oldEveryPSC1, newEveryPSC1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEveryPSC1(EveryPatternSourceChain newEveryPSC1)
  {
    if (newEveryPSC1 != everyPSC1)
    {
      NotificationChain msgs = null;
      if (everyPSC1 != null)
        msgs = ((InternalEObject)everyPSC1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_PSC1, null, msgs);
      if (newEveryPSC1 != null)
        msgs = ((InternalEObject)newEveryPSC1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_PSC1, null, msgs);
      msgs = basicSetEveryPSC1(newEveryPSC1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_PSC1, newEveryPSC1, newEveryPSC1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryAbsentPatternSource getEveryAbsPS1()
  {
    return everyAbsPS1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEveryAbsPS1(EveryAbsentPatternSource newEveryAbsPS1, NotificationChain msgs)
  {
    EveryAbsentPatternSource oldEveryAbsPS1 = everyAbsPS1;
    everyAbsPS1 = newEveryAbsPS1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_ABS_PS1, oldEveryAbsPS1, newEveryAbsPS1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEveryAbsPS1(EveryAbsentPatternSource newEveryAbsPS1)
  {
    if (newEveryAbsPS1 != everyAbsPS1)
    {
      NotificationChain msgs = null;
      if (everyAbsPS1 != null)
        msgs = ((InternalEObject)everyAbsPS1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_ABS_PS1, null, msgs);
      if (newEveryAbsPS1 != null)
        msgs = ((InternalEObject)newEveryAbsPS1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__EVERY_ABS_PS1, null, msgs);
      msgs = basicSetEveryAbsPS1(newEveryAbsPS1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY_ABS_PS1, newEveryAbsPS1, newEveryAbsPS1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceSource getSeqSource()
  {
    return seqSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSeqSource(SequenceSource newSeqSource, NotificationChain msgs)
  {
    SequenceSource oldSeqSource = seqSource;
    seqSource = newSeqSource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__SEQ_SOURCE, oldSeqSource, newSeqSource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSeqSource(SequenceSource newSeqSource)
  {
    if (newSeqSource != seqSource)
    {
      NotificationChain msgs = null;
      if (seqSource != null)
        msgs = ((InternalEObject)seqSource).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__SEQ_SOURCE, null, msgs);
      if (newSeqSource != null)
        msgs = ((InternalEObject)newSeqSource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__SEQ_SOURCE, null, msgs);
      msgs = basicSetSeqSource(newSeqSource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__SEQ_SOURCE, newSeqSource, newSeqSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WithinTime getWt()
  {
    return wt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWt(WithinTime newWt, NotificationChain msgs)
  {
    WithinTime oldWt = wt;
    wt = newWt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__WT, oldWt, newWt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWt(WithinTime newWt)
  {
    if (newWt != wt)
    {
      NotificationChain msgs = null;
      if (wt != null)
        msgs = ((InternalEObject)wt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__WT, null, msgs);
      if (newWt != null)
        msgs = ((InternalEObject)newWt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__WT, null, msgs);
      msgs = basicSetWt(newWt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__WT, newWt, newWt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceSourceChain getSsc()
  {
    return ssc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSsc(SequenceSourceChain newSsc, NotificationChain msgs)
  {
    SequenceSourceChain oldSsc = ssc;
    ssc = newSsc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__SSC, oldSsc, newSsc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSsc(SequenceSourceChain newSsc)
  {
    if (newSsc != ssc)
    {
      NotificationChain msgs = null;
      if (ssc != null)
        msgs = ((InternalEObject)ssc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__SSC, null, msgs);
      if (newSsc != null)
        msgs = ((InternalEObject)newSsc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__SSC, null, msgs);
      msgs = basicSetSsc(newSsc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__SSC, newSsc, newSsc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbsentSequenceSourceChain getAbsSeqSrcChain()
  {
    return absSeqSrcChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbsSeqSrcChain(AbsentSequenceSourceChain newAbsSeqSrcChain, NotificationChain msgs)
  {
    AbsentSequenceSourceChain oldAbsSeqSrcChain = absSeqSrcChain;
    absSeqSrcChain = newAbsSeqSrcChain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN, oldAbsSeqSrcChain, newAbsSeqSrcChain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbsSeqSrcChain(AbsentSequenceSourceChain newAbsSeqSrcChain)
  {
    if (newAbsSeqSrcChain != absSeqSrcChain)
    {
      NotificationChain msgs = null;
      if (absSeqSrcChain != null)
        msgs = ((InternalEObject)absSeqSrcChain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN, null, msgs);
      if (newAbsSeqSrcChain != null)
        msgs = ((InternalEObject)newAbsSeqSrcChain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN, null, msgs);
      msgs = basicSetAbsSeqSrcChain(newAbsSeqSrcChain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN, newAbsSeqSrcChain, newAbsSeqSrcChain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceSourceChain getSeqSrcChain()
  {
    return seqSrcChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSeqSrcChain(SequenceSourceChain newSeqSrcChain, NotificationChain msgs)
  {
    SequenceSourceChain oldSeqSrcChain = seqSrcChain;
    seqSrcChain = newSeqSrcChain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__SEQ_SRC_CHAIN, oldSeqSrcChain, newSeqSrcChain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSeqSrcChain(SequenceSourceChain newSeqSrcChain)
  {
    if (newSeqSrcChain != seqSrcChain)
    {
      NotificationChain msgs = null;
      if (seqSrcChain != null)
        msgs = ((InternalEObject)seqSrcChain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__SEQ_SRC_CHAIN, null, msgs);
      if (newSeqSrcChain != null)
        msgs = ((InternalEObject)newSeqSrcChain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY__SEQ_SRC_CHAIN, null, msgs);
      msgs = basicSetSeqSrcChain(newSeqSrcChain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__SEQ_SRC_CHAIN, newSeqSrcChain, newSeqSrcChain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEvery()
  {
    return every;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvery(String newEvery)
  {
    String oldEvery = every;
    every = newEvery;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY__EVERY, oldEvery, every));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY__BASIC_ABSENT_PS:
        return basicSetBasicAbsentPS(null, msgs);
      case SiddhiPackage.EVERY__LEFT:
        return basicSetLeft(null, msgs);
      case SiddhiPackage.EVERY__RIGHT:
        return basicSetRight(null, msgs);
      case SiddhiPackage.EVERY__LEFT_ABS_PS:
        return basicSetLeftAbsPS(null, msgs);
      case SiddhiPackage.EVERY__WT2:
        return ((InternalEList<?>)getWt2()).basicRemove(otherEnd, msgs);
      case SiddhiPackage.EVERY__EVERY_ABS_PS:
        return basicSetEveryAbsPS(null, msgs);
      case SiddhiPackage.EVERY__EVERY_PSC:
        return basicSetEveryPSC(null, msgs);
      case SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC:
        return basicSetLeftAbsPatternSrc(null, msgs);
      case SiddhiPackage.EVERY__LEFT1:
        return basicSetLeft1(null, msgs);
      case SiddhiPackage.EVERY__RIGHT1:
        return basicSetRight1(null, msgs);
      case SiddhiPackage.EVERY__RIGHT_ABS_PS:
        return basicSetRightAbsPS(null, msgs);
      case SiddhiPackage.EVERY__WT3:
        return ((InternalEList<?>)getWt3()).basicRemove(otherEnd, msgs);
      case SiddhiPackage.EVERY__EVERY_PSC1:
        return basicSetEveryPSC1(null, msgs);
      case SiddhiPackage.EVERY__EVERY_ABS_PS1:
        return basicSetEveryAbsPS1(null, msgs);
      case SiddhiPackage.EVERY__SEQ_SOURCE:
        return basicSetSeqSource(null, msgs);
      case SiddhiPackage.EVERY__WT:
        return basicSetWt(null, msgs);
      case SiddhiPackage.EVERY__SSC:
        return basicSetSsc(null, msgs);
      case SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN:
        return basicSetAbsSeqSrcChain(null, msgs);
      case SiddhiPackage.EVERY__SEQ_SRC_CHAIN:
        return basicSetSeqSrcChain(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY__BASIC_ABSENT_PS:
        return getBasicAbsentPS();
      case SiddhiPackage.EVERY__LEFT:
        return getLeft();
      case SiddhiPackage.EVERY__FB1:
        return getFb1();
      case SiddhiPackage.EVERY__RIGHT:
        return getRight();
      case SiddhiPackage.EVERY__LEFT_ABS_PS:
        return getLeftAbsPS();
      case SiddhiPackage.EVERY__WT2:
        return getWt2();
      case SiddhiPackage.EVERY__EVERY_ABS_PS:
        return getEveryAbsPS();
      case SiddhiPackage.EVERY__EVERY_PSC:
        return getEveryPSC();
      case SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC:
        return getLeftAbsPatternSrc();
      case SiddhiPackage.EVERY__LEFT1:
        return getLeft1();
      case SiddhiPackage.EVERY__FB2:
        return getFb2();
      case SiddhiPackage.EVERY__RIGHT1:
        return getRight1();
      case SiddhiPackage.EVERY__RIGHT_ABS_PS:
        return getRightAbsPS();
      case SiddhiPackage.EVERY__WT3:
        return getWt3();
      case SiddhiPackage.EVERY__EVERY_PSC1:
        return getEveryPSC1();
      case SiddhiPackage.EVERY__EVERY_ABS_PS1:
        return getEveryAbsPS1();
      case SiddhiPackage.EVERY__SEQ_SOURCE:
        return getSeqSource();
      case SiddhiPackage.EVERY__WT:
        return getWt();
      case SiddhiPackage.EVERY__SSC:
        return getSsc();
      case SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN:
        return getAbsSeqSrcChain();
      case SiddhiPackage.EVERY__SEQ_SRC_CHAIN:
        return getSeqSrcChain();
      case SiddhiPackage.EVERY__EVERY:
        return getEvery();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY__BASIC_ABSENT_PS:
        setBasicAbsentPS((BasicAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__LEFT:
        setLeft((LeftAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__FB1:
        setFb1((String)newValue);
        return;
      case SiddhiPackage.EVERY__RIGHT:
        setRight((AbsentPatternSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY__LEFT_ABS_PS:
        setLeftAbsPS((LeftAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__WT2:
        getWt2().clear();
        getWt2().addAll((Collection<? extends WithinTime>)newValue);
        return;
      case SiddhiPackage.EVERY__EVERY_ABS_PS:
        setEveryAbsPS((EveryAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__EVERY_PSC:
        setEveryPSC((EveryPatternSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC:
        setLeftAbsPatternSrc((LeftAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__LEFT1:
        setLeft1((RightAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__FB2:
        setFb2((String)newValue);
        return;
      case SiddhiPackage.EVERY__RIGHT1:
        setRight1((RightAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__RIGHT_ABS_PS:
        setRightAbsPS((RightAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__WT3:
        getWt3().clear();
        getWt3().addAll((Collection<? extends WithinTime>)newValue);
        return;
      case SiddhiPackage.EVERY__EVERY_PSC1:
        setEveryPSC1((EveryPatternSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY__EVERY_ABS_PS1:
        setEveryAbsPS1((EveryAbsentPatternSource)newValue);
        return;
      case SiddhiPackage.EVERY__SEQ_SOURCE:
        setSeqSource((SequenceSource)newValue);
        return;
      case SiddhiPackage.EVERY__WT:
        setWt((WithinTime)newValue);
        return;
      case SiddhiPackage.EVERY__SSC:
        setSsc((SequenceSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN:
        setAbsSeqSrcChain((AbsentSequenceSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY__SEQ_SRC_CHAIN:
        setSeqSrcChain((SequenceSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY__EVERY:
        setEvery((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY__BASIC_ABSENT_PS:
        setBasicAbsentPS((BasicAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__LEFT:
        setLeft((LeftAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__FB1:
        setFb1(FB1_EDEFAULT);
        return;
      case SiddhiPackage.EVERY__RIGHT:
        setRight((AbsentPatternSourceChain)null);
        return;
      case SiddhiPackage.EVERY__LEFT_ABS_PS:
        setLeftAbsPS((LeftAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__WT2:
        getWt2().clear();
        return;
      case SiddhiPackage.EVERY__EVERY_ABS_PS:
        setEveryAbsPS((EveryAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__EVERY_PSC:
        setEveryPSC((EveryPatternSourceChain)null);
        return;
      case SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC:
        setLeftAbsPatternSrc((LeftAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__LEFT1:
        setLeft1((RightAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__FB2:
        setFb2(FB2_EDEFAULT);
        return;
      case SiddhiPackage.EVERY__RIGHT1:
        setRight1((RightAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__RIGHT_ABS_PS:
        setRightAbsPS((RightAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__WT3:
        getWt3().clear();
        return;
      case SiddhiPackage.EVERY__EVERY_PSC1:
        setEveryPSC1((EveryPatternSourceChain)null);
        return;
      case SiddhiPackage.EVERY__EVERY_ABS_PS1:
        setEveryAbsPS1((EveryAbsentPatternSource)null);
        return;
      case SiddhiPackage.EVERY__SEQ_SOURCE:
        setSeqSource((SequenceSource)null);
        return;
      case SiddhiPackage.EVERY__WT:
        setWt((WithinTime)null);
        return;
      case SiddhiPackage.EVERY__SSC:
        setSsc((SequenceSourceChain)null);
        return;
      case SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN:
        setAbsSeqSrcChain((AbsentSequenceSourceChain)null);
        return;
      case SiddhiPackage.EVERY__SEQ_SRC_CHAIN:
        setSeqSrcChain((SequenceSourceChain)null);
        return;
      case SiddhiPackage.EVERY__EVERY:
        setEvery(EVERY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY__BASIC_ABSENT_PS:
        return basicAbsentPS != null;
      case SiddhiPackage.EVERY__LEFT:
        return left != null;
      case SiddhiPackage.EVERY__FB1:
        return FB1_EDEFAULT == null ? fb1 != null : !FB1_EDEFAULT.equals(fb1);
      case SiddhiPackage.EVERY__RIGHT:
        return right != null;
      case SiddhiPackage.EVERY__LEFT_ABS_PS:
        return leftAbsPS != null;
      case SiddhiPackage.EVERY__WT2:
        return wt2 != null && !wt2.isEmpty();
      case SiddhiPackage.EVERY__EVERY_ABS_PS:
        return everyAbsPS != null;
      case SiddhiPackage.EVERY__EVERY_PSC:
        return everyPSC != null;
      case SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC:
        return leftAbsPatternSrc != null;
      case SiddhiPackage.EVERY__LEFT1:
        return left1 != null;
      case SiddhiPackage.EVERY__FB2:
        return FB2_EDEFAULT == null ? fb2 != null : !FB2_EDEFAULT.equals(fb2);
      case SiddhiPackage.EVERY__RIGHT1:
        return right1 != null;
      case SiddhiPackage.EVERY__RIGHT_ABS_PS:
        return rightAbsPS != null;
      case SiddhiPackage.EVERY__WT3:
        return wt3 != null && !wt3.isEmpty();
      case SiddhiPackage.EVERY__EVERY_PSC1:
        return everyPSC1 != null;
      case SiddhiPackage.EVERY__EVERY_ABS_PS1:
        return everyAbsPS1 != null;
      case SiddhiPackage.EVERY__SEQ_SOURCE:
        return seqSource != null;
      case SiddhiPackage.EVERY__WT:
        return wt != null;
      case SiddhiPackage.EVERY__SSC:
        return ssc != null;
      case SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN:
        return absSeqSrcChain != null;
      case SiddhiPackage.EVERY__SEQ_SRC_CHAIN:
        return seqSrcChain != null;
      case SiddhiPackage.EVERY__EVERY:
        return EVERY_EDEFAULT == null ? every != null : !EVERY_EDEFAULT.equals(every);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == EveryAbsentPatternSource.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.EVERY__BASIC_ABSENT_PS: return SiddhiPackage.EVERY_ABSENT_PATTERN_SOURCE__BASIC_ABSENT_PS;
        default: return -1;
      }
    }
    if (baseClass == LeftAbsentPatternSource.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.EVERY__LEFT: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__LEFT;
        case SiddhiPackage.EVERY__FB1: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__FB1;
        case SiddhiPackage.EVERY__RIGHT: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__RIGHT;
        case SiddhiPackage.EVERY__LEFT_ABS_PS: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__LEFT_ABS_PS;
        case SiddhiPackage.EVERY__WT2: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__WT2;
        case SiddhiPackage.EVERY__EVERY_ABS_PS: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS;
        case SiddhiPackage.EVERY__EVERY_PSC: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__EVERY_PSC;
        case SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC: return SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__LEFT_ABS_PATTERN_SRC;
        default: return -1;
      }
    }
    if (baseClass == RightAbsentPatternSource.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.EVERY__LEFT1: return SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1;
        case SiddhiPackage.EVERY__FB2: return SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__FB2;
        case SiddhiPackage.EVERY__RIGHT1: return SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1;
        case SiddhiPackage.EVERY__RIGHT_ABS_PS: return SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS;
        case SiddhiPackage.EVERY__WT3: return SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3;
        case SiddhiPackage.EVERY__EVERY_PSC1: return SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1;
        case SiddhiPackage.EVERY__EVERY_ABS_PS1: return SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1;
        default: return -1;
      }
    }
    if (baseClass == EverySequenceSourceChain.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.EVERY__SEQ_SOURCE: return SiddhiPackage.EVERY_SEQUENCE_SOURCE_CHAIN__SEQ_SOURCE;
        case SiddhiPackage.EVERY__WT: return SiddhiPackage.EVERY_SEQUENCE_SOURCE_CHAIN__WT;
        case SiddhiPackage.EVERY__SSC: return SiddhiPackage.EVERY_SEQUENCE_SOURCE_CHAIN__SSC;
        default: return -1;
      }
    }
    if (baseClass == EveryAbsentSequenceSourceChain.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN: return SiddhiPackage.EVERY_ABSENT_SEQUENCE_SOURCE_CHAIN__ABS_SEQ_SRC_CHAIN;
        case SiddhiPackage.EVERY__SEQ_SRC_CHAIN: return SiddhiPackage.EVERY_ABSENT_SEQUENCE_SOURCE_CHAIN__SEQ_SRC_CHAIN;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == EveryAbsentPatternSource.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EVERY_ABSENT_PATTERN_SOURCE__BASIC_ABSENT_PS: return SiddhiPackage.EVERY__BASIC_ABSENT_PS;
        default: return -1;
      }
    }
    if (baseClass == LeftAbsentPatternSource.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__LEFT: return SiddhiPackage.EVERY__LEFT;
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__FB1: return SiddhiPackage.EVERY__FB1;
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__RIGHT: return SiddhiPackage.EVERY__RIGHT;
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__LEFT_ABS_PS: return SiddhiPackage.EVERY__LEFT_ABS_PS;
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__WT2: return SiddhiPackage.EVERY__WT2;
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS: return SiddhiPackage.EVERY__EVERY_ABS_PS;
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__EVERY_PSC: return SiddhiPackage.EVERY__EVERY_PSC;
        case SiddhiPackage.LEFT_ABSENT_PATTERN_SOURCE__LEFT_ABS_PATTERN_SRC: return SiddhiPackage.EVERY__LEFT_ABS_PATTERN_SRC;
        default: return -1;
      }
    }
    if (baseClass == RightAbsentPatternSource.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__LEFT1: return SiddhiPackage.EVERY__LEFT1;
        case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__FB2: return SiddhiPackage.EVERY__FB2;
        case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT1: return SiddhiPackage.EVERY__RIGHT1;
        case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__RIGHT_ABS_PS: return SiddhiPackage.EVERY__RIGHT_ABS_PS;
        case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__WT3: return SiddhiPackage.EVERY__WT3;
        case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_PSC1: return SiddhiPackage.EVERY__EVERY_PSC1;
        case SiddhiPackage.RIGHT_ABSENT_PATTERN_SOURCE__EVERY_ABS_PS1: return SiddhiPackage.EVERY__EVERY_ABS_PS1;
        default: return -1;
      }
    }
    if (baseClass == EverySequenceSourceChain.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EVERY_SEQUENCE_SOURCE_CHAIN__SEQ_SOURCE: return SiddhiPackage.EVERY__SEQ_SOURCE;
        case SiddhiPackage.EVERY_SEQUENCE_SOURCE_CHAIN__WT: return SiddhiPackage.EVERY__WT;
        case SiddhiPackage.EVERY_SEQUENCE_SOURCE_CHAIN__SSC: return SiddhiPackage.EVERY__SSC;
        default: return -1;
      }
    }
    if (baseClass == EveryAbsentSequenceSourceChain.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.EVERY_ABSENT_SEQUENCE_SOURCE_CHAIN__ABS_SEQ_SRC_CHAIN: return SiddhiPackage.EVERY__ABS_SEQ_SRC_CHAIN;
        case SiddhiPackage.EVERY_ABSENT_SEQUENCE_SOURCE_CHAIN__SEQ_SRC_CHAIN: return SiddhiPackage.EVERY__SEQ_SRC_CHAIN;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (fb1: ");
    result.append(fb1);
    result.append(", fb2: ");
    result.append(fb2);
    result.append(", every: ");
    result.append(every);
    result.append(')');
    return result.toString();
  }

} //EVERYImpl
