/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.siddhi.siddhi.EVERY;
import org.xtext.example.siddhi.siddhi.EveryPatternSourceChain;
import org.xtext.example.siddhi.siddhi.PatternSourceChain;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.WithinTime;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Every Pattern Source Chain</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EveryPatternSourceChainImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EveryPatternSourceChainImpl#getOp <em>Op</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EveryPatternSourceChainImpl#getRight <em>Right</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EveryPatternSourceChainImpl#getEps <em>Eps</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EveryPatternSourceChainImpl#getWt <em>Wt</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EveryPatternSourceChainImpl#getPsc <em>Psc</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.EveryPatternSourceChainImpl#getEvery <em>Every</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EveryPatternSourceChainImpl extends PatternStreamImpl implements EveryPatternSourceChain
{
  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected EveryPatternSourceChain left;

  /**
   * The default value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected static final String OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected String op = OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getRight() <em>Right</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight()
   * @generated
   * @ordered
   */
  protected EveryPatternSourceChain right;

  /**
   * The cached value of the '{@link #getEps() <em>Eps</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEps()
   * @generated
   * @ordered
   */
  protected EveryPatternSourceChain eps;

  /**
   * The cached value of the '{@link #getWt() <em>Wt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWt()
   * @generated
   * @ordered
   */
  protected WithinTime wt;

  /**
   * The cached value of the '{@link #getPsc() <em>Psc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPsc()
   * @generated
   * @ordered
   */
  protected PatternSourceChain psc;

  /**
   * The cached value of the '{@link #getEvery() <em>Every</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvery()
   * @generated
   * @ordered
   */
  protected EVERY every;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EveryPatternSourceChainImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getEveryPatternSourceChain();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryPatternSourceChain getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft(EveryPatternSourceChain newLeft, NotificationChain msgs)
  {
    EveryPatternSourceChain oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT, oldLeft, newLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft(EveryPatternSourceChain newLeft)
  {
    if (newLeft != left)
    {
      NotificationChain msgs = null;
      if (left != null)
        msgs = ((InternalEObject)left).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT, null, msgs);
      if (newLeft != null)
        msgs = ((InternalEObject)newLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT, null, msgs);
      msgs = basicSetLeft(newLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT, newLeft, newLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp(String newOp)
  {
    String oldOp = op;
    op = newOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__OP, oldOp, op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryPatternSourceChain getRight()
  {
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRight(EveryPatternSourceChain newRight, NotificationChain msgs)
  {
    EveryPatternSourceChain oldRight = right;
    right = newRight;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT, oldRight, newRight);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight(EveryPatternSourceChain newRight)
  {
    if (newRight != right)
    {
      NotificationChain msgs = null;
      if (right != null)
        msgs = ((InternalEObject)right).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT, null, msgs);
      if (newRight != null)
        msgs = ((InternalEObject)newRight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT, null, msgs);
      msgs = basicSetRight(newRight, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT, newRight, newRight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EveryPatternSourceChain getEps()
  {
    return eps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEps(EveryPatternSourceChain newEps, NotificationChain msgs)
  {
    EveryPatternSourceChain oldEps = eps;
    eps = newEps;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS, oldEps, newEps);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEps(EveryPatternSourceChain newEps)
  {
    if (newEps != eps)
    {
      NotificationChain msgs = null;
      if (eps != null)
        msgs = ((InternalEObject)eps).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS, null, msgs);
      if (newEps != null)
        msgs = ((InternalEObject)newEps).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS, null, msgs);
      msgs = basicSetEps(newEps, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS, newEps, newEps));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WithinTime getWt()
  {
    return wt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWt(WithinTime newWt, NotificationChain msgs)
  {
    WithinTime oldWt = wt;
    wt = newWt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT, oldWt, newWt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWt(WithinTime newWt)
  {
    if (newWt != wt)
    {
      NotificationChain msgs = null;
      if (wt != null)
        msgs = ((InternalEObject)wt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT, null, msgs);
      if (newWt != null)
        msgs = ((InternalEObject)newWt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT, null, msgs);
      msgs = basicSetWt(newWt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT, newWt, newWt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PatternSourceChain getPsc()
  {
    return psc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPsc(PatternSourceChain newPsc, NotificationChain msgs)
  {
    PatternSourceChain oldPsc = psc;
    psc = newPsc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC, oldPsc, newPsc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPsc(PatternSourceChain newPsc)
  {
    if (newPsc != psc)
    {
      NotificationChain msgs = null;
      if (psc != null)
        msgs = ((InternalEObject)psc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC, null, msgs);
      if (newPsc != null)
        msgs = ((InternalEObject)newPsc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC, null, msgs);
      msgs = basicSetPsc(newPsc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC, newPsc, newPsc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EVERY getEvery()
  {
    return every;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEvery(EVERY newEvery, NotificationChain msgs)
  {
    EVERY oldEvery = every;
    every = newEvery;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY, oldEvery, newEvery);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvery(EVERY newEvery)
  {
    if (newEvery != every)
    {
      NotificationChain msgs = null;
      if (every != null)
        msgs = ((InternalEObject)every).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY, null, msgs);
      if (newEvery != null)
        msgs = ((InternalEObject)newEvery).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY, null, msgs);
      msgs = basicSetEvery(newEvery, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY, newEvery, newEvery));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT:
        return basicSetLeft(null, msgs);
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT:
        return basicSetRight(null, msgs);
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS:
        return basicSetEps(null, msgs);
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT:
        return basicSetWt(null, msgs);
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC:
        return basicSetPsc(null, msgs);
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY:
        return basicSetEvery(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT:
        return getLeft();
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__OP:
        return getOp();
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT:
        return getRight();
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS:
        return getEps();
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT:
        return getWt();
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC:
        return getPsc();
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY:
        return getEvery();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT:
        setLeft((EveryPatternSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__OP:
        setOp((String)newValue);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT:
        setRight((EveryPatternSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS:
        setEps((EveryPatternSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT:
        setWt((WithinTime)newValue);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC:
        setPsc((PatternSourceChain)newValue);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY:
        setEvery((EVERY)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT:
        setLeft((EveryPatternSourceChain)null);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__OP:
        setOp(OP_EDEFAULT);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT:
        setRight((EveryPatternSourceChain)null);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS:
        setEps((EveryPatternSourceChain)null);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT:
        setWt((WithinTime)null);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC:
        setPsc((PatternSourceChain)null);
        return;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY:
        setEvery((EVERY)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__LEFT:
        return left != null;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__OP:
        return OP_EDEFAULT == null ? op != null : !OP_EDEFAULT.equals(op);
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__RIGHT:
        return right != null;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EPS:
        return eps != null;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__WT:
        return wt != null;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__PSC:
        return psc != null;
      case SiddhiPackage.EVERY_PATTERN_SOURCE_CHAIN__EVERY:
        return every != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (op: ");
    result.append(op);
    result.append(')');
    return result.toString();
  }

} //EveryPatternSourceChainImpl
