/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.siddhi.siddhi.Annotation;
import org.xtext.example.siddhi.siddhi.DefinitionStream;
import org.xtext.example.siddhi.siddhi.Features;
import org.xtext.example.siddhi.siddhi.STREAM;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.Source1;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Definition Stream</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.DefinitionStreamImpl#getStr <em>Str</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.DefinitionStreamImpl#getAnn <em>Ann</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.DefinitionStreamImpl#getSrc <em>Src</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.DefinitionStreamImpl#getFeature <em>Feature</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DefinitionStreamImpl extends DEFINEImpl implements DefinitionStream
{
  /**
   * The default value of the '{@link #getStr() <em>Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStr()
   * @generated
   * @ordered
   */
  protected static final String STR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStr() <em>Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStr()
   * @generated
   * @ordered
   */
  protected String str = STR_EDEFAULT;

  /**
   * The cached value of the '{@link #getAnn() <em>Ann</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnn()
   * @generated
   * @ordered
   */
  protected EList<Annotation> ann;

  /**
   * The cached value of the '{@link #getSrc() <em>Src</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSrc()
   * @generated
   * @ordered
   */
  protected Source1 src;

  /**
   * The cached value of the '{@link #getFeature() <em>Feature</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeature()
   * @generated
   * @ordered
   */
  protected EList<Features> feature;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DefinitionStreamImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getDefinitionStream();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStr()
  {
    return str;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStr(String newStr)
  {
    String oldStr = str;
    str = newStr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.DEFINITION_STREAM__STR, oldStr, str));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Annotation> getAnn()
  {
    if (ann == null)
    {
      ann = new EObjectContainmentEList<Annotation>(Annotation.class, this, SiddhiPackage.DEFINITION_STREAM__ANN);
    }
    return ann;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Source1 getSrc()
  {
    return src;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSrc(Source1 newSrc, NotificationChain msgs)
  {
    Source1 oldSrc = src;
    src = newSrc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.DEFINITION_STREAM__SRC, oldSrc, newSrc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSrc(Source1 newSrc)
  {
    if (newSrc != src)
    {
      NotificationChain msgs = null;
      if (src != null)
        msgs = ((InternalEObject)src).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.DEFINITION_STREAM__SRC, null, msgs);
      if (newSrc != null)
        msgs = ((InternalEObject)newSrc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.DEFINITION_STREAM__SRC, null, msgs);
      msgs = basicSetSrc(newSrc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.DEFINITION_STREAM__SRC, newSrc, newSrc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Features> getFeature()
  {
    if (feature == null)
    {
      feature = new EObjectContainmentEList<Features>(Features.class, this, SiddhiPackage.DEFINITION_STREAM__FEATURE);
    }
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.DEFINITION_STREAM__ANN:
        return ((InternalEList<?>)getAnn()).basicRemove(otherEnd, msgs);
      case SiddhiPackage.DEFINITION_STREAM__SRC:
        return basicSetSrc(null, msgs);
      case SiddhiPackage.DEFINITION_STREAM__FEATURE:
        return ((InternalEList<?>)getFeature()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.DEFINITION_STREAM__STR:
        return getStr();
      case SiddhiPackage.DEFINITION_STREAM__ANN:
        return getAnn();
      case SiddhiPackage.DEFINITION_STREAM__SRC:
        return getSrc();
      case SiddhiPackage.DEFINITION_STREAM__FEATURE:
        return getFeature();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.DEFINITION_STREAM__STR:
        setStr((String)newValue);
        return;
      case SiddhiPackage.DEFINITION_STREAM__ANN:
        getAnn().clear();
        getAnn().addAll((Collection<? extends Annotation>)newValue);
        return;
      case SiddhiPackage.DEFINITION_STREAM__SRC:
        setSrc((Source1)newValue);
        return;
      case SiddhiPackage.DEFINITION_STREAM__FEATURE:
        getFeature().clear();
        getFeature().addAll((Collection<? extends Features>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.DEFINITION_STREAM__STR:
        setStr(STR_EDEFAULT);
        return;
      case SiddhiPackage.DEFINITION_STREAM__ANN:
        getAnn().clear();
        return;
      case SiddhiPackage.DEFINITION_STREAM__SRC:
        setSrc((Source1)null);
        return;
      case SiddhiPackage.DEFINITION_STREAM__FEATURE:
        getFeature().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.DEFINITION_STREAM__STR:
        return STR_EDEFAULT == null ? str != null : !STR_EDEFAULT.equals(str);
      case SiddhiPackage.DEFINITION_STREAM__ANN:
        return ann != null && !ann.isEmpty();
      case SiddhiPackage.DEFINITION_STREAM__SRC:
        return src != null;
      case SiddhiPackage.DEFINITION_STREAM__FEATURE:
        return feature != null && !feature.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == STREAM.class)
    {
      switch (derivedFeatureID)
      {
        case SiddhiPackage.DEFINITION_STREAM__STR: return SiddhiPackage.STREAM__STR;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == STREAM.class)
    {
      switch (baseFeatureID)
      {
        case SiddhiPackage.STREAM__STR: return SiddhiPackage.DEFINITION_STREAM__STR;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (str: ");
    result.append(str);
    result.append(')');
    return result.toString();
  }

} //DefinitionStreamImpl
