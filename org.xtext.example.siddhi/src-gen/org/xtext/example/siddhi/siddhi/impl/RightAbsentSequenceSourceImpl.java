/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.siddhi.siddhi.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.siddhi.siddhi.BasicAbsentPatternSource;
import org.xtext.example.siddhi.siddhi.RightAbsentSequenceSource;
import org.xtext.example.siddhi.siddhi.SequenceSourceChain;
import org.xtext.example.siddhi.siddhi.SiddhiPackage;
import org.xtext.example.siddhi.siddhi.WithinTime;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Right Absent Sequence Source</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getLeft1 <em>Left1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getComm <em>Comm</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getRight1 <em>Right1</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getOp <em>Op</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getRightAbsentSequenceSource <em>Right Absent Sequence Source</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getCp <em>Cp</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getWt7 <em>Wt7</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getSequenceSourceChain <em>Sequence Source Chain</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getComma <em>Comma</em>}</li>
 *   <li>{@link org.xtext.example.siddhi.siddhi.impl.RightAbsentSequenceSourceImpl#getBasicAbsentPatternSource <em>Basic Absent Pattern Source</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RightAbsentSequenceSourceImpl extends MinimalEObjectImpl.Container implements RightAbsentSequenceSource
{
  /**
   * The cached value of the '{@link #getLeft1() <em>Left1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft1()
   * @generated
   * @ordered
   */
  protected RightAbsentSequenceSource left1;

  /**
   * The default value of the '{@link #getComm() <em>Comm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComm()
   * @generated
   * @ordered
   */
  protected static final String COMM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComm() <em>Comm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComm()
   * @generated
   * @ordered
   */
  protected String comm = COMM_EDEFAULT;

  /**
   * The cached value of the '{@link #getRight1() <em>Right1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight1()
   * @generated
   * @ordered
   */
  protected RightAbsentSequenceSource right1;

  /**
   * The default value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected static final String OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected String op = OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getRightAbsentSequenceSource() <em>Right Absent Sequence Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightAbsentSequenceSource()
   * @generated
   * @ordered
   */
  protected RightAbsentSequenceSource rightAbsentSequenceSource;

  /**
   * The default value of the '{@link #getCp() <em>Cp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCp()
   * @generated
   * @ordered
   */
  protected static final String CP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCp() <em>Cp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCp()
   * @generated
   * @ordered
   */
  protected String cp = CP_EDEFAULT;

  /**
   * The cached value of the '{@link #getWt7() <em>Wt7</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWt7()
   * @generated
   * @ordered
   */
  protected WithinTime wt7;

  /**
   * The cached value of the '{@link #getSequenceSourceChain() <em>Sequence Source Chain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSequenceSourceChain()
   * @generated
   * @ordered
   */
  protected SequenceSourceChain sequenceSourceChain;

  /**
   * The default value of the '{@link #getComma() <em>Comma</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComma()
   * @generated
   * @ordered
   */
  protected static final String COMMA_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComma() <em>Comma</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComma()
   * @generated
   * @ordered
   */
  protected String comma = COMMA_EDEFAULT;

  /**
   * The cached value of the '{@link #getBasicAbsentPatternSource() <em>Basic Absent Pattern Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasicAbsentPatternSource()
   * @generated
   * @ordered
   */
  protected BasicAbsentPatternSource basicAbsentPatternSource;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RightAbsentSequenceSourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SiddhiPackage.eINSTANCE.getRightAbsentSequenceSource();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentSequenceSource getLeft1()
  {
    return left1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft1(RightAbsentSequenceSource newLeft1, NotificationChain msgs)
  {
    RightAbsentSequenceSource oldLeft1 = left1;
    left1 = newLeft1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1, oldLeft1, newLeft1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft1(RightAbsentSequenceSource newLeft1)
  {
    if (newLeft1 != left1)
    {
      NotificationChain msgs = null;
      if (left1 != null)
        msgs = ((InternalEObject)left1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1, null, msgs);
      if (newLeft1 != null)
        msgs = ((InternalEObject)newLeft1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1, null, msgs);
      msgs = basicSetLeft1(newLeft1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1, newLeft1, newLeft1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getComm()
  {
    return comm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComm(String newComm)
  {
    String oldComm = comm;
    comm = newComm;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMM, oldComm, comm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentSequenceSource getRight1()
  {
    return right1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRight1(RightAbsentSequenceSource newRight1, NotificationChain msgs)
  {
    RightAbsentSequenceSource oldRight1 = right1;
    right1 = newRight1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1, oldRight1, newRight1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight1(RightAbsentSequenceSource newRight1)
  {
    if (newRight1 != right1)
    {
      NotificationChain msgs = null;
      if (right1 != null)
        msgs = ((InternalEObject)right1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1, null, msgs);
      if (newRight1 != null)
        msgs = ((InternalEObject)newRight1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1, null, msgs);
      msgs = basicSetRight1(newRight1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1, newRight1, newRight1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp(String newOp)
  {
    String oldOp = op;
    op = newOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__OP, oldOp, op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RightAbsentSequenceSource getRightAbsentSequenceSource()
  {
    return rightAbsentSequenceSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRightAbsentSequenceSource(RightAbsentSequenceSource newRightAbsentSequenceSource, NotificationChain msgs)
  {
    RightAbsentSequenceSource oldRightAbsentSequenceSource = rightAbsentSequenceSource;
    rightAbsentSequenceSource = newRightAbsentSequenceSource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE, oldRightAbsentSequenceSource, newRightAbsentSequenceSource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRightAbsentSequenceSource(RightAbsentSequenceSource newRightAbsentSequenceSource)
  {
    if (newRightAbsentSequenceSource != rightAbsentSequenceSource)
    {
      NotificationChain msgs = null;
      if (rightAbsentSequenceSource != null)
        msgs = ((InternalEObject)rightAbsentSequenceSource).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE, null, msgs);
      if (newRightAbsentSequenceSource != null)
        msgs = ((InternalEObject)newRightAbsentSequenceSource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE, null, msgs);
      msgs = basicSetRightAbsentSequenceSource(newRightAbsentSequenceSource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE, newRightAbsentSequenceSource, newRightAbsentSequenceSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCp()
  {
    return cp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCp(String newCp)
  {
    String oldCp = cp;
    cp = newCp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__CP, oldCp, cp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WithinTime getWt7()
  {
    return wt7;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWt7(WithinTime newWt7, NotificationChain msgs)
  {
    WithinTime oldWt7 = wt7;
    wt7 = newWt7;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7, oldWt7, newWt7);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWt7(WithinTime newWt7)
  {
    if (newWt7 != wt7)
    {
      NotificationChain msgs = null;
      if (wt7 != null)
        msgs = ((InternalEObject)wt7).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7, null, msgs);
      if (newWt7 != null)
        msgs = ((InternalEObject)newWt7).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7, null, msgs);
      msgs = basicSetWt7(newWt7, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7, newWt7, newWt7));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SequenceSourceChain getSequenceSourceChain()
  {
    return sequenceSourceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSequenceSourceChain(SequenceSourceChain newSequenceSourceChain, NotificationChain msgs)
  {
    SequenceSourceChain oldSequenceSourceChain = sequenceSourceChain;
    sequenceSourceChain = newSequenceSourceChain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN, oldSequenceSourceChain, newSequenceSourceChain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSequenceSourceChain(SequenceSourceChain newSequenceSourceChain)
  {
    if (newSequenceSourceChain != sequenceSourceChain)
    {
      NotificationChain msgs = null;
      if (sequenceSourceChain != null)
        msgs = ((InternalEObject)sequenceSourceChain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN, null, msgs);
      if (newSequenceSourceChain != null)
        msgs = ((InternalEObject)newSequenceSourceChain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN, null, msgs);
      msgs = basicSetSequenceSourceChain(newSequenceSourceChain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN, newSequenceSourceChain, newSequenceSourceChain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getComma()
  {
    return comma;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComma(String newComma)
  {
    String oldComma = comma;
    comma = newComma;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMMA, oldComma, comma));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicAbsentPatternSource getBasicAbsentPatternSource()
  {
    return basicAbsentPatternSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBasicAbsentPatternSource(BasicAbsentPatternSource newBasicAbsentPatternSource, NotificationChain msgs)
  {
    BasicAbsentPatternSource oldBasicAbsentPatternSource = basicAbsentPatternSource;
    basicAbsentPatternSource = newBasicAbsentPatternSource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE, oldBasicAbsentPatternSource, newBasicAbsentPatternSource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBasicAbsentPatternSource(BasicAbsentPatternSource newBasicAbsentPatternSource)
  {
    if (newBasicAbsentPatternSource != basicAbsentPatternSource)
    {
      NotificationChain msgs = null;
      if (basicAbsentPatternSource != null)
        msgs = ((InternalEObject)basicAbsentPatternSource).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE, null, msgs);
      if (newBasicAbsentPatternSource != null)
        msgs = ((InternalEObject)newBasicAbsentPatternSource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE, null, msgs);
      msgs = basicSetBasicAbsentPatternSource(newBasicAbsentPatternSource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE, newBasicAbsentPatternSource, newBasicAbsentPatternSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1:
        return basicSetLeft1(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1:
        return basicSetRight1(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE:
        return basicSetRightAbsentSequenceSource(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7:
        return basicSetWt7(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN:
        return basicSetSequenceSourceChain(null, msgs);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE:
        return basicSetBasicAbsentPatternSource(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1:
        return getLeft1();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMM:
        return getComm();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1:
        return getRight1();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__OP:
        return getOp();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE:
        return getRightAbsentSequenceSource();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__CP:
        return getCp();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7:
        return getWt7();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN:
        return getSequenceSourceChain();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMMA:
        return getComma();
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE:
        return getBasicAbsentPatternSource();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1:
        setLeft1((RightAbsentSequenceSource)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMM:
        setComm((String)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1:
        setRight1((RightAbsentSequenceSource)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__OP:
        setOp((String)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE:
        setRightAbsentSequenceSource((RightAbsentSequenceSource)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__CP:
        setCp((String)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7:
        setWt7((WithinTime)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN:
        setSequenceSourceChain((SequenceSourceChain)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMMA:
        setComma((String)newValue);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE:
        setBasicAbsentPatternSource((BasicAbsentPatternSource)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1:
        setLeft1((RightAbsentSequenceSource)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMM:
        setComm(COMM_EDEFAULT);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1:
        setRight1((RightAbsentSequenceSource)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__OP:
        setOp(OP_EDEFAULT);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE:
        setRightAbsentSequenceSource((RightAbsentSequenceSource)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__CP:
        setCp(CP_EDEFAULT);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7:
        setWt7((WithinTime)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN:
        setSequenceSourceChain((SequenceSourceChain)null);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMMA:
        setComma(COMMA_EDEFAULT);
        return;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE:
        setBasicAbsentPatternSource((BasicAbsentPatternSource)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__LEFT1:
        return left1 != null;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMM:
        return COMM_EDEFAULT == null ? comm != null : !COMM_EDEFAULT.equals(comm);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT1:
        return right1 != null;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__OP:
        return OP_EDEFAULT == null ? op != null : !OP_EDEFAULT.equals(op);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__RIGHT_ABSENT_SEQUENCE_SOURCE:
        return rightAbsentSequenceSource != null;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__CP:
        return CP_EDEFAULT == null ? cp != null : !CP_EDEFAULT.equals(cp);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__WT7:
        return wt7 != null;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__SEQUENCE_SOURCE_CHAIN:
        return sequenceSourceChain != null;
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__COMMA:
        return COMMA_EDEFAULT == null ? comma != null : !COMMA_EDEFAULT.equals(comma);
      case SiddhiPackage.RIGHT_ABSENT_SEQUENCE_SOURCE__BASIC_ABSENT_PATTERN_SOURCE:
        return basicAbsentPatternSource != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (comm: ");
    result.append(comm);
    result.append(", op: ");
    result.append(op);
    result.append(", cp: ");
    result.append(cp);
    result.append(", comma: ");
    result.append(comma);
    result.append(')');
    return result.toString();
  }

} //RightAbsentSequenceSourceImpl
