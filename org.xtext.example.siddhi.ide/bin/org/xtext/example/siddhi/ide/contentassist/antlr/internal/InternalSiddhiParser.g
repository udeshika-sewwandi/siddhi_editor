/*
 * generated by Xtext 2.11.0
 */
parser grammar InternalSiddhiParser;

options {
	tokenVocab=InternalSiddhiLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	memoize=true;
}

@header {
package org.xtext.example.siddhi.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.siddhi.services.SiddhiGrammarAccess;

}
@members {
	private SiddhiGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("NumberSign", "'#'");
		tokenNameToValue.put("PercentSign", "'\%'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("QuestionMark", "'?'");
		tokenNameToValue.put("CommercialAt", "'@'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("D", "'d'");
		tokenNameToValue.put("E", "'e'");
		tokenNameToValue.put("F", "'f'");
		tokenNameToValue.put("L", "'l'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("HyphenMinusGreaterThanSign", "'->'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("As", "'as'");
		tokenNameToValue.put("At", "'at'");
		tokenNameToValue.put("By", "'by'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Is", "'is'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("On", "'on'");
		tokenNameToValue.put("Or", "'or'");
		tokenNameToValue.put("FullStopFullStopFullStop", "'...'");
		tokenNameToValue.put("All", "'all'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("App", "'app'");
		tokenNameToValue.put("Day", "'day'");
		tokenNameToValue.put("End", "'end'");
		tokenNameToValue.put("For", "'for'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("Min", "'min'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Per", "'per'");
		tokenNameToValue.put("Raw", "'raw'");
		tokenNameToValue.put("Sec", "'sec'");
		tokenNameToValue.put("Set", "'set'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Days", "'days'");
		tokenNameToValue.put("From", "'from'");
		tokenNameToValue.put("Full", "'full'");
		tokenNameToValue.put("Hour", "'hour'");
		tokenNameToValue.put("Into", "'into'");
		tokenNameToValue.put("Join", "'join'");
		tokenNameToValue.put("Last", "'last'");
		tokenNameToValue.put("Left", "'left'");
		tokenNameToValue.put("Long", "'long'");
		tokenNameToValue.put("Null", "'null'");
		tokenNameToValue.put("Plan", "'plan'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Week", "'week'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("Year", "'year'");
		tokenNameToValue.put("Begin", "'begin'");
		tokenNameToValue.put("Every", "'every'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("First", "'first'");
		tokenNameToValue.put("Float", "'float'");
		tokenNameToValue.put("Group", "'group'");
		tokenNameToValue.put("Hours", "'hours'");
		tokenNameToValue.put("Inner", "'inner'");
		tokenNameToValue.put("Month", "'month'");
		tokenNameToValue.put("Outer", "'outer'");
		tokenNameToValue.put("Right", "'right'");
		tokenNameToValue.put("Table", "'table'");
		tokenNameToValue.put("Weeks", "'weeks'");
		tokenNameToValue.put("Years", "'years'");
		tokenNameToValue.put("Define", "'define'");
		tokenNameToValue.put("Delete", "'delete'");
		tokenNameToValue.put("Double", "'double'");
		tokenNameToValue.put("Events", "'events'");
		tokenNameToValue.put("Having", "'having'");
		tokenNameToValue.put("Insert", "'insert'");
		tokenNameToValue.put("Minute", "'minute'");
		tokenNameToValue.put("Months", "'months'");
		tokenNameToValue.put("Object", "'object'");
		tokenNameToValue.put("Output", "'output'");
		tokenNameToValue.put("Return", "'return'");
		tokenNameToValue.put("Second", "'second'");
		tokenNameToValue.put("Select", "'select'");
		tokenNameToValue.put("Stream", "'stream'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("Update", "'update'");
		tokenNameToValue.put("Window", "'window'");
		tokenNameToValue.put("Within", "'within'");
		tokenNameToValue.put("Current", "'current'");
		tokenNameToValue.put("Expired", "'expired'");
		tokenNameToValue.put("Minutes", "'minutes'");
		tokenNameToValue.put("Seconds", "'seconds'");
		tokenNameToValue.put("Trigger", "'trigger'");
		tokenNameToValue.put("Function", "'function'");
		tokenNameToValue.put("Millisec", "'millisec'");
		tokenNameToValue.put("Snapshot", "'snapshot'");
		tokenNameToValue.put("Aggregate", "'aggregate'");
		tokenNameToValue.put("Partition", "'partition'");
		tokenNameToValue.put("Aggregation", "'aggregation'");
		tokenNameToValue.put("Millisecond", "'millisecond'");
		tokenNameToValue.put("Milliseconds", "'milliseconds'");
		tokenNameToValue.put("Unidirectional", "'unidirectional'");
	}

	public void setGrammarAccess(SiddhiGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleSiddhiQL
entryRuleSiddhiQL
:
{ before(grammarAccess.getSiddhiQLRule()); }
	 ruleSiddhiQL
{ after(grammarAccess.getSiddhiQLRule()); } 
	 EOF 
;

// Rule SiddhiQL
ruleSiddhiQL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSiddhiQLAccess().getElementsAssignment()); }
		(rule__SiddhiQL__ElementsAssignment)*
		{ after(grammarAccess.getSiddhiQLAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExecutionPlan
entryRuleExecutionPlan
:
{ before(grammarAccess.getExecutionPlanRule()); }
	 ruleExecutionPlan
{ after(grammarAccess.getExecutionPlanRule()); } 
	 EOF 
;

// Rule ExecutionPlan
ruleExecutionPlan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getGroup()); }
		(rule__ExecutionPlan__Group__0)
		{ after(grammarAccess.getExecutionPlanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExecutionElement
entryRuleExecutionElement
:
{ before(grammarAccess.getExecutionElementRule()); }
	 ruleExecutionElement
{ after(grammarAccess.getExecutionElementRule()); } 
	 EOF 
;

// Rule ExecutionElement
ruleExecutionElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExecutionElementAccess().getAlternatives()); }
		(rule__ExecutionElement__Alternatives)
		{ after(grammarAccess.getExecutionElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionStream
entryRuleDefinitionStream
:
{ before(grammarAccess.getDefinitionStreamRule()); }
	 ruleDefinitionStream
{ after(grammarAccess.getDefinitionStreamRule()); } 
	 EOF 
;

// Rule DefinitionStream
ruleDefinitionStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionStreamAccess().getGroup()); }
		(rule__DefinitionStream__Group__0)
		{ after(grammarAccess.getDefinitionStreamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionTable
entryRuleDefinitionTable
:
{ before(grammarAccess.getDefinitionTableRule()); }
	 ruleDefinitionTable
{ after(grammarAccess.getDefinitionTableRule()); } 
	 EOF 
;

// Rule DefinitionTable
ruleDefinitionTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionTableAccess().getGroup()); }
		(rule__DefinitionTable__Group__0)
		{ after(grammarAccess.getDefinitionTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionWindow
entryRuleDefinitionWindow
:
{ before(grammarAccess.getDefinitionWindowRule()); }
	 ruleDefinitionWindow
{ after(grammarAccess.getDefinitionWindowRule()); } 
	 EOF 
;

// Rule DefinitionWindow
ruleDefinitionWindow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionWindowAccess().getGroup()); }
		(rule__DefinitionWindow__Group__0)
		{ after(grammarAccess.getDefinitionWindowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionTrigger
entryRuleDefinitionTrigger
:
{ before(grammarAccess.getDefinitionTriggerRule()); }
	 ruleDefinitionTrigger
{ after(grammarAccess.getDefinitionTriggerRule()); } 
	 EOF 
;

// Rule DefinitionTrigger
ruleDefinitionTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionTriggerAccess().getGroup()); }
		(rule__DefinitionTrigger__Group__0)
		{ after(grammarAccess.getDefinitionTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionFunction
entryRuleDefinitionFunction
:
{ before(grammarAccess.getDefinitionFunctionRule()); }
	 ruleDefinitionFunction
{ after(grammarAccess.getDefinitionFunctionRule()); } 
	 EOF 
;

// Rule DefinitionFunction
ruleDefinitionFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionFunctionAccess().getGroup()); }
		(rule__DefinitionFunction__Group__0)
		{ after(grammarAccess.getDefinitionFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionAggregation
entryRuleDefinitionAggregation
:
{ before(grammarAccess.getDefinitionAggregationRule()); }
	 ruleDefinitionAggregation
{ after(grammarAccess.getDefinitionAggregationRule()); } 
	 EOF 
;

// Rule DefinitionAggregation
ruleDefinitionAggregation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getGroup()); }
		(rule__DefinitionAggregation__Group__0)
		{ after(grammarAccess.getDefinitionAggregationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregationTime
entryRuleAggregationTime
:
{ before(grammarAccess.getAggregationTimeRule()); }
	 ruleAggregationTime
{ after(grammarAccess.getAggregationTimeRule()); } 
	 EOF 
;

// Rule AggregationTime
ruleAggregationTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregationTimeAccess().getAlternatives()); }
		(rule__AggregationTime__Alternatives)
		{ after(grammarAccess.getAggregationTimeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleaggregation_time_interval
entryRuleaggregation_time_interval
:
{ before(grammarAccess.getAggregation_time_intervalRule()); }
	 ruleaggregation_time_interval
{ after(grammarAccess.getAggregation_time_intervalRule()); } 
	 EOF 
;

// Rule aggregation_time_interval
ruleaggregation_time_interval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregation_time_intervalAccess().getGroup()); }
		(rule__Aggregation_time_interval__Group__0)
		{ after(grammarAccess.getAggregation_time_intervalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregationTimeDuration
entryRuleAggregationTimeDuration
:
{ before(grammarAccess.getAggregationTimeDurationRule()); }
	 ruleAggregationTimeDuration
{ after(grammarAccess.getAggregationTimeDurationRule()); } 
	 EOF 
;

// Rule AggregationTimeDuration
ruleAggregationTimeDuration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getAlternatives()); }
		(rule__AggregationTimeDuration__Alternatives)
		{ after(grammarAccess.getAggregationTimeDurationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregationTimeRange
entryRuleAggregationTimeRange
:
{ before(grammarAccess.getAggregationTimeRangeRule()); }
	 ruleAggregationTimeRange
{ after(grammarAccess.getAggregationTimeRangeRule()); } 
	 EOF 
;

// Rule AggregationTimeRange
ruleAggregationTimeRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregationTimeRangeAccess().getGroup()); }
		(rule__AggregationTimeRange__Group__0)
		{ after(grammarAccess.getAggregationTimeRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionName
entryRuleFunctionName
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIdAssignment()); }
		(rule__FunctionName__IdAssignment)
		{ after(grammarAccess.getFunctionNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageName
entryRuleLanguageName
:
{ before(grammarAccess.getLanguageNameRule()); }
	 ruleLanguageName
{ after(grammarAccess.getLanguageNameRule()); } 
	 EOF 
;

// Rule LanguageName
ruleLanguageName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageNameAccess().getIdAssignment()); }
		(rule__LanguageName__IdAssignment)
		{ after(grammarAccess.getLanguageNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getValueAssignment()); }
		(rule__FunctionBody__ValueAssignment)
		{ after(grammarAccess.getFunctionBodyAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTriggerName
entryRuleTriggerName
:
{ before(grammarAccess.getTriggerNameRule()); }
	 ruleTriggerName
{ after(grammarAccess.getTriggerNameRule()); } 
	 EOF 
;

// Rule TriggerName
ruleTriggerName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerNameAccess().getIdAssignment()); }
		(rule__TriggerName__IdAssignment)
		{ after(grammarAccess.getTriggerNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAppAnnotation
entryRuleAppAnnotation
:
{ before(grammarAccess.getAppAnnotationRule()); }
	 ruleAppAnnotation
{ after(grammarAccess.getAppAnnotationRule()); } 
	 EOF 
;

// Rule AppAnnotation
ruleAppAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAppAnnotationAccess().getGroup()); }
		(rule__AppAnnotation__Group__0)
		{ after(grammarAccess.getAppAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationElement
entryRuleAnnotationElement
:
{ before(grammarAccess.getAnnotationElementRule()); }
	 ruleAnnotationElement
{ after(grammarAccess.getAnnotationElementRule()); } 
	 EOF 
;

// Rule AnnotationElement
ruleAnnotationElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationElementAccess().getGroup()); }
		(rule__AnnotationElement__Group__0)
		{ after(grammarAccess.getAnnotationElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyValue
entryRulePropertyValue
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyValueAccess().getSvAssignment()); }
		(rule__PropertyValue__SvAssignment)
		{ after(grammarAccess.getPropertyValueAccess().getSvAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyName
entryRulePropertyName
:
{ before(grammarAccess.getPropertyNameRule()); }
	 rulePropertyName
{ after(grammarAccess.getPropertyNameRule()); } 
	 EOF 
;

// Rule PropertyName
rulePropertyName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyNameAccess().getGroup()); }
		(rule__PropertyName__Group__0)
		{ after(grammarAccess.getPropertyNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertySeparator
entryRulePropertySeparator
:
{ before(grammarAccess.getPropertySeparatorRule()); }
	 rulePropertySeparator
{ after(grammarAccess.getPropertySeparatorRule()); } 
	 EOF 
;

// Rule PropertySeparator
rulePropertySeparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertySeparatorAccess().getAlternatives()); }
		(rule__PropertySeparator__Alternatives)
		{ after(grammarAccess.getPropertySeparatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatures
entryRuleFeatures
:
{ before(grammarAccess.getFeaturesRule()); }
	 ruleFeatures
{ after(grammarAccess.getFeaturesRule()); } 
	 EOF 
;

// Rule Features
ruleFeatures 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeaturesAccess().getGroup()); }
		(rule__Features__Group__0)
		{ after(grammarAccess.getFeaturesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeType
entryRuleAttributeType
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
		(rule__AttributeType__Alternatives)
		{ after(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExecPartition
entryRuleExecPartition
:
{ before(grammarAccess.getExecPartitionRule()); }
	 ruleExecPartition
{ after(grammarAccess.getExecPartitionRule()); } 
	 EOF 
;

// Rule ExecPartition
ruleExecPartition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExecPartitionAccess().getGroup()); }
		(rule__ExecPartition__Group__0)
		{ after(grammarAccess.getExecPartitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePartitionWithStream
entryRulePartitionWithStream
:
{ before(grammarAccess.getPartitionWithStreamRule()); }
	 rulePartitionWithStream
{ after(grammarAccess.getPartitionWithStreamRule()); } 
	 EOF 
;

// Rule PartitionWithStream
rulePartitionWithStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartitionWithStreamAccess().getGroup()); }
		(rule__PartitionWithStream__Group__0)
		{ after(grammarAccess.getPartitionWithStreamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionRanges
entryRuleConditionRanges
:
{ before(grammarAccess.getConditionRangesRule()); }
	 ruleConditionRanges
{ after(grammarAccess.getConditionRangesRule()); } 
	 EOF 
;

// Rule ConditionRanges
ruleConditionRanges 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionRangesAccess().getGroup()); }
		(rule__ConditionRanges__Group__0)
		{ after(grammarAccess.getConditionRangesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionRange
entryRuleConditionRange
:
{ before(grammarAccess.getConditionRangeRule()); }
	 ruleConditionRange
{ after(grammarAccess.getConditionRangeRule()); } 
	 EOF 
;

// Rule ConditionRange
ruleConditionRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionRangeAccess().getGroup()); }
		(rule__ConditionRange__Group__0)
		{ after(grammarAccess.getConditionRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getGroup()); }
		(rule__Query__Group__0)
		{ after(grammarAccess.getQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryInput
entryRuleQueryInput
:
{ before(grammarAccess.getQueryInputRule()); }
	 ruleQueryInput
{ after(grammarAccess.getQueryInputRule()); } 
	 EOF 
;

// Rule QueryInput
ruleQueryInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryInputAccess().getGroup()); }
		(rule__QueryInput__Group__0)
		{ after(grammarAccess.getQueryInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinStream
entryRuleJoinStream
:
{ before(grammarAccess.getJoinStreamRule()); }
	 ruleJoinStream
{ after(grammarAccess.getJoinStreamRule()); } 
	 EOF 
;

// Rule JoinStream
ruleJoinStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinStreamAccess().getAlternatives()); }
		(rule__JoinStream__Alternatives)
		{ after(grammarAccess.getJoinStreamAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinSource
entryRuleJoinSource
:
{ before(grammarAccess.getJoinSourceRule()); }
	 ruleJoinSource
{ after(grammarAccess.getJoinSourceRule()); } 
	 EOF 
;

// Rule JoinSource
ruleJoinSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinSourceAccess().getGroup()); }
		(rule__JoinSource__Group__0)
		{ after(grammarAccess.getJoinSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamAlias
entryRuleStreamAlias
:
{ before(grammarAccess.getStreamAliasRule()); }
	 ruleStreamAlias
{ after(grammarAccess.getStreamAliasRule()); } 
	 EOF 
;

// Rule StreamAlias
ruleStreamAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamAliasAccess().getNaAssignment()); }
		(rule__StreamAlias__NaAssignment)
		{ after(grammarAccess.getStreamAliasAccess().getNaAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulejoins
entryRulejoins
:
{ before(grammarAccess.getJoinsRule()); }
	 rulejoins
{ after(grammarAccess.getJoinsRule()); } 
	 EOF 
;

// Rule joins
rulejoins 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinsAccess().getAlternatives()); }
		(rule__Joins__Alternatives)
		{ after(grammarAccess.getJoinsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardStream
entryRuleStandardStream
:
{ before(grammarAccess.getStandardStreamRule()); }
	 ruleStandardStream
{ after(grammarAccess.getStandardStreamRule()); } 
	 EOF 
;

// Rule StandardStream
ruleStandardStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardStreamAccess().getGroup()); }
		(rule__StandardStream__Group__0)
		{ after(grammarAccess.getStandardStreamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainSource
entryRuleMainSource
:
{ before(grammarAccess.getMainSourceRule()); }
	 ruleMainSource
{ after(grammarAccess.getMainSourceRule()); } 
	 EOF 
;

// Rule MainSource
ruleMainSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainSourceAccess().getGroup()); }
		(rule__MainSource__Group__0)
		{ after(grammarAccess.getMainSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternStream
entryRulePatternStream
:
{ before(grammarAccess.getPatternStreamRule()); }
	 rulePatternStream
{ after(grammarAccess.getPatternStreamRule()); } 
	 EOF 
;

// Rule PatternStream
rulePatternStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternStreamAccess().getAlternatives()); }
		(rule__PatternStream__Alternatives)
		{ after(grammarAccess.getPatternStreamAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEveryPatternSourceChain
entryRuleEveryPatternSourceChain
:
{ before(grammarAccess.getEveryPatternSourceChainRule()); }
	 ruleEveryPatternSourceChain
{ after(grammarAccess.getEveryPatternSourceChainRule()); } 
	 EOF 
;

// Rule EveryPatternSourceChain
ruleEveryPatternSourceChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEveryPatternSourceChainAccess().getGroup()); }
		(rule__EveryPatternSourceChain__Group__0)
		{ after(grammarAccess.getEveryPatternSourceChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEveryPatternSourceChain1
entryRuleEveryPatternSourceChain1
:
{ before(grammarAccess.getEveryPatternSourceChain1Rule()); }
	 ruleEveryPatternSourceChain1
{ after(grammarAccess.getEveryPatternSourceChain1Rule()); } 
	 EOF 
;

// Rule EveryPatternSourceChain1
ruleEveryPatternSourceChain1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getAlternatives()); }
		(rule__EveryPatternSourceChain1__Alternatives)
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternSourceChain
entryRulePatternSourceChain
:
{ before(grammarAccess.getPatternSourceChainRule()); }
	 rulePatternSourceChain
{ after(grammarAccess.getPatternSourceChainRule()); } 
	 EOF 
;

// Rule PatternSourceChain
rulePatternSourceChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternSourceChainAccess().getGroup()); }
		(rule__PatternSourceChain__Group__0)
		{ after(grammarAccess.getPatternSourceChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternSourceChain1
entryRulePatternSourceChain1
:
{ before(grammarAccess.getPatternSourceChain1Rule()); }
	 rulePatternSourceChain1
{ after(grammarAccess.getPatternSourceChain1Rule()); } 
	 EOF 
;

// Rule PatternSourceChain1
rulePatternSourceChain1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternSourceChain1Access().getAlternatives()); }
		(rule__PatternSourceChain1__Alternatives)
		{ after(grammarAccess.getPatternSourceChain1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternSource
entryRulePatternSource
:
{ before(grammarAccess.getPatternSourceRule()); }
	 rulePatternSource
{ after(grammarAccess.getPatternSourceRule()); } 
	 EOF 
;

// Rule PatternSource
rulePatternSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternSourceAccess().getAlternatives()); }
		(rule__PatternSource__Alternatives)
		{ after(grammarAccess.getPatternSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalStatefulSource
entryRuleLogicalStatefulSource
:
{ before(grammarAccess.getLogicalStatefulSourceRule()); }
	 ruleLogicalStatefulSource
{ after(grammarAccess.getLogicalStatefulSourceRule()); } 
	 EOF 
;

// Rule LogicalStatefulSource
ruleLogicalStatefulSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getAlternatives()); }
		(rule__LogicalStatefulSource__Alternatives)
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternCollectionStatefulSource
entryRulePatternCollectionStatefulSource
:
{ before(grammarAccess.getPatternCollectionStatefulSourceRule()); }
	 rulePatternCollectionStatefulSource
{ after(grammarAccess.getPatternCollectionStatefulSourceRule()); } 
	 EOF 
;

// Rule PatternCollectionStatefulSource
rulePatternCollectionStatefulSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternCollectionStatefulSourceAccess().getGroup()); }
		(rule__PatternCollectionStatefulSource__Group__0)
		{ after(grammarAccess.getPatternCollectionStatefulSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollect
entryRuleCollect
:
{ before(grammarAccess.getCollectRule()); }
	 ruleCollect
{ after(grammarAccess.getCollectRule()); } 
	 EOF 
;

// Rule Collect
ruleCollect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectAccess().getGroup()); }
		(rule__Collect__Group__0)
		{ after(grammarAccess.getCollectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWithinTime
entryRuleWithinTime
:
{ before(grammarAccess.getWithinTimeRule()); }
	 ruleWithinTime
{ after(grammarAccess.getWithinTimeRule()); } 
	 EOF 
;

// Rule WithinTime
ruleWithinTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWithinTimeAccess().getGroup()); }
		(rule__WithinTime__Group__0)
		{ after(grammarAccess.getWithinTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAbsentStatefulSource
entryRuleLogicalAbsentStatefulSource
:
{ before(grammarAccess.getLogicalAbsentStatefulSourceRule()); }
	 ruleLogicalAbsentStatefulSource
{ after(grammarAccess.getLogicalAbsentStatefulSourceRule()); } 
	 EOF 
;

// Rule LogicalAbsentStatefulSource
ruleLogicalAbsentStatefulSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAlternatives()); }
		(rule__LogicalAbsentStatefulSource__Alternatives)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbsentPatternSourceChain
entryRuleAbsentPatternSourceChain
:
{ before(grammarAccess.getAbsentPatternSourceChainRule()); }
	 ruleAbsentPatternSourceChain
{ after(grammarAccess.getAbsentPatternSourceChainRule()); } 
	 EOF 
;

// Rule AbsentPatternSourceChain
ruleAbsentPatternSourceChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbsentPatternSourceChainAccess().getAlternatives()); }
		(rule__AbsentPatternSourceChain__Alternatives)
		{ after(grammarAccess.getAbsentPatternSourceChainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEveryAbsentPatternSource
entryRuleEveryAbsentPatternSource
:
{ before(grammarAccess.getEveryAbsentPatternSourceRule()); }
	 ruleEveryAbsentPatternSource
{ after(grammarAccess.getEveryAbsentPatternSourceRule()); } 
	 EOF 
;

// Rule EveryAbsentPatternSource
ruleEveryAbsentPatternSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEveryAbsentPatternSourceAccess().getGroup()); }
		(rule__EveryAbsentPatternSource__Group__0)
		{ after(grammarAccess.getEveryAbsentPatternSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicAbsentPatternSource
entryRuleBasicAbsentPatternSource
:
{ before(grammarAccess.getBasicAbsentPatternSourceRule()); }
	 ruleBasicAbsentPatternSource
{ after(grammarAccess.getBasicAbsentPatternSourceRule()); } 
	 EOF 
;

// Rule BasicAbsentPatternSource
ruleBasicAbsentPatternSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicAbsentPatternSourceAccess().getGroup()); }
		(rule__BasicAbsentPatternSource__Group__0)
		{ after(grammarAccess.getBasicAbsentPatternSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForTime
entryRuleForTime
:
{ before(grammarAccess.getForTimeRule()); }
	 ruleForTime
{ after(grammarAccess.getForTimeRule()); } 
	 EOF 
;

// Rule ForTime
ruleForTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForTimeAccess().getGroup()); }
		(rule__ForTime__Group__0)
		{ after(grammarAccess.getForTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftAbsentPatternSource
entryRuleLeftAbsentPatternSource
:
{ before(grammarAccess.getLeftAbsentPatternSourceRule()); }
	 ruleLeftAbsentPatternSource
{ after(grammarAccess.getLeftAbsentPatternSourceRule()); } 
	 EOF 
;

// Rule LeftAbsentPatternSource
ruleLeftAbsentPatternSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getGroup()); }
		(rule__LeftAbsentPatternSource__Group__0)
		{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftAbsentPatternSource1
entryRuleLeftAbsentPatternSource1
:
{ before(grammarAccess.getLeftAbsentPatternSource1Rule()); }
	 ruleLeftAbsentPatternSource1
{ after(grammarAccess.getLeftAbsentPatternSource1Rule()); } 
	 EOF 
;

// Rule LeftAbsentPatternSource1
ruleLeftAbsentPatternSource1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource1Access().getGroup()); }
		(rule__LeftAbsentPatternSource1__Group__0)
		{ after(grammarAccess.getLeftAbsentPatternSource1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftAbsentPatternSource2
entryRuleLeftAbsentPatternSource2
:
{ before(grammarAccess.getLeftAbsentPatternSource2Rule()); }
	 ruleLeftAbsentPatternSource2
{ after(grammarAccess.getLeftAbsentPatternSource2Rule()); } 
	 EOF 
;

// Rule LeftAbsentPatternSource2
ruleLeftAbsentPatternSource2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getAlternatives()); }
		(rule__LeftAbsentPatternSource2__Alternatives)
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightAbsentPatternSource
entryRuleRightAbsentPatternSource
:
{ before(grammarAccess.getRightAbsentPatternSourceRule()); }
	 ruleRightAbsentPatternSource
{ after(grammarAccess.getRightAbsentPatternSourceRule()); } 
	 EOF 
;

// Rule RightAbsentPatternSource
ruleRightAbsentPatternSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAbsentPatternSourceAccess().getGroup()); }
		(rule__RightAbsentPatternSource__Group__0)
		{ after(grammarAccess.getRightAbsentPatternSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightAbsentPatternSource1
entryRuleRightAbsentPatternSource1
:
{ before(grammarAccess.getRightAbsentPatternSource1Rule()); }
	 ruleRightAbsentPatternSource1
{ after(grammarAccess.getRightAbsentPatternSource1Rule()); } 
	 EOF 
;

// Rule RightAbsentPatternSource1
ruleRightAbsentPatternSource1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAbsentPatternSource1Access().getGroup()); }
		(rule__RightAbsentPatternSource1__Group__0)
		{ after(grammarAccess.getRightAbsentPatternSource1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightAbsentPatternSource2
entryRuleRightAbsentPatternSource2
:
{ before(grammarAccess.getRightAbsentPatternSource2Rule()); }
	 ruleRightAbsentPatternSource2
{ after(grammarAccess.getRightAbsentPatternSource2Rule()); } 
	 EOF 
;

// Rule RightAbsentPatternSource2
ruleRightAbsentPatternSource2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getAlternatives()); }
		(rule__RightAbsentPatternSource2__Alternatives)
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceStream
entryRuleSequenceStream
:
{ before(grammarAccess.getSequenceStreamRule()); }
	 ruleSequenceStream
{ after(grammarAccess.getSequenceStreamRule()); } 
	 EOF 
;

// Rule SequenceStream
ruleSequenceStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceStreamAccess().getAlternatives()); }
		(rule__SequenceStream__Alternatives)
		{ after(grammarAccess.getSequenceStreamAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEverySequenceSourceChain
entryRuleEverySequenceSourceChain
:
{ before(grammarAccess.getEverySequenceSourceChainRule()); }
	 ruleEverySequenceSourceChain
{ after(grammarAccess.getEverySequenceSourceChainRule()); } 
	 EOF 
;

// Rule EverySequenceSourceChain
ruleEverySequenceSourceChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEverySequenceSourceChainAccess().getGroup()); }
		(rule__EverySequenceSourceChain__Group__0)
		{ after(grammarAccess.getEverySequenceSourceChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEveryAbsentSequenceSourceChain
entryRuleEveryAbsentSequenceSourceChain
:
{ before(grammarAccess.getEveryAbsentSequenceSourceChainRule()); }
	 ruleEveryAbsentSequenceSourceChain
{ after(grammarAccess.getEveryAbsentSequenceSourceChainRule()); } 
	 EOF 
;

// Rule EveryAbsentSequenceSourceChain
ruleEveryAbsentSequenceSourceChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getGroup()); }
		(rule__EveryAbsentSequenceSourceChain__Group__0)
		{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbsentSequenceSourceChain
entryRuleAbsentSequenceSourceChain
:
{ before(grammarAccess.getAbsentSequenceSourceChainRule()); }
	 ruleAbsentSequenceSourceChain
{ after(grammarAccess.getAbsentSequenceSourceChainRule()); } 
	 EOF 
;

// Rule AbsentSequenceSourceChain
ruleAbsentSequenceSourceChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getAlternatives()); }
		(rule__AbsentSequenceSourceChain__Alternatives)
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftAbsentSequenceSource
entryRuleLeftAbsentSequenceSource
:
{ before(grammarAccess.getLeftAbsentSequenceSourceRule()); }
	 ruleLeftAbsentSequenceSource
{ after(grammarAccess.getLeftAbsentSequenceSourceRule()); } 
	 EOF 
;

// Rule LeftAbsentSequenceSource
ruleLeftAbsentSequenceSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getGroup()); }
		(rule__LeftAbsentSequenceSource__Group__0)
		{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftAbsentSequenceSource1
entryRuleLeftAbsentSequenceSource1
:
{ before(grammarAccess.getLeftAbsentSequenceSource1Rule()); }
	 ruleLeftAbsentSequenceSource1
{ after(grammarAccess.getLeftAbsentSequenceSource1Rule()); } 
	 EOF 
;

// Rule LeftAbsentSequenceSource1
ruleLeftAbsentSequenceSource1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getGroup()); }
		(rule__LeftAbsentSequenceSource1__Group__0)
		{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftAbsentSequenceSource2
entryRuleLeftAbsentSequenceSource2
:
{ before(grammarAccess.getLeftAbsentSequenceSource2Rule()); }
	 ruleLeftAbsentSequenceSource2
{ after(grammarAccess.getLeftAbsentSequenceSource2Rule()); } 
	 EOF 
;

// Rule LeftAbsentSequenceSource2
ruleLeftAbsentSequenceSource2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getAlternatives()); }
		(rule__LeftAbsentSequenceSource2__Alternatives)
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightAbsentSequenceSource
entryRuleRightAbsentSequenceSource
:
{ before(grammarAccess.getRightAbsentSequenceSourceRule()); }
	 ruleRightAbsentSequenceSource
{ after(grammarAccess.getRightAbsentSequenceSourceRule()); } 
	 EOF 
;

// Rule RightAbsentSequenceSource
ruleRightAbsentSequenceSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getGroup()); }
		(rule__RightAbsentSequenceSource__Group__0)
		{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightAbsentSequenceSource1
entryRuleRightAbsentSequenceSource1
:
{ before(grammarAccess.getRightAbsentSequenceSource1Rule()); }
	 ruleRightAbsentSequenceSource1
{ after(grammarAccess.getRightAbsentSequenceSource1Rule()); } 
	 EOF 
;

// Rule RightAbsentSequenceSource1
ruleRightAbsentSequenceSource1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource1Access().getGroup()); }
		(rule__RightAbsentSequenceSource1__Group__0)
		{ after(grammarAccess.getRightAbsentSequenceSource1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightAbsentSequenceSource2
entryRuleRightAbsentSequenceSource2
:
{ before(grammarAccess.getRightAbsentSequenceSource2Rule()); }
	 ruleRightAbsentSequenceSource2
{ after(grammarAccess.getRightAbsentSequenceSource2Rule()); } 
	 EOF 
;

// Rule RightAbsentSequenceSource2
ruleRightAbsentSequenceSource2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getAlternatives()); }
		(rule__RightAbsentSequenceSource2__Alternatives)
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceSourceChain
entryRuleSequenceSourceChain
:
{ before(grammarAccess.getSequenceSourceChainRule()); }
	 ruleSequenceSourceChain
{ after(grammarAccess.getSequenceSourceChainRule()); } 
	 EOF 
;

// Rule SequenceSourceChain
ruleSequenceSourceChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceSourceChainAccess().getGroup()); }
		(rule__SequenceSourceChain__Group__0)
		{ after(grammarAccess.getSequenceSourceChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceSourceChain1
entryRuleSequenceSourceChain1
:
{ before(grammarAccess.getSequenceSourceChain1Rule()); }
	 ruleSequenceSourceChain1
{ after(grammarAccess.getSequenceSourceChain1Rule()); } 
	 EOF 
;

// Rule SequenceSourceChain1
ruleSequenceSourceChain1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceSourceChain1Access().getAlternatives()); }
		(rule__SequenceSourceChain1__Alternatives)
		{ after(grammarAccess.getSequenceSourceChain1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceSource
entryRuleSequenceSource
:
{ before(grammarAccess.getSequenceSourceRule()); }
	 ruleSequenceSource
{ after(grammarAccess.getSequenceSourceRule()); } 
	 EOF 
;

// Rule SequenceSource
ruleSequenceSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceSourceAccess().getAlternatives()); }
		(rule__SequenceSource__Alternatives)
		{ after(grammarAccess.getSequenceSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceCollectionStatefulSource
entryRuleSequenceCollectionStatefulSource
:
{ before(grammarAccess.getSequenceCollectionStatefulSourceRule()); }
	 ruleSequenceCollectionStatefulSource
{ after(grammarAccess.getSequenceCollectionStatefulSourceRule()); } 
	 EOF 
;

// Rule SequenceCollectionStatefulSource
ruleSequenceCollectionStatefulSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getGroup()); }
		(rule__SequenceCollectionStatefulSource__Group__0)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnonymousStream
entryRuleAnonymousStream
:
{ before(grammarAccess.getAnonymousStreamRule()); }
	 ruleAnonymousStream
{ after(grammarAccess.getAnonymousStreamRule()); } 
	 EOF 
;

// Rule AnonymousStream
ruleAnonymousStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnonymousStreamAccess().getAlternatives()); }
		(rule__AnonymousStream__Alternatives)
		{ after(grammarAccess.getAnonymousStreamAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputRate
entryRuleOutputRate
:
{ before(grammarAccess.getOutputRateRule()); }
	 ruleOutputRate
{ after(grammarAccess.getOutputRateRule()); } 
	 EOF 
;

// Rule OutputRate
ruleOutputRate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputRateAccess().getAlternatives()); }
		(rule__OutputRate__Alternatives)
		{ after(grammarAccess.getOutputRateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputRateType
entryRuleOutputRateType
:
{ before(grammarAccess.getOutputRateTypeRule()); }
	 ruleOutputRateType
{ after(grammarAccess.getOutputRateTypeRule()); } 
	 EOF 
;

// Rule OutputRateType
ruleOutputRateType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputRateTypeAccess().getAlternatives()); }
		(rule__OutputRateType__Alternatives)
		{ after(grammarAccess.getOutputRateTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryOutput
entryRuleQueryOutput
:
{ before(grammarAccess.getQueryOutputRule()); }
	 ruleQueryOutput
{ after(grammarAccess.getQueryOutputRule()); } 
	 EOF 
;

// Rule QueryOutput
ruleQueryOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryOutputAccess().getAlternatives()); }
		(rule__QueryOutput__Alternatives)
		{ after(grammarAccess.getQueryOutputAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetClause
entryRuleSetClause
:
{ before(grammarAccess.getSetClauseRule()); }
	 ruleSetClause
{ after(grammarAccess.getSetClauseRule()); } 
	 EOF 
;

// Rule SetClause
ruleSetClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetClauseAccess().getGroup()); }
		(rule__SetClause__Group__0)
		{ after(grammarAccess.getSetClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetAssignment
entryRuleSetAssignment
:
{ before(grammarAccess.getSetAssignmentRule()); }
	 ruleSetAssignment
{ after(grammarAccess.getSetAssignmentRule()); } 
	 EOF 
;

// Rule SetAssignment
ruleSetAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetAssignmentAccess().getGroup()); }
		(rule__SetAssignment__Group__0)
		{ after(grammarAccess.getSetAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputEventType
entryRuleOutputEventType
:
{ before(grammarAccess.getOutputEventTypeRule()); }
	 ruleOutputEventType
{ after(grammarAccess.getOutputEventTypeRule()); } 
	 EOF 
;

// Rule OutputEventType
ruleOutputEventType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputEventTypeAccess().getAlternatives()); }
		(rule__OutputEventType__Alternatives)
		{ after(grammarAccess.getOutputEventTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicSourceStreamHandlers
entryRuleBasicSourceStreamHandlers
:
{ before(grammarAccess.getBasicSourceStreamHandlersRule()); }
	 ruleBasicSourceStreamHandlers
{ after(grammarAccess.getBasicSourceStreamHandlersRule()); } 
	 EOF 
;

// Rule BasicSourceStreamHandlers
ruleBasicSourceStreamHandlers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerAssignment()); }
			(rule__BasicSourceStreamHandlers__BasicSsHandlerAssignment)
			{ after(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerAssignment()); }
		)
		(
			{ before(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerAssignment()); }
			(rule__BasicSourceStreamHandlers__BasicSsHandlerAssignment)*
			{ after(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicSourceStreamHandlers1
entryRuleBasicSourceStreamHandlers1
:
{ before(grammarAccess.getBasicSourceStreamHandlers1Rule()); }
	 ruleBasicSourceStreamHandlers1
{ after(grammarAccess.getBasicSourceStreamHandlers1Rule()); } 
	 EOF 
;

// Rule BasicSourceStreamHandlers1
ruleBasicSourceStreamHandlers1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup()); }
		(rule__BasicSourceStreamHandlers1__Group__0)
		{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicSourceStreamHandler
entryRuleBasicSourceStreamHandler
:
{ before(grammarAccess.getBasicSourceStreamHandlerRule()); }
	 ruleBasicSourceStreamHandler
{ after(grammarAccess.getBasicSourceStreamHandlerRule()); } 
	 EOF 
;

// Rule BasicSourceStreamHandler
ruleBasicSourceStreamHandler 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlerAccess().getAlternatives()); }
		(rule__BasicSourceStreamHandler__Alternatives)
		{ after(grammarAccess.getBasicSourceStreamHandlerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getGroup()); }
		(rule__Filter__Group__0)
		{ after(grammarAccess.getFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamFunction
entryRuleStreamFunction
:
{ before(grammarAccess.getStreamFunctionRule()); }
	 ruleStreamFunction
{ after(grammarAccess.getStreamFunctionRule()); } 
	 EOF 
;

// Rule StreamFunction
ruleStreamFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamFunctionAccess().getGroup()); }
		(rule__StreamFunction__Group__0)
		{ after(grammarAccess.getStreamFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getMathOperationParserRuleCall()); }
		ruleMathOperation
		{ after(grammarAccess.getExpressionAccess().getMathOperationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionOperation
entryRuleFunctionOperation
:
{ before(grammarAccess.getFunctionOperationRule()); }
	 ruleFunctionOperation
{ after(grammarAccess.getFunctionOperationRule()); } 
	 EOF 
;

// Rule FunctionOperation
ruleFunctionOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionOperationAccess().getGroup()); }
		(rule__FunctionOperation__Group__0)
		{ after(grammarAccess.getFunctionOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionNamespace
entryRuleFunctionNamespace
:
{ before(grammarAccess.getFunctionNamespaceRule()); }
	 ruleFunctionNamespace
{ after(grammarAccess.getFunctionNamespaceRule()); } 
	 EOF 
;

// Rule FunctionNamespace
ruleFunctionNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionNamespaceAccess().getNaAssignment()); }
		(rule__FunctionNamespace__NaAssignment)
		{ after(grammarAccess.getFunctionNamespaceAccess().getNaAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionId
entryRuleFunctionId
:
{ before(grammarAccess.getFunctionIdRule()); }
	 ruleFunctionId
{ after(grammarAccess.getFunctionIdRule()); } 
	 EOF 
;

// Rule FunctionId
ruleFunctionId 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionIdAccess().getNaAssignment()); }
		(rule__FunctionId__NaAssignment)
		{ after(grammarAccess.getFunctionIdAccess().getNaAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeList
entryRuleAttributeList
:
{ before(grammarAccess.getAttributeListRule()); }
	 ruleAttributeList
{ after(grammarAccess.getAttributeListRule()); } 
	 EOF 
;

// Rule AttributeList
ruleAttributeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeListAccess().getAlternatives()); }
		(rule__AttributeList__Alternatives)
		{ after(grammarAccess.getAttributeListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getMathOpAssignment()); }
		(rule__Attribute__MathOpAssignment)
		{ after(grammarAccess.getAttributeAccess().getMathOpAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroupByQuerySelection
entryRuleGroupByQuerySelection
:
{ before(grammarAccess.getGroupByQuerySelectionRule()); }
	 ruleGroupByQuerySelection
{ after(grammarAccess.getGroupByQuerySelectionRule()); } 
	 EOF 
;

// Rule GroupByQuerySelection
ruleGroupByQuerySelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupByQuerySelectionAccess().getGroup()); }
		(rule__GroupByQuerySelection__Group__0)
		{ after(grammarAccess.getGroupByQuerySelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuerySection
entryRuleQuerySection
:
{ before(grammarAccess.getQuerySectionRule()); }
	 ruleQuerySection
{ after(grammarAccess.getQuerySectionRule()); } 
	 EOF 
;

// Rule QuerySection
ruleQuerySection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuerySectionAccess().getGroup()); }
		(rule__QuerySection__Group__0)
		{ after(grammarAccess.getQuerySectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputAttribute
entryRuleOutputAttribute
:
{ before(grammarAccess.getOutputAttributeRule()); }
	 ruleOutputAttribute
{ after(grammarAccess.getOutputAttributeRule()); } 
	 EOF 
;

// Rule OutputAttribute
ruleOutputAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAttributeAccess().getAlternatives()); }
		(rule__OutputAttribute__Alternatives)
		{ after(grammarAccess.getOutputAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutAttr
entryRuleOutAttr
:
{ before(grammarAccess.getOutAttrRule()); }
	 ruleOutAttr
{ after(grammarAccess.getOutAttrRule()); } 
	 EOF 
;

// Rule OutAttr
ruleOutAttr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutAttrAccess().getGroup()); }
		(rule__OutAttr__Group__0)
		{ after(grammarAccess.getOutAttrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroupBy
entryRuleGroupBy
:
{ before(grammarAccess.getGroupByRule()); }
	 ruleGroupBy
{ after(grammarAccess.getGroupByRule()); } 
	 EOF 
;

// Rule GroupBy
ruleGroupBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupByAccess().getGroup()); }
		(rule__GroupBy__Group__0)
		{ after(grammarAccess.getGroupByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHavingExpr
entryRuleHavingExpr
:
{ before(grammarAccess.getHavingExprRule()); }
	 ruleHavingExpr
{ after(grammarAccess.getHavingExprRule()); } 
	 EOF 
;

// Rule HavingExpr
ruleHavingExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHavingExprAccess().getGroup()); }
		(rule__HavingExpr__Group__0)
		{ after(grammarAccess.getHavingExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathOperation
entryRuleMathOperation
:
{ before(grammarAccess.getMathOperationRule()); }
	 ruleMathOperation
{ after(grammarAccess.getMathOperationRule()); } 
	 EOF 
;

// Rule MathOperation
ruleMathOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathOperationAccess().getMloAssignment()); }
		(rule__MathOperation__MloAssignment)
		{ after(grammarAccess.getMathOperationAccess().getMloAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathLogicalOperation
entryRuleMathLogicalOperation
:
{ before(grammarAccess.getMathLogicalOperationRule()); }
	 ruleMathLogicalOperation
{ after(grammarAccess.getMathLogicalOperationRule()); } 
	 EOF 
;

// Rule MathLogicalOperation
ruleMathLogicalOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathLogicalOperationAccess().getGroup()); }
		(rule__MathLogicalOperation__Group__0)
		{ after(grammarAccess.getMathLogicalOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathInOperation
entryRuleMathInOperation
:
{ before(grammarAccess.getMathInOperationRule()); }
	 ruleMathInOperation
{ after(grammarAccess.getMathInOperationRule()); } 
	 EOF 
;

// Rule MathInOperation
ruleMathInOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathInOperationAccess().getGroup()); }
		(rule__MathInOperation__Group__0)
		{ after(grammarAccess.getMathInOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathGtLtOperation
entryRuleMathGtLtOperation
:
{ before(grammarAccess.getMathGtLtOperationRule()); }
	 ruleMathGtLtOperation
{ after(grammarAccess.getMathGtLtOperationRule()); } 
	 EOF 
;

// Rule MathGtLtOperation
ruleMathGtLtOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathGtLtOperationAccess().getGroup()); }
		(rule__MathGtLtOperation__Group__0)
		{ after(grammarAccess.getMathGtLtOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathEqualOperation
entryRuleMathEqualOperation
:
{ before(grammarAccess.getMathEqualOperationRule()); }
	 ruleMathEqualOperation
{ after(grammarAccess.getMathEqualOperationRule()); } 
	 EOF 
;

// Rule MathEqualOperation
ruleMathEqualOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathEqualOperationAccess().getGroup()); }
		(rule__MathEqualOperation__Group__0)
		{ after(grammarAccess.getMathEqualOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathAddsubOperation
entryRuleMathAddsubOperation
:
{ before(grammarAccess.getMathAddsubOperationRule()); }
	 ruleMathAddsubOperation
{ after(grammarAccess.getMathAddsubOperationRule()); } 
	 EOF 
;

// Rule MathAddsubOperation
ruleMathAddsubOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathAddsubOperationAccess().getGroup()); }
		(rule__MathAddsubOperation__Group__0)
		{ after(grammarAccess.getMathAddsubOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathDivmulOperation
entryRuleMathDivmulOperation
:
{ before(grammarAccess.getMathDivmulOperationRule()); }
	 ruleMathDivmulOperation
{ after(grammarAccess.getMathDivmulOperationRule()); } 
	 EOF 
;

// Rule MathDivmulOperation
ruleMathDivmulOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getGroup()); }
		(rule__MathDivmulOperation__Group__0)
		{ after(grammarAccess.getMathDivmulOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathOtherOperations
entryRuleMathOtherOperations
:
{ before(grammarAccess.getMathOtherOperationsRule()); }
	 ruleMathOtherOperations
{ after(grammarAccess.getMathOtherOperationsRule()); } 
	 EOF 
;

// Rule MathOtherOperations
ruleMathOtherOperations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getAlternatives()); }
		(rule__MathOtherOperations__Alternatives)
		{ after(grammarAccess.getMathOtherOperationsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullCheck
entryRuleNullCheck
:
{ before(grammarAccess.getNullCheckRule()); }
	 ruleNullCheck
{ after(grammarAccess.getNullCheckRule()); } 
	 EOF 
;

// Rule NullCheck
ruleNullCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullCheckAccess().getGroup()); }
		(rule__NullCheck__Group__0)
		{ after(grammarAccess.getNullCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamReference
entryRuleStreamReference
:
{ before(grammarAccess.getStreamReferenceRule()); }
	 ruleStreamReference
{ after(grammarAccess.getStreamReferenceRule()); } 
	 EOF 
;

// Rule StreamReference
ruleStreamReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamReferenceAccess().getGroup()); }
		(rule__StreamReference__Group__0)
		{ after(grammarAccess.getStreamReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathOtherOperations1
entryRuleMathOtherOperations1
:
{ before(grammarAccess.getMathOtherOperations1Rule()); }
	 ruleMathOtherOperations1
{ after(grammarAccess.getMathOtherOperations1Rule()); } 
	 EOF 
;

// Rule MathOtherOperations1
ruleMathOtherOperations1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathOtherOperations1Access().getAlternatives()); }
		(rule__MathOtherOperations1__Alternatives)
		{ after(grammarAccess.getMathOtherOperations1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeReference
entryRuleAttributeReference
:
{ before(grammarAccess.getAttributeReferenceRule()); }
	 ruleAttributeReference
{ after(grammarAccess.getAttributeReferenceRule()); } 
	 EOF 
;

// Rule AttributeReference
ruleAttributeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getAlternatives()); }
		(rule__AttributeReference__Alternatives)
		{ after(grammarAccess.getAttributeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeNameReference
entryRuleAttributeNameReference
:
{ before(grammarAccess.getAttributeNameReferenceRule()); }
	 ruleAttributeNameReference
{ after(grammarAccess.getAttributeNameReferenceRule()); } 
	 EOF 
;

// Rule AttributeNameReference
ruleAttributeNameReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeNameReferenceAccess().getAttrName1Assignment()); }
		(rule__AttributeNameReference__AttrName1Assignment)
		{ after(grammarAccess.getAttributeNameReferenceAccess().getAttrName1Assignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeIndex
entryRuleAttributeIndex
:
{ before(grammarAccess.getAttributeIndexRule()); }
	 ruleAttributeIndex
{ after(grammarAccess.getAttributeIndexRule()); } 
	 EOF 
;

// Rule AttributeIndex
ruleAttributeIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeIndexAccess().getAlternatives()); }
		(rule__AttributeIndex__Alternatives)
		{ after(grammarAccess.getAttributeIndexAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardStatefulSource
entryRuleStandardStatefulSource
:
{ before(grammarAccess.getStandardStatefulSourceRule()); }
	 ruleStandardStatefulSource
{ after(grammarAccess.getStandardStatefulSourceRule()); } 
	 EOF 
;

// Rule StandardStatefulSource
ruleStandardStatefulSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardStatefulSourceAccess().getGroup()); }
		(rule__StandardStatefulSource__Group__0)
		{ after(grammarAccess.getStandardStatefulSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceOrEventReference
entryRuleSourceOrEventReference
:
{ before(grammarAccess.getSourceOrEventReferenceRule()); }
	 ruleSourceOrEventReference
{ after(grammarAccess.getSourceOrEventReferenceRule()); } 
	 EOF 
;

// Rule SourceOrEventReference
ruleSourceOrEventReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceOrEventReferenceAccess().getNaAssignment()); }
		(rule__SourceOrEventReference__NaAssignment)
		{ after(grammarAccess.getSourceOrEventReferenceAccess().getNaAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicSource
entryRuleBasicSource
:
{ before(grammarAccess.getBasicSourceRule()); }
	 ruleBasicSource
{ after(grammarAccess.getBasicSourceRule()); } 
	 EOF 
;

// Rule BasicSource
ruleBasicSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicSourceAccess().getGroup()); }
		(rule__BasicSource__Group__0)
		{ after(grammarAccess.getBasicSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeaturesOrOutAttrReference
entryRuleFeaturesOrOutAttrReference
:
{ before(grammarAccess.getFeaturesOrOutAttrReferenceRule()); }
	 ruleFeaturesOrOutAttrReference
{ after(grammarAccess.getFeaturesOrOutAttrReferenceRule()); } 
	 EOF 
;

// Rule FeaturesOrOutAttrReference
ruleFeaturesOrOutAttrReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefAssignment()); }
		(rule__FeaturesOrOutAttrReference__SrcoutAttrrefAssignment)
		{ after(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantValue
entryRuleConstantValue
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantValueAccess().getAlternatives()); }
		(rule__ConstantValue__Alternatives)
		{ after(grammarAccess.getConstantValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getNameAssignment()); }
		(rule__Name__NameAssignment)
		{ after(grammarAccess.getNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getStrIdAssignment()); }
		(rule__Source__StrIdAssignment)
		{ after(grammarAccess.getSourceAccess().getStrIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource1
entryRuleSource1
:
{ before(grammarAccess.getSource1Rule()); }
	 ruleSource1
{ after(grammarAccess.getSource1Rule()); } 
	 EOF 
;

// Rule Source1
ruleSource1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSource1Access().getGroup()); }
		(rule__Source1__Group__0)
		{ after(grammarAccess.getSource1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolValue
entryRuleBoolValue
:
{ before(grammarAccess.getBoolValueRule()); }
	 ruleBoolValue
{ after(grammarAccess.getBoolValueRule()); } 
	 EOF 
;

// Rule BoolValue
ruleBoolValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolValueAccess().getAlternatives()); }
		(rule__BoolValue__Alternatives)
		{ after(grammarAccess.getBoolValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignedDoubleValue
entryRuleSignedDoubleValue
:
{ before(grammarAccess.getSignedDoubleValueRule()); }
	 ruleSignedDoubleValue
{ after(grammarAccess.getSignedDoubleValueRule()); } 
	 EOF 
;

// Rule SignedDoubleValue
ruleSignedDoubleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedDoubleValueAccess().getGroup()); }
		(rule__SignedDoubleValue__Group__0)
		{ after(grammarAccess.getSignedDoubleValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignedFloatValue
entryRuleSignedFloatValue
:
{ before(grammarAccess.getSignedFloatValueRule()); }
	 ruleSignedFloatValue
{ after(grammarAccess.getSignedFloatValueRule()); } 
	 EOF 
;

// Rule SignedFloatValue
ruleSignedFloatValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedFloatValueAccess().getGroup()); }
		(rule__SignedFloatValue__Group__0)
		{ after(grammarAccess.getSignedFloatValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignedLongValue
entryRuleSignedLongValue
:
{ before(grammarAccess.getSignedLongValueRule()); }
	 ruleSignedLongValue
{ after(grammarAccess.getSignedLongValueRule()); } 
	 EOF 
;

// Rule SignedLongValue
ruleSignedLongValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedLongValueAccess().getGroup()); }
		(rule__SignedLongValue__Group__0)
		{ after(grammarAccess.getSignedLongValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getSlAssignment()); }
		(rule__StringValue__SlAssignment)
		{ after(grammarAccess.getStringValueAccess().getSlAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeValue
entryRuleTimeValue
:
{ before(grammarAccess.getTimeValueRule()); }
	 ruleTimeValue
{ after(grammarAccess.getTimeValueRule()); } 
	 EOF 
;

// Rule TimeValue
ruleTimeValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeValueAccess().getAlternatives()); }
		(rule__TimeValue__Alternatives)
		{ after(grammarAccess.getTimeValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleYearValue
entryRuleYearValue
:
{ before(grammarAccess.getYearValueRule()); }
	 ruleYearValue
{ after(grammarAccess.getYearValueRule()); } 
	 EOF 
;

// Rule YearValue
ruleYearValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYearValueAccess().getGroup()); }
		(rule__YearValue__Group__0)
		{ after(grammarAccess.getYearValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonthValue
entryRuleMonthValue
:
{ before(grammarAccess.getMonthValueRule()); }
	 ruleMonthValue
{ after(grammarAccess.getMonthValueRule()); } 
	 EOF 
;

// Rule MonthValue
ruleMonthValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonthValueAccess().getGroup()); }
		(rule__MonthValue__Group__0)
		{ after(grammarAccess.getMonthValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWeekValue
entryRuleWeekValue
:
{ before(grammarAccess.getWeekValueRule()); }
	 ruleWeekValue
{ after(grammarAccess.getWeekValueRule()); } 
	 EOF 
;

// Rule WeekValue
ruleWeekValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWeekValueAccess().getGroup()); }
		(rule__WeekValue__Group__0)
		{ after(grammarAccess.getWeekValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDayValue
entryRuleDayValue
:
{ before(grammarAccess.getDayValueRule()); }
	 ruleDayValue
{ after(grammarAccess.getDayValueRule()); } 
	 EOF 
;

// Rule DayValue
ruleDayValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDayValueAccess().getGroup()); }
		(rule__DayValue__Group__0)
		{ after(grammarAccess.getDayValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHourValue
entryRuleHourValue
:
{ before(grammarAccess.getHourValueRule()); }
	 ruleHourValue
{ after(grammarAccess.getHourValueRule()); } 
	 EOF 
;

// Rule HourValue
ruleHourValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHourValueAccess().getGroup()); }
		(rule__HourValue__Group__0)
		{ after(grammarAccess.getHourValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinuteValue
entryRuleMinuteValue
:
{ before(grammarAccess.getMinuteValueRule()); }
	 ruleMinuteValue
{ after(grammarAccess.getMinuteValueRule()); } 
	 EOF 
;

// Rule MinuteValue
ruleMinuteValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinuteValueAccess().getGroup()); }
		(rule__MinuteValue__Group__0)
		{ after(grammarAccess.getMinuteValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSecondValue
entryRuleSecondValue
:
{ before(grammarAccess.getSecondValueRule()); }
	 ruleSecondValue
{ after(grammarAccess.getSecondValueRule()); } 
	 EOF 
;

// Rule SecondValue
ruleSecondValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSecondValueAccess().getGroup()); }
		(rule__SecondValue__Group__0)
		{ after(grammarAccess.getSecondValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMillisecondValue
entryRuleMillisecondValue
:
{ before(grammarAccess.getMillisecondValueRule()); }
	 ruleMillisecondValue
{ after(grammarAccess.getMillisecondValueRule()); } 
	 EOF 
;

// Rule MillisecondValue
ruleMillisecondValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMillisecondValueAccess().getGroup()); }
		(rule__MillisecondValue__Group__0)
		{ after(grammarAccess.getMillisecondValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignedIntValue
entryRuleSignedIntValue
:
{ before(grammarAccess.getSignedIntValueRule()); }
	 ruleSignedIntValue
{ after(grammarAccess.getSignedIntValueRule()); } 
	 EOF 
;

// Rule SignedIntValue
ruleSignedIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedIntValueAccess().getGroup()); }
		(rule__SignedIntValue__Group__0)
		{ after(grammarAccess.getSignedIntValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTRING_LITERAL
entryRuleSTRING_LITERAL
:
{ before(grammarAccess.getSTRING_LITERALRule()); }
	 ruleSTRING_LITERAL
{ after(grammarAccess.getSTRING_LITERALRule()); } 
	 EOF 
;

// Rule STRING_LITERAL
ruleSTRING_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRING_LITERALAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getSTRING_LITERALAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINT_LITERAL
entryRuleINT_LITERAL
:
{ before(grammarAccess.getINT_LITERALRule()); }
	 ruleINT_LITERAL
{ after(grammarAccess.getINT_LITERALRule()); } 
	 EOF 
;

// Rule INT_LITERAL
ruleINT_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getINT_LITERALAccess().getDIGITParserRuleCall()); }
			(ruleDIGIT)
			{ after(grammarAccess.getINT_LITERALAccess().getDIGITParserRuleCall()); }
		)
		(
			{ before(grammarAccess.getINT_LITERALAccess().getDIGITParserRuleCall()); }
			(ruleDIGIT)*
			{ after(grammarAccess.getINT_LITERALAccess().getDIGITParserRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE_LITERAL
entryRuleDOUBLE_LITERAL
:
{ before(grammarAccess.getDOUBLE_LITERALRule()); }
	 ruleDOUBLE_LITERAL
{ after(grammarAccess.getDOUBLE_LITERALRule()); } 
	 EOF 
;

// Rule DOUBLE_LITERAL
ruleDOUBLE_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives()); }
		(rule__DOUBLE_LITERAL__Alternatives)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLOAT_LITERAL
entryRuleFLOAT_LITERAL
:
{ before(grammarAccess.getFLOAT_LITERALRule()); }
	 ruleFLOAT_LITERAL
{ after(grammarAccess.getFLOAT_LITERALRule()); } 
	 EOF 
;

// Rule FLOAT_LITERAL
ruleFLOAT_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getAlternatives()); }
		(rule__FLOAT_LITERAL__Alternatives)
		{ after(grammarAccess.getFLOAT_LITERALAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLONG_LITERAL
entryRuleLONG_LITERAL
:
{ before(grammarAccess.getLONG_LITERALRule()); }
	 ruleLONG_LITERAL
{ after(grammarAccess.getLONG_LITERALRule()); } 
	 EOF 
;

// Rule LONG_LITERAL
ruleLONG_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLONG_LITERALAccess().getGroup()); }
		(rule__LONG_LITERAL__Group__0)
		{ after(grammarAccess.getLONG_LITERALAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule DIGIT
ruleDIGIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDIGITAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getDIGITAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAS
entryRuleAS
:
{ before(grammarAccess.getASRule()); }
	 ruleAS
{ after(grammarAccess.getASRule()); } 
	 EOF 
;

// Rule AS
ruleAS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getASAccess().getAAssignment()); }
		(rule__AS__AAssignment)
		{ after(grammarAccess.getASAccess().getAAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleON
entryRuleON
:
{ before(grammarAccess.getONRule()); }
	 ruleON
{ after(grammarAccess.getONRule()); } 
	 EOF 
;

// Rule ON
ruleON 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getONAccess().getOnAssignment()); }
		(rule__ON__OnAssignment)
		{ after(grammarAccess.getONAccess().getOnAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUNIDIRECTIONAL
entryRuleUNIDIRECTIONAL
:
{ before(grammarAccess.getUNIDIRECTIONALRule()); }
	 ruleUNIDIRECTIONAL
{ after(grammarAccess.getUNIDIRECTIONALRule()); } 
	 EOF 
;

// Rule UNIDIRECTIONAL
ruleUNIDIRECTIONAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalAssignment()); }
		(rule__UNIDIRECTIONAL__UnidirectionalAssignment)
		{ after(grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNOT
entryRuleNOT
:
{ before(grammarAccess.getNOTRule()); }
	 ruleNOT
{ after(grammarAccess.getNOTRule()); } 
	 EOF 
;

// Rule NOT
ruleNOT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNOTAccess().getNot1Assignment()); }
		(rule__NOT__Not1Assignment)
		{ after(grammarAccess.getNOTAccess().getNot1Assignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEVERY
entryRuleEVERY
:
{ before(grammarAccess.getEVERYRule()); }
	 ruleEVERY
{ after(grammarAccess.getEVERYRule()); } 
	 EOF 
;

// Rule EVERY
ruleEVERY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEVERYAccess().getEveryAssignment()); }
		(rule__EVERY__EveryAssignment)
		{ after(grammarAccess.getEVERYAccess().getEveryAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAND
entryRuleAND
:
{ before(grammarAccess.getANDRule()); }
	 ruleAND
{ after(grammarAccess.getANDRule()); } 
	 EOF 
;

// Rule AND
ruleAND 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANDAccess().getAndAssignment()); }
		(rule__AND__AndAssignment)
		{ after(grammarAccess.getANDAccess().getAndAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOR
entryRuleOR
:
{ before(grammarAccess.getORRule()); }
	 ruleOR
{ after(grammarAccess.getORRule()); } 
	 EOF 
;

// Rule OR
ruleOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getORAccess().getOrAssignment()); }
		(rule__OR__OrAssignment)
		{ after(grammarAccess.getORAccess().getOrAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIN
entryRuleIN
:
{ before(grammarAccess.getINRule()); }
	 ruleIN
{ after(grammarAccess.getINRule()); } 
	 EOF 
;

// Rule IN
ruleIN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINAccess().getInAssignment()); }
		(rule__IN__InAssignment)
		{ after(grammarAccess.getINAccess().getInAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOF
entryRuleOF
:
{ before(grammarAccess.getOFRule()); }
	 ruleOF
{ after(grammarAccess.getOFRule()); } 
	 EOF 
;

// Rule OF
ruleOF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOFAccess().getOfAssignment()); }
		(rule__OF__OfAssignment)
		{ after(grammarAccess.getOFAccess().getOfAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleE
entryRuleE
:
{ before(grammarAccess.getERule()); }
	 ruleE
{ after(grammarAccess.getERule()); } 
	 EOF 
;

// Rule E
ruleE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAccess().getEAssignment()); }
		(rule__E__EAssignment)
		{ after(grammarAccess.getEAccess().getEAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleD
entryRuleD
:
{ before(grammarAccess.getDRule()); }
	 ruleD
{ after(grammarAccess.getDRule()); } 
	 EOF 
;

// Rule D
ruleD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDAccess().getDAssignment()); }
		(rule__D__DAssignment)
		{ after(grammarAccess.getDAccess().getDAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleF
entryRuleF
:
{ before(grammarAccess.getFRule()); }
	 ruleF
{ after(grammarAccess.getFRule()); } 
	 EOF 
;

// Rule F
ruleF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFAccess().getFAssignment()); }
		(rule__F__FAssignment)
		{ after(grammarAccess.getFAccess().getFAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleL
entryRuleL
:
{ before(grammarAccess.getLRule()); }
	 ruleL
{ after(grammarAccess.getLRule()); } 
	 EOF 
;

// Rule L
ruleL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLAccess().getLAssignment()); }
		(rule__L__LAssignment)
		{ after(grammarAccess.getLAccess().getLAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAPP
entryRuleAPP
:
{ before(grammarAccess.getAPPRule()); }
	 ruleAPP
{ after(grammarAccess.getAPPRule()); } 
	 EOF 
;

// Rule APP
ruleAPP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAPPAccess().getApAssignment()); }
		(rule__APP__ApAssignment)
		{ after(grammarAccess.getAPPAccess().getApAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule STREAM
ruleSTREAM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTREAMAccess().getStrAssignment()); }
		(rule__STREAM__StrAssignment)
		{ after(grammarAccess.getSTREAMAccess().getStrAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule DEFINE
ruleDEFINE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDEFINEAccess().getDefineAssignment()); }
		(rule__DEFINE__DefineAssignment)
		{ after(grammarAccess.getDEFINEAccess().getDefineAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TABLE
ruleTABLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTABLEAccess().getTableAssignment()); }
		(rule__TABLE__TableAssignment)
		{ after(grammarAccess.getTABLEAccess().getTableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule WINDOW
ruleWINDOW 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWINDOWAccess().getWindowAssignment()); }
		(rule__WINDOW__WindowAssignment)
		{ after(grammarAccess.getWINDOWAccess().getWindowAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule OUTPUT
ruleOUTPUT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOUTPUTAccess().getOutputAssignment()); }
		(rule__OUTPUT__OutputAssignment)
		{ after(grammarAccess.getOUTPUTAccess().getOutputAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule STRINGS
ruleSTRINGS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRINGSAccess().getStringAssignment()); }
		(rule__STRINGS__StringAssignment)
		{ after(grammarAccess.getSTRINGSAccess().getStringAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule INTS
ruleINTS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINTSAccess().getIntAssignment()); }
		(rule__INTS__IntAssignment)
		{ after(grammarAccess.getINTSAccess().getIntAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule LONG
ruleLONG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLONGAccess().getLongAssignment()); }
		(rule__LONG__LongAssignment)
		{ after(grammarAccess.getLONGAccess().getLongAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getDoubleAssignment()); }
		(rule__DOUBLE__DoubleAssignment)
		{ after(grammarAccess.getDOUBLEAccess().getDoubleAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FLOAT
ruleFLOAT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOATAccess().getFloatAssignment()); }
		(rule__FLOAT__FloatAssignment)
		{ after(grammarAccess.getFLOATAccess().getFloatAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BOOL
ruleBOOL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLAccess().getBoolAssignment()); }
		(rule__BOOL__BoolAssignment)
		{ after(grammarAccess.getBOOLAccess().getBoolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule OBJECT
ruleOBJECT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOBJECTAccess().getObjectAssignment()); }
		(rule__OBJECT__ObjectAssignment)
		{ after(grammarAccess.getOBJECTAccess().getObjectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ALL
ruleALL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getALLAccess().getAllAssignment()); }
		(rule__ALL__AllAssignment)
		{ after(grammarAccess.getALLAccess().getAllAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule EVENTS
ruleEVENTS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEVENTSAccess().getEventsAssignment()); }
		(rule__EVENTS__EventsAssignment)
		{ after(grammarAccess.getEVENTSAccess().getEventsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RAW
ruleRAW 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRAWAccess().getRawAssignment()); }
		(rule__RAW__RawAssignment)
		{ after(grammarAccess.getRAWAccess().getRawAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule EXPIRED
ruleEXPIRED 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEXPIREDAccess().getExpiredAssignment()); }
		(rule__EXPIRED__ExpiredAssignment)
		{ after(grammarAccess.getEXPIREDAccess().getExpiredAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule CURRENT
ruleCURRENT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCURRENTAccess().getCurrtAssignment()); }
		(rule__CURRENT__CurrtAssignment)
		{ after(grammarAccess.getCURRENTAccess().getCurrtAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule LAST
ruleLAST 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLASTAccess().getLastAssignment()); }
		(rule__LAST__LastAssignment)
		{ after(grammarAccess.getLASTAccess().getLastAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule IS
ruleIS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getISAccess().getIsAssignment()); }
		(rule__IS__IsAssignment)
		{ after(grammarAccess.getISAccess().getIsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NULL
ruleNULL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNULLAccess().getNullAssignment()); }
		(rule__NULL__NullAssignment)
		{ after(grammarAccess.getNULLAccess().getNullAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TRIGGER
ruleTRIGGER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTRIGGERAccess().getTriggerAssignment()); }
		(rule__TRIGGER__TriggerAssignment)
		{ after(grammarAccess.getTRIGGERAccess().getTriggerAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AT
ruleAT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getATAccess().getAtAssignment()); }
		(rule__AT__AtAssignment)
		{ after(grammarAccess.getATAccess().getAtAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FUNCTION
ruleFUNCTION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFUNCTIONAccess().getFunctionAssignment()); }
		(rule__FUNCTION__FunctionAssignment)
		{ after(grammarAccess.getFUNCTIONAccess().getFunctionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RETURN
ruleRETURN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRETURNAccess().getReturnAssignment()); }
		(rule__RETURN__ReturnAssignment)
		{ after(grammarAccess.getRETURNAccess().getReturnAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FROM
ruleFROM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFROMAccess().getFromAssignment()); }
		(rule__FROM__FromAssignment)
		{ after(grammarAccess.getFROMAccess().getFromAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule WITHIN
ruleWITHIN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWITHINAccess().getWithinAssignment()); }
		(rule__WITHIN__WithinAssignment)
		{ after(grammarAccess.getWITHINAccess().getWithinAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule LEFT
ruleLEFT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLEFTAccess().getLeftAssignment()); }
		(rule__LEFT__LeftAssignment)
		{ after(grammarAccess.getLEFTAccess().getLeftAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RIGHT
ruleRIGHT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRIGHTAccess().getRightAssignment()); }
		(rule__RIGHT__RightAssignment)
		{ after(grammarAccess.getRIGHTAccess().getRightAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FULL
ruleFULL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFULLAccess().getFullAssignment()); }
		(rule__FULL__FullAssignment)
		{ after(grammarAccess.getFULLAccess().getFullAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule JOIN
ruleJOIN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJOINAccess().getJoinAssignment()); }
		(rule__JOIN__JoinAssignment)
		{ after(grammarAccess.getJOINAccess().getJoinAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule INNER
ruleINNER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINNERAccess().getInnerAssignment()); }
		(rule__INNER__InnerAssignment)
		{ after(grammarAccess.getINNERAccess().getInnerAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule OUTER
ruleOUTER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOUTERAccess().getOuterAssignment()); }
		(rule__OUTER__OuterAssignment)
		{ after(grammarAccess.getOUTERAccess().getOuterAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SELECT
ruleSELECT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSELECTAccess().getSelectAssignment()); }
		(rule__SELECT__SelectAssignment)
		{ after(grammarAccess.getSELECTAccess().getSelectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule GROUP
ruleGROUP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGROUPAccess().getGroupAssignment()); }
		(rule__GROUP__GroupAssignment)
		{ after(grammarAccess.getGROUPAccess().getGroupAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BY
ruleBY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBYAccess().getByAssignment()); }
		(rule__BY__ByAssignment)
		{ after(grammarAccess.getBYAccess().getByAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule HAVING
ruleHAVING 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHAVINGAccess().getHavingAssignment()); }
		(rule__HAVING__HavingAssignment)
		{ after(grammarAccess.getHAVINGAccess().getHavingAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SNAPSHOT
ruleSNAPSHOT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSNAPSHOTAccess().getSnapshotAssignment()); }
		(rule__SNAPSHOT__SnapshotAssignment)
		{ after(grammarAccess.getSNAPSHOTAccess().getSnapshotAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FIRST
ruleFIRST 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFIRSTAccess().getFirstAssignment()); }
		(rule__FIRST__FirstAssignment)
		{ after(grammarAccess.getFIRSTAccess().getFirstAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule INSERT
ruleINSERT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINSERTAccess().getInsertAssignment()); }
		(rule__INSERT__InsertAssignment)
		{ after(grammarAccess.getINSERTAccess().getInsertAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule INTO
ruleINTO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINTOAccess().getIntoAssignment()); }
		(rule__INTO__IntoAssignment)
		{ after(grammarAccess.getINTOAccess().getIntoAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BEGIN
ruleBEGIN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBEGINAccess().getBeginAssignment()); }
		(rule__BEGIN__BeginAssignment)
		{ after(grammarAccess.getBEGINAccess().getBeginAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule DELETE
ruleDELETE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDELETEAccess().getDeleteAssignment()); }
		(rule__DELETE__DeleteAssignment)
		{ after(grammarAccess.getDELETEAccess().getDeleteAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FOR
ruleFOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFORAccess().getForAssignment()); }
		(rule__FOR__ForAssignment)
		{ after(grammarAccess.getFORAccess().getForAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule UPDATE
ruleUPDATE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUPDATEAccess().getUpdateAssignment()); }
		(rule__UPDATE__UpdateAssignment)
		{ after(grammarAccess.getUPDATEAccess().getUpdateAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule END
ruleEND 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getENDAccess().getEndAssignment()); }
		(rule__END__EndAssignment)
		{ after(grammarAccess.getENDAccess().getEndAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PARTITION
rulePARTITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARTITIONAccess().getPartitionAssignment()); }
		(rule__PARTITION__PartitionAssignment)
		{ after(grammarAccess.getPARTITIONAccess().getPartitionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule WITH
ruleWITH 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWITHAccess().getWiAssignment()); }
		(rule__WITH__WiAssignment)
		{ after(grammarAccess.getWITHAccess().getWiAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AGGREGATION
ruleAGGREGATION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAGGREGATIONAccess().getAggreAssignment()); }
		(rule__AGGREGATION__AggreAssignment)
		{ after(grammarAccess.getAGGREGATIONAccess().getAggreAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AGGREGATE
ruleAGGREGATE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAGGREGATEAccess().getAgrregateAssignment()); }
		(rule__AGGREGATE__AgrregateAssignment)
		{ after(grammarAccess.getAGGREGATEAccess().getAgrregateAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SET
ruleSET 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSETAccess().getSetAssignment()); }
		(rule__SET__SetAssignment)
		{ after(grammarAccess.getSETAccess().getSetAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PER
rulePER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPERAccess().getPerAssignment()); }
		(rule__PER__PerAssignment)
		{ after(grammarAccess.getPERAccess().getPerAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule YEARS
ruleYEARS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYEARSAccess().getAlternatives()); }
		(rule__YEARS__Alternatives)
		{ after(grammarAccess.getYEARSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule MONTHS
ruleMONTHS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMONTHSAccess().getAlternatives()); }
		(rule__MONTHS__Alternatives)
		{ after(grammarAccess.getMONTHSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule WEEKS
ruleWEEKS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWEEKSAccess().getAlternatives()); }
		(rule__WEEKS__Alternatives)
		{ after(grammarAccess.getWEEKSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule DAYS
ruleDAYS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDAYSAccess().getAlternatives()); }
		(rule__DAYS__Alternatives)
		{ after(grammarAccess.getDAYSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule HOURS
ruleHOURS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHOURSAccess().getAlternatives()); }
		(rule__HOURS__Alternatives)
		{ after(grammarAccess.getHOURSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule MINUTES
ruleMINUTES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMINUTESAccess().getAlternatives()); }
		(rule__MINUTES__Alternatives)
		{ after(grammarAccess.getMINUTESAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SECONDS
ruleSECONDS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSECONDSAccess().getAlternatives()); }
		(rule__SECONDS__Alternatives)
		{ after(grammarAccess.getSECONDSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule MILLISECONDS
ruleMILLISECONDS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMILLISECONDSAccess().getAlternatives()); }
		(rule__MILLISECONDS__Alternatives)
		{ after(grammarAccess.getMILLISECONDSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FALSE
ruleFALSE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFALSEAccess().getFalsAssignment()); }
		(rule__FALSE__FalsAssignment)
		{ after(grammarAccess.getFALSEAccess().getFalsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TRUE
ruleTRUE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTRUEAccess().getTrAssignment()); }
		(rule__TRUE__TrAssignment)
		{ after(grammarAccess.getTRUEAccess().getTrAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCOL
entryRuleCOL
:
{ before(grammarAccess.getCOLRule()); }
	 ruleCOL
{ after(grammarAccess.getCOLRule()); } 
	 EOF 
;

// Rule COL
ruleCOL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCOLAccess().getColonKeyword()); }
		Colon
		{ after(grammarAccess.getCOLAccess().getColonKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOT
entryRuleDOT
:
{ before(grammarAccess.getDOTRule()); }
	 ruleDOT
{ after(grammarAccess.getDOTRule()); } 
	 EOF 
;

// Rule DOT
ruleDOT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOTAccess().getFullStopKeyword()); }
		FullStop
		{ after(grammarAccess.getDOTAccess().getFullStopKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTRIPLE_DOT
entryRuleTRIPLE_DOT
:
{ before(grammarAccess.getTRIPLE_DOTRule()); }
	 ruleTRIPLE_DOT
{ after(grammarAccess.getTRIPLE_DOTRule()); } 
	 EOF 
;

// Rule TRIPLE_DOT
ruleTRIPLE_DOT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTRIPLE_DOTAccess().getFullStopFullStopFullStopKeyword()); }
		FullStopFullStopFullStop
		{ after(grammarAccess.getTRIPLE_DOTAccess().getFullStopFullStopFullStopKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOPEN_PAR
entryRuleOPEN_PAR
:
{ before(grammarAccess.getOPEN_PARRule()); }
	 ruleOPEN_PAR
{ after(grammarAccess.getOPEN_PARRule()); } 
	 EOF 
;

// Rule OPEN_PAR
ruleOPEN_PAR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOPEN_PARAccess().getLeftParenthesisKeyword()); }
		LeftParenthesis
		{ after(grammarAccess.getOPEN_PARAccess().getLeftParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCLOSE_PAR
entryRuleCLOSE_PAR
:
{ before(grammarAccess.getCLOSE_PARRule()); }
	 ruleCLOSE_PAR
{ after(grammarAccess.getCLOSE_PARRule()); } 
	 EOF 
;

// Rule CLOSE_PAR
ruleCLOSE_PAR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCLOSE_PARAccess().getRightParenthesisKeyword()); }
		RightParenthesis
		{ after(grammarAccess.getCLOSE_PARAccess().getRightParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOPEN_SQARE_BRACKETS
entryRuleOPEN_SQARE_BRACKETS
:
{ before(grammarAccess.getOPEN_SQARE_BRACKETSRule()); }
	 ruleOPEN_SQARE_BRACKETS
{ after(grammarAccess.getOPEN_SQARE_BRACKETSRule()); } 
	 EOF 
;

// Rule OPEN_SQARE_BRACKETS
ruleOPEN_SQARE_BRACKETS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOPEN_SQARE_BRACKETSAccess().getLeftSquareBracketKeyword()); }
		LeftSquareBracket
		{ after(grammarAccess.getOPEN_SQARE_BRACKETSAccess().getLeftSquareBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCLOSE_SQARE_BRACKETS
entryRuleCLOSE_SQARE_BRACKETS
:
{ before(grammarAccess.getCLOSE_SQARE_BRACKETSRule()); }
	 ruleCLOSE_SQARE_BRACKETS
{ after(grammarAccess.getCLOSE_SQARE_BRACKETSRule()); } 
	 EOF 
;

// Rule CLOSE_SQARE_BRACKETS
ruleCLOSE_SQARE_BRACKETS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCLOSE_SQARE_BRACKETSAccess().getRightSquareBracketKeyword()); }
		RightSquareBracket
		{ after(grammarAccess.getCLOSE_SQARE_BRACKETSAccess().getRightSquareBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMINUS
entryRuleMINUS
:
{ before(grammarAccess.getMINUSRule()); }
	 ruleMINUS
{ after(grammarAccess.getMINUSRule()); } 
	 EOF 
;

// Rule MINUS
ruleMINUS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMINUSAccess().getHyphenMinusKeyword()); }
		HyphenMinus
		{ after(grammarAccess.getMINUSAccess().getHyphenMinusKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdNew
entryRuleIdNew
:
{ before(grammarAccess.getIdNewRule()); }
	 ruleIdNew
{ after(grammarAccess.getIdNewRule()); } 
	 EOF 
;

// Rule IdNew
ruleIdNew 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdNewAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdNewAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefStreamAssignment_1_0_0()); }
		(rule__ExecutionPlan__DefStreamAssignment_1_0_0)
		{ after(grammarAccess.getExecutionPlanAccess().getDefStreamAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTableAssignment_1_0_1()); }
		(rule__ExecutionPlan__DefTableAssignment_1_0_1)
		{ after(grammarAccess.getExecutionPlanAccess().getDefTableAssignment_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDef_windowAssignment_1_0_2()); }
		(rule__ExecutionPlan__Def_windowAssignment_1_0_2)
		{ after(grammarAccess.getExecutionPlanAccess().getDef_windowAssignment_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTriggerAssignment_1_0_3()); }
		(rule__ExecutionPlan__DefTriggerAssignment_1_0_3)
		{ after(grammarAccess.getExecutionPlanAccess().getDefTriggerAssignment_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefFunctionAssignment_1_0_4()); }
		(rule__ExecutionPlan__DefFunctionAssignment_1_0_4)
		{ after(grammarAccess.getExecutionPlanAccess().getDefFunctionAssignment_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefAgrregationAssignment_1_0_5()); }
		(rule__ExecutionPlan__DefAgrregationAssignment_1_0_5)
		{ after(grammarAccess.getExecutionPlanAccess().getDefAgrregationAssignment_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Alternatives_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefStreamAssignment_1_1_0_1_0()); }
		(rule__ExecutionPlan__DefStreamAssignment_1_1_0_1_0)
		{ after(grammarAccess.getExecutionPlanAccess().getDefStreamAssignment_1_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTableAssignment_1_1_0_1_1()); }
		(rule__ExecutionPlan__DefTableAssignment_1_1_0_1_1)
		{ after(grammarAccess.getExecutionPlanAccess().getDefTableAssignment_1_1_0_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDef_windowAssignment_1_1_0_1_2()); }
		(rule__ExecutionPlan__Def_windowAssignment_1_1_0_1_2)
		{ after(grammarAccess.getExecutionPlanAccess().getDef_windowAssignment_1_1_0_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTriggerAssignment_1_1_0_1_3()); }
		(rule__ExecutionPlan__DefTriggerAssignment_1_1_0_1_3)
		{ after(grammarAccess.getExecutionPlanAccess().getDefTriggerAssignment_1_1_0_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefFunctionAssignment_1_1_0_1_4()); }
		(rule__ExecutionPlan__DefFunctionAssignment_1_1_0_1_4)
		{ after(grammarAccess.getExecutionPlanAccess().getDefFunctionAssignment_1_1_0_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefAgrregationAssignment_1_1_0_1_5()); }
		(rule__ExecutionPlan__DefAgrregationAssignment_1_1_0_1_5)
		{ after(grammarAccess.getExecutionPlanAccess().getDefAgrregationAssignment_1_1_0_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionElementAccess().getGroup_0()); }
		(rule__ExecutionElement__Group_0__0)
		{ after(grammarAccess.getExecutionElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExecutionElementAccess().getGroup_1()); }
		(rule__ExecutionElement__Group_1__0)
		{ after(grammarAccess.getExecutionElementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionStreamAccess().getSTREAMParserRuleCall_3_0()); }
		ruleSTREAM
		{ after(grammarAccess.getDefinitionStreamAccess().getSTREAMParserRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionStreamAccess().getTABLEParserRuleCall_3_1()); }
		ruleTABLE
		{ after(grammarAccess.getDefinitionStreamAccess().getTABLEParserRuleCall_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTriggerAccess().getGroup_4_0()); }
		(rule__DefinitionTrigger__Group_4_0__0)
		{ after(grammarAccess.getDefinitionTriggerAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionTriggerAccess().getSvAssignment_4_1()); }
		(rule__DefinitionTrigger__SvAssignment_4_1)
		{ after(grammarAccess.getDefinitionTriggerAccess().getSvAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTime__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationTimeAccess().getAggregationTimeRangeParserRuleCall_0()); }
		ruleAggregationTimeRange
		{ after(grammarAccess.getAggregationTimeAccess().getAggregationTimeRangeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationTimeAccess().getAggregation_time_intervalParserRuleCall_1()); }
		ruleaggregation_time_interval
		{ after(grammarAccess.getAggregationTimeAccess().getAggregation_time_intervalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeDuration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getSECONDSParserRuleCall_0()); }
		ruleSECONDS
		{ after(grammarAccess.getAggregationTimeDurationAccess().getSECONDSParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getMINUTESParserRuleCall_1()); }
		ruleMINUTES
		{ after(grammarAccess.getAggregationTimeDurationAccess().getMINUTESParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getHOURSParserRuleCall_2()); }
		ruleHOURS
		{ after(grammarAccess.getAggregationTimeDurationAccess().getHOURSParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getDAYSParserRuleCall_3()); }
		ruleDAYS
		{ after(grammarAccess.getAggregationTimeDurationAccess().getDAYSParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getWEEKSParserRuleCall_4()); }
		ruleWEEKS
		{ after(grammarAccess.getAggregationTimeDurationAccess().getWEEKSParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getMONTHSParserRuleCall_5()); }
		ruleMONTHS
		{ after(grammarAccess.getAggregationTimeDurationAccess().getMONTHSParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationTimeDurationAccess().getYEARSParserRuleCall_6()); }
		ruleYEARS
		{ after(grammarAccess.getAggregationTimeDurationAccess().getYEARSParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnElementAssignment_2_1_0()); }
		(rule__Annotation__AnnElementAssignment_2_1_0)
		{ after(grammarAccess.getAnnotationAccess().getAnnElementAssignment_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnAssignment_2_1_1()); }
		(rule__Annotation__AnnAssignment_2_1_1)
		{ after(grammarAccess.getAnnotationAccess().getAnnAssignment_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnElementAssignment_2_2_1_0()); }
		(rule__Annotation__AnnElementAssignment_2_2_1_0)
		{ after(grammarAccess.getAnnotationAccess().getAnnElementAssignment_2_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnAssignment_2_2_1_1()); }
		(rule__Annotation__AnnAssignment_2_2_1_1)
		{ after(grammarAccess.getAnnotationAccess().getAnnAssignment_2_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySeparatorAccess().getGroup_0()); }
		(rule__PropertySeparator__Group_0__0)
		{ after(grammarAccess.getPropertySeparatorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertySeparatorAccess().getGroup_1()); }
		(rule__PropertySeparator__Group_1__0)
		{ after(grammarAccess.getPropertySeparatorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertySeparatorAccess().getGroup_2()); }
		(rule__PropertySeparator__Group_2__0)
		{ after(grammarAccess.getPropertySeparatorAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup_0()); }
		(rule__AttributeType__Group_0__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup_1()); }
		(rule__AttributeType__Group_1__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
		(rule__AttributeType__Group_2__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup_3()); }
		(rule__AttributeType__Group_3__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup_4()); }
		(rule__AttributeType__Group_4__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup_5()); }
		(rule__AttributeType__Group_5__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup_6()); }
		(rule__AttributeType__Group_6__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryInputAccess().getJsAssignment_1_0()); }
		(rule__QueryInput__JsAssignment_1_0)
		{ after(grammarAccess.getQueryInputAccess().getJsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getQueryInputAccess().getSeqSrcChaninAssignment_1_1()); }
		(rule__QueryInput__SeqSrcChaninAssignment_1_1)
		{ after(grammarAccess.getQueryInputAccess().getSeqSrcChaninAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getQueryInputAccess().getPsAssignment_1_2()); }
		(rule__QueryInput__PsAssignment_1_2)
		{ after(grammarAccess.getQueryInputAccess().getPsAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getQueryInputAccess().getAnonStreamAssignment_1_3()); }
		(rule__QueryInput__AnonStreamAssignment_1_3)
		{ after(grammarAccess.getQueryInputAccess().getAnonStreamAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getGroup_0()); }
		(rule__JoinStream__Group_0__0)
		{ after(grammarAccess.getJoinStreamAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJoinStreamAccess().getGroup_1()); }
		(rule__JoinStream__Group_1__0)
		{ after(grammarAccess.getJoinStreamAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getJoinStreamAccess().getGroup_2()); }
		(rule__JoinStream__Group_2__0)
		{ after(grammarAccess.getJoinStreamAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getJoinStreamAccess().getStandardStreamParserRuleCall_3()); }
		(ruleStandardStream)
		{ after(grammarAccess.getJoinStreamAccess().getStandardStreamParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinsAccess().getGroup_0()); }
		(rule__Joins__Group_0__0)
		{ after(grammarAccess.getJoinsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJoinsAccess().getGroup_1()); }
		(rule__Joins__Group_1__0)
		{ after(grammarAccess.getJoinsAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getJoinsAccess().getGroup_2()); }
		(rule__Joins__Group_2__0)
		{ after(grammarAccess.getJoinsAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getJoinsAccess().getGroup_3()); }
		(rule__Joins__Group_3__0)
		{ after(grammarAccess.getJoinsAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getJoinsAccess().getGroup_4()); }
		(rule__Joins__Group_4__0)
		{ after(grammarAccess.getJoinsAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStream__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternStreamAccess().getEveryPatternSourceChainParserRuleCall_0()); }
		(ruleEveryPatternSourceChain)
		{ after(grammarAccess.getPatternStreamAccess().getEveryPatternSourceChainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternStreamAccess().getAbsentPatternSourceChainParserRuleCall_1()); }
		(ruleAbsentPatternSourceChain)
		{ after(grammarAccess.getPatternStreamAccess().getAbsentPatternSourceChainParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getGroup_0()); }
		(rule__EveryPatternSourceChain1__Group_0__0)
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getPscAssignment_1()); }
		(rule__EveryPatternSourceChain1__PscAssignment_1)
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getPscAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getGroup_2()); }
		(rule__EveryPatternSourceChain1__Group_2__0)
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceChain1Access().getGroup_0()); }
		(rule__PatternSourceChain1__Group_0__0)
		{ after(grammarAccess.getPatternSourceChain1Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternSourceChain1Access().getGroup_1()); }
		(rule__PatternSourceChain1__Group_1__0)
		{ after(grammarAccess.getPatternSourceChain1Access().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceAccess().getLssAssignment_0()); }
		(rule__PatternSource__LssAssignment_0)
		{ after(grammarAccess.getPatternSourceAccess().getLssAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternSourceAccess().getPssAssignment_1()); }
		(rule__PatternSource__PssAssignment_1)
		{ after(grammarAccess.getPatternSourceAccess().getPssAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPatternSourceAccess().getStdssAssignment_2()); }
		(rule__PatternSource__StdssAssignment_2)
		{ after(grammarAccess.getPatternSourceAccess().getStdssAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPatternSourceAccess().getLogicalAbsStatefulSrcAssignment_3()); }
		(rule__PatternSource__LogicalAbsStatefulSrcAssignment_3)
		{ after(grammarAccess.getPatternSourceAccess().getLogicalAbsStatefulSrcAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getGroup_0()); }
		(rule__LogicalStatefulSource__Group_0__0)
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getGroup_1()); }
		(rule__LogicalStatefulSource__Group_1__0)
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getGroup_1_0()); }
		(rule__Collect__Group_1_0__0)
		{ after(grammarAccess.getCollectAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectAccess().getGroup_1_1()); }
		(rule__Collect__Group_1_1__0)
		{ after(grammarAccess.getCollectAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectAccess().getGroup_1_2()); }
		(rule__Collect__Group_1_2__0)
		{ after(grammarAccess.getCollectAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectAccess().getINT_LITERALParserRuleCall_1_3()); }
		ruleINT_LITERAL
		{ after(grammarAccess.getCollectAccess().getINT_LITERALParserRuleCall_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_0()); }
		(rule__LogicalAbsentStatefulSource__Group_0__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_1()); }
		(rule__LogicalAbsentStatefulSource__Group_1__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_2()); }
		(rule__LogicalAbsentStatefulSource__Group_2__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_3()); }
		(rule__LogicalAbsentStatefulSource__Group_3__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_4()); }
		(rule__LogicalAbsentStatefulSource__Group_4__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_5()); }
		(rule__LogicalAbsentStatefulSource__Group_5__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_6()); }
		(rule__LogicalAbsentStatefulSource__Group_6__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_7()); }
		(rule__LogicalAbsentStatefulSource__Group_7__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_8()); }
		(rule__LogicalAbsentStatefulSource__Group_8__0)
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentPatternSourceChainAccess().getGroup_0()); }
		(rule__AbsentPatternSourceChain__Group_0__0)
		{ after(grammarAccess.getAbsentPatternSourceChainAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbsentPatternSourceChainAccess().getEveryAbsentPatternSourceParserRuleCall_1()); }
		ruleEveryAbsentPatternSource
		{ after(grammarAccess.getAbsentPatternSourceChainAccess().getEveryAbsentPatternSourceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbsentPatternSourceChainAccess().getLeftAbsentPatternSourceParserRuleCall_2()); }
		(ruleLeftAbsentPatternSource)
		{ after(grammarAccess.getAbsentPatternSourceChainAccess().getLeftAbsentPatternSourceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbsentPatternSourceChainAccess().getRightAbsentPatternSourceParserRuleCall_3()); }
		(ruleRightAbsentPatternSource)
		{ after(grammarAccess.getAbsentPatternSourceChainAccess().getRightAbsentPatternSourceParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_0()); }
		(rule__LeftAbsentPatternSource2__Group_0__0)
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_1()); }
		(rule__LeftAbsentPatternSource2__Group_1__0)
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_2()); }
		(rule__LeftAbsentPatternSource2__Group_2__0)
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getGroup_0()); }
		(rule__RightAbsentPatternSource2__Group_0__0)
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getGroup_1()); }
		(rule__RightAbsentPatternSource2__Group_1__0)
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getGroup_2()); }
		(rule__RightAbsentPatternSource2__Group_2__0)
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStream__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceStreamAccess().getEverySequenceSourceChainAssignment_0()); }
		(rule__SequenceStream__EverySequenceSourceChainAssignment_0)
		{ after(grammarAccess.getSequenceStreamAccess().getEverySequenceSourceChainAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceStreamAccess().getEveryAbsentSequenceSourceChainAssignment_1()); }
		(rule__SequenceStream__EveryAbsentSequenceSourceChainAssignment_1)
		{ after(grammarAccess.getSequenceStreamAccess().getEveryAbsentSequenceSourceChainAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getGroup_0()); }
		(rule__AbsentSequenceSourceChain__Group_0__0)
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getBasicAbsentPatternSourceAssignment_1()); }
		(rule__AbsentSequenceSourceChain__BasicAbsentPatternSourceAssignment_1)
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getBasicAbsentPatternSourceAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getLeftAbsentSequenceSourceAssignment_2()); }
		(rule__AbsentSequenceSourceChain__LeftAbsentSequenceSourceAssignment_2)
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getLeftAbsentSequenceSourceAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getRightAbsentSequenceSourceAssignment_3()); }
		(rule__AbsentSequenceSourceChain__RightAbsentSequenceSourceAssignment_3)
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getRightAbsentSequenceSourceAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_0()); }
		(rule__LeftAbsentSequenceSource2__Group_0__0)
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_1()); }
		(rule__LeftAbsentSequenceSource2__Group_1__0)
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_2()); }
		(rule__LeftAbsentSequenceSource2__Group_2__0)
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_0()); }
		(rule__RightAbsentSequenceSource2__Group_0__0)
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_1()); }
		(rule__RightAbsentSequenceSource2__Group_1__0)
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_2()); }
		(rule__RightAbsentSequenceSource2__Group_2__0)
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceSourceChain1Access().getGroup_0()); }
		(rule__SequenceSourceChain1__Group_0__0)
		{ after(grammarAccess.getSequenceSourceChain1Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceSourceChain1Access().getGroup_1()); }
		(rule__SequenceSourceChain1__Group_1__0)
		{ after(grammarAccess.getSequenceSourceChain1Access().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceSourceAccess().getLogicalStatefulSourceParserRuleCall_0()); }
		(ruleLogicalStatefulSource)
		{ after(grammarAccess.getSequenceSourceAccess().getLogicalStatefulSourceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceSourceAccess().getSequenceCollectionStatefulSourceParserRuleCall_1()); }
		(ruleSequenceCollectionStatefulSource)
		{ after(grammarAccess.getSequenceSourceAccess().getSequenceCollectionStatefulSourceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceSourceAccess().getStandardStatefulSourceParserRuleCall_2()); }
		(ruleStandardStatefulSource)
		{ after(grammarAccess.getSequenceSourceAccess().getStandardStatefulSourceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceSourceAccess().getLogicalAbsentStatefulSourceParserRuleCall_3()); }
		(ruleLogicalAbsentStatefulSource)
		{ after(grammarAccess.getSequenceSourceAccess().getLogicalAbsentStatefulSourceParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getGroup_1_0()); }
		(rule__SequenceCollectionStatefulSource__Group_1_0__0)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAssignment_1_1()); }
		(rule__SequenceCollectionStatefulSource__Zero_or_moreAssignment_1_1)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneAssignment_1_2()); }
		(rule__SequenceCollectionStatefulSource__Zero_or_oneAssignment_1_2)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_moreAssignment_1_3()); }
		(rule__SequenceCollectionStatefulSource__One_or_moreAssignment_1_3)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_moreAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnonymousStreamAccess().getGroup_0()); }
		(rule__AnonymousStream__Group_0__0)
		{ after(grammarAccess.getAnonymousStreamAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnonymousStreamAccess().getGroup_1()); }
		(rule__AnonymousStream__Group_1__0)
		{ after(grammarAccess.getAnonymousStreamAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateAccess().getGroup_0()); }
		(rule__OutputRate__Group_0__0)
		{ after(grammarAccess.getOutputRateAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputRateAccess().getGroup_1()); }
		(rule__OutputRate__Group_1__0)
		{ after(grammarAccess.getOutputRateAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Alternatives_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateAccess().getTvAssignment_0_4_0()); }
		(rule__OutputRate__TvAssignment_0_4_0)
		{ after(grammarAccess.getOutputRateAccess().getTvAssignment_0_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputRateAccess().getGroup_0_4_1()); }
		(rule__OutputRate__Group_0_4_1__0)
		{ after(grammarAccess.getOutputRateAccess().getGroup_0_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateTypeAccess().getGroup_0()); }
		(rule__OutputRateType__Group_0__0)
		{ after(grammarAccess.getOutputRateTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputRateTypeAccess().getGroup_1()); }
		(rule__OutputRateType__Group_1__0)
		{ after(grammarAccess.getOutputRateTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutputRateTypeAccess().getGroup_2()); }
		(rule__OutputRateType__Group_2__0)
		{ after(grammarAccess.getOutputRateTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getGroup_0()); }
		(rule__QueryOutput__Group_0__0)
		{ after(grammarAccess.getQueryOutputAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getQueryOutputAccess().getGroup_1()); }
		(rule__QueryOutput__Group_1__0)
		{ after(grammarAccess.getQueryOutputAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getQueryOutputAccess().getGroup_2()); }
		(rule__QueryOutput__Group_2__0)
		{ after(grammarAccess.getQueryOutputAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getQueryOutputAccess().getGroup_3()); }
		(rule__QueryOutput__Group_3__0)
		{ after(grammarAccess.getQueryOutputAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputEventTypeAccess().getGroup_0()); }
		(rule__OutputEventType__Group_0__0)
		{ after(grammarAccess.getOutputEventTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputEventTypeAccess().getGroup_1()); }
		(rule__OutputEventType__Group_1__0)
		{ after(grammarAccess.getOutputEventTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutputEventTypeAccess().getGroup_2()); }
		(rule__OutputEventType__Group_2__0)
		{ after(grammarAccess.getOutputEventTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getOutputEventTypeAccess().getGroup_3()); }
		(rule__OutputEventType__Group_3__0)
		{ after(grammarAccess.getOutputEventTypeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getOutputEventTypeAccess().getGroup_4()); }
		(rule__OutputEventType__Group_4__0)
		{ after(grammarAccess.getOutputEventTypeAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_0()); }
		(rule__BasicSourceStreamHandlers1__Group_1_0__0)
		{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_1()); }
		(rule__BasicSourceStreamHandlers1__Group_1_1__0)
		{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandler__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlerAccess().getFilAssignment_0()); }
		(rule__BasicSourceStreamHandler__FilAssignment_0)
		{ after(grammarAccess.getBasicSourceStreamHandlerAccess().getFilAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicSourceStreamHandlerAccess().getSfAssignment_1()); }
		(rule__BasicSourceStreamHandler__SfAssignment_1)
		{ after(grammarAccess.getBasicSourceStreamHandlerAccess().getSfAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeListAccess().getGroup_0()); }
		(rule__AttributeList__Group_0__0)
		{ after(grammarAccess.getAttributeListAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeListAccess().getGroup_1()); }
		(rule__AttributeList__Group_1__0)
		{ after(grammarAccess.getAttributeListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByQuerySelectionAccess().getAsteriskKeyword_1_1_0()); }
		Asterisk
		{ after(grammarAccess.getGroupByQuerySelectionAccess().getAsteriskKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getGroupByQuerySelectionAccess().getGroup_1_1_1()); }
		(rule__GroupByQuerySelection__Group_1_1_1__0)
		{ after(grammarAccess.getGroupByQuerySelectionAccess().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAttributeAccess().getGroup_0()); }
		(rule__OutputAttribute__Group_0__0)
		{ after(grammarAccess.getOutputAttributeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputAttributeAccess().getGroup_1()); }
		(rule__OutputAttribute__Group_1__0)
		{ after(grammarAccess.getOutputAttributeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathLogicalOperationAccess().getAndAssignment_1_0_1_0()); }
		(rule__MathLogicalOperation__AndAssignment_1_0_1_0)
		{ after(grammarAccess.getMathLogicalOperationAccess().getAndAssignment_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathLogicalOperationAccess().getOrAssignment_1_0_1_1()); }
		(rule__MathLogicalOperation__OrAssignment_1_0_1_1)
		{ after(grammarAccess.getMathLogicalOperationAccess().getOrAssignment_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__SymbolAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathGtLtOperationAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0_1_0_0()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getMathGtLtOperationAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathGtLtOperationAccess().getSymbolLessThanSignEqualsSignKeyword_1_0_1_0_1()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getMathGtLtOperationAccess().getSymbolLessThanSignEqualsSignKeyword_1_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMathGtLtOperationAccess().getSymbolGreaterThanSignKeyword_1_0_1_0_2()); }
		GreaterThanSign
		{ after(grammarAccess.getMathGtLtOperationAccess().getSymbolGreaterThanSignKeyword_1_0_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMathGtLtOperationAccess().getSymbolLessThanSignKeyword_1_0_1_0_3()); }
		LessThanSign
		{ after(grammarAccess.getMathGtLtOperationAccess().getSymbolLessThanSignKeyword_1_0_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathEqualOperationAccess().getEqAssignment_1_0_1_0()); }
		(rule__MathEqualOperation__EqAssignment_1_0_1_0)
		{ after(grammarAccess.getMathEqualOperationAccess().getEqAssignment_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathEqualOperationAccess().getNot_eqAssignment_1_0_1_1()); }
		(rule__MathEqualOperation__Not_eqAssignment_1_0_1_1)
		{ after(grammarAccess.getMathEqualOperationAccess().getNot_eqAssignment_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathAddsubOperationAccess().getAddAssignment_1_0_1_0()); }
		(rule__MathAddsubOperation__AddAssignment_1_0_1_0)
		{ after(grammarAccess.getMathAddsubOperationAccess().getAddAssignment_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathAddsubOperationAccess().getSubstractAssignment_1_0_1_1()); }
		(rule__MathAddsubOperation__SubstractAssignment_1_0_1_1)
		{ after(grammarAccess.getMathAddsubOperationAccess().getSubstractAssignment_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getMultiplyAssignment_1_0_1_0()); }
		(rule__MathDivmulOperation__MultiplyAssignment_1_0_1_0)
		{ after(grammarAccess.getMathDivmulOperationAccess().getMultiplyAssignment_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getDevideAssignment_1_0_1_1()); }
		(rule__MathDivmulOperation__DevideAssignment_1_0_1_1)
		{ after(grammarAccess.getMathDivmulOperationAccess().getDevideAssignment_1_0_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getModAssignment_1_0_1_2()); }
		(rule__MathDivmulOperation__ModAssignment_1_0_1_2)
		{ after(grammarAccess.getMathDivmulOperationAccess().getModAssignment_1_0_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getGroup_0()); }
		(rule__MathOtherOperations__Group_0__0)
		{ after(grammarAccess.getMathOtherOperationsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getGroup_1()); }
		(rule__MathOtherOperations__Group_1__0)
		{ after(grammarAccess.getMathOtherOperationsAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getNullCheckParserRuleCall_2()); }
		(ruleNullCheck)
		{ after(grammarAccess.getMathOtherOperationsAccess().getNullCheckParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getMathOtherOperations1Assignment_3()); }
		(rule__MathOtherOperations__MathOtherOperations1Assignment_3)
		{ after(grammarAccess.getMathOtherOperationsAccess().getMathOtherOperations1Assignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCheckAccess().getStream_refAssignment_0_0()); }
		(rule__NullCheck__Stream_refAssignment_0_0)
		{ after(grammarAccess.getNullCheckAccess().getStream_refAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNullCheckAccess().getAttr_refAssignment_0_1()); }
		(rule__NullCheck__Attr_refAssignment_0_1)
		{ after(grammarAccess.getNullCheckAccess().getAttr_refAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNullCheckAccess().getFoAssignment_0_2()); }
		(rule__NullCheck__FoAssignment_0_2)
		{ after(grammarAccess.getNullCheckAccess().getFoAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperations1Access().getConst_valAssignment_0()); }
		(rule__MathOtherOperations1__Const_valAssignment_0)
		{ after(grammarAccess.getMathOtherOperations1Access().getConst_valAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathOtherOperations1Access().getFoAssignment_1()); }
		(rule__MathOtherOperations1__FoAssignment_1)
		{ after(grammarAccess.getMathOtherOperations1Access().getFoAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getMathOtherOperations1Access().getAttrRefAssignment_2()); }
		(rule__MathOtherOperations1__AttrRefAssignment_2)
		{ after(grammarAccess.getMathOtherOperations1Access().getAttrRefAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getGroup_0()); }
		(rule__AttributeReference__Group_0__0)
		{ after(grammarAccess.getAttributeReferenceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getFeaturesOrAttrRefAssignment_1()); }
		(rule__AttributeReference__FeaturesOrAttrRefAssignment_1)
		{ after(grammarAccess.getAttributeReferenceAccess().getFeaturesOrAttrRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeIndexAccess().getGroup_0()); }
		(rule__AttributeIndex__Group_0__0)
		{ after(grammarAccess.getAttributeIndexAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeIndexAccess().getGroup_1()); }
		(rule__AttributeIndex__Group_1__0)
		{ after(grammarAccess.getAttributeIndexAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getGroup_0()); }
		(rule__ConstantValue__Group_0__0)
		{ after(grammarAccess.getConstantValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getGroup_1()); }
		(rule__ConstantValue__Group_1__0)
		{ after(grammarAccess.getConstantValueAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getGroup_2()); }
		(rule__ConstantValue__Group_2__0)
		{ after(grammarAccess.getConstantValueAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getGroup_3()); }
		(rule__ConstantValue__Group_3__0)
		{ after(grammarAccess.getConstantValueAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getGroup_4()); }
		(rule__ConstantValue__Group_4__0)
		{ after(grammarAccess.getConstantValueAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getGroup_5()); }
		(rule__ConstantValue__Group_5__0)
		{ after(grammarAccess.getConstantValueAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getGroup_6()); }
		(rule__ConstantValue__Group_6__0)
		{ after(grammarAccess.getConstantValueAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolValueAccess().getTRUEParserRuleCall_0()); }
		ruleTRUE
		{ after(grammarAccess.getBoolValueAccess().getTRUEParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolValueAccess().getFALSEParserRuleCall_1()); }
		ruleFALSE
		{ after(grammarAccess.getBoolValueAccess().getFALSEParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedDoubleValue__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignedDoubleValueAccess().getHyphenMinusKeyword_0_0()); }
		HyphenMinus
		{ after(grammarAccess.getSignedDoubleValueAccess().getHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignedDoubleValueAccess().getPlusSignKeyword_0_1()); }
		PlusSign
		{ after(grammarAccess.getSignedDoubleValueAccess().getPlusSignKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedFloatValue__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignedFloatValueAccess().getHyphenMinusKeyword_0_0()); }
		HyphenMinus
		{ after(grammarAccess.getSignedFloatValueAccess().getHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignedFloatValueAccess().getPlusSignKeyword_0_1()); }
		PlusSign
		{ after(grammarAccess.getSignedFloatValueAccess().getPlusSignKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedLongValue__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignedLongValueAccess().getHyphenMinusKeyword_0_0()); }
		HyphenMinus
		{ after(grammarAccess.getSignedLongValueAccess().getHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignedLongValueAccess().getPlusSignKeyword_0_1()); }
		PlusSign
		{ after(grammarAccess.getSignedLongValueAccess().getPlusSignKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup_0()); }
		(rule__TimeValue__Group_0__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup_1()); }
		(rule__TimeValue__Group_1__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup_2()); }
		(rule__TimeValue__Group_2__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup_3()); }
		(rule__TimeValue__Group_3__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup_4()); }
		(rule__TimeValue__Group_4__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup_5()); }
		(rule__TimeValue__Group_5__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup_6()); }
		(rule__TimeValue__Group_6__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_7()); }
		(rule__TimeValue__MsecvAssignment_7)
		{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntValue__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignedIntValueAccess().getHyphenMinusKeyword_0_0()); }
		HyphenMinus
		{ after(grammarAccess.getSignedIntValueAccess().getHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignedIntValueAccess().getPlusSignKeyword_0_1()); }
		PlusSign
		{ after(grammarAccess.getSignedIntValueAccess().getPlusSignKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0()); }
		(rule__DOUBLE_LITERAL__Group_0__0)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_1()); }
		(rule__DOUBLE_LITERAL__Group_1__0)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_2()); }
		(rule__DOUBLE_LITERAL__Group_2__0)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Alternatives_0_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0()); }
		HyphenMinus
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_0_0_3_1_1()); }
		PlusSign
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_0_0_3_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_1_4_0()); }
		HyphenMinus
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_1_4_1()); }
		PlusSign
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Alternatives_2_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_2_0_4_1_0()); }
		HyphenMinus
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getHyphenMinusKeyword_2_0_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_2_0_4_1_1()); }
		PlusSign
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getPlusSignKeyword_2_0_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getGroup_0()); }
		(rule__FLOAT_LITERAL__Group_0__0)
		{ after(grammarAccess.getFLOAT_LITERALAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getGroup_1()); }
		(rule__FLOAT_LITERAL__Group_1__0)
		{ after(grammarAccess.getFLOAT_LITERALAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Alternatives_0_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0()); }
		HyphenMinus
		{ after(grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_0_0_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_0_0_3_1_1()); }
		PlusSign
		{ after(grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_0_0_3_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Alternatives_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_1_4_1_0()); }
		HyphenMinus
		{ after(grammarAccess.getFLOAT_LITERALAccess().getHyphenMinusKeyword_1_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_1_4_1_1()); }
		PlusSign
		{ after(grammarAccess.getFLOAT_LITERALAccess().getPlusSignKeyword_1_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__YEARS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYEARSAccess().getYearAssignment_0()); }
		(rule__YEARS__YearAssignment_0)
		{ after(grammarAccess.getYEARSAccess().getYearAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getYEARSAccess().getYearsAssignment_1()); }
		(rule__YEARS__YearsAssignment_1)
		{ after(grammarAccess.getYEARSAccess().getYearsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MONTHS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMONTHSAccess().getMonthAssignment_0()); }
		(rule__MONTHS__MonthAssignment_0)
		{ after(grammarAccess.getMONTHSAccess().getMonthAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getMONTHSAccess().getMonthsAssignment_1()); }
		(rule__MONTHS__MonthsAssignment_1)
		{ after(grammarAccess.getMONTHSAccess().getMonthsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WEEKS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWEEKSAccess().getWeekAssignment_0()); }
		(rule__WEEKS__WeekAssignment_0)
		{ after(grammarAccess.getWEEKSAccess().getWeekAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getWEEKSAccess().getWeeksAssignment_1()); }
		(rule__WEEKS__WeeksAssignment_1)
		{ after(grammarAccess.getWEEKSAccess().getWeeksAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DAYS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDAYSAccess().getDayAssignment_0()); }
		(rule__DAYS__DayAssignment_0)
		{ after(grammarAccess.getDAYSAccess().getDayAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDAYSAccess().getDaysAssignment_1()); }
		(rule__DAYS__DaysAssignment_1)
		{ after(grammarAccess.getDAYSAccess().getDaysAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HOURS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHOURSAccess().getHourAssignment_0()); }
		(rule__HOURS__HourAssignment_0)
		{ after(grammarAccess.getHOURSAccess().getHourAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getHOURSAccess().getHoursAssignment_1()); }
		(rule__HOURS__HoursAssignment_1)
		{ after(grammarAccess.getHOURSAccess().getHoursAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MINUTES__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMINUTESAccess().getMinuteAssignment_0()); }
		(rule__MINUTES__MinuteAssignment_0)
		{ after(grammarAccess.getMINUTESAccess().getMinuteAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getMINUTESAccess().getMinutesAssignment_1()); }
		(rule__MINUTES__MinutesAssignment_1)
		{ after(grammarAccess.getMINUTESAccess().getMinutesAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getMINUTESAccess().getMinAssignment_2()); }
		(rule__MINUTES__MinAssignment_2)
		{ after(grammarAccess.getMINUTESAccess().getMinAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SECONDS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSECONDSAccess().getSecondAssignment_0()); }
		(rule__SECONDS__SecondAssignment_0)
		{ after(grammarAccess.getSECONDSAccess().getSecondAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSECONDSAccess().getSecondsAssignment_1()); }
		(rule__SECONDS__SecondsAssignment_1)
		{ after(grammarAccess.getSECONDSAccess().getSecondsAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSECONDSAccess().getSecAssignment_2()); }
		(rule__SECONDS__SecAssignment_2)
		{ after(grammarAccess.getSECONDSAccess().getSecAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MILLISECONDS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMILLISECONDSAccess().getMillisecondAssignment_0()); }
		(rule__MILLISECONDS__MillisecondAssignment_0)
		{ after(grammarAccess.getMILLISECONDSAccess().getMillisecondAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getMILLISECONDSAccess().getMillisecondsAssignment_1()); }
		(rule__MILLISECONDS__MillisecondsAssignment_1)
		{ after(grammarAccess.getMILLISECONDSAccess().getMillisecondsAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getMILLISECONDSAccess().getMillisecAssignment_2()); }
		(rule__MILLISECONDS__MillisecAssignment_2)
		{ after(grammarAccess.getMILLISECONDSAccess().getMillisecAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group__0__Impl
	rule__ExecutionPlan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getAppAnnAssignment_0()); }
	(rule__ExecutionPlan__AppAnnAssignment_0)*
	{ after(grammarAccess.getExecutionPlanAccess().getAppAnnAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getGroup_1()); }
	(rule__ExecutionPlan__Group_1__0)
	{ after(grammarAccess.getExecutionPlanAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionPlan__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1__0__Impl
	rule__ExecutionPlan__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getAlternatives_1_0()); }
	(rule__ExecutionPlan__Alternatives_1_0)
	{ after(grammarAccess.getExecutionPlanAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1__1__Impl
	rule__ExecutionPlan__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getGroup_1_1()); }
	(rule__ExecutionPlan__Group_1_1__0)*
	{ after(grammarAccess.getExecutionPlanAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1__2__Impl
	rule__ExecutionPlan__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getGroup_1_2()); }
	(rule__ExecutionPlan__Group_1_2__0)*
	{ after(grammarAccess.getExecutionPlanAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_3()); }
	(Semicolon)?
	{ after(grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionPlan__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getGroup_1_1_0()); }
	(rule__ExecutionPlan__Group_1_1_0__0)
	{ after(grammarAccess.getExecutionPlanAccess().getGroup_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionPlan__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1_1_0__0__Impl
	rule__ExecutionPlan__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_1_0_0()); }
	Semicolon
	{ after(grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getAlternatives_1_1_0_1()); }
	(rule__ExecutionPlan__Alternatives_1_1_0_1)
	{ after(grammarAccess.getExecutionPlanAccess().getAlternatives_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionPlan__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getGroup_1_2_0()); }
	(rule__ExecutionPlan__Group_1_2_0__0)
	{ after(grammarAccess.getExecutionPlanAccess().getGroup_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionPlan__Group_1_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1_2_0__0__Impl
	rule__ExecutionPlan__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_2_0_0()); }
	Semicolon
	{ after(grammarAccess.getExecutionPlanAccess().getSemicolonKeyword_1_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionPlan__Group_1_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Group_1_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionPlanAccess().getExElementAssignment_1_2_0_1()); }
	(rule__ExecutionPlan__ExElementAssignment_1_2_0_1)
	{ after(grammarAccess.getExecutionPlanAccess().getExElementAssignment_1_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionElement__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionElementAccess().getExecPartitionAssignment_0_0()); }
	(rule__ExecutionElement__ExecPartitionAssignment_0_0)
	{ after(grammarAccess.getExecutionElementAccess().getExecPartitionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionElement__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionElementAccess().getQueAssignment_1_0()); }
	(rule__ExecutionElement__QueAssignment_1_0)
	{ after(grammarAccess.getExecutionElementAccess().getQueAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStream__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__0__Impl
	rule__DefinitionStream__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getDefinitionStreamAction_0()); }
	()
	{ after(grammarAccess.getDefinitionStreamAccess().getDefinitionStreamAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__1__Impl
	rule__DefinitionStream__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getAnnAssignment_1()); }
	(rule__DefinitionStream__AnnAssignment_1)*
	{ after(grammarAccess.getDefinitionStreamAccess().getAnnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__2__Impl
	rule__DefinitionStream__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getDEFINEParserRuleCall_2()); }
	ruleDEFINE
	{ after(grammarAccess.getDefinitionStreamAccess().getDEFINEParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__3__Impl
	rule__DefinitionStream__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getAlternatives_3()); }
	(rule__DefinitionStream__Alternatives_3)
	{ after(grammarAccess.getDefinitionStreamAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__4__Impl
	rule__DefinitionStream__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getSrcAssignment_4()); }
	(rule__DefinitionStream__SrcAssignment_4)
	{ after(grammarAccess.getDefinitionStreamAccess().getSrcAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__5__Impl
	rule__DefinitionStream__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getOPEN_PARParserRuleCall_5()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getDefinitionStreamAccess().getOPEN_PARParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__6__Impl
	rule__DefinitionStream__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getFeatureAssignment_6()); }
	(rule__DefinitionStream__FeatureAssignment_6)
	{ after(grammarAccess.getDefinitionStreamAccess().getFeatureAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__7__Impl
	rule__DefinitionStream__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getGroup_7()); }
	(rule__DefinitionStream__Group_7__0)*
	{ after(grammarAccess.getDefinitionStreamAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getCLOSE_PARParserRuleCall_8()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getDefinitionStreamAccess().getCLOSE_PARParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStream__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group_7__0__Impl
	rule__DefinitionStream__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getCommaKeyword_7_0()); }
	Comma
	{ after(grammarAccess.getDefinitionStreamAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionStream__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionStreamAccess().getFeatureAssignment_7_1()); }
	(rule__DefinitionStream__FeatureAssignment_7_1)
	{ after(grammarAccess.getDefinitionStreamAccess().getFeatureAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionTable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__0__Impl
	rule__DefinitionTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getDefinitionTableAction_0()); }
	()
	{ after(grammarAccess.getDefinitionTableAccess().getDefinitionTableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__1__Impl
	rule__DefinitionTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getAnn1Assignment_1()); }
	(rule__DefinitionTable__Ann1Assignment_1)*
	{ after(grammarAccess.getDefinitionTableAccess().getAnn1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__2__Impl
	rule__DefinitionTable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getDEFINEParserRuleCall_2()); }
	ruleDEFINE
	{ after(grammarAccess.getDefinitionTableAccess().getDEFINEParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__3__Impl
	rule__DefinitionTable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getTABLEParserRuleCall_3()); }
	ruleTABLE
	{ after(grammarAccess.getDefinitionTableAccess().getTABLEParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__4__Impl
	rule__DefinitionTable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getSrcAssignment_4()); }
	(rule__DefinitionTable__SrcAssignment_4)
	{ after(grammarAccess.getDefinitionTableAccess().getSrcAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__5__Impl
	rule__DefinitionTable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getOPEN_PARParserRuleCall_5()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getDefinitionTableAccess().getOPEN_PARParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__6__Impl
	rule__DefinitionTable__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getFeatureAssignment_6()); }
	(rule__DefinitionTable__FeatureAssignment_6)
	{ after(grammarAccess.getDefinitionTableAccess().getFeatureAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__7__Impl
	rule__DefinitionTable__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getGroup_7()); }
	(rule__DefinitionTable__Group_7__0)*
	{ after(grammarAccess.getDefinitionTableAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getCLOSE_PARParserRuleCall_8()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getDefinitionTableAccess().getCLOSE_PARParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionTable__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group_7__0__Impl
	rule__DefinitionTable__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getCommaKeyword_7_0()); }
	Comma
	{ after(grammarAccess.getDefinitionTableAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTable__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTableAccess().getFeatureAssignment_7_1()); }
	(rule__DefinitionTable__FeatureAssignment_7_1)
	{ after(grammarAccess.getDefinitionTableAccess().getFeatureAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionWindow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__0__Impl
	rule__DefinitionWindow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getDefinitionWindowAction_0()); }
	()
	{ after(grammarAccess.getDefinitionWindowAccess().getDefinitionWindowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__1__Impl
	rule__DefinitionWindow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getAnn2Assignment_1()); }
	(rule__DefinitionWindow__Ann2Assignment_1)*
	{ after(grammarAccess.getDefinitionWindowAccess().getAnn2Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__2__Impl
	rule__DefinitionWindow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getDEFINEParserRuleCall_2()); }
	ruleDEFINE
	{ after(grammarAccess.getDefinitionWindowAccess().getDEFINEParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__3__Impl
	rule__DefinitionWindow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getWINDOWParserRuleCall_3()); }
	ruleWINDOW
	{ after(grammarAccess.getDefinitionWindowAccess().getWINDOWParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__4__Impl
	rule__DefinitionWindow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getSrcAssignment_4()); }
	(rule__DefinitionWindow__SrcAssignment_4)
	{ after(grammarAccess.getDefinitionWindowAccess().getSrcAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__5__Impl
	rule__DefinitionWindow__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getOPEN_PARParserRuleCall_5()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getDefinitionWindowAccess().getOPEN_PARParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__6__Impl
	rule__DefinitionWindow__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getFeatureAssignment_6()); }
	(rule__DefinitionWindow__FeatureAssignment_6)
	{ after(grammarAccess.getDefinitionWindowAccess().getFeatureAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__7__Impl
	rule__DefinitionWindow__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getGroup_7()); }
	(rule__DefinitionWindow__Group_7__0)*
	{ after(grammarAccess.getDefinitionWindowAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__8__Impl
	rule__DefinitionWindow__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getCLOSE_PARParserRuleCall_8()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getDefinitionWindowAccess().getCLOSE_PARParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__9__Impl
	rule__DefinitionWindow__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getFuncOpAssignment_9()); }
	(rule__DefinitionWindow__FuncOpAssignment_9)
	{ after(grammarAccess.getDefinitionWindowAccess().getFuncOpAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getGroup_10()); }
	(rule__DefinitionWindow__Group_10__0)?
	{ after(grammarAccess.getDefinitionWindowAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionWindow__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group_7__0__Impl
	rule__DefinitionWindow__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getCommaKeyword_7_0()); }
	Comma
	{ after(grammarAccess.getDefinitionWindowAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getFeatureAssignment_7_1()); }
	(rule__DefinitionWindow__FeatureAssignment_7_1)
	{ after(grammarAccess.getDefinitionWindowAccess().getFeatureAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionWindow__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group_10__0__Impl
	rule__DefinitionWindow__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getOUTPUTParserRuleCall_10_0()); }
	ruleOUTPUT
	{ after(grammarAccess.getDefinitionWindowAccess().getOUTPUTParserRuleCall_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionWindow__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionWindowAccess().getOpEventTypeAssignment_10_1()); }
	(rule__DefinitionWindow__OpEventTypeAssignment_10_1)
	{ after(grammarAccess.getDefinitionWindowAccess().getOpEventTypeAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionTrigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group__0__Impl
	rule__DefinitionTrigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getDefinitionTriggerAction_0()); }
	()
	{ after(grammarAccess.getDefinitionTriggerAccess().getDefinitionTriggerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group__1__Impl
	rule__DefinitionTrigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getGroup_1()); }
	(rule__DefinitionTrigger__Group_1__0)
	{ after(grammarAccess.getDefinitionTriggerAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group__2__Impl
	rule__DefinitionTrigger__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getTnAssignment_2()); }
	(rule__DefinitionTrigger__TnAssignment_2)
	{ after(grammarAccess.getDefinitionTriggerAccess().getTnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group__3__Impl
	rule__DefinitionTrigger__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getATParserRuleCall_3()); }
	ruleAT
	{ after(grammarAccess.getDefinitionTriggerAccess().getATParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getAlternatives_4()); }
	(rule__DefinitionTrigger__Alternatives_4)
	{ after(grammarAccess.getDefinitionTriggerAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionTrigger__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group_1__0__Impl
	rule__DefinitionTrigger__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getDEFINEParserRuleCall_1_0()); }
	ruleDEFINE
	{ after(grammarAccess.getDefinitionTriggerAccess().getDEFINEParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getTRIGGERParserRuleCall_1_1()); }
	ruleTRIGGER
	{ after(grammarAccess.getDefinitionTriggerAccess().getTRIGGERParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionTrigger__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group_4_0__0__Impl
	rule__DefinitionTrigger__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getEveryAssignment_4_0_0()); }
	(rule__DefinitionTrigger__EveryAssignment_4_0_0)
	{ after(grammarAccess.getDefinitionTriggerAccess().getEveryAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionTrigger__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionTriggerAccess().getTvAssignment_4_0_1()); }
	(rule__DefinitionTrigger__TvAssignment_4_0_1)
	{ after(grammarAccess.getDefinitionTriggerAccess().getTvAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__0__Impl
	rule__DefinitionFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getDefinitionFunctionAction_0()); }
	()
	{ after(grammarAccess.getDefinitionFunctionAccess().getDefinitionFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__1__Impl
	rule__DefinitionFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getGroup_1()); }
	(rule__DefinitionFunction__Group_1__0)
	{ after(grammarAccess.getDefinitionFunctionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__2__Impl
	rule__DefinitionFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getFnAssignment_2()); }
	(rule__DefinitionFunction__FnAssignment_2)
	{ after(grammarAccess.getDefinitionFunctionAccess().getFnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__3__Impl
	rule__DefinitionFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getOPEN_SQARE_BRACKETSParserRuleCall_3()); }
	ruleOPEN_SQARE_BRACKETS
	{ after(grammarAccess.getDefinitionFunctionAccess().getOPEN_SQARE_BRACKETSParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__4__Impl
	rule__DefinitionFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getLnAssignment_4()); }
	(rule__DefinitionFunction__LnAssignment_4)
	{ after(grammarAccess.getDefinitionFunctionAccess().getLnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__5__Impl
	rule__DefinitionFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_5()); }
	ruleCLOSE_SQARE_BRACKETS
	{ after(grammarAccess.getDefinitionFunctionAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__6__Impl
	rule__DefinitionFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getRETURNParserRuleCall_6()); }
	ruleRETURN
	{ after(grammarAccess.getDefinitionFunctionAccess().getRETURNParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__7__Impl
	rule__DefinitionFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getAttr_typeAssignment_7()); }
	(rule__DefinitionFunction__Attr_typeAssignment_7)
	{ after(grammarAccess.getDefinitionFunctionAccess().getAttr_typeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getFunc_bodyAssignment_8()); }
	(rule__DefinitionFunction__Func_bodyAssignment_8)
	{ after(grammarAccess.getDefinitionFunctionAccess().getFunc_bodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionFunction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group_1__0__Impl
	rule__DefinitionFunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getDEFINEParserRuleCall_1_0()); }
	ruleDEFINE
	{ after(grammarAccess.getDefinitionFunctionAccess().getDEFINEParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionFunction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionFunctionAccess().getFUNCTIONParserRuleCall_1_1()); }
	ruleFUNCTION
	{ after(grammarAccess.getDefinitionFunctionAccess().getFUNCTIONParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionAggregation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__0__Impl
	rule__DefinitionAggregation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getDefinitionAggregationAction_0()); }
	()
	{ after(grammarAccess.getDefinitionAggregationAccess().getDefinitionAggregationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__1__Impl
	rule__DefinitionAggregation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getAnnAssignment_1()); }
	(rule__DefinitionAggregation__AnnAssignment_1)*
	{ after(grammarAccess.getDefinitionAggregationAccess().getAnnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__2__Impl
	rule__DefinitionAggregation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getDEFINEParserRuleCall_2()); }
	ruleDEFINE
	{ after(grammarAccess.getDefinitionAggregationAccess().getDEFINEParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__3__Impl
	rule__DefinitionAggregation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getAGGREGATIONParserRuleCall_3()); }
	ruleAGGREGATION
	{ after(grammarAccess.getDefinitionAggregationAccess().getAGGREGATIONParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__4__Impl
	rule__DefinitionAggregation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getSrcAssignment_4()); }
	(rule__DefinitionAggregation__SrcAssignment_4)
	{ after(grammarAccess.getDefinitionAggregationAccess().getSrcAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__5__Impl
	rule__DefinitionAggregation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getFROMParserRuleCall_5()); }
	ruleFROM
	{ after(grammarAccess.getDefinitionAggregationAccess().getFROMParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__6__Impl
	rule__DefinitionAggregation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getStdStreamAssignment_6()); }
	(rule__DefinitionAggregation__StdStreamAssignment_6)
	{ after(grammarAccess.getDefinitionAggregationAccess().getStdStreamAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__7__Impl
	rule__DefinitionAggregation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getGroupByQuerySelAssignment_7()); }
	(rule__DefinitionAggregation__GroupByQuerySelAssignment_7)
	{ after(grammarAccess.getDefinitionAggregationAccess().getGroupByQuerySelAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__8__Impl
	rule__DefinitionAggregation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getAGGREGATEParserRuleCall_8()); }
	ruleAGGREGATE
	{ after(grammarAccess.getDefinitionAggregationAccess().getAGGREGATEParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__9__Impl
	rule__DefinitionAggregation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getGroup_9()); }
	(rule__DefinitionAggregation__Group_9__0)?
	{ after(grammarAccess.getDefinitionAggregationAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__10__Impl
	rule__DefinitionAggregation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getEveAssignment_10()); }
	(rule__DefinitionAggregation__EveAssignment_10)
	{ after(grammarAccess.getDefinitionAggregationAccess().getEveAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getAggrTimeAssignment_11()); }
	(rule__DefinitionAggregation__AggrTimeAssignment_11)
	{ after(grammarAccess.getDefinitionAggregationAccess().getAggrTimeAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionAggregation__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group_9__0__Impl
	rule__DefinitionAggregation__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getBYParserRuleCall_9_0()); }
	ruleBY
	{ after(grammarAccess.getDefinitionAggregationAccess().getBYParserRuleCall_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionAggregation__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAggregationAccess().getAttrRefAssignment_9_1()); }
	(rule__DefinitionAggregation__AttrRefAssignment_9_1)
	{ after(grammarAccess.getDefinitionAggregationAccess().getAttrRefAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation_time_interval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation_time_interval__Group__0__Impl
	rule__Aggregation_time_interval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAssignment_0()); }
	(rule__Aggregation_time_interval__AggrtimeDurAssignment_0)
	{ after(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation_time_interval__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregation_time_intervalAccess().getGroup_1()); }
	(rule__Aggregation_time_interval__Group_1__0)*
	{ after(grammarAccess.getAggregation_time_intervalAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation_time_interval__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation_time_interval__Group_1__0__Impl
	rule__Aggregation_time_interval__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregation_time_intervalAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getAggregation_time_intervalAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation_time_interval__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAssignment_1_1()); }
	(rule__Aggregation_time_interval__AggrtimeDurAssignment_1_1)
	{ after(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationTimeRange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationTimeRange__Group__0__Impl
	rule__AggregationTimeRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeRange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAssignment_0()); }
	(rule__AggregationTimeRange__AggrtimeDurAssignment_0)
	{ after(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeRange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationTimeRange__Group__1__Impl
	rule__AggregationTimeRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeRange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationTimeRangeAccess().getTRIPLE_DOTParserRuleCall_1()); }
	ruleTRIPLE_DOT
	{ after(grammarAccess.getAggregationTimeRangeAccess().getTRIPLE_DOTParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeRange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationTimeRange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeRange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAssignment_2()); }
	(rule__AggregationTimeRange__AggrtimeDurAssignment_2)
	{ after(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AppAnnotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group__0__Impl
	rule__AppAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getCommercialAtKeyword_0()); }
	CommercialAt
	{ after(grammarAccess.getAppAnnotationAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group__1__Impl
	rule__AppAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getAPPParserRuleCall_1()); }
	ruleAPP
	{ after(grammarAccess.getAppAnnotationAccess().getAPPParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group__2__Impl
	rule__AppAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getAppAnnotationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group__3__Impl
	rule__AppAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getNaAssignment_3()); }
	(rule__AppAnnotation__NaAssignment_3)
	{ after(grammarAccess.getAppAnnotationAccess().getNaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getGroup_4()); }
	(rule__AppAnnotation__Group_4__0)?
	{ after(grammarAccess.getAppAnnotationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AppAnnotation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group_4__0__Impl
	rule__AppAnnotation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getOPEN_PARParserRuleCall_4_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getAppAnnotationAccess().getOPEN_PARParserRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group_4__1__Impl
	rule__AppAnnotation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getAnn5Assignment_4_1()); }
	(rule__AppAnnotation__Ann5Assignment_4_1)
	{ after(grammarAccess.getAppAnnotationAccess().getAnn5Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group_4__2__Impl
	rule__AppAnnotation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getGroup_4_2()); }
	(rule__AppAnnotation__Group_4_2__0)*
	{ after(grammarAccess.getAppAnnotationAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getCLOSE_PARParserRuleCall_4_3()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getAppAnnotationAccess().getCLOSE_PARParserRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AppAnnotation__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group_4_2__0__Impl
	rule__AppAnnotation__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getCommaKeyword_4_2_0()); }
	Comma
	{ after(grammarAccess.getAppAnnotationAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppAnnotation__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAnnotationAccess().getAnn5Assignment_4_2_1()); }
	(rule__AppAnnotation__Ann5Assignment_4_2_1)
	{ after(grammarAccess.getAppAnnotationAccess().getAnn5Assignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
	CommercialAt
	{ after(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getNaAssignment_1()); }
	(rule__Annotation__NaAssignment_1)
	{ after(grammarAccess.getAnnotationAccess().getNaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_2()); }
	(rule__Annotation__Group_2__0)
	{ after(grammarAccess.getAnnotationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__0__Impl
	rule__Annotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getOPEN_PARParserRuleCall_2_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getAnnotationAccess().getOPEN_PARParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__1__Impl
	rule__Annotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAlternatives_2_1()); }
	(rule__Annotation__Alternatives_2_1)
	{ after(grammarAccess.getAnnotationAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__2__Impl
	rule__Annotation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
	(rule__Annotation__Group_2_2__0)*
	{ after(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getCLOSE_PARParserRuleCall_2_3()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getAnnotationAccess().getCLOSE_PARParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2_2__0__Impl
	rule__Annotation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }
	Comma
	{ after(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAlternatives_2_2_1()); }
	(rule__Annotation__Alternatives_2_2_1)
	{ after(grammarAccess.getAnnotationAccess().getAlternatives_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationElement__Group__0__Impl
	rule__AnnotationElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationElementAccess().getGroup_0()); }
	(rule__AnnotationElement__Group_0__0)?
	{ after(grammarAccess.getAnnotationElementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationElementAccess().getPropValAssignment_1()); }
	(rule__AnnotationElement__PropValAssignment_1)
	{ after(grammarAccess.getAnnotationElementAccess().getPropValAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationElement__Group_0__0__Impl
	rule__AnnotationElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationElementAccess().getPropNameAssignment_0_0()); }
	(rule__AnnotationElement__PropNameAssignment_0_0)
	{ after(grammarAccess.getAnnotationElementAccess().getPropNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_0_1()); }
	EqualsSign
	{ after(grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyName__Group__0__Impl
	rule__PropertyName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyNameAccess().getPropertyNameAction_0()); }
	()
	{ after(grammarAccess.getPropertyNameAccess().getPropertyNameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyName__Group__1__Impl
	rule__PropertyName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyNameAccess().getNaAssignment_1()); }
	(rule__PropertyName__NaAssignment_1)
	{ after(grammarAccess.getPropertyNameAccess().getNaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyNameAccess().getGroup_2()); }
	(rule__PropertyName__Group_2__0)*
	{ after(grammarAccess.getPropertyNameAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyName__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyName__Group_2__0__Impl
	rule__PropertyName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyNameAccess().getPsAssignment_2_0()); }
	(rule__PropertyName__PsAssignment_2_0)
	{ after(grammarAccess.getPropertyNameAccess().getPsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyName__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyNameAccess().getNaAssignment_2_1()); }
	(rule__PropertyName__NaAssignment_2_1)
	{ after(grammarAccess.getPropertyNameAccess().getNaAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySeparator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySeparator__Group_0__0__Impl
	rule__PropertySeparator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_0_0()); }
	()
	{ after(grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySeparator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySeparatorAccess().getDOTParserRuleCall_0_1()); }
	ruleDOT
	{ after(grammarAccess.getPropertySeparatorAccess().getDOTParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySeparator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySeparator__Group_1__0__Impl
	rule__PropertySeparator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_1_0()); }
	()
	{ after(grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySeparator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySeparatorAccess().getMINUSParserRuleCall_1_1()); }
	ruleMINUS
	{ after(grammarAccess.getPropertySeparatorAccess().getMINUSParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySeparator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySeparator__Group_2__0__Impl
	rule__PropertySeparator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_2_0()); }
	()
	{ after(grammarAccess.getPropertySeparatorAccess().getPropertySeparatorAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySeparator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySeparator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySeparatorAccess().getCOLParserRuleCall_2_1()); }
	ruleCOL
	{ after(grammarAccess.getPropertySeparatorAccess().getCOLParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Features__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Features__Group__0__Impl
	rule__Features__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturesAccess().getNameAssignment_0()); }
	(rule__Features__NameAssignment_0)
	{ after(grammarAccess.getFeaturesAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Features__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturesAccess().getTypeAssignment_1()); }
	(rule__Features__TypeAssignment_1)
	{ after(grammarAccess.getFeaturesAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_0__0__Impl
	rule__AttributeType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_0_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getSTRINGSParserRuleCall_0_1()); }
	ruleSTRINGS
	{ after(grammarAccess.getAttributeTypeAccess().getSTRINGSParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_1__0__Impl
	rule__AttributeType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_1_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getINTSParserRuleCall_1_1()); }
	ruleINTS
	{ after(grammarAccess.getAttributeTypeAccess().getINTSParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_2__0__Impl
	rule__AttributeType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_2_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getLONGParserRuleCall_2_1()); }
	ruleLONG
	{ after(grammarAccess.getAttributeTypeAccess().getLONGParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_3__0__Impl
	rule__AttributeType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_3_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getFLOATParserRuleCall_3_1()); }
	ruleFLOAT
	{ after(grammarAccess.getAttributeTypeAccess().getFLOATParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_4__0__Impl
	rule__AttributeType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_4_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getDOUBLEParserRuleCall_4_1()); }
	ruleDOUBLE
	{ after(grammarAccess.getAttributeTypeAccess().getDOUBLEParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_5__0__Impl
	rule__AttributeType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_5_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getBOOLParserRuleCall_5_1()); }
	ruleBOOL
	{ after(grammarAccess.getAttributeTypeAccess().getBOOLParserRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_6__0__Impl
	rule__AttributeType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_6_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getOBJECTParserRuleCall_6_1()); }
	ruleOBJECT
	{ after(grammarAccess.getAttributeTypeAccess().getOBJECTParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecPartition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__0__Impl
	rule__ExecPartition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getAnn4Assignment_0()); }
	(rule__ExecPartition__Ann4Assignment_0)*
	{ after(grammarAccess.getExecPartitionAccess().getAnn4Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__1__Impl
	rule__ExecPartition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getPARTITIONParserRuleCall_1()); }
	rulePARTITION
	{ after(grammarAccess.getExecPartitionAccess().getPARTITIONParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__2__Impl
	rule__ExecPartition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getWITHParserRuleCall_2()); }
	ruleWITH
	{ after(grammarAccess.getExecPartitionAccess().getWITHParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__3__Impl
	rule__ExecPartition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getOPEN_PARParserRuleCall_3()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getExecPartitionAccess().getOPEN_PARParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__4__Impl
	rule__ExecPartition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getPartWithStreamAssignment_4()); }
	(rule__ExecPartition__PartWithStreamAssignment_4)
	{ after(grammarAccess.getExecPartitionAccess().getPartWithStreamAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__5__Impl
	rule__ExecPartition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getGroup_5()); }
	(rule__ExecPartition__Group_5__0)*
	{ after(grammarAccess.getExecPartitionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__6__Impl
	rule__ExecPartition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getCLOSE_PARParserRuleCall_6()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getExecPartitionAccess().getCLOSE_PARParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__7__Impl
	rule__ExecPartition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getBEGINParserRuleCall_7()); }
	ruleBEGIN
	{ after(grammarAccess.getExecPartitionAccess().getBEGINParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__8__Impl
	rule__ExecPartition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getQuAssignment_8()); }
	(rule__ExecPartition__QuAssignment_8)
	{ after(grammarAccess.getExecPartitionAccess().getQuAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__9__Impl
	rule__ExecPartition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getQuAssignment_9()); }
	(rule__ExecPartition__QuAssignment_9)*
	{ after(grammarAccess.getExecPartitionAccess().getQuAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__10__Impl
	rule__ExecPartition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getSemicolonKeyword_10()); }
	(Semicolon)?
	{ after(grammarAccess.getExecPartitionAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getENDParserRuleCall_11()); }
	ruleEND
	{ after(grammarAccess.getExecPartitionAccess().getENDParserRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecPartition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group_5__0__Impl
	rule__ExecPartition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getCommaKeyword_5_0()); }
	Comma
	{ after(grammarAccess.getExecPartitionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecPartition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecPartitionAccess().getPartWithStreamAssignment_5_1()); }
	(rule__ExecPartition__PartWithStreamAssignment_5_1)
	{ after(grammarAccess.getExecPartitionAccess().getPartWithStreamAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionWithStream__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartitionWithStream__Group__0__Impl
	rule__PartitionWithStream__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionWithStream__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartitionWithStreamAccess().getConditionRangesParserRuleCall_0()); }
	ruleConditionRanges
	{ after(grammarAccess.getPartitionWithStreamAccess().getConditionRangesParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionWithStream__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartitionWithStream__Group__1__Impl
	rule__PartitionWithStream__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionWithStream__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartitionWithStreamAccess().getOfAssignment_1()); }
	(rule__PartitionWithStream__OfAssignment_1)
	{ after(grammarAccess.getPartitionWithStreamAccess().getOfAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionWithStream__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartitionWithStream__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionWithStream__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartitionWithStreamAccess().getStr_id2Assignment_2()); }
	(rule__PartitionWithStream__Str_id2Assignment_2)
	{ after(grammarAccess.getPartitionWithStreamAccess().getStr_id2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionRanges__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionRanges__Group__0__Impl
	rule__ConditionRanges__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionRangesAccess().getConRangeAssignment_0()); }
	(rule__ConditionRanges__ConRangeAssignment_0)
	{ after(grammarAccess.getConditionRangesAccess().getConRangeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionRanges__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionRangesAccess().getGroup_1()); }
	(rule__ConditionRanges__Group_1__0)*
	{ after(grammarAccess.getConditionRangesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionRanges__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionRanges__Group_1__0__Impl
	rule__ConditionRanges__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionRangesAccess().getOrAssignment_1_0()); }
	(rule__ConditionRanges__OrAssignment_1_0)
	{ after(grammarAccess.getConditionRangesAccess().getOrAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionRanges__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionRangesAccess().getConRangeAssignment_1_1()); }
	(rule__ConditionRanges__ConRangeAssignment_1_1)
	{ after(grammarAccess.getConditionRangesAccess().getConRangeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionRange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionRange__Group__0__Impl
	rule__ConditionRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionRangeAccess().getExprAssignment_0()); }
	(rule__ConditionRange__ExprAssignment_0)
	{ after(grammarAccess.getConditionRangeAccess().getExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionRange__Group__1__Impl
	rule__ConditionRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionRangeAccess().getAAssignment_1()); }
	(rule__ConditionRange__AAssignment_1)?
	{ after(grammarAccess.getConditionRangeAccess().getAAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionRange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionRangeAccess().getSvAssignment_2()); }
	(rule__ConditionRange__SvAssignment_2)?
	{ after(grammarAccess.getConditionRangeAccess().getSvAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQueryAction_0()); }
	()
	{ after(grammarAccess.getQueryAccess().getQueryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getAnn3Assignment_1()); }
	(rule__Query__Ann3Assignment_1)*
	{ after(grammarAccess.getQueryAccess().getAnn3Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__2__Impl
	rule__Query__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getFROMParserRuleCall_2()); }
	ruleFROM
	{ after(grammarAccess.getQueryAccess().getFROMParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__3__Impl
	rule__Query__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQInpAssignment_3()); }
	(rule__Query__QInpAssignment_3)
	{ after(grammarAccess.getQueryAccess().getQInpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__4__Impl
	rule__Query__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQuerySecAssignment_4()); }
	(rule__Query__QuerySecAssignment_4)?
	{ after(grammarAccess.getQueryAccess().getQuerySecAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__5__Impl
	rule__Query__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getOutRateAssignment_5()); }
	(rule__Query__OutRateAssignment_5)?
	{ after(grammarAccess.getQueryAccess().getOutRateAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQOutputAssignment_6()); }
	(rule__Query__QOutputAssignment_6)?
	{ after(grammarAccess.getQueryAccess().getQOutputAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryInput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryInput__Group__0__Impl
	rule__QueryInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryInputAccess().getQueryInputAction_0()); }
	()
	{ after(grammarAccess.getQueryInputAccess().getQueryInputAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryInput__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryInputAccess().getAlternatives_1()); }
	(rule__QueryInput__Alternatives_1)
	{ after(grammarAccess.getQueryInputAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0__0__Impl
	rule__JoinStream__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_0_0()); }
	(rule__JoinStream__Group_0_0__0)
	{ after(grammarAccess.getJoinStreamAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0__1__Impl
	rule__JoinStream__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getRight_uniAssignment_0_1()); }
	(rule__JoinStream__Right_uniAssignment_0_1)
	{ after(grammarAccess.getJoinStreamAccess().getRight_uniAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0__2__Impl
	rule__JoinStream__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_0_2()); }
	(rule__JoinStream__Group_0_2__0)?
	{ after(grammarAccess.getJoinStreamAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getWtAssignment_0_3()); }
	(rule__JoinStream__WtAssignment_0_3)?
	{ after(grammarAccess.getJoinStreamAccess().getWtAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_0_0_0()); }
	(rule__JoinStream__Group_0_0_0__0)
	{ after(grammarAccess.getJoinStreamAccess().getGroup_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0_0_0__0__Impl
	rule__JoinStream__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getLeft_sourceAssignment_0_0_0_0()); }
	(rule__JoinStream__Left_sourceAssignment_0_0_0_0)
	{ after(grammarAccess.getJoinStreamAccess().getLeft_sourceAssignment_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getRight_sourceAssignment_0_0_0_1()); }
	(rule__JoinStream__Right_sourceAssignment_0_0_0_1)
	{ after(grammarAccess.getJoinStreamAccess().getRight_sourceAssignment_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0_2__0__Impl
	rule__JoinStream__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getOnAssignment_0_2_0()); }
	(rule__JoinStream__OnAssignment_0_2_0)
	{ after(grammarAccess.getJoinStreamAccess().getOnAssignment_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getExprAssignment_0_2_1()); }
	(rule__JoinStream__ExprAssignment_0_2_1)
	{ after(grammarAccess.getJoinStreamAccess().getExprAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1__0__Impl
	rule__JoinStream__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_1_0()); }
	(rule__JoinStream__Group_1_0__0)
	{ after(grammarAccess.getJoinStreamAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1__1__Impl
	rule__JoinStream__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getRight_sourceAssignment_1_1()); }
	(rule__JoinStream__Right_sourceAssignment_1_1)
	{ after(grammarAccess.getJoinStreamAccess().getRight_sourceAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1__2__Impl
	rule__JoinStream__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_1_2()); }
	(rule__JoinStream__Group_1_2__0)?
	{ after(grammarAccess.getJoinStreamAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getWtAssignment_1_3()); }
	(rule__JoinStream__WtAssignment_1_3)?
	{ after(grammarAccess.getJoinStreamAccess().getWtAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_1_0_0()); }
	(rule__JoinStream__Group_1_0_0__0)
	{ after(grammarAccess.getJoinStreamAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1_0_0__0__Impl
	rule__JoinStream__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getLeft_sourceAssignment_1_0_0_0()); }
	(rule__JoinStream__Left_sourceAssignment_1_0_0_0)
	{ after(grammarAccess.getJoinStreamAccess().getLeft_sourceAssignment_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getJoinAssignment_1_0_0_1()); }
	(rule__JoinStream__JoinAssignment_1_0_0_1)
	{ after(grammarAccess.getJoinStreamAccess().getJoinAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1_2__0__Impl
	rule__JoinStream__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getOnAssignment_1_2_0()); }
	(rule__JoinStream__OnAssignment_1_2_0)
	{ after(grammarAccess.getJoinStreamAccess().getOnAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getExprAssignment_1_2_1()); }
	(rule__JoinStream__ExprAssignment_1_2_1)
	{ after(grammarAccess.getJoinStreamAccess().getExprAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2__0__Impl
	rule__JoinStream__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_2_0()); }
	(rule__JoinStream__Group_2_0__0)
	{ after(grammarAccess.getJoinStreamAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2__1__Impl
	rule__JoinStream__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getJoinAssignment_2_1()); }
	(rule__JoinStream__JoinAssignment_2_1)
	{ after(grammarAccess.getJoinStreamAccess().getJoinAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2__2__Impl
	rule__JoinStream__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getRight_sourceAssignment_2_2()); }
	(rule__JoinStream__Right_sourceAssignment_2_2)
	{ after(grammarAccess.getJoinStreamAccess().getRight_sourceAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2__3__Impl
	rule__JoinStream__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_2_3()); }
	(rule__JoinStream__Group_2_3__0)?
	{ after(grammarAccess.getJoinStreamAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getWtAssignment_2_4()); }
	(rule__JoinStream__WtAssignment_2_4)?
	{ after(grammarAccess.getJoinStreamAccess().getWtAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getGroup_2_0_0()); }
	(rule__JoinStream__Group_2_0_0__0)
	{ after(grammarAccess.getJoinStreamAccess().getGroup_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2_0_0__0__Impl
	rule__JoinStream__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getLeft_sourceAssignment_2_0_0_0()); }
	(rule__JoinStream__Left_sourceAssignment_2_0_0_0)
	{ after(grammarAccess.getJoinStreamAccess().getLeft_sourceAssignment_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getLeft_uniAssignment_2_0_0_1()); }
	(rule__JoinStream__Left_uniAssignment_2_0_0_1)
	{ after(grammarAccess.getJoinStreamAccess().getLeft_uniAssignment_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStream__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2_3__0__Impl
	rule__JoinStream__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getOnAssignment_2_3_0()); }
	(rule__JoinStream__OnAssignment_2_3_0)
	{ after(grammarAccess.getJoinStreamAccess().getOnAssignment_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinStream__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinStreamAccess().getExprAssignment_2_3_1()); }
	(rule__JoinStream__ExprAssignment_2_3_1)
	{ after(grammarAccess.getJoinStreamAccess().getExprAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSource__Group__0__Impl
	rule__JoinSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSourceAccess().getMainSourceParserRuleCall_0()); }
	ruleMainSource
	{ after(grammarAccess.getJoinSourceAccess().getMainSourceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSourceAccess().getGroup_1()); }
	(rule__JoinSource__Group_1__0)?
	{ after(grammarAccess.getJoinSourceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSource__Group_1__0__Impl
	rule__JoinSource__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSourceAccess().getAAssignment_1_0()); }
	(rule__JoinSource__AAssignment_1_0)
	{ after(grammarAccess.getJoinSourceAccess().getAAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSource__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSourceAccess().getStrAliasAssignment_1_1()); }
	(rule__JoinSource__StrAliasAssignment_1_1)
	{ after(grammarAccess.getJoinSourceAccess().getStrAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joins__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_0__0__Impl
	rule__Joins__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJoinsAction_0_0()); }
	()
	{ after(grammarAccess.getJoinsAccess().getJoinsAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_0__1__Impl
	rule__Joins__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getLEFTParserRuleCall_0_1()); }
	ruleLEFT
	{ after(grammarAccess.getJoinsAccess().getLEFTParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_0__2__Impl
	rule__Joins__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_0_2()); }
	ruleOUTER
	{ after(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJOINParserRuleCall_0_3()); }
	ruleJOIN
	{ after(grammarAccess.getJoinsAccess().getJOINParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joins__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_1__0__Impl
	rule__Joins__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJoinsAction_1_0()); }
	()
	{ after(grammarAccess.getJoinsAccess().getJoinsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_1__1__Impl
	rule__Joins__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getRIGHTParserRuleCall_1_1()); }
	ruleRIGHT
	{ after(grammarAccess.getJoinsAccess().getRIGHTParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_1__2__Impl
	rule__Joins__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_1_2()); }
	ruleOUTER
	{ after(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJOINParserRuleCall_1_3()); }
	ruleJOIN
	{ after(grammarAccess.getJoinsAccess().getJOINParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joins__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_2__0__Impl
	rule__Joins__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJoinsAction_2_0()); }
	()
	{ after(grammarAccess.getJoinsAccess().getJoinsAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_2__1__Impl
	rule__Joins__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getFULLParserRuleCall_2_1()); }
	ruleFULL
	{ after(grammarAccess.getJoinsAccess().getFULLParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_2__2__Impl
	rule__Joins__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_2_2()); }
	ruleOUTER
	{ after(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJOINParserRuleCall_2_3()); }
	ruleJOIN
	{ after(grammarAccess.getJoinsAccess().getJOINParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joins__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_3__0__Impl
	rule__Joins__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJoinsAction_3_0()); }
	()
	{ after(grammarAccess.getJoinsAccess().getJoinsAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_3__1__Impl
	rule__Joins__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_3_1()); }
	ruleOUTER
	{ after(grammarAccess.getJoinsAccess().getOUTERParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJOINParserRuleCall_3_2()); }
	ruleJOIN
	{ after(grammarAccess.getJoinsAccess().getJOINParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joins__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_4__0__Impl
	rule__Joins__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJoinsAction_4_0()); }
	()
	{ after(grammarAccess.getJoinsAccess().getJoinsAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_4__1__Impl
	rule__Joins__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getINNERParserRuleCall_4_1()); }
	(ruleINNER)?
	{ after(grammarAccess.getJoinsAccess().getINNERParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joins__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joins__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinsAccess().getJOINParserRuleCall_4_2()); }
	ruleJOIN
	{ after(grammarAccess.getJoinsAccess().getJOINParserRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardStream__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStream__Group__0__Impl
	rule__StandardStream__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStream__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStreamAccess().getMainSourceParserRuleCall_0()); }
	ruleMainSource
	{ after(grammarAccess.getStandardStreamAccess().getMainSourceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStream__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStream__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStream__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStreamAccess().getGroup_1()); }
	(rule__StandardStream__Group_1__0)
	{ after(grammarAccess.getStandardStreamAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardStream__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStream__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStream__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStreamAccess().getPostWindowHandlersAssignment_1_0()); }
	(rule__StandardStream__PostWindowHandlersAssignment_1_0)?
	{ after(grammarAccess.getStandardStreamAccess().getPostWindowHandlersAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainSource__Group__0__Impl
	rule__MainSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainSourceAccess().getSrcAssignment_0()); }
	(rule__MainSource__SrcAssignment_0)
	{ after(grammarAccess.getMainSourceAccess().getSrcAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainSourceAccess().getBasicSShAssignment_1()); }
	(rule__MainSource__BasicSShAssignment_1)
	{ after(grammarAccess.getMainSourceAccess().getBasicSShAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryPatternSourceChain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain__Group__0__Impl
	rule__EveryPatternSourceChain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChain1ParserRuleCall_0()); }
	ruleEveryPatternSourceChain1
	{ after(grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChain1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChainAccess().getGroup_1()); }
	(rule__EveryPatternSourceChain__Group_1__0)*
	{ after(grammarAccess.getEveryPatternSourceChainAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryPatternSourceChain__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChainAccess().getGroup_1_0()); }
	(rule__EveryPatternSourceChain__Group_1_0__0)
	{ after(grammarAccess.getEveryPatternSourceChainAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryPatternSourceChain__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain__Group_1_0__0__Impl
	rule__EveryPatternSourceChain__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChainLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getEveryPatternSourceChainAccess().getEveryPatternSourceChainLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain__Group_1_0__1__Impl
	rule__EveryPatternSourceChain__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChainAccess().getOpAssignment_1_0_1()); }
	(rule__EveryPatternSourceChain__OpAssignment_1_0_1)
	{ after(grammarAccess.getEveryPatternSourceChainAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChainAccess().getRightAssignment_1_0_2()); }
	(rule__EveryPatternSourceChain__RightAssignment_1_0_2)
	{ after(grammarAccess.getEveryPatternSourceChainAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryPatternSourceChain1__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain1__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChain1Access().getGroup_0_0()); }
	(rule__EveryPatternSourceChain1__Group_0_0__0)
	{ after(grammarAccess.getEveryPatternSourceChain1Access().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryPatternSourceChain1__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain1__Group_0_0__0__Impl
	rule__EveryPatternSourceChain1__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getEveryPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain1__Group_0_0__1__Impl
	rule__EveryPatternSourceChain1__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChain1Access().getEpsAssignment_0_0_1()); }
	(rule__EveryPatternSourceChain1__EpsAssignment_0_0_1)
	{ after(grammarAccess.getEveryPatternSourceChain1Access().getEpsAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain1__Group_0_0__2__Impl
	rule__EveryPatternSourceChain1__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getEveryPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain1__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChain1Access().getWtAssignment_0_0_3()); }
	(rule__EveryPatternSourceChain1__WtAssignment_0_0_3)?
	{ after(grammarAccess.getEveryPatternSourceChain1Access().getWtAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryPatternSourceChain1__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain1__Group_2__0__Impl
	rule__EveryPatternSourceChain1__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChain1Access().getEveryAssignment_2_0()); }
	(rule__EveryPatternSourceChain1__EveryAssignment_2_0)
	{ after(grammarAccess.getEveryPatternSourceChain1Access().getEveryAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryPatternSourceChain1__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryPatternSourceChain1Access().getPscAssignment_2_1()); }
	(rule__EveryPatternSourceChain1__PscAssignment_2_1)
	{ after(grammarAccess.getEveryPatternSourceChain1Access().getPscAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternSourceChain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain__Group__0__Impl
	rule__PatternSourceChain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChainAccess().getPatternSourceChain1ParserRuleCall_0()); }
	rulePatternSourceChain1
	{ after(grammarAccess.getPatternSourceChainAccess().getPatternSourceChain1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChainAccess().getGroup_1()); }
	(rule__PatternSourceChain__Group_1__0)*
	{ after(grammarAccess.getPatternSourceChainAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternSourceChain__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChainAccess().getGroup_1_0()); }
	(rule__PatternSourceChain__Group_1_0__0)
	{ after(grammarAccess.getPatternSourceChainAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternSourceChain__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain__Group_1_0__0__Impl
	rule__PatternSourceChain__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChainAccess().getPatternSourceChainLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getPatternSourceChainAccess().getPatternSourceChainLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain__Group_1_0__1__Impl
	rule__PatternSourceChain__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChainAccess().getOpAssignment_1_0_1()); }
	(rule__PatternSourceChain__OpAssignment_1_0_1)
	{ after(grammarAccess.getPatternSourceChainAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChainAccess().getRightAssignment_1_0_2()); }
	(rule__PatternSourceChain__RightAssignment_1_0_2)
	{ after(grammarAccess.getPatternSourceChainAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternSourceChain1__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain1__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChain1Access().getGroup_0_0()); }
	(rule__PatternSourceChain1__Group_0_0__0)
	{ after(grammarAccess.getPatternSourceChain1Access().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternSourceChain1__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain1__Group_0_0__0__Impl
	rule__PatternSourceChain1__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getPatternSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain1__Group_0_0__1__Impl
	rule__PatternSourceChain1__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChain1Access().getPsc_2Assignment_0_0_1()); }
	(rule__PatternSourceChain1__Psc_2Assignment_0_0_1)
	{ after(grammarAccess.getPatternSourceChain1Access().getPsc_2Assignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain1__Group_0_0__2__Impl
	rule__PatternSourceChain1__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getPatternSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain1__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChain1Access().getWtAssignment_0_0_3()); }
	(rule__PatternSourceChain1__WtAssignment_0_0_3)?
	{ after(grammarAccess.getPatternSourceChain1Access().getWtAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternSourceChain1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain1__Group_1__0__Impl
	rule__PatternSourceChain1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChain1Access().getPsAssignment_1_0()); }
	(rule__PatternSourceChain1__PsAssignment_1_0)
	{ after(grammarAccess.getPatternSourceChain1Access().getPsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternSourceChain1__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternSourceChain1Access().getWtAssignment_1_1()); }
	(rule__PatternSourceChain1__WtAssignment_1_1)?
	{ after(grammarAccess.getPatternSourceChain1Access().getWtAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalStatefulSource__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_0__0__Impl
	rule__LogicalStatefulSource__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getGroup_0_0()); }
	(rule__LogicalStatefulSource__Group_0_0__0)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_0_1()); }
	(rule__LogicalStatefulSource__StdSourceAssignment_0_1)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalStatefulSource__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getGroup_0_0_0()); }
	(rule__LogicalStatefulSource__Group_0_0_0__0)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getGroup_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalStatefulSource__Group_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_0_0_0__0__Impl
	rule__LogicalStatefulSource__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_0_0_0_0()); }
	(rule__LogicalStatefulSource__StdSourceAssignment_0_0_0_0)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getAndAssignment_0_0_0_1()); }
	(rule__LogicalStatefulSource__AndAssignment_0_0_0_1)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getAndAssignment_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalStatefulSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_1__0__Impl
	rule__LogicalStatefulSource__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getGroup_1_0()); }
	(rule__LogicalStatefulSource__Group_1_0__0)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_1_1()); }
	(rule__LogicalStatefulSource__StdSourceAssignment_1_1)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalStatefulSource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getGroup_1_0_0()); }
	(rule__LogicalStatefulSource__Group_1_0_0__0)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalStatefulSource__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_1_0_0__0__Impl
	rule__LogicalStatefulSource__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_1_0_0_0()); }
	(rule__LogicalStatefulSource__StdSourceAssignment_1_0_0_0)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceAssignment_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalStatefulSource__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalStatefulSourceAccess().getOrAssignment_1_0_0_1()); }
	(rule__LogicalStatefulSource__OrAssignment_1_0_0_1)
	{ after(grammarAccess.getLogicalStatefulSourceAccess().getOrAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternCollectionStatefulSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCollectionStatefulSource__Group__0__Impl
	rule__PatternCollectionStatefulSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0()); }
	ruleStandardStatefulSource
	{ after(grammarAccess.getPatternCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCollectionStatefulSource__Group__1__Impl
	rule__PatternCollectionStatefulSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCollectionStatefulSourceAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getPatternCollectionStatefulSourceAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCollectionStatefulSource__Group__2__Impl
	rule__PatternCollectionStatefulSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCollectionStatefulSourceAccess().getCollAssignment_2()); }
	(rule__PatternCollectionStatefulSource__CollAssignment_2)
	{ after(grammarAccess.getPatternCollectionStatefulSourceAccess().getCollAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCollectionStatefulSource__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCollectionStatefulSourceAccess().getGreaterThanSignKeyword_3()); }
	GreaterThanSign
	{ after(grammarAccess.getPatternCollectionStatefulSourceAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__0__Impl
	rule__Collect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getCollectAction_0()); }
	()
	{ after(grammarAccess.getCollectAccess().getCollectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getAlternatives_1()); }
	(rule__Collect__Alternatives_1)
	{ after(grammarAccess.getCollectAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collect__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group_1_0__0__Impl
	rule__Collect__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getStartAssignment_1_0_0()); }
	(rule__Collect__StartAssignment_1_0_0)
	{ after(grammarAccess.getCollectAccess().getStartAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group_1_0__1__Impl
	rule__Collect__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getColonKeyword_1_0_1()); }
	Colon
	{ after(grammarAccess.getCollectAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getEndAssignment_1_0_2()); }
	(rule__Collect__EndAssignment_1_0_2)
	{ after(grammarAccess.getCollectAccess().getEndAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collect__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group_1_1__0__Impl
	rule__Collect__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getStartAssignment_1_1_0()); }
	(rule__Collect__StartAssignment_1_1_0)
	{ after(grammarAccess.getCollectAccess().getStartAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getColonKeyword_1_1_1()); }
	Colon
	{ after(grammarAccess.getCollectAccess().getColonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collect__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group_1_2__0__Impl
	rule__Collect__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getColonKeyword_1_2_0()); }
	Colon
	{ after(grammarAccess.getCollectAccess().getColonKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getEndAssignment_1_2_1()); }
	(rule__Collect__EndAssignment_1_2_1)
	{ after(grammarAccess.getCollectAccess().getEndAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithinTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithinTime__Group__0__Impl
	rule__WithinTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithinTimeAccess().getWITHINParserRuleCall_0()); }
	ruleWITHIN
	{ after(grammarAccess.getWithinTimeAccess().getWITHINParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithinTime__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithinTimeAccess().getTvAssignment_1()); }
	(rule__WithinTime__TvAssignment_1)
	{ after(grammarAccess.getWithinTimeAccess().getTvAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_0_0()); }
	(rule__LogicalAbsentStatefulSource__Group_0_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_0_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOPEN_PARParserRuleCall_0_0_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOPEN_PARParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_0_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getLogicalAbsStatefulSrcAssignment_0_0_1()); }
	(rule__LogicalAbsentStatefulSource__LogicalAbsStatefulSrcAssignment_0_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getLogicalAbsStatefulSrcAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getCLOSE_PARParserRuleCall_0_0_2()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getCLOSE_PARParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_1_0()); }
	(rule__LogicalAbsentStatefulSource__Group_1_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_1_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_1_0_0()); }
	(rule__LogicalAbsentStatefulSource__StdSourceAssignment_1_0_0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_1_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_1_0_1()); }
	(rule__LogicalAbsentStatefulSource__AndAssignment_1_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_1_0__2__Impl
	rule__LogicalAbsentStatefulSource__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNotAssignment_1_0_2()); }
	(rule__LogicalAbsentStatefulSource__NotAssignment_1_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNotAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsAssignment_1_0_3()); }
	(rule__LogicalAbsentStatefulSource__BsAssignment_1_0_3)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsAssignment_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_2__0__Impl
	rule__LogicalAbsentStatefulSource__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_2_0()); }
	(rule__LogicalAbsentStatefulSource__Group_2_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_2_1()); }
	(rule__LogicalAbsentStatefulSource__StdSourceAssignment_2_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_2_0_0()); }
	(rule__LogicalAbsentStatefulSource__Group_2_0_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_2_0_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNOTParserRuleCall_2_0_0_0()); }
	ruleNOT
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNOTParserRuleCall_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_2_0_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_2_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsAssignment_2_0_0_1()); }
	(rule__LogicalAbsentStatefulSource__BsAssignment_2_0_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsAssignment_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_2_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_2_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_2_0_0_2()); }
	(rule__LogicalAbsentStatefulSource__AndAssignment_2_0_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_2_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_3_0()); }
	(rule__LogicalAbsentStatefulSource__Group_3_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_3_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_3_0_0()); }
	(rule__LogicalAbsentStatefulSource__StdSourceAssignment_3_0_0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_3_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_3_0_1()); }
	(rule__LogicalAbsentStatefulSource__AndAssignment_3_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_3_0_2()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_3_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_4__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_4_0()); }
	(rule__LogicalAbsentStatefulSource__Group_4_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_4_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_4_0_0()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_4_0_0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_4_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_4_0_1()); }
	(rule__LogicalAbsentStatefulSource__AndAssignment_4_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_4_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_4_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_4_0_2()); }
	(rule__LogicalAbsentStatefulSource__StdSourceAssignment_4_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_4_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_5__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_5_0()); }
	(rule__LogicalAbsentStatefulSource__Group_5_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_5_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2Assignment_5_0_0()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource2Assignment_5_0_0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2Assignment_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_5_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_5_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_5_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_5_0_1()); }
	(rule__LogicalAbsentStatefulSource__AndAssignment_5_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndAssignment_5_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_5_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_5_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceAssignment_5_0_2()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSourceAssignment_5_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceAssignment_5_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_6__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_6_0()); }
	(rule__LogicalAbsentStatefulSource__Group_6_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_6_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_6_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_6_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_6_0_0()); }
	(rule__LogicalAbsentStatefulSource__StdSourceAssignment_6_0_0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_6_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_6_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_6_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_6_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOAssignment_6_0_1()); }
	(rule__LogicalAbsentStatefulSource__OAssignment_6_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOAssignment_6_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_6_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_6_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_6_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_6_0_2()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_6_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_6_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_7__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_7_0()); }
	(rule__LogicalAbsentStatefulSource__Group_7_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_7_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_7_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_7_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_7_0_0()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_7_0_0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1Assignment_7_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_7_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_7_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_7_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_7_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOAssignment_7_0_1()); }
	(rule__LogicalAbsentStatefulSource__OAssignment_7_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOAssignment_7_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_7_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_7_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_7_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_7_0_2()); }
	(rule__LogicalAbsentStatefulSource__StdSourceAssignment_7_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceAssignment_7_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_8__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_8_0()); }
	(rule__LogicalAbsentStatefulSource__Group_8_0__0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getGroup_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAbsentStatefulSource__Group_8_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_8_0__0__Impl
	rule__LogicalAbsentStatefulSource__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_8_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2Assignment_8_0_0()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource2Assignment_8_0_0)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2Assignment_8_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_8_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_8_0__1__Impl
	rule__LogicalAbsentStatefulSource__Group_8_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_8_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOAssignment_8_0_1()); }
	(rule__LogicalAbsentStatefulSource__OAssignment_8_0_1)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOAssignment_8_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_8_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAbsentStatefulSource__Group_8_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__Group_8_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceAssignment_8_0_2()); }
	(rule__LogicalAbsentStatefulSource__BasicAbsentPatternSourceAssignment_8_0_2)
	{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceAssignment_8_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbsentPatternSourceChain__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentPatternSourceChain__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentPatternSourceChainAccess().getGroup_0_0()); }
	(rule__AbsentPatternSourceChain__Group_0_0__0)
	{ after(grammarAccess.getAbsentPatternSourceChainAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbsentPatternSourceChain__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentPatternSourceChain__Group_0_0__0__Impl
	rule__AbsentPatternSourceChain__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentPatternSourceChainAccess().getEVERYParserRuleCall_0_0_0()); }
	(ruleEVERY)?
	{ after(grammarAccess.getAbsentPatternSourceChainAccess().getEVERYParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentPatternSourceChain__Group_0_0__1__Impl
	rule__AbsentPatternSourceChain__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentPatternSourceChainAccess().getOPEN_PARParserRuleCall_0_0_1()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getAbsentPatternSourceChainAccess().getOPEN_PARParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentPatternSourceChain__Group_0_0__2__Impl
	rule__AbsentPatternSourceChain__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentPatternSourceChainAccess().getAbsentPatternSrcChainAssignment_0_0_2()); }
	(rule__AbsentPatternSourceChain__AbsentPatternSrcChainAssignment_0_0_2)
	{ after(grammarAccess.getAbsentPatternSourceChainAccess().getAbsentPatternSrcChainAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentPatternSourceChain__Group_0_0__3__Impl
	rule__AbsentPatternSourceChain__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentPatternSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_3()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getAbsentPatternSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentPatternSourceChain__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentPatternSourceChainAccess().getWt1Assignment_0_0_4()); }
	(rule__AbsentPatternSourceChain__Wt1Assignment_0_0_4)?
	{ after(grammarAccess.getAbsentPatternSourceChainAccess().getWt1Assignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryAbsentPatternSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentPatternSource__Group__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentPatternSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentPatternSourceAccess().getGroup_0()); }
	(rule__EveryAbsentPatternSource__Group_0__0)
	{ after(grammarAccess.getEveryAbsentPatternSourceAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryAbsentPatternSource__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentPatternSource__Group_0__0__Impl
	rule__EveryAbsentPatternSource__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentPatternSource__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentPatternSourceAccess().getEVERYParserRuleCall_0_0()); }
	(ruleEVERY)?
	{ after(grammarAccess.getEveryAbsentPatternSourceAccess().getEVERYParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentPatternSource__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentPatternSource__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentPatternSource__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentPatternSourceAccess().getBasicAbsentPSAssignment_0_1()); }
	(rule__EveryAbsentPatternSource__BasicAbsentPSAssignment_0_1)
	{ after(grammarAccess.getEveryAbsentPatternSourceAccess().getBasicAbsentPSAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicAbsentPatternSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicAbsentPatternSource__Group__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicAbsentPatternSourceAccess().getGroup_0()); }
	(rule__BasicAbsentPatternSource__Group_0__0)
	{ after(grammarAccess.getBasicAbsentPatternSourceAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicAbsentPatternSource__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicAbsentPatternSource__Group_0__0__Impl
	rule__BasicAbsentPatternSource__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicAbsentPatternSourceAccess().getNOTParserRuleCall_0_0()); }
	ruleNOT
	{ after(grammarAccess.getBasicAbsentPatternSourceAccess().getNOTParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicAbsentPatternSource__Group_0__1__Impl
	rule__BasicAbsentPatternSource__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicAbsentPatternSourceAccess().getBasicSrcAssignment_0_1()); }
	(rule__BasicAbsentPatternSource__BasicSrcAssignment_0_1)
	{ after(grammarAccess.getBasicAbsentPatternSourceAccess().getBasicSrcAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicAbsentPatternSource__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicAbsentPatternSourceAccess().getFtAssignment_0_2()); }
	(rule__BasicAbsentPatternSource__FtAssignment_0_2)
	{ after(grammarAccess.getBasicAbsentPatternSourceAccess().getFtAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForTime__Group__0__Impl
	rule__ForTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForTimeAccess().getFORParserRuleCall_0()); }
	ruleFOR
	{ after(grammarAccess.getForTimeAccess().getFORParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForTime__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForTimeAccess().getTvAssignment_1()); }
	(rule__ForTime__TvAssignment_1)
	{ after(grammarAccess.getForTimeAccess().getTvAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource__Group__0__Impl
	rule__LeftAbsentPatternSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSource1ParserRuleCall_0()); }
	ruleLeftAbsentPatternSource1
	{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSource1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getGroup_1()); }
	(rule__LeftAbsentPatternSource__Group_1__0)*
	{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getGroup_1_0()); }
	(rule__LeftAbsentPatternSource__Group_1_0__0)
	{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource__Group_1_0__0__Impl
	rule__LeftAbsentPatternSource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSourceLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getLeftAbsentPatternSourceLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource__Group_1_0__1__Impl
	rule__LeftAbsentPatternSource__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getFb1Assignment_1_0_1()); }
	(rule__LeftAbsentPatternSource__Fb1Assignment_1_0_1)
	{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getFb1Assignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getRightAssignment_1_0_2()); }
	(rule__LeftAbsentPatternSource__RightAssignment_1_0_2)
	{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource1__Group__0__Impl
	rule__LeftAbsentPatternSource1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource2ParserRuleCall_0()); }
	ruleLeftAbsentPatternSource2
	{ after(grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource1Access().getGroup_1()); }
	(rule__LeftAbsentPatternSource1__Group_1__0)*
	{ after(grammarAccess.getLeftAbsentPatternSource1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource1__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource1Access().getGroup_1_0()); }
	(rule__LeftAbsentPatternSource1__Group_1_0__0)
	{ after(grammarAccess.getLeftAbsentPatternSource1Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource1__Group_1_0__0__Impl
	rule__LeftAbsentPatternSource1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource1LeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLeftAbsentPatternSource1Access().getLeftAbsentPatternSource1LeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource1__Group_1_0__1__Impl
	rule__LeftAbsentPatternSource1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource1Access().getFbAssignment_1_0_1()); }
	(rule__LeftAbsentPatternSource1__FbAssignment_1_0_1)
	{ after(grammarAccess.getLeftAbsentPatternSource1Access().getFbAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource1Access().getRightAssignment_1_0_2()); }
	(rule__LeftAbsentPatternSource1__RightAssignment_1_0_2)
	{ after(grammarAccess.getLeftAbsentPatternSource1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_0_0()); }
	(rule__LeftAbsentPatternSource2__Group_0_0__0)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource2__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_0_0__0__Impl
	rule__LeftAbsentPatternSource2__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0()); }
	(ruleEVERY)?
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_0_0__1__Impl
	rule__LeftAbsentPatternSource2__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_0_0__2__Impl
	rule__LeftAbsentPatternSource2__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPSAssignment_0_0_2()); }
	(rule__LeftAbsentPatternSource2__LeftAbsPSAssignment_0_0_2)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPSAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_0_0__3__Impl
	rule__LeftAbsentPatternSource2__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getWt2Assignment_0_0_4()); }
	(rule__LeftAbsentPatternSource2__Wt2Assignment_0_0_4)?
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getWt2Assignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_1_0()); }
	(rule__LeftAbsentPatternSource2__Group_1_0__0)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_1_0__0__Impl
	rule__LeftAbsentPatternSource2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getEveryAbsPSAssignment_1_0_0()); }
	(rule__LeftAbsentPatternSource2__EveryAbsPSAssignment_1_0_0)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getEveryAbsPSAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_1_0__1__Impl
	rule__LeftAbsentPatternSource2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCAssignment_1_0_2()); }
	(rule__LeftAbsentPatternSource2__EveryPSCAssignment_1_0_2)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource2__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_2_0()); }
	(rule__LeftAbsentPatternSource2__Group_2_0__0)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentPatternSource2__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_2_0__0__Impl
	rule__LeftAbsentPatternSource2__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCAssignment_2_0_0()); }
	(rule__LeftAbsentPatternSource2__EveryPSCAssignment_2_0_0)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_2_0__1__Impl
	rule__LeftAbsentPatternSource2__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentPatternSource2__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPatternSrcAssignment_2_0_2()); }
	(rule__LeftAbsentPatternSource2__LeftAbsPatternSrcAssignment_2_0_2)
	{ after(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPatternSrcAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource__Group__0__Impl
	rule__RightAbsentPatternSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSource1ParserRuleCall_0()); }
	ruleRightAbsentPatternSource1
	{ after(grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSource1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSourceAccess().getGroup_1()); }
	(rule__RightAbsentPatternSource__Group_1__0)*
	{ after(grammarAccess.getRightAbsentPatternSourceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSourceAccess().getGroup_1_0()); }
	(rule__RightAbsentPatternSource__Group_1_0__0)
	{ after(grammarAccess.getRightAbsentPatternSourceAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource__Group_1_0__0__Impl
	rule__RightAbsentPatternSource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSourceLeft1Action_1_0_0()); }
	()
	{ after(grammarAccess.getRightAbsentPatternSourceAccess().getRightAbsentPatternSourceLeft1Action_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource__Group_1_0__1__Impl
	rule__RightAbsentPatternSource__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSourceAccess().getFb2Assignment_1_0_1()); }
	(rule__RightAbsentPatternSource__Fb2Assignment_1_0_1)
	{ after(grammarAccess.getRightAbsentPatternSourceAccess().getFb2Assignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSourceAccess().getRight1Assignment_1_0_2()); }
	(rule__RightAbsentPatternSource__Right1Assignment_1_0_2)
	{ after(grammarAccess.getRightAbsentPatternSourceAccess().getRight1Assignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource1__Group__0__Impl
	rule__RightAbsentPatternSource1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource2ParserRuleCall_0()); }
	ruleRightAbsentPatternSource2
	{ after(grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource1Access().getGroup_1()); }
	(rule__RightAbsentPatternSource1__Group_1__0)*
	{ after(grammarAccess.getRightAbsentPatternSource1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource1__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource1Access().getGroup_1_0()); }
	(rule__RightAbsentPatternSource1__Group_1_0__0)
	{ after(grammarAccess.getRightAbsentPatternSource1Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource1__Group_1_0__0__Impl
	rule__RightAbsentPatternSource1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource1LeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getRightAbsentPatternSource1Access().getRightAbsentPatternSource1LeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource1__Group_1_0__1__Impl
	rule__RightAbsentPatternSource1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource1Access().getFbAssignment_1_0_1()); }
	(rule__RightAbsentPatternSource1__FbAssignment_1_0_1)
	{ after(grammarAccess.getRightAbsentPatternSource1Access().getFbAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource1Access().getRightAssignment_1_0_2()); }
	(rule__RightAbsentPatternSource1__RightAssignment_1_0_2)
	{ after(grammarAccess.getRightAbsentPatternSource1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getGroup_0_0()); }
	(rule__RightAbsentPatternSource2__Group_0_0__0)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource2__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_0_0__0__Impl
	rule__RightAbsentPatternSource2__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0()); }
	(ruleEVERY)?
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getEVERYParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_0_0__1__Impl
	rule__RightAbsentPatternSource2__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getOPEN_PARParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_0_0__2__Impl
	rule__RightAbsentPatternSource2__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSAssignment_0_0_2()); }
	(rule__RightAbsentPatternSource2__RightAbsPSAssignment_0_0_2)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_0_0__3__Impl
	rule__RightAbsentPatternSource2__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getCLOSE_PARParserRuleCall_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getWt3Assignment_0_0_4()); }
	(rule__RightAbsentPatternSource2__Wt3Assignment_0_0_4)?
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getWt3Assignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getGroup_1_0()); }
	(rule__RightAbsentPatternSource2__Group_1_0__0)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_1_0__0__Impl
	rule__RightAbsentPatternSource2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getEveryPSC1Assignment_1_0_0()); }
	(rule__RightAbsentPatternSource2__EveryPSC1Assignment_1_0_0)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getEveryPSC1Assignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_1_0__1__Impl
	rule__RightAbsentPatternSource2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1Assignment_1_0_2()); }
	(rule__RightAbsentPatternSource2__EveryAbsPS1Assignment_1_0_2)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1Assignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource2__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getGroup_2_0()); }
	(rule__RightAbsentPatternSource2__Group_2_0__0)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentPatternSource2__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_2_0__0__Impl
	rule__RightAbsentPatternSource2__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1Assignment_2_0_0()); }
	(rule__RightAbsentPatternSource2__EveryAbsPS1Assignment_2_0_0)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1Assignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_2_0__1__Impl
	rule__RightAbsentPatternSource2__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getHyphenMinusGreaterThanSignKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentPatternSource2__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSAssignment_2_0_2()); }
	(rule__RightAbsentPatternSource2__RightAbsPSAssignment_2_0_2)
	{ after(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EverySequenceSourceChain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EverySequenceSourceChain__Group__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEverySequenceSourceChainAccess().getGroup_0()); }
	(rule__EverySequenceSourceChain__Group_0__0)
	{ after(grammarAccess.getEverySequenceSourceChainAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EverySequenceSourceChain__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EverySequenceSourceChain__Group_0__0__Impl
	rule__EverySequenceSourceChain__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEverySequenceSourceChainAccess().getEVERYParserRuleCall_0_0()); }
	(ruleEVERY)?
	{ after(grammarAccess.getEverySequenceSourceChainAccess().getEVERYParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EverySequenceSourceChain__Group_0__1__Impl
	rule__EverySequenceSourceChain__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEverySequenceSourceChainAccess().getSeqSourceAssignment_0_1()); }
	(rule__EverySequenceSourceChain__SeqSourceAssignment_0_1)
	{ after(grammarAccess.getEverySequenceSourceChainAccess().getSeqSourceAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EverySequenceSourceChain__Group_0__2__Impl
	rule__EverySequenceSourceChain__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEverySequenceSourceChainAccess().getWtAssignment_0_2()); }
	(rule__EverySequenceSourceChain__WtAssignment_0_2)?
	{ after(grammarAccess.getEverySequenceSourceChainAccess().getWtAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EverySequenceSourceChain__Group_0__3__Impl
	rule__EverySequenceSourceChain__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEverySequenceSourceChainAccess().getCommaKeyword_0_3()); }
	Comma
	{ after(grammarAccess.getEverySequenceSourceChainAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EverySequenceSourceChain__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEverySequenceSourceChainAccess().getSscAssignment_0_4()); }
	(rule__EverySequenceSourceChain__SscAssignment_0_4)
	{ after(grammarAccess.getEverySequenceSourceChainAccess().getSscAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryAbsentSequenceSourceChain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentSequenceSourceChain__Group__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getGroup_0()); }
	(rule__EveryAbsentSequenceSourceChain__Group_0__0)
	{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryAbsentSequenceSourceChain__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentSequenceSourceChain__Group_0__0__Impl
	rule__EveryAbsentSequenceSourceChain__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getEVERYParserRuleCall_0_0()); }
	(ruleEVERY)?
	{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getEVERYParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentSequenceSourceChain__Group_0__1__Impl
	rule__EveryAbsentSequenceSourceChain__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getAbsSeqSrcChainAssignment_0_1()); }
	(rule__EveryAbsentSequenceSourceChain__AbsSeqSrcChainAssignment_0_1)
	{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getAbsSeqSrcChainAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentSequenceSourceChain__Group_0__2__Impl
	rule__EveryAbsentSequenceSourceChain__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getCommaKeyword_0_2()); }
	Comma
	{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getCommaKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryAbsentSequenceSourceChain__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getSeqSrcChainAssignment_0_3()); }
	(rule__EveryAbsentSequenceSourceChain__SeqSrcChainAssignment_0_3)
	{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getSeqSrcChainAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbsentSequenceSourceChain__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentSequenceSourceChain__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getGroup_0_0()); }
	(rule__AbsentSequenceSourceChain__Group_0_0__0)
	{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbsentSequenceSourceChain__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentSequenceSourceChain__Group_0_0__0__Impl
	rule__AbsentSequenceSourceChain__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getOPEN_PARParserRuleCall_0_0_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getOPEN_PARParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentSequenceSourceChain__Group_0_0__1__Impl
	rule__AbsentSequenceSourceChain__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getAbsentSequenceSourceChainAssignment_0_0_1()); }
	(rule__AbsentSequenceSourceChain__AbsentSequenceSourceChainAssignment_0_0_1)
	{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getAbsentSequenceSourceChainAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentSequenceSourceChain__Group_0_0__2__Impl
	rule__AbsentSequenceSourceChain__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_2()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getCLOSE_PARParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbsentSequenceSourceChain__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getWt5Assignment_0_0_3()); }
	(rule__AbsentSequenceSourceChain__Wt5Assignment_0_0_3)?
	{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getWt5Assignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource__Group__0__Impl
	rule__LeftAbsentSequenceSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSource1ParserRuleCall_0()); }
	ruleLeftAbsentSequenceSource1
	{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSource1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getGroup_1()); }
	(rule__LeftAbsentSequenceSource__Group_1__0)*
	{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getGroup_1_0()); }
	(rule__LeftAbsentSequenceSource__Group_1_0__0)
	{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource__Group_1_0__0__Impl
	rule__LeftAbsentSequenceSource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSourceLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getLeftAbsentSequenceSourceLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource__Group_1_0__1__Impl
	rule__LeftAbsentSequenceSource__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getCommAssignment_1_0_1()); }
	(rule__LeftAbsentSequenceSource__CommAssignment_1_0_1)
	{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getCommAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getRightAssignment_1_0_2()); }
	(rule__LeftAbsentSequenceSource__RightAssignment_1_0_2)
	{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource1__Group__0__Impl
	rule__LeftAbsentSequenceSource1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource2ParserRuleCall_0()); }
	ruleLeftAbsentSequenceSource2
	{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getGroup_1()); }
	(rule__LeftAbsentSequenceSource1__Group_1__0)*
	{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource1__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getGroup_1_0()); }
	(rule__LeftAbsentSequenceSource1__Group_1_0__0)
	{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource1__Group_1_0__0__Impl
	rule__LeftAbsentSequenceSource1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource1LeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getLeftAbsentSequenceSource1LeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource1__Group_1_0__1__Impl
	rule__LeftAbsentSequenceSource1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getCommAssignment_1_0_1()); }
	(rule__LeftAbsentSequenceSource1__CommAssignment_1_0_1)
	{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getCommAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getRightAssignment_1_0_2()); }
	(rule__LeftAbsentSequenceSource1__RightAssignment_1_0_2)
	{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_0_0()); }
	(rule__LeftAbsentSequenceSource2__Group_0_0__0)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource2__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_0_0__0__Impl
	rule__LeftAbsentSequenceSource2__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getOpAssignment_0_0_0()); }
	(rule__LeftAbsentSequenceSource2__OpAssignment_0_0_0)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getOpAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_0_0__1__Impl
	rule__LeftAbsentSequenceSource2__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceAssignment_0_0_1()); }
	(rule__LeftAbsentSequenceSource2__LeftAbsentSequenceSourceAssignment_0_0_1)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_0_0__2__Impl
	rule__LeftAbsentSequenceSource2__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCpAssignment_0_0_2()); }
	(rule__LeftAbsentSequenceSource2__CpAssignment_0_0_2)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCpAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getWt6Assignment_0_0_3()); }
	(rule__LeftAbsentSequenceSource2__Wt6Assignment_0_0_3)?
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getWt6Assignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_1_0()); }
	(rule__LeftAbsentSequenceSource2__Group_1_0__0)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_1_0__0__Impl
	rule__LeftAbsentSequenceSource2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getBasicAbsentPatternSourceAssignment_1_0_0()); }
	(rule__LeftAbsentSequenceSource2__BasicAbsentPatternSourceAssignment_1_0_0)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getBasicAbsentPatternSourceAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_1_0__1__Impl
	rule__LeftAbsentSequenceSource2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaAssignment_1_0_1()); }
	(rule__LeftAbsentSequenceSource2__CommaAssignment_1_0_1)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainAssignment_1_0_2()); }
	(rule__LeftAbsentSequenceSource2__SequenceSourceChainAssignment_1_0_2)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource2__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_2_0()); }
	(rule__LeftAbsentSequenceSource2__Group_2_0__0)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftAbsentSequenceSource2__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_2_0__0__Impl
	rule__LeftAbsentSequenceSource2__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainAssignment_2_0_0()); }
	(rule__LeftAbsentSequenceSource2__SequenceSourceChainAssignment_2_0_0)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_2_0__1__Impl
	rule__LeftAbsentSequenceSource2__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaAssignment_2_0_1()); }
	(rule__LeftAbsentSequenceSource2__CommaAssignment_2_0_1)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftAbsentSequenceSource2__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceAssignment_2_0_2()); }
	(rule__LeftAbsentSequenceSource2__LeftAbsentSequenceSourceAssignment_2_0_2)
	{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource__Group__0__Impl
	rule__RightAbsentSequenceSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSource1ParserRuleCall_0()); }
	ruleRightAbsentSequenceSource1
	{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSource1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getGroup_1()); }
	(rule__RightAbsentSequenceSource__Group_1__0)*
	{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getGroup_1_0()); }
	(rule__RightAbsentSequenceSource__Group_1_0__0)
	{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource__Group_1_0__0__Impl
	rule__RightAbsentSequenceSource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSourceLeft1Action_1_0_0()); }
	()
	{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getRightAbsentSequenceSourceLeft1Action_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource__Group_1_0__1__Impl
	rule__RightAbsentSequenceSource__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getCommAssignment_1_0_1()); }
	(rule__RightAbsentSequenceSource__CommAssignment_1_0_1)
	{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getCommAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getRight1Assignment_1_0_2()); }
	(rule__RightAbsentSequenceSource__Right1Assignment_1_0_2)
	{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getRight1Assignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource1__Group__0__Impl
	rule__RightAbsentSequenceSource1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource2ParserRuleCall_0()); }
	ruleRightAbsentSequenceSource2
	{ after(grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource1Access().getGroup_1()); }
	(rule__RightAbsentSequenceSource1__Group_1__0)*
	{ after(grammarAccess.getRightAbsentSequenceSource1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource1__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource1Access().getGroup_1_0()); }
	(rule__RightAbsentSequenceSource1__Group_1_0__0)
	{ after(grammarAccess.getRightAbsentSequenceSource1Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource1__Group_1_0__0__Impl
	rule__RightAbsentSequenceSource1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource1LeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getRightAbsentSequenceSource1Access().getRightAbsentSequenceSource1LeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource1__Group_1_0__1__Impl
	rule__RightAbsentSequenceSource1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource1Access().getCommAssignment_1_0_1()); }
	(rule__RightAbsentSequenceSource1__CommAssignment_1_0_1)
	{ after(grammarAccess.getRightAbsentSequenceSource1Access().getCommAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource1Access().getRightAssignment_1_0_2()); }
	(rule__RightAbsentSequenceSource1__RightAssignment_1_0_2)
	{ after(grammarAccess.getRightAbsentSequenceSource1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_0_0()); }
	(rule__RightAbsentSequenceSource2__Group_0_0__0)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource2__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_0_0__0__Impl
	rule__RightAbsentSequenceSource2__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getOpAssignment_0_0_0()); }
	(rule__RightAbsentSequenceSource2__OpAssignment_0_0_0)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getOpAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_0_0__1__Impl
	rule__RightAbsentSequenceSource2__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceAssignment_0_0_1()); }
	(rule__RightAbsentSequenceSource2__RightAbsentSequenceSourceAssignment_0_0_1)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_0_0__2__Impl
	rule__RightAbsentSequenceSource2__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getCpAssignment_0_0_2()); }
	(rule__RightAbsentSequenceSource2__CpAssignment_0_0_2)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getCpAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getWt7Assignment_0_0_3()); }
	(rule__RightAbsentSequenceSource2__Wt7Assignment_0_0_3)?
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getWt7Assignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_1_0()); }
	(rule__RightAbsentSequenceSource2__Group_1_0__0)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_1_0__0__Impl
	rule__RightAbsentSequenceSource2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getSequenceSourceChainAssignment_1_0_0()); }
	(rule__RightAbsentSequenceSource2__SequenceSourceChainAssignment_1_0_0)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getSequenceSourceChainAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_1_0__1__Impl
	rule__RightAbsentSequenceSource2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getCommaAssignment_1_0_1()); }
	(rule__RightAbsentSequenceSource2__CommaAssignment_1_0_1)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getCommaAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceAssignment_1_0_2()); }
	(rule__RightAbsentSequenceSource2__BasicAbsentPatternSourceAssignment_1_0_2)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource2__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_2_0()); }
	(rule__RightAbsentSequenceSource2__Group_2_0__0)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightAbsentSequenceSource2__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_2_0__0__Impl
	rule__RightAbsentSequenceSource2__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceAssignment_2_0_0()); }
	(rule__RightAbsentSequenceSource2__BasicAbsentPatternSourceAssignment_2_0_0)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_2_0__1__Impl
	rule__RightAbsentSequenceSource2__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getCommaKeyword_2_0_1()); }
	Comma
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getCommaKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightAbsentSequenceSource2__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceAssignment_2_0_2()); }
	(rule__RightAbsentSequenceSource2__RightAbsentSequenceSourceAssignment_2_0_2)
	{ after(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceSourceChain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain__Group__0__Impl
	rule__SequenceSourceChain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChain1ParserRuleCall_0()); }
	ruleSequenceSourceChain1
	{ after(grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChain1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChainAccess().getGroup_1()); }
	(rule__SequenceSourceChain__Group_1__0)*
	{ after(grammarAccess.getSequenceSourceChainAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceSourceChain__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChainAccess().getGroup_1_0()); }
	(rule__SequenceSourceChain__Group_1_0__0)
	{ after(grammarAccess.getSequenceSourceChainAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceSourceChain__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain__Group_1_0__0__Impl
	rule__SequenceSourceChain__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChainLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getSequenceSourceChainAccess().getSequenceSourceChainLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain__Group_1_0__1__Impl
	rule__SequenceSourceChain__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChainAccess().getOpAssignment_1_0_1()); }
	(rule__SequenceSourceChain__OpAssignment_1_0_1)
	{ after(grammarAccess.getSequenceSourceChainAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChainAccess().getRightAssignment_1_0_2()); }
	(rule__SequenceSourceChain__RightAssignment_1_0_2)
	{ after(grammarAccess.getSequenceSourceChainAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceSourceChain1__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain1__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChain1Access().getGroup_0_0()); }
	(rule__SequenceSourceChain1__Group_0_0__0)
	{ after(grammarAccess.getSequenceSourceChain1Access().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceSourceChain1__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain1__Group_0_0__0__Impl
	rule__SequenceSourceChain1__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getSequenceSourceChain1Access().getOPEN_PARParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain1__Group_0_0__1__Impl
	rule__SequenceSourceChain1__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceChainParserRuleCall_0_0_1()); }
	ruleSequenceSourceChain
	{ after(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceChainParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain1__Group_0_0__2__Impl
	rule__SequenceSourceChain1__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getSequenceSourceChain1Access().getCLOSE_PARParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain1__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChain1Access().getWt1Assignment_0_0_3()); }
	(rule__SequenceSourceChain1__Wt1Assignment_0_0_3)?
	{ after(grammarAccess.getSequenceSourceChain1Access().getWt1Assignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceSourceChain1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain1__Group_1__0__Impl
	rule__SequenceSourceChain1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceParserRuleCall_1_0()); }
	ruleSequenceSource
	{ after(grammarAccess.getSequenceSourceChain1Access().getSequenceSourceParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceSourceChain1__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceSourceChain1Access().getWtAssignment_1_1()); }
	(rule__SequenceSourceChain1__WtAssignment_1_1)?
	{ after(grammarAccess.getSequenceSourceChain1Access().getWtAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceCollectionStatefulSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCollectionStatefulSource__Group__0__Impl
	rule__SequenceCollectionStatefulSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0()); }
	ruleStandardStatefulSource
	{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getStandardStatefulSourceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCollectionStatefulSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getAlternatives_1()); }
	(rule__SequenceCollectionStatefulSource__Alternatives_1)
	{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceCollectionStatefulSource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCollectionStatefulSource__Group_1_0__0__Impl
	rule__SequenceCollectionStatefulSource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getLessThanSignKeyword_1_0_0()); }
	LessThanSign
	{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getLessThanSignKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCollectionStatefulSource__Group_1_0__1__Impl
	rule__SequenceCollectionStatefulSource__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getCollAssignment_1_0_1()); }
	(rule__SequenceCollectionStatefulSource__CollAssignment_1_0_1)
	{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getCollAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCollectionStatefulSource__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getGreaterThanSignKeyword_1_0_2()); }
	GreaterThanSign
	{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getGreaterThanSignKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousStream__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_0__0__Impl
	rule__AnonymousStream__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getOPEN_PARParserRuleCall_0_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getAnonymousStreamAccess().getOPEN_PARParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_0__1__Impl
	rule__AnonymousStream__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getAnonymousStreamParserRuleCall_0_1()); }
	ruleAnonymousStream
	{ after(grammarAccess.getAnonymousStreamAccess().getAnonymousStreamParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getCLOSE_PARParserRuleCall_0_2()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getAnonymousStreamAccess().getCLOSE_PARParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousStream__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_1__0__Impl
	rule__AnonymousStream__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getFROMParserRuleCall_1_0()); }
	ruleFROM
	{ after(grammarAccess.getAnonymousStreamAccess().getFROMParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_1__1__Impl
	rule__AnonymousStream__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getQiAssignment_1_1()); }
	(rule__AnonymousStream__QiAssignment_1_1)
	{ after(grammarAccess.getAnonymousStreamAccess().getQiAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_1__2__Impl
	rule__AnonymousStream__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getQsAssignment_1_2()); }
	(rule__AnonymousStream__QsAssignment_1_2)?
	{ after(grammarAccess.getAnonymousStreamAccess().getQsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_1__3__Impl
	rule__AnonymousStream__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getOut_rateAssignment_1_3()); }
	(rule__AnonymousStream__Out_rateAssignment_1_3)?
	{ after(grammarAccess.getAnonymousStreamAccess().getOut_rateAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_1__4__Impl
	rule__AnonymousStream__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getRETURNParserRuleCall_1_4()); }
	ruleRETURN
	{ after(grammarAccess.getAnonymousStreamAccess().getRETURNParserRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousStream__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousStreamAccess().getOp_event_typeAssignment_1_5()); }
	(rule__AnonymousStream__Op_event_typeAssignment_1_5)?
	{ after(grammarAccess.getAnonymousStreamAccess().getOp_event_typeAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputRate__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_0__0__Impl
	rule__OutputRate__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getOutputRateAction_0_0()); }
	()
	{ after(grammarAccess.getOutputRateAccess().getOutputRateAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_0__1__Impl
	rule__OutputRate__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_0_1()); }
	ruleOUTPUT
	{ after(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_0__2__Impl
	rule__OutputRate__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getOp_rate_typeAssignment_0_2()); }
	(rule__OutputRate__Op_rate_typeAssignment_0_2)?
	{ after(grammarAccess.getOutputRateAccess().getOp_rate_typeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_0__3__Impl
	rule__OutputRate__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getEveryAssignment_0_3()); }
	(rule__OutputRate__EveryAssignment_0_3)
	{ after(grammarAccess.getOutputRateAccess().getEveryAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getAlternatives_0_4()); }
	(rule__OutputRate__Alternatives_0_4)
	{ after(grammarAccess.getOutputRateAccess().getAlternatives_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputRate__Group_0_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_0_4_1__0__Impl
	rule__OutputRate__Group_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getINT_LITERALParserRuleCall_0_4_1_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getOutputRateAccess().getINT_LITERALParserRuleCall_0_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_0_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_0_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getEVENTSParserRuleCall_0_4_1_1()); }
	ruleEVENTS
	{ after(grammarAccess.getOutputRateAccess().getEVENTSParserRuleCall_0_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputRate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_1__0__Impl
	rule__OutputRate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getOutputRateAction_1_0()); }
	()
	{ after(grammarAccess.getOutputRateAccess().getOutputRateAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_1__1__Impl
	rule__OutputRate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_1_1()); }
	ruleOUTPUT
	{ after(grammarAccess.getOutputRateAccess().getOUTPUTParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_1__2__Impl
	rule__OutputRate__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getSNAPSHOTParserRuleCall_1_2()); }
	ruleSNAPSHOT
	{ after(grammarAccess.getOutputRateAccess().getSNAPSHOTParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_1__3__Impl
	rule__OutputRate__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getEveryAssignment_1_3()); }
	(rule__OutputRate__EveryAssignment_1_3)
	{ after(grammarAccess.getOutputRateAccess().getEveryAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRate__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateAccess().getTvAssignment_1_4()); }
	(rule__OutputRate__TvAssignment_1_4)
	{ after(grammarAccess.getOutputRateAccess().getTvAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputRateType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRateType__Group_0__0__Impl
	rule__OutputRateType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_0_0()); }
	()
	{ after(grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRateType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateTypeAccess().getALLParserRuleCall_0_1()); }
	ruleALL
	{ after(grammarAccess.getOutputRateTypeAccess().getALLParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputRateType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRateType__Group_1__0__Impl
	rule__OutputRateType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_1_0()); }
	()
	{ after(grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRateType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateTypeAccess().getLASTParserRuleCall_1_1()); }
	ruleLAST
	{ after(grammarAccess.getOutputRateTypeAccess().getLASTParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputRateType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRateType__Group_2__0__Impl
	rule__OutputRateType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_2_0()); }
	()
	{ after(grammarAccess.getOutputRateTypeAccess().getOutputRateTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputRateType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRateType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputRateTypeAccess().getFIRSTParserRuleCall_2_1()); }
	ruleFIRST
	{ after(grammarAccess.getOutputRateTypeAccess().getFIRSTParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOutput__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_0__0__Impl
	rule__QueryOutput__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_0_0()); }
	ruleINSERT
	{ after(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_0__1__Impl
	rule__QueryOutput__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_0_1()); }
	(rule__QueryOutput__OutEventTypeAssignment_0_1)?
	{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_0__2__Impl
	rule__QueryOutput__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_0_2()); }
	ruleINTO
	{ after(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getTarAssignment_0_3()); }
	(rule__QueryOutput__TarAssignment_0_3)
	{ after(grammarAccess.getQueryOutputAccess().getTarAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOutput__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_1__0__Impl
	rule__QueryOutput__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getDELETEParserRuleCall_1_0()); }
	ruleDELETE
	{ after(grammarAccess.getQueryOutputAccess().getDELETEParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_1__1__Impl
	rule__QueryOutput__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getTarAssignment_1_1()); }
	(rule__QueryOutput__TarAssignment_1_1)
	{ after(grammarAccess.getQueryOutputAccess().getTarAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_1__2__Impl
	rule__QueryOutput__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getGroup_1_2()); }
	(rule__QueryOutput__Group_1_2__0)?
	{ after(grammarAccess.getQueryOutputAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_1__3__Impl
	rule__QueryOutput__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getOnAssignment_1_3()); }
	(rule__QueryOutput__OnAssignment_1_3)
	{ after(grammarAccess.getQueryOutputAccess().getOnAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getExprAssignment_1_4()); }
	(rule__QueryOutput__ExprAssignment_1_4)
	{ after(grammarAccess.getQueryOutputAccess().getExprAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOutput__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_1_2__0__Impl
	rule__QueryOutput__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_1_2_0()); }
	ruleFOR
	{ after(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_1_2_1()); }
	(rule__QueryOutput__OutEventTypeAssignment_1_2_1)
	{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOutput__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2__0__Impl
	rule__QueryOutput__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getUPDATEParserRuleCall_2_0()); }
	ruleUPDATE
	{ after(grammarAccess.getQueryOutputAccess().getUPDATEParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2__1__Impl
	rule__QueryOutput__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getGroup_2_1()); }
	(rule__QueryOutput__Group_2_1__0)?
	{ after(grammarAccess.getQueryOutputAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2__2__Impl
	rule__QueryOutput__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getTarAssignment_2_2()); }
	(rule__QueryOutput__TarAssignment_2_2)
	{ after(grammarAccess.getQueryOutputAccess().getTarAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2__3__Impl
	rule__QueryOutput__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getGroup_2_3()); }
	(rule__QueryOutput__Group_2_3__0)?
	{ after(grammarAccess.getQueryOutputAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2__4__Impl
	rule__QueryOutput__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getSetClauseAssignment_2_4()); }
	(rule__QueryOutput__SetClauseAssignment_2_4)?
	{ after(grammarAccess.getQueryOutputAccess().getSetClauseAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2__5__Impl
	rule__QueryOutput__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getOnAssignment_2_5()); }
	(rule__QueryOutput__OnAssignment_2_5)
	{ after(grammarAccess.getQueryOutputAccess().getOnAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getExprAssignment_2_6()); }
	(rule__QueryOutput__ExprAssignment_2_6)
	{ after(grammarAccess.getQueryOutputAccess().getExprAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOutput__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2_1__0__Impl
	rule__QueryOutput__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getOrAssignment_2_1_0()); }
	(rule__QueryOutput__OrAssignment_2_1_0)
	{ after(grammarAccess.getQueryOutputAccess().getOrAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2_1__1__Impl
	rule__QueryOutput__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_2_1_1()); }
	ruleINSERT
	{ after(grammarAccess.getQueryOutputAccess().getINSERTParserRuleCall_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_2_1_2()); }
	ruleINTO
	{ after(grammarAccess.getQueryOutputAccess().getINTOParserRuleCall_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOutput__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2_3__0__Impl
	rule__QueryOutput__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_2_3_0()); }
	ruleFOR
	{ after(grammarAccess.getQueryOutputAccess().getFORParserRuleCall_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_2_3_1()); }
	(rule__QueryOutput__OutEventTypeAssignment_2_3_1)
	{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOutput__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_3__0__Impl
	rule__QueryOutput__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getRETURNParserRuleCall_3_0()); }
	ruleRETURN
	{ after(grammarAccess.getQueryOutputAccess().getRETURNParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryOutput__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_3_1()); }
	(rule__QueryOutput__OutEventTypeAssignment_3_1)?
	{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group__0__Impl
	rule__SetClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getSETParserRuleCall_0()); }
	ruleSET
	{ after(grammarAccess.getSetClauseAccess().getSETParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group__1__Impl
	rule__SetClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getSetAssignmentAssignment_1()); }
	(rule__SetClause__SetAssignmentAssignment_1)
	{ after(grammarAccess.getSetClauseAccess().getSetAssignmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getGroup_2()); }
	(rule__SetClause__Group_2__0)*
	{ after(grammarAccess.getSetClauseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetClause__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group_2__0__Impl
	rule__SetClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getSetClauseAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getSetAssignmentAssignment_2_1()); }
	(rule__SetClause__SetAssignmentAssignment_2_1)
	{ after(grammarAccess.getSetClauseAccess().getSetAssignmentAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetAssignment__Group__0__Impl
	rule__SetAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAssignmentAccess().getAttributeReferenceParserRuleCall_0()); }
	ruleAttributeReference
	{ after(grammarAccess.getSetAssignmentAccess().getAttributeReferenceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetAssignment__Group__1__Impl
	rule__SetAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAssignmentAccess().getEqualsSignKeyword_1()); }
	EqualsSign
	{ after(grammarAccess.getSetAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAssignmentAccess().getExpressionAssignment_2()); }
	(rule__SetAssignment__ExpressionAssignment_2)
	{ after(grammarAccess.getSetAssignmentAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputEventType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_0__0__Impl
	rule__OutputEventType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_0_0()); }
	()
	{ after(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_0__1__Impl
	rule__OutputEventType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_0_1()); }
	ruleALL
	{ after(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_0_2()); }
	ruleEVENTS
	{ after(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputEventType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_1__0__Impl
	rule__OutputEventType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_1_0()); }
	()
	{ after(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_1__1__Impl
	rule__OutputEventType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_1_1()); }
	ruleALL
	{ after(grammarAccess.getOutputEventTypeAccess().getALLParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_1__2__Impl
	rule__OutputEventType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_1_2()); }
	ruleRAW
	{ after(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_1_3()); }
	ruleEVENTS
	{ after(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputEventType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_2__0__Impl
	rule__OutputEventType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_2_0()); }
	()
	{ after(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_2__1__Impl
	rule__OutputEventType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_2_1()); }
	ruleEXPIRED
	{ after(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_2_2()); }
	ruleEVENTS
	{ after(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputEventType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_3__0__Impl
	rule__OutputEventType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_3_0()); }
	()
	{ after(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_3__1__Impl
	rule__OutputEventType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_3_1()); }
	ruleEXPIRED
	{ after(grammarAccess.getOutputEventTypeAccess().getEXPIREDParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_3__2__Impl
	rule__OutputEventType__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_3_2()); }
	ruleRAW
	{ after(grammarAccess.getOutputEventTypeAccess().getRAWParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_3_3()); }
	ruleEVENTS
	{ after(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputEventType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_4__0__Impl
	rule__OutputEventType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_4_0()); }
	()
	{ after(grammarAccess.getOutputEventTypeAccess().getOutputEventTypeAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_4__1__Impl
	rule__OutputEventType__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getCURRENTParserRuleCall_4_1()); }
	(ruleCURRENT)?
	{ after(grammarAccess.getOutputEventTypeAccess().getCURRENTParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputEventType__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputEventType__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_4_2()); }
	ruleEVENTS
	{ after(grammarAccess.getOutputEventTypeAccess().getEVENTSParserRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSourceStreamHandlers1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group__0__Impl
	rule__BasicSourceStreamHandlers1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getBasicSourceStreamHandlers1Action_0()); }
	()
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getBasicSourceStreamHandlers1Action_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group__1__Impl
	rule__BasicSourceStreamHandlers1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getAlternatives_1()); }
	(rule__BasicSourceStreamHandlers1__Alternatives_1)?
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_2()); }
	(rule__BasicSourceStreamHandlers1__Group_2__0)?
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSourceStreamHandlers1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_0_0()); }
	(rule__BasicSourceStreamHandlers1__Group_1_0_0__0)
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSourceStreamHandlers1__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_0_0__0__Impl
	rule__BasicSourceStreamHandlers1__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_0_0_0()); }
	(NumberSign)?
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_0_0__1__Impl
	rule__BasicSourceStreamHandlers1__Group_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getOPEN_SQARE_BRACKETSParserRuleCall_1_0_0_1()); }
	ruleOPEN_SQARE_BRACKETS
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getOPEN_SQARE_BRACKETSParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_0_0__2__Impl
	rule__BasicSourceStreamHandlers1__Group_1_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getExpAssignment_1_0_0_2()); }
	(rule__BasicSourceStreamHandlers1__ExpAssignment_1_0_0_2)
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getExpAssignment_1_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getCLOSE_SQARE_BRACKETSParserRuleCall_1_0_0_3()); }
	ruleCLOSE_SQARE_BRACKETS
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getCLOSE_SQARE_BRACKETSParserRuleCall_1_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSourceStreamHandlers1__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_1_0()); }
	(rule__BasicSourceStreamHandlers1__Group_1_1_0__0)
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSourceStreamHandlers1__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_1_0__0__Impl
	rule__BasicSourceStreamHandlers1__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_1_0_0()); }
	NumberSign
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getFoAssignment_1_1_0_1()); }
	(rule__BasicSourceStreamHandlers1__FoAssignment_1_1_0_1)
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getFoAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSourceStreamHandlers1__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_2_0()); }
	(rule__BasicSourceStreamHandlers1__Group_2_0__0)
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSourceStreamHandlers1__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_2_0__0__Impl
	rule__BasicSourceStreamHandlers1__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_2_0_0()); }
	NumberSign
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getNumberSignKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_2_0__1__Impl
	rule__BasicSourceStreamHandlers1__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getWINDOWParserRuleCall_2_0_1()); }
	ruleWINDOW
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getWINDOWParserRuleCall_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_2_0__2__Impl
	rule__BasicSourceStreamHandlers1__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getFullStopKeyword_2_0_2()); }
	FullStop
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getFullStopKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSourceStreamHandlers1__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getFunc_opAssignment_2_0_3()); }
	(rule__BasicSourceStreamHandlers1__Func_opAssignment_2_0_3)
	{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getFunc_opAssignment_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__0__Impl
	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getNumberSignKeyword_0()); }
	(NumberSign)?
	{ after(grammarAccess.getFilterAccess().getNumberSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__1__Impl
	rule__Filter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getOPEN_SQARE_BRACKETSParserRuleCall_1()); }
	ruleOPEN_SQARE_BRACKETS
	{ after(grammarAccess.getFilterAccess().getOPEN_SQARE_BRACKETSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__2__Impl
	rule__Filter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getExpAssignment_2()); }
	(rule__Filter__ExpAssignment_2)
	{ after(grammarAccess.getFilterAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_3()); }
	ruleCLOSE_SQARE_BRACKETS
	{ after(grammarAccess.getFilterAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamFunction__Group__0__Impl
	rule__StreamFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamFunctionAccess().getNumberSignKeyword_0()); }
	NumberSign
	{ after(grammarAccess.getStreamFunctionAccess().getNumberSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamFunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamFunctionAccess().getFoAssignment_1()); }
	(rule__StreamFunction__FoAssignment_1)
	{ after(grammarAccess.getStreamFunctionAccess().getFoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group__0__Impl
	rule__FunctionOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getFunctionOperationAction_0()); }
	()
	{ after(grammarAccess.getFunctionOperationAccess().getFunctionOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group__1__Impl
	rule__FunctionOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getGroup_1()); }
	(rule__FunctionOperation__Group_1__0)?
	{ after(grammarAccess.getFunctionOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group__2__Impl
	rule__FunctionOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getFuncIdAssignment_2()); }
	(rule__FunctionOperation__FuncIdAssignment_2)
	{ after(grammarAccess.getFunctionOperationAccess().getFuncIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group__3__Impl
	rule__FunctionOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getOPEN_PARParserRuleCall_3()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getFunctionOperationAccess().getOPEN_PARParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group__4__Impl
	rule__FunctionOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getAttrListAssignment_4()); }
	(rule__FunctionOperation__AttrListAssignment_4)?
	{ after(grammarAccess.getFunctionOperationAccess().getAttrListAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getCLOSE_PARParserRuleCall_5()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getFunctionOperationAccess().getCLOSE_PARParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group_1__0__Impl
	rule__FunctionOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getFuncNamespaceAssignment_1_0()); }
	(rule__FunctionOperation__FuncNamespaceAssignment_1_0)
	{ after(grammarAccess.getFunctionOperationAccess().getFuncNamespaceAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOperation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOperationAccess().getColonKeyword_1_1()); }
	Colon
	{ after(grammarAccess.getFunctionOperationAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_0__0__Impl
	rule__AttributeList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getAttributeListAction_0_0()); }
	()
	{ after(grammarAccess.getAttributeListAccess().getAttributeListAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getGroup_0_1()); }
	(rule__AttributeList__Group_0_1__0)
	{ after(grammarAccess.getAttributeListAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_0_1__0__Impl
	rule__AttributeList__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getAttrAssignment_0_1_0()); }
	(rule__AttributeList__AttrAssignment_0_1_0)
	{ after(grammarAccess.getAttributeListAccess().getAttrAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getGroup_0_1_1()); }
	(rule__AttributeList__Group_0_1_1__0)*
	{ after(grammarAccess.getAttributeListAccess().getGroup_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_0_1_1__0__Impl
	rule__AttributeList__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getCommaKeyword_0_1_1_0()); }
	Comma
	{ after(grammarAccess.getAttributeListAccess().getCommaKeyword_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getAttrAssignment_0_1_1_1()); }
	(rule__AttributeList__AttrAssignment_0_1_1_1)
	{ after(grammarAccess.getAttributeListAccess().getAttrAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_1__0__Impl
	rule__AttributeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getAttributeListAction_1_0()); }
	()
	{ after(grammarAccess.getAttributeListAccess().getAttributeListAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeListAccess().getAsteriskKeyword_1_1()); }
	Asterisk
	{ after(grammarAccess.getAttributeListAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByQuerySelection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group__0__Impl
	rule__GroupByQuerySelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getGroupByQuerySelectionAction_0()); }
	()
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getGroupByQuerySelectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group__1__Impl
	rule__GroupByQuerySelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getGroup_1()); }
	(rule__GroupByQuerySelection__Group_1__0)
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getGrp_byAssignment_2()); }
	(rule__GroupByQuerySelection__Grp_byAssignment_2)?
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getGrp_byAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByQuerySelection__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group_1__0__Impl
	rule__GroupByQuerySelection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getSELECTParserRuleCall_1_0()); }
	ruleSELECT
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getSELECTParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getAlternatives_1_1()); }
	(rule__GroupByQuerySelection__Alternatives_1_1)
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByQuerySelection__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group_1_1_1__0__Impl
	rule__GroupByQuerySelection__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getOut_attAssignment_1_1_1_0()); }
	(rule__GroupByQuerySelection__Out_attAssignment_1_1_1_0)
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getOut_attAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getGroup_1_1_1_1()); }
	(rule__GroupByQuerySelection__Group_1_1_1_1__0)*
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getGroup_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByQuerySelection__Group_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group_1_1_1_1__0__Impl
	rule__GroupByQuerySelection__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getCommaKeyword_1_1_1_1_0()); }
	Comma
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getCommaKeyword_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupByQuerySelection__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Group_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByQuerySelectionAccess().getOut_attAssignment_1_1_1_1_1()); }
	(rule__GroupByQuerySelection__Out_attAssignment_1_1_1_1_1)
	{ after(grammarAccess.getGroupByQuerySelectionAccess().getOut_attAssignment_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuerySection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySection__Group__0__Impl
	rule__QuerySection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySectionAccess().getQuerySectionAction_0()); }
	()
	{ after(grammarAccess.getQuerySectionAccess().getQuerySectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySection__Group__1__Impl
	rule__QuerySection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySectionAccess().getGrpByQuerySelAssignment_1()); }
	(rule__QuerySection__GrpByQuerySelAssignment_1)
	{ after(grammarAccess.getQuerySectionAccess().getGrpByQuerySelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySectionAccess().getHavingAssignment_2()); }
	(rule__QuerySection__HavingAssignment_2)?
	{ after(grammarAccess.getQuerySectionAccess().getHavingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputAttribute__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputAttribute__Group_0__0__Impl
	rule__OutputAttribute__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_0_0()); }
	()
	{ after(grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputAttribute__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAttributeAccess().getOutAttrAssignment_0_1()); }
	(rule__OutputAttribute__OutAttrAssignment_0_1)
	{ after(grammarAccess.getOutputAttributeAccess().getOutAttrAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputAttribute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputAttribute__Group_1__0__Impl
	rule__OutputAttribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_1_0()); }
	()
	{ after(grammarAccess.getOutputAttributeAccess().getOutputAttributeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputAttribute__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAttributeAccess().getAttr_refAssignment_1_1()); }
	(rule__OutputAttribute__Attr_refAssignment_1_1)
	{ after(grammarAccess.getOutputAttributeAccess().getAttr_refAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutAttr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutAttr__Group__0__Impl
	rule__OutAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAttrAccess().getAttrAssignment_0()); }
	(rule__OutAttr__AttrAssignment_0)
	{ after(grammarAccess.getOutAttrAccess().getAttrAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutAttr__Group__1__Impl
	rule__OutAttr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAttrAccess().getAAssignment_1()); }
	(rule__OutAttr__AAssignment_1)
	{ after(grammarAccess.getOutAttrAccess().getAAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutAttr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAttrAccess().getNameAssignment_2()); }
	(rule__OutAttr__NameAssignment_2)
	{ after(grammarAccess.getOutAttrAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__0__Impl
	rule__GroupBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getGROUPParserRuleCall_0()); }
	ruleGROUP
	{ after(grammarAccess.getGroupByAccess().getGROUPParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__1__Impl
	rule__GroupBy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getBYParserRuleCall_1()); }
	ruleBY
	{ after(grammarAccess.getGroupByAccess().getBYParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__2__Impl
	rule__GroupBy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getAttr_refAssignment_2()); }
	(rule__GroupBy__Attr_refAssignment_2)
	{ after(grammarAccess.getGroupByAccess().getAttr_refAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getGroup_3()); }
	(rule__GroupBy__Group_3__0)*
	{ after(grammarAccess.getGroupByAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group_3__0__Impl
	rule__GroupBy__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getCommaKeyword_3_0()); }
	Comma
	{ after(grammarAccess.getGroupByAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getAttr_refAssignment_3_1()); }
	(rule__GroupBy__Attr_refAssignment_3_1)
	{ after(grammarAccess.getGroupByAccess().getAttr_refAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HavingExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HavingExpr__Group__0__Impl
	rule__HavingExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HavingExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHavingExprAccess().getHAVINGParserRuleCall_0()); }
	ruleHAVING
	{ after(grammarAccess.getHavingExprAccess().getHAVINGParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HavingExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HavingExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HavingExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHavingExprAccess().getExprAssignment_1()); }
	(rule__HavingExpr__ExprAssignment_1)
	{ after(grammarAccess.getHavingExprAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathLogicalOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathLogicalOperation__Group__0__Impl
	rule__MathLogicalOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathLogicalOperationAccess().getMathInOperationParserRuleCall_0()); }
	ruleMathInOperation
	{ after(grammarAccess.getMathLogicalOperationAccess().getMathInOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathLogicalOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathLogicalOperationAccess().getGroup_1()); }
	(rule__MathLogicalOperation__Group_1__0)*
	{ after(grammarAccess.getMathLogicalOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathLogicalOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathLogicalOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathLogicalOperationAccess().getGroup_1_0()); }
	(rule__MathLogicalOperation__Group_1_0__0)
	{ after(grammarAccess.getMathLogicalOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathLogicalOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathLogicalOperation__Group_1_0__0__Impl
	rule__MathLogicalOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathLogicalOperationAccess().getMathLogicalOperationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMathLogicalOperationAccess().getMathLogicalOperationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathLogicalOperation__Group_1_0__1__Impl
	rule__MathLogicalOperation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathLogicalOperationAccess().getAlternatives_1_0_1()); }
	(rule__MathLogicalOperation__Alternatives_1_0_1)
	{ after(grammarAccess.getMathLogicalOperationAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathLogicalOperation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathLogicalOperationAccess().getRightAssignment_1_0_2()); }
	(rule__MathLogicalOperation__RightAssignment_1_0_2)
	{ after(grammarAccess.getMathLogicalOperationAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathInOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathInOperation__Group__0__Impl
	rule__MathInOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathInOperationAccess().getMathGtLtOperationParserRuleCall_0()); }
	ruleMathGtLtOperation
	{ after(grammarAccess.getMathInOperationAccess().getMathGtLtOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathInOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathInOperationAccess().getGroup_1()); }
	(rule__MathInOperation__Group_1__0)*
	{ after(grammarAccess.getMathInOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathInOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathInOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathInOperationAccess().getGroup_1_0()); }
	(rule__MathInOperation__Group_1_0__0)
	{ after(grammarAccess.getMathInOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathInOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathInOperation__Group_1_0__0__Impl
	rule__MathInOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathInOperationAccess().getMathInOperationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMathInOperationAccess().getMathInOperationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathInOperation__Group_1_0__1__Impl
	rule__MathInOperation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathInOperationAccess().getInAssignment_1_0_1()); }
	(rule__MathInOperation__InAssignment_1_0_1)
	{ after(grammarAccess.getMathInOperationAccess().getInAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathInOperation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathInOperationAccess().getRightAssignment_1_0_2()); }
	(rule__MathInOperation__RightAssignment_1_0_2)
	{ after(grammarAccess.getMathInOperationAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathGtLtOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathGtLtOperation__Group__0__Impl
	rule__MathGtLtOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathGtLtOperationAccess().getMathEqualOperationParserRuleCall_0()); }
	ruleMathEqualOperation
	{ after(grammarAccess.getMathGtLtOperationAccess().getMathEqualOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathGtLtOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathGtLtOperationAccess().getGroup_1()); }
	(rule__MathGtLtOperation__Group_1__0)*
	{ after(grammarAccess.getMathGtLtOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathGtLtOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathGtLtOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathGtLtOperationAccess().getGroup_1_0()); }
	(rule__MathGtLtOperation__Group_1_0__0)
	{ after(grammarAccess.getMathGtLtOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathGtLtOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathGtLtOperation__Group_1_0__0__Impl
	rule__MathGtLtOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathGtLtOperationAccess().getMathGtLtOperationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMathGtLtOperationAccess().getMathGtLtOperationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathGtLtOperation__Group_1_0__1__Impl
	rule__MathGtLtOperation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathGtLtOperationAccess().getSymbolAssignment_1_0_1()); }
	(rule__MathGtLtOperation__SymbolAssignment_1_0_1)
	{ after(grammarAccess.getMathGtLtOperationAccess().getSymbolAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathGtLtOperation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathGtLtOperationAccess().getRightAssignment_1_0_2()); }
	(rule__MathGtLtOperation__RightAssignment_1_0_2)
	{ after(grammarAccess.getMathGtLtOperationAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathEqualOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathEqualOperation__Group__0__Impl
	rule__MathEqualOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathEqualOperationAccess().getMathAddsubOperationParserRuleCall_0()); }
	ruleMathAddsubOperation
	{ after(grammarAccess.getMathEqualOperationAccess().getMathAddsubOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathEqualOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathEqualOperationAccess().getGroup_1()); }
	(rule__MathEqualOperation__Group_1__0)*
	{ after(grammarAccess.getMathEqualOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathEqualOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathEqualOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathEqualOperationAccess().getGroup_1_0()); }
	(rule__MathEqualOperation__Group_1_0__0)
	{ after(grammarAccess.getMathEqualOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathEqualOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathEqualOperation__Group_1_0__0__Impl
	rule__MathEqualOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathEqualOperationAccess().getMathEqualOperationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMathEqualOperationAccess().getMathEqualOperationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathEqualOperation__Group_1_0__1__Impl
	rule__MathEqualOperation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathEqualOperationAccess().getAlternatives_1_0_1()); }
	(rule__MathEqualOperation__Alternatives_1_0_1)
	{ after(grammarAccess.getMathEqualOperationAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathEqualOperation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathEqualOperationAccess().getRightAssignment_1_0_2()); }
	(rule__MathEqualOperation__RightAssignment_1_0_2)
	{ after(grammarAccess.getMathEqualOperationAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathAddsubOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathAddsubOperation__Group__0__Impl
	rule__MathAddsubOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAddsubOperationAccess().getMathDivmulOperationParserRuleCall_0()); }
	ruleMathDivmulOperation
	{ after(grammarAccess.getMathAddsubOperationAccess().getMathDivmulOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathAddsubOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAddsubOperationAccess().getGroup_1()); }
	(rule__MathAddsubOperation__Group_1__0)*
	{ after(grammarAccess.getMathAddsubOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathAddsubOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathAddsubOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAddsubOperationAccess().getGroup_1_0()); }
	(rule__MathAddsubOperation__Group_1_0__0)
	{ after(grammarAccess.getMathAddsubOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathAddsubOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathAddsubOperation__Group_1_0__0__Impl
	rule__MathAddsubOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAddsubOperationAccess().getMathAddsubOperationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMathAddsubOperationAccess().getMathAddsubOperationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathAddsubOperation__Group_1_0__1__Impl
	rule__MathAddsubOperation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAddsubOperationAccess().getAlternatives_1_0_1()); }
	(rule__MathAddsubOperation__Alternatives_1_0_1)
	{ after(grammarAccess.getMathAddsubOperationAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathAddsubOperation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAddsubOperationAccess().getRightAssignment_1_0_2()); }
	(rule__MathAddsubOperation__RightAssignment_1_0_2)
	{ after(grammarAccess.getMathAddsubOperationAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathDivmulOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathDivmulOperation__Group__0__Impl
	rule__MathDivmulOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathDivmulOperationAccess().getMathOtherOperationsParserRuleCall_0()); }
	ruleMathOtherOperations
	{ after(grammarAccess.getMathDivmulOperationAccess().getMathOtherOperationsParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathDivmulOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathDivmulOperationAccess().getGroup_1()); }
	(rule__MathDivmulOperation__Group_1__0)*
	{ after(grammarAccess.getMathDivmulOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathDivmulOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathDivmulOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathDivmulOperationAccess().getGroup_1_0()); }
	(rule__MathDivmulOperation__Group_1_0__0)
	{ after(grammarAccess.getMathDivmulOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathDivmulOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathDivmulOperation__Group_1_0__0__Impl
	rule__MathDivmulOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathDivmulOperationAccess().getMathDivmulOperationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMathDivmulOperationAccess().getMathDivmulOperationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathDivmulOperation__Group_1_0__1__Impl
	rule__MathDivmulOperation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathDivmulOperationAccess().getAlternatives_1_0_1()); }
	(rule__MathDivmulOperation__Alternatives_1_0_1)
	{ after(grammarAccess.getMathDivmulOperationAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathDivmulOperation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathDivmulOperationAccess().getRightAssignment_1_0_2()); }
	(rule__MathDivmulOperation__RightAssignment_1_0_2)
	{ after(grammarAccess.getMathDivmulOperationAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathOtherOperations__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOtherOperations__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOtherOperationsAccess().getGroup_0_0()); }
	(rule__MathOtherOperations__Group_0_0__0)
	{ after(grammarAccess.getMathOtherOperationsAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathOtherOperations__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOtherOperations__Group_0_0__0__Impl
	rule__MathOtherOperations__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOtherOperationsAccess().getNotOperationAction_0_0_0()); }
	()
	{ after(grammarAccess.getMathOtherOperationsAccess().getNotOperationAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOtherOperations__Group_0_0__1__Impl
	rule__MathOtherOperations__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOtherOperationsAccess().getNotAssignment_0_0_1()); }
	(rule__MathOtherOperations__NotAssignment_0_0_1)
	{ after(grammarAccess.getMathOtherOperationsAccess().getNotAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOtherOperations__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOtherOperationsAccess().getOpAssignment_0_0_2()); }
	(rule__MathOtherOperations__OpAssignment_0_0_2)
	{ after(grammarAccess.getMathOtherOperationsAccess().getOpAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathOtherOperations__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOtherOperations__Group_1__0__Impl
	rule__MathOtherOperations__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOtherOperationsAccess().getOPEN_PARParserRuleCall_1_0()); }
	ruleOPEN_PAR
	{ after(grammarAccess.getMathOtherOperationsAccess().getOPEN_PARParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOtherOperations__Group_1__1__Impl
	rule__MathOtherOperations__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOtherOperationsAccess().getOpAssignment_1_1()); }
	(rule__MathOtherOperations__OpAssignment_1_1)
	{ after(grammarAccess.getMathOtherOperationsAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOtherOperations__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOtherOperationsAccess().getCLOSE_PARParserRuleCall_1_2()); }
	ruleCLOSE_PAR
	{ after(grammarAccess.getMathOtherOperationsAccess().getCLOSE_PARParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullCheck__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCheck__Group__0__Impl
	rule__NullCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCheckAccess().getAlternatives_0()); }
	(rule__NullCheck__Alternatives_0)
	{ after(grammarAccess.getNullCheckAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCheck__Group__1__Impl
	rule__NullCheck__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCheckAccess().getISParserRuleCall_1()); }
	ruleIS
	{ after(grammarAccess.getNullCheckAccess().getISParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCheck__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCheckAccess().getNULLParserRuleCall_2()); }
	ruleNULL
	{ after(grammarAccess.getNullCheckAccess().getNULLParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamReference__Group__0__Impl
	rule__StreamReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamReferenceAccess().getHashAssignment_0()); }
	(rule__StreamReference__HashAssignment_0)?
	{ after(grammarAccess.getStreamReferenceAccess().getHashAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamReference__Group__1__Impl
	rule__StreamReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamReferenceAccess().getNaAssignment_1()); }
	(rule__StreamReference__NaAssignment_1)
	{ after(grammarAccess.getStreamReferenceAccess().getNaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamReferenceAccess().getGroup_2()); }
	(rule__StreamReference__Group_2__0)?
	{ after(grammarAccess.getStreamReferenceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamReference__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamReference__Group_2__0__Impl
	rule__StreamReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_2_0()); }
	ruleOPEN_SQARE_BRACKETS
	{ after(grammarAccess.getStreamReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamReference__Group_2__1__Impl
	rule__StreamReference__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamReferenceAccess().getAatr_indexAssignment_2_1()); }
	(rule__StreamReference__Aatr_indexAssignment_2_1)
	{ after(grammarAccess.getStreamReferenceAccess().getAatr_indexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamReference__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_2_2()); }
	ruleCLOSE_SQARE_BRACKETS
	{ after(grammarAccess.getStreamReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0__0__Impl
	rule__AttributeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getAttributeReferenceAction_0_0()); }
	()
	{ after(grammarAccess.getAttributeReferenceAccess().getAttributeReferenceAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0__1__Impl
	rule__AttributeReference__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getHash1Assignment_0_1()); }
	(rule__AttributeReference__Hash1Assignment_0_1)?
	{ after(grammarAccess.getAttributeReferenceAccess().getHash1Assignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0__2__Impl
	rule__AttributeReference__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getName1Assignment_0_2()); }
	(rule__AttributeReference__Name1Assignment_0_2)
	{ after(grammarAccess.getAttributeReferenceAccess().getName1Assignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0__3__Impl
	rule__AttributeReference__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getGroup_0_3()); }
	(rule__AttributeReference__Group_0_3__0)?
	{ after(grammarAccess.getAttributeReferenceAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0__4__Impl
	rule__AttributeReference__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getGroup_0_4()); }
	(rule__AttributeReference__Group_0_4__0)?
	{ after(grammarAccess.getAttributeReferenceAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0__5__Impl
	rule__AttributeReference__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getFullStopKeyword_0_5()); }
	FullStop
	{ after(grammarAccess.getAttributeReferenceAccess().getFullStopKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getAttr_nameAssignment_0_6()); }
	(rule__AttributeReference__Attr_nameAssignment_0_6)
	{ after(grammarAccess.getAttributeReferenceAccess().getAttr_nameAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReference__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_3__0__Impl
	rule__AttributeReference__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_0_3_0()); }
	ruleOPEN_SQARE_BRACKETS
	{ after(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_3__1__Impl
	rule__AttributeReference__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getAttribute_index1Assignment_0_3_1()); }
	(rule__AttributeReference__Attribute_index1Assignment_0_3_1)
	{ after(grammarAccess.getAttributeReferenceAccess().getAttribute_index1Assignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_0_3_2()); }
	ruleCLOSE_SQARE_BRACKETS
	{ after(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReference__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_4__0__Impl
	rule__AttributeReference__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getHash2Assignment_0_4_0()); }
	(rule__AttributeReference__Hash2Assignment_0_4_0)
	{ after(grammarAccess.getAttributeReferenceAccess().getHash2Assignment_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_4__1__Impl
	rule__AttributeReference__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getName2Assignment_0_4_1()); }
	(rule__AttributeReference__Name2Assignment_0_4_1)
	{ after(grammarAccess.getAttributeReferenceAccess().getName2Assignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getGroup_0_4_2()); }
	(rule__AttributeReference__Group_0_4_2__0)?
	{ after(grammarAccess.getAttributeReferenceAccess().getGroup_0_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReference__Group_0_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_4_2__0__Impl
	rule__AttributeReference__Group_0_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_0_4_2_0()); }
	ruleOPEN_SQARE_BRACKETS
	{ after(grammarAccess.getAttributeReferenceAccess().getOPEN_SQARE_BRACKETSParserRuleCall_0_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_4_2__1__Impl
	rule__AttributeReference__Group_0_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getAttribute_index2Assignment_0_4_2_1()); }
	(rule__AttributeReference__Attribute_index2Assignment_0_4_2_1)
	{ after(grammarAccess.getAttributeReferenceAccess().getAttribute_index2Assignment_0_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReference__Group_0_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Group_0_4_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_0_4_2_2()); }
	ruleCLOSE_SQARE_BRACKETS
	{ after(grammarAccess.getAttributeReferenceAccess().getCLOSE_SQARE_BRACKETSParserRuleCall_0_4_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeIndex__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeIndex__Group_0__0__Impl
	rule__AttributeIndex__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_0_0()); }
	()
	{ after(grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeIndex__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_0_1()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeIndex__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeIndex__Group_1__0__Impl
	rule__AttributeIndex__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_1_0()); }
	()
	{ after(grammarAccess.getAttributeIndexAccess().getAttributeIndexAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeIndex__Group_1__1__Impl
	rule__AttributeIndex__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeIndexAccess().getLASTParserRuleCall_1_1()); }
	ruleLAST
	{ after(grammarAccess.getAttributeIndexAccess().getLASTParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeIndex__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeIndexAccess().getGroup_1_2()); }
	(rule__AttributeIndex__Group_1_2__0)?
	{ after(grammarAccess.getAttributeIndexAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeIndex__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeIndex__Group_1_2__0__Impl
	rule__AttributeIndex__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeIndexAccess().getHyphenMinusKeyword_1_2_0()); }
	HyphenMinus
	{ after(grammarAccess.getAttributeIndexAccess().getHyphenMinusKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeIndex__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIndex__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_1_2_1()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getAttributeIndexAccess().getINT_LITERALParserRuleCall_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardStatefulSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStatefulSource__Group__0__Impl
	rule__StandardStatefulSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStatefulSourceAccess().getStandardStatefulSourceAction_0()); }
	()
	{ after(grammarAccess.getStandardStatefulSourceAccess().getStandardStatefulSourceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStatefulSource__Group__1__Impl
	rule__StandardStatefulSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStatefulSourceAccess().getGroup_1()); }
	(rule__StandardStatefulSource__Group_1__0)?
	{ after(grammarAccess.getStandardStatefulSourceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStatefulSource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStatefulSourceAccess().getBsAssignment_2()); }
	(rule__StandardStatefulSource__BsAssignment_2)
	{ after(grammarAccess.getStandardStatefulSourceAccess().getBsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardStatefulSource__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStatefulSource__Group_1__0__Impl
	rule__StandardStatefulSource__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStatefulSourceAccess().getNameAssignment_1_0()); }
	(rule__StandardStatefulSource__NameAssignment_1_0)
	{ after(grammarAccess.getStandardStatefulSourceAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardStatefulSource__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardStatefulSourceAccess().getEqualsSignKeyword_1_1()); }
	EqualsSign
	{ after(grammarAccess.getStandardStatefulSourceAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSource__Group__0__Impl
	rule__BasicSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceAccess().getSrcAssignment_0()); }
	(rule__BasicSource__SrcAssignment_0)
	{ after(grammarAccess.getBasicSourceAccess().getSrcAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicSourceAccess().getBasic_ss_handlersAssignment_1()); }
	(rule__BasicSource__Basic_ss_handlersAssignment_1)?
	{ after(grammarAccess.getBasicSourceAccess().getBasic_ss_handlersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_0__0__Impl
	rule__ConstantValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getConstantValueAction_0_0()); }
	()
	{ after(grammarAccess.getConstantValueAccess().getConstantValueAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getBvAssignment_0_1()); }
	(rule__ConstantValue__BvAssignment_0_1)
	{ after(grammarAccess.getConstantValueAccess().getBvAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_1__0__Impl
	rule__ConstantValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getConstantValueAction_1_0()); }
	()
	{ after(grammarAccess.getConstantValueAccess().getConstantValueAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getSdvAssignment_1_1()); }
	(rule__ConstantValue__SdvAssignment_1_1)
	{ after(grammarAccess.getConstantValueAccess().getSdvAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_2__0__Impl
	rule__ConstantValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getConstantValueAction_2_0()); }
	()
	{ after(grammarAccess.getConstantValueAccess().getConstantValueAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getSfvAssignment_2_1()); }
	(rule__ConstantValue__SfvAssignment_2_1)
	{ after(grammarAccess.getConstantValueAccess().getSfvAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_3__0__Impl
	rule__ConstantValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getConstantValueAction_3_0()); }
	()
	{ after(grammarAccess.getConstantValueAccess().getConstantValueAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getSlvAssignment_3_1()); }
	(rule__ConstantValue__SlvAssignment_3_1)
	{ after(grammarAccess.getConstantValueAccess().getSlvAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_4__0__Impl
	rule__ConstantValue__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getConstantValueAction_4_0()); }
	()
	{ after(grammarAccess.getConstantValueAccess().getConstantValueAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getSivAssignment_4_1()); }
	(rule__ConstantValue__SivAssignment_4_1)
	{ after(grammarAccess.getConstantValueAccess().getSivAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_5__0__Impl
	rule__ConstantValue__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getConstantValueAction_5_0()); }
	()
	{ after(grammarAccess.getConstantValueAccess().getConstantValueAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getTvAssignment_5_1()); }
	(rule__ConstantValue__TvAssignment_5_1)
	{ after(grammarAccess.getConstantValueAccess().getTvAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_6__0__Impl
	rule__ConstantValue__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getConstantValueAction_6_0()); }
	()
	{ after(grammarAccess.getConstantValueAccess().getConstantValueAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantValue__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantValueAccess().getSvAssignment_6_1()); }
	(rule__ConstantValue__SvAssignment_6_1)
	{ after(grammarAccess.getConstantValueAccess().getSvAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source1__Group__0__Impl
	rule__Source1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource1Access().getInnerAssignment_0()); }
	(rule__Source1__InnerAssignment_0)?
	{ after(grammarAccess.getSource1Access().getInnerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource1Access().getNameAssignment_1()); }
	(rule__Source1__NameAssignment_1)
	{ after(grammarAccess.getSource1Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedDoubleValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedDoubleValue__Group__0__Impl
	rule__SignedDoubleValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedDoubleValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedDoubleValueAccess().getAlternatives_0()); }
	(rule__SignedDoubleValue__Alternatives_0)?
	{ after(grammarAccess.getSignedDoubleValueAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedDoubleValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedDoubleValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedDoubleValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedDoubleValueAccess().getDOUBLE_LITERALParserRuleCall_1()); }
	ruleDOUBLE_LITERAL
	{ after(grammarAccess.getSignedDoubleValueAccess().getDOUBLE_LITERALParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedFloatValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedFloatValue__Group__0__Impl
	rule__SignedFloatValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedFloatValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedFloatValueAccess().getAlternatives_0()); }
	(rule__SignedFloatValue__Alternatives_0)?
	{ after(grammarAccess.getSignedFloatValueAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedFloatValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedFloatValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedFloatValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedFloatValueAccess().getFLOAT_LITERALParserRuleCall_1()); }
	ruleFLOAT_LITERAL
	{ after(grammarAccess.getSignedFloatValueAccess().getFLOAT_LITERALParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedLongValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedLongValue__Group__0__Impl
	rule__SignedLongValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedLongValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedLongValueAccess().getAlternatives_0()); }
	(rule__SignedLongValue__Alternatives_0)?
	{ after(grammarAccess.getSignedLongValueAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedLongValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedLongValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedLongValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedLongValueAccess().getLONG_LITERALParserRuleCall_1()); }
	ruleLONG_LITERAL
	{ after(grammarAccess.getSignedLongValueAccess().getLONG_LITERALParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__0__Impl
	rule__TimeValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getYvAssignment_0_0()); }
	(rule__TimeValue__YvAssignment_0_0)
	{ after(grammarAccess.getTimeValueAccess().getYvAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__1__Impl
	rule__TimeValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMvAssignment_0_1()); }
	(rule__TimeValue__MvAssignment_0_1)?
	{ after(grammarAccess.getTimeValueAccess().getMvAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__2__Impl
	rule__TimeValue__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getWvAssignment_0_2()); }
	(rule__TimeValue__WvAssignment_0_2)?
	{ after(grammarAccess.getTimeValueAccess().getWvAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__3__Impl
	rule__TimeValue__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getDvAssignment_0_3()); }
	(rule__TimeValue__DvAssignment_0_3)?
	{ after(grammarAccess.getTimeValueAccess().getDvAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__4__Impl
	rule__TimeValue__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getHvAssignment_0_4()); }
	(rule__TimeValue__HvAssignment_0_4)?
	{ after(grammarAccess.getTimeValueAccess().getHvAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__5__Impl
	rule__TimeValue__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMinvAssignment_0_5()); }
	(rule__TimeValue__MinvAssignment_0_5)?
	{ after(grammarAccess.getTimeValueAccess().getMinvAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__6__Impl
	rule__TimeValue__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getSecvAssignment_0_6()); }
	(rule__TimeValue__SecvAssignment_0_6)?
	{ after(grammarAccess.getTimeValueAccess().getSecvAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_0_7()); }
	(rule__TimeValue__MsecvAssignment_0_7)?
	{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_1__0__Impl
	rule__TimeValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMvAssignment_1_0()); }
	(rule__TimeValue__MvAssignment_1_0)
	{ after(grammarAccess.getTimeValueAccess().getMvAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_1__1__Impl
	rule__TimeValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getWvAssignment_1_1()); }
	(rule__TimeValue__WvAssignment_1_1)?
	{ after(grammarAccess.getTimeValueAccess().getWvAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_1__2__Impl
	rule__TimeValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getDvAssignment_1_2()); }
	(rule__TimeValue__DvAssignment_1_2)?
	{ after(grammarAccess.getTimeValueAccess().getDvAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_1__3__Impl
	rule__TimeValue__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getHvAssignment_1_3()); }
	(rule__TimeValue__HvAssignment_1_3)?
	{ after(grammarAccess.getTimeValueAccess().getHvAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_1__4__Impl
	rule__TimeValue__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMinvAssignment_1_4()); }
	(rule__TimeValue__MinvAssignment_1_4)?
	{ after(grammarAccess.getTimeValueAccess().getMinvAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_1__5__Impl
	rule__TimeValue__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getSecvAssignment_1_5()); }
	(rule__TimeValue__SecvAssignment_1_5)?
	{ after(grammarAccess.getTimeValueAccess().getSecvAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_1_6()); }
	(rule__TimeValue__MsecvAssignment_1_6)?
	{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_2__0__Impl
	rule__TimeValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getWvAssignment_2_0()); }
	(rule__TimeValue__WvAssignment_2_0)
	{ after(grammarAccess.getTimeValueAccess().getWvAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_2__1__Impl
	rule__TimeValue__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getDvAssignment_2_1()); }
	(rule__TimeValue__DvAssignment_2_1)?
	{ after(grammarAccess.getTimeValueAccess().getDvAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_2__2__Impl
	rule__TimeValue__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getHvAssignment_2_2()); }
	(rule__TimeValue__HvAssignment_2_2)?
	{ after(grammarAccess.getTimeValueAccess().getHvAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_2__3__Impl
	rule__TimeValue__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMinvAssignment_2_3()); }
	(rule__TimeValue__MinvAssignment_2_3)?
	{ after(grammarAccess.getTimeValueAccess().getMinvAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_2__4__Impl
	rule__TimeValue__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getSecvAssignment_2_4()); }
	(rule__TimeValue__SecvAssignment_2_4)?
	{ after(grammarAccess.getTimeValueAccess().getSecvAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_2_5()); }
	(rule__TimeValue__MsecvAssignment_2_5)?
	{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_3__0__Impl
	rule__TimeValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getDvAssignment_3_0()); }
	(rule__TimeValue__DvAssignment_3_0)
	{ after(grammarAccess.getTimeValueAccess().getDvAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_3__1__Impl
	rule__TimeValue__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getHvAssignment_3_1()); }
	(rule__TimeValue__HvAssignment_3_1)?
	{ after(grammarAccess.getTimeValueAccess().getHvAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_3__2__Impl
	rule__TimeValue__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMinvAssignment_3_2()); }
	(rule__TimeValue__MinvAssignment_3_2)?
	{ after(grammarAccess.getTimeValueAccess().getMinvAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_3__3__Impl
	rule__TimeValue__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getSecvAssignment_3_3()); }
	(rule__TimeValue__SecvAssignment_3_3)?
	{ after(grammarAccess.getTimeValueAccess().getSecvAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_3_4()); }
	(rule__TimeValue__MsecvAssignment_3_4)?
	{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_4__0__Impl
	rule__TimeValue__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getHvAssignment_4_0()); }
	(rule__TimeValue__HvAssignment_4_0)
	{ after(grammarAccess.getTimeValueAccess().getHvAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_4__1__Impl
	rule__TimeValue__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMinvAssignment_4_1()); }
	(rule__TimeValue__MinvAssignment_4_1)?
	{ after(grammarAccess.getTimeValueAccess().getMinvAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_4__2__Impl
	rule__TimeValue__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getSecvAssignment_4_2()); }
	(rule__TimeValue__SecvAssignment_4_2)?
	{ after(grammarAccess.getTimeValueAccess().getSecvAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_4_3()); }
	(rule__TimeValue__MsecvAssignment_4_3)?
	{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_5__0__Impl
	rule__TimeValue__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMinvAssignment_5_0()); }
	(rule__TimeValue__MinvAssignment_5_0)
	{ after(grammarAccess.getTimeValueAccess().getMinvAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_5__1__Impl
	rule__TimeValue__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getSecvAssignment_5_1()); }
	(rule__TimeValue__SecvAssignment_5_1)?
	{ after(grammarAccess.getTimeValueAccess().getSecvAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_5_2()); }
	(rule__TimeValue__MsecvAssignment_5_2)?
	{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_6__0__Impl
	rule__TimeValue__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getSvAssignment_6_0()); }
	(rule__TimeValue__SvAssignment_6_0)
	{ after(grammarAccess.getTimeValueAccess().getSvAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getMsecvAssignment_6_1()); }
	(rule__TimeValue__MsecvAssignment_6_1)?
	{ after(grammarAccess.getTimeValueAccess().getMsecvAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__YearValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YearValue__Group__0__Impl
	rule__YearValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YearValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYearValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getYearValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__YearValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YearValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YearValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYearValueAccess().getYEARSParserRuleCall_1()); }
	ruleYEARS
	{ after(grammarAccess.getYearValueAccess().getYEARSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonthValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonthValue__Group__0__Impl
	rule__MonthValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonthValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonthValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getMonthValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonthValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonthValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonthValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonthValueAccess().getMONTHSParserRuleCall_1()); }
	ruleMONTHS
	{ after(grammarAccess.getMonthValueAccess().getMONTHSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WeekValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekValue__Group__0__Impl
	rule__WeekValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getWeekValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekValueAccess().getWEEKSParserRuleCall_1()); }
	ruleWEEKS
	{ after(grammarAccess.getWeekValueAccess().getWEEKSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DayValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DayValue__Group__0__Impl
	rule__DayValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DayValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDayValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getDayValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DayValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DayValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DayValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDayValueAccess().getDAYSParserRuleCall_1()); }
	ruleDAYS
	{ after(grammarAccess.getDayValueAccess().getDAYSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HourValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HourValue__Group__0__Impl
	rule__HourValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HourValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHourValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getHourValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HourValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HourValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HourValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHourValueAccess().getHOURSParserRuleCall_1()); }
	ruleHOURS
	{ after(grammarAccess.getHourValueAccess().getHOURSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinuteValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinuteValue__Group__0__Impl
	rule__MinuteValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinuteValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinuteValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getMinuteValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinuteValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinuteValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinuteValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinuteValueAccess().getMINUTESParserRuleCall_1()); }
	ruleMINUTES
	{ after(grammarAccess.getMinuteValueAccess().getMINUTESParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SecondValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SecondValue__Group__0__Impl
	rule__SecondValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSecondValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getSecondValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SecondValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSecondValueAccess().getSECONDSParserRuleCall_1()); }
	ruleSECONDS
	{ after(grammarAccess.getSecondValueAccess().getSECONDSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MillisecondValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MillisecondValue__Group__0__Impl
	rule__MillisecondValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MillisecondValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMillisecondValueAccess().getINT_LITERALParserRuleCall_0()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getMillisecondValueAccess().getINT_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MillisecondValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MillisecondValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MillisecondValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMillisecondValueAccess().getMILLISECONDSParserRuleCall_1()); }
	ruleMILLISECONDS
	{ after(grammarAccess.getMillisecondValueAccess().getMILLISECONDSParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedIntValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedIntValue__Group__0__Impl
	rule__SignedIntValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntValueAccess().getAlternatives_0()); }
	(rule__SignedIntValue__Alternatives_0)?
	{ after(grammarAccess.getSignedIntValueAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedIntValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntValueAccess().getINT_LITERALParserRuleCall_1()); }
	ruleINT_LITERAL
	{ after(grammarAccess.getSignedIntValueAccess().getINT_LITERALParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0_0()); }
	(rule__DOUBLE_LITERAL__Group_0_0__0)
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0__0__Impl
	rule__DOUBLE_LITERAL__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_0_0_0()); }
	()
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0__1__Impl
	rule__DOUBLE_LITERAL__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
		(ruleDIGIT)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
	)
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0__2__Impl
	rule__DOUBLE_LITERAL__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0_0_2()); }
	(rule__DOUBLE_LITERAL__Group_0_0_2__0)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0__3__Impl
	rule__DOUBLE_LITERAL__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0_0_3()); }
	(rule__DOUBLE_LITERAL__Group_0_0_3__0)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDAssignment_0_0_4()); }
	(rule__DOUBLE_LITERAL__DAssignment_0_0_4)
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDAssignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0_2__0__Impl
	rule__DOUBLE_LITERAL__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_0_0_2_0()); }
	FullStop
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_2_1()); }
	(ruleDIGIT)*
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_0_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0_3__0__Impl
	rule__DOUBLE_LITERAL__Group_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getEAssignment_0_0_3_0()); }
	(rule__DOUBLE_LITERAL__EAssignment_0_0_3_0)
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getEAssignment_0_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0_3__1__Impl
	rule__DOUBLE_LITERAL__Group_0_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives_0_0_3_1()); }
	(rule__DOUBLE_LITERAL__Alternatives_0_0_3_1)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives_0_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_0_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_0_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
		(ruleDIGIT)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
	)
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1__0__Impl
	rule__DOUBLE_LITERAL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_1_0()); }
	()
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1__1__Impl
	rule__DOUBLE_LITERAL__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_1()); }
		(ruleDIGIT)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_1()); }
	)
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_1()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1__2__Impl
	rule__DOUBLE_LITERAL__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_1_2()); }
	(rule__DOUBLE_LITERAL__Group_1_2__0)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1__3__Impl
	rule__DOUBLE_LITERAL__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getEAssignment_1_3()); }
	(rule__DOUBLE_LITERAL__EAssignment_1_3)
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getEAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1__4__Impl
	rule__DOUBLE_LITERAL__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives_1_4()); }
	(rule__DOUBLE_LITERAL__Alternatives_1_4)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1__5__Impl
	rule__DOUBLE_LITERAL__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_5()); }
		(ruleDIGIT)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_5()); }
	)
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_5()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDAssignment_1_6()); }
	(rule__DOUBLE_LITERAL__DAssignment_1_6)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1_2__0__Impl
	rule__DOUBLE_LITERAL__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_1_2_0()); }
	FullStop
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_2_1()); }
	(ruleDIGIT)*
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_2_0()); }
	(rule__DOUBLE_LITERAL__Group_2_0__0)
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0__0__Impl
	rule__DOUBLE_LITERAL__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_2_0_0()); }
	()
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDOUBLE_LITERALAction_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0__1__Impl
	rule__DOUBLE_LITERAL__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_1()); }
	(ruleDIGIT)*
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0__2__Impl
	rule__DOUBLE_LITERAL__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_2_0_2()); }
	FullStop
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getFullStopKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0__3__Impl
	rule__DOUBLE_LITERAL__Group_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_3()); }
		(ruleDIGIT)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_3()); }
	)
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_3()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0__4__Impl
	rule__DOUBLE_LITERAL__Group_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getGroup_2_0_4()); }
	(rule__DOUBLE_LITERAL__Group_2_0_4__0)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getGroup_2_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getDAssignment_2_0_5()); }
	(rule__DOUBLE_LITERAL__DAssignment_2_0_5)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getDAssignment_2_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_LITERAL__Group_2_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0_4__0__Impl
	rule__DOUBLE_LITERAL__Group_2_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getEAssignment_2_0_4_0()); }
	(rule__DOUBLE_LITERAL__EAssignment_2_0_4_0)
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getEAssignment_2_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0_4__1__Impl
	rule__DOUBLE_LITERAL__Group_2_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives_2_0_4_1()); }
	(rule__DOUBLE_LITERAL__Alternatives_2_0_4_1)?
	{ after(grammarAccess.getDOUBLE_LITERALAccess().getAlternatives_2_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_LITERAL__Group_2_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__Group_2_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_4_2()); }
		(ruleDIGIT)
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_4_2()); }
	)
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_4_2()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDIGITParserRuleCall_2_0_4_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getGroup_0_0()); }
	(rule__FLOAT_LITERAL__Group_0_0__0)
	{ after(grammarAccess.getFLOAT_LITERALAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0__0__Impl
	rule__FLOAT_LITERAL__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_0_0_0()); }
	()
	{ after(grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0__1__Impl
	rule__FLOAT_LITERAL__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
		(ruleDIGIT)
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
	)
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0__2__Impl
	rule__FLOAT_LITERAL__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getGroup_0_0_2()); }
	(rule__FLOAT_LITERAL__Group_0_0_2__0)?
	{ after(grammarAccess.getFLOAT_LITERALAccess().getGroup_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0__3__Impl
	rule__FLOAT_LITERAL__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getGroup_0_0_3()); }
	(rule__FLOAT_LITERAL__Group_0_0_3__0)?
	{ after(grammarAccess.getFLOAT_LITERALAccess().getGroup_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getFAssignment_0_0_4()); }
	(rule__FLOAT_LITERAL__FAssignment_0_0_4)
	{ after(grammarAccess.getFLOAT_LITERALAccess().getFAssignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0_2__0__Impl
	rule__FLOAT_LITERAL__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_0_0_2_0()); }
	FullStop
	{ after(grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_2_1()); }
	(ruleDIGIT)*
	{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group_0_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0_3__0__Impl
	rule__FLOAT_LITERAL__Group_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getEAssignment_0_0_3_0()); }
	(rule__FLOAT_LITERAL__EAssignment_0_0_3_0)
	{ after(grammarAccess.getFLOAT_LITERALAccess().getEAssignment_0_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0_3__1__Impl
	rule__FLOAT_LITERAL__Group_0_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getAlternatives_0_0_3_1()); }
	(rule__FLOAT_LITERAL__Alternatives_0_0_3_1)?
	{ after(grammarAccess.getFLOAT_LITERALAccess().getAlternatives_0_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_0_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_0_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
		(ruleDIGIT)
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
	)
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_0_0_3_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1__0__Impl
	rule__FLOAT_LITERAL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_1_0()); }
	()
	{ after(grammarAccess.getFLOAT_LITERALAccess().getFLOAT_LITERALAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1__1__Impl
	rule__FLOAT_LITERAL__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_1()); }
	(ruleDIGIT)*
	{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1__2__Impl
	rule__FLOAT_LITERAL__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_1_2()); }
	FullStop
	{ after(grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1__3__Impl
	rule__FLOAT_LITERAL__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_3()); }
		(ruleDIGIT)
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_3()); }
	)
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_3()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1__4__Impl
	rule__FLOAT_LITERAL__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getGroup_1_4()); }
	(rule__FLOAT_LITERAL__Group_1_4__0)?
	{ after(grammarAccess.getFLOAT_LITERALAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getFAssignment_1_5()); }
	(rule__FLOAT_LITERAL__FAssignment_1_5)
	{ after(grammarAccess.getFLOAT_LITERALAccess().getFAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1_4__0__Impl
	rule__FLOAT_LITERAL__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getEAssignment_1_4_0()); }
	(rule__FLOAT_LITERAL__EAssignment_1_4_0)
	{ after(grammarAccess.getFLOAT_LITERALAccess().getEAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1_4__1__Impl
	rule__FLOAT_LITERAL__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITERALAccess().getAlternatives_1_4_1()); }
	(rule__FLOAT_LITERAL__Alternatives_1_4_1)?
	{ after(grammarAccess.getFLOAT_LITERALAccess().getAlternatives_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LITERAL__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_4_2()); }
		(ruleDIGIT)
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_4_2()); }
	)
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_4_2()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getFLOAT_LITERALAccess().getDIGITParserRuleCall_1_4_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LONG_LITERAL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LONG_LITERAL__Group__0__Impl
	rule__LONG_LITERAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG_LITERAL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLONG_LITERALAccess().getDIGITParserRuleCall_0()); }
		(ruleDIGIT)
		{ after(grammarAccess.getLONG_LITERALAccess().getDIGITParserRuleCall_0()); }
	)
	(
		{ before(grammarAccess.getLONG_LITERALAccess().getDIGITParserRuleCall_0()); }
		(ruleDIGIT)*
		{ after(grammarAccess.getLONG_LITERALAccess().getDIGITParserRuleCall_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG_LITERAL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LONG_LITERAL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG_LITERAL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLONG_LITERALAccess().getLAssignment_1()); }
	(rule__LONG_LITERAL__LAssignment_1)
	{ after(grammarAccess.getLONG_LITERALAccess().getLAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SiddhiQL__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSiddhiQLAccess().getElementsExecutionPlanParserRuleCall_0()); }
		ruleExecutionPlan
		{ after(grammarAccess.getSiddhiQLAccess().getElementsExecutionPlanParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__AppAnnAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getAppAnnAppAnnotationParserRuleCall_0_0()); }
		ruleAppAnnotation
		{ after(grammarAccess.getExecutionPlanAccess().getAppAnnAppAnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefStreamAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_0_0_0()); }
		ruleDefinitionStream
		{ after(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefTableAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_0_1_0()); }
		ruleDefinitionTable
		{ after(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Def_windowAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_0_2_0()); }
		ruleDefinitionWindow
		{ after(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefTriggerAssignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_0_3_0()); }
		ruleDefinitionTrigger
		{ after(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefFunctionAssignment_1_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_0_4_0()); }
		ruleDefinitionFunction
		{ after(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefAgrregationAssignment_1_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefAgrregationDefinitionAggregationParserRuleCall_1_0_5_0()); }
		ruleDefinitionAggregation
		{ after(grammarAccess.getExecutionPlanAccess().getDefAgrregationDefinitionAggregationParserRuleCall_1_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefStreamAssignment_1_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_1_0_1_0_0()); }
		ruleDefinitionStream
		{ after(grammarAccess.getExecutionPlanAccess().getDefStreamDefinitionStreamParserRuleCall_1_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefTableAssignment_1_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_1_0_1_1_0()); }
		ruleDefinitionTable
		{ after(grammarAccess.getExecutionPlanAccess().getDefTableDefinitionTableParserRuleCall_1_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__Def_windowAssignment_1_1_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_1_0_1_2_0()); }
		ruleDefinitionWindow
		{ after(grammarAccess.getExecutionPlanAccess().getDef_windowDefinitionWindowParserRuleCall_1_1_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefTriggerAssignment_1_1_0_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_1_0_1_3_0()); }
		ruleDefinitionTrigger
		{ after(grammarAccess.getExecutionPlanAccess().getDefTriggerDefinitionTriggerParserRuleCall_1_1_0_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefFunctionAssignment_1_1_0_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_1_0_1_4_0()); }
		ruleDefinitionFunction
		{ after(grammarAccess.getExecutionPlanAccess().getDefFunctionDefinitionFunctionParserRuleCall_1_1_0_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__DefAgrregationAssignment_1_1_0_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getDefAgrregationDefinitionAggregationParserRuleCall_1_1_0_1_5_0()); }
		ruleDefinitionAggregation
		{ after(grammarAccess.getExecutionPlanAccess().getDefAgrregationDefinitionAggregationParserRuleCall_1_1_0_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionPlan__ExElementAssignment_1_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionPlanAccess().getExElementExecutionElementParserRuleCall_1_2_0_1_0()); }
		ruleExecutionElement
		{ after(grammarAccess.getExecutionPlanAccess().getExElementExecutionElementParserRuleCall_1_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionElement__ExecPartitionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionElementAccess().getExecPartitionExecPartitionParserRuleCall_0_0_0()); }
		ruleExecPartition
		{ after(grammarAccess.getExecutionElementAccess().getExecPartitionExecPartitionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionElement__QueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionElementAccess().getQueQueryParserRuleCall_1_0_0()); }
		ruleQuery
		{ after(grammarAccess.getExecutionElementAccess().getQueQueryParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__AnnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionStreamAccess().getAnnAnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getDefinitionStreamAccess().getAnnAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__SrcAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionStreamAccess().getSrcSource1ParserRuleCall_4_0()); }
		ruleSource1
		{ after(grammarAccess.getDefinitionStreamAccess().getSrcSource1ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__FeatureAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_6_0()); }
		ruleFeatures
		{ after(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStream__FeatureAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_7_1_0()); }
		ruleFeatures
		{ after(grammarAccess.getDefinitionStreamAccess().getFeatureFeaturesParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__Ann1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTableAccess().getAnn1AnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getDefinitionTableAccess().getAnn1AnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__SrcAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTableAccess().getSrcSource1ParserRuleCall_4_0()); }
		ruleSource1
		{ after(grammarAccess.getDefinitionTableAccess().getSrcSource1ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__FeatureAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_6_0()); }
		ruleFeatures
		{ after(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTable__FeatureAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_7_1_0()); }
		ruleFeatures
		{ after(grammarAccess.getDefinitionTableAccess().getFeatureFeaturesParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__Ann2Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionWindowAccess().getAnn2AnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getDefinitionWindowAccess().getAnn2AnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__SrcAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionWindowAccess().getSrcSource1ParserRuleCall_4_0()); }
		ruleSource1
		{ after(grammarAccess.getDefinitionWindowAccess().getSrcSource1ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__FeatureAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_6_0()); }
		ruleFeatures
		{ after(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__FeatureAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_7_1_0()); }
		ruleFeatures
		{ after(grammarAccess.getDefinitionWindowAccess().getFeatureFeaturesParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__FuncOpAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionWindowAccess().getFuncOpFunctionOperationParserRuleCall_9_0()); }
		ruleFunctionOperation
		{ after(grammarAccess.getDefinitionWindowAccess().getFuncOpFunctionOperationParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionWindow__OpEventTypeAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionWindowAccess().getOpEventTypeOutputEventTypeParserRuleCall_10_1_0()); }
		ruleOutputEventType
		{ after(grammarAccess.getDefinitionWindowAccess().getOpEventTypeOutputEventTypeParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__TnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTriggerAccess().getTnTriggerNameParserRuleCall_2_0()); }
		ruleTriggerName
		{ after(grammarAccess.getDefinitionTriggerAccess().getTnTriggerNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__EveryAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTriggerAccess().getEveryEVERYParserRuleCall_4_0_0_0()); }
		ruleEVERY
		{ after(grammarAccess.getDefinitionTriggerAccess().getEveryEVERYParserRuleCall_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__TvAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTriggerAccess().getTvTimeValueParserRuleCall_4_0_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getDefinitionTriggerAccess().getTvTimeValueParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionTrigger__SvAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionTriggerAccess().getSvStringValueParserRuleCall_4_1_0()); }
		ruleStringValue
		{ after(grammarAccess.getDefinitionTriggerAccess().getSvStringValueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__FnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionFunctionAccess().getFnFunctionNameParserRuleCall_2_0()); }
		ruleFunctionName
		{ after(grammarAccess.getDefinitionFunctionAccess().getFnFunctionNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__LnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionFunctionAccess().getLnLanguageNameParserRuleCall_4_0()); }
		ruleLanguageName
		{ after(grammarAccess.getDefinitionFunctionAccess().getLnLanguageNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Attr_typeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionFunctionAccess().getAttr_typeAttributeTypeParserRuleCall_7_0()); }
		ruleAttributeType
		{ after(grammarAccess.getDefinitionFunctionAccess().getAttr_typeAttributeTypeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFunction__Func_bodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionFunctionAccess().getFunc_bodyFunctionBodyParserRuleCall_8_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getDefinitionFunctionAccess().getFunc_bodyFunctionBodyParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__AnnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getAnnAnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getDefinitionAggregationAccess().getAnnAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__SrcAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getSrcSource1ParserRuleCall_4_0()); }
		ruleSource1
		{ after(grammarAccess.getDefinitionAggregationAccess().getSrcSource1ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__StdStreamAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getStdStreamStandardStreamParserRuleCall_6_0()); }
		ruleStandardStream
		{ after(grammarAccess.getDefinitionAggregationAccess().getStdStreamStandardStreamParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__GroupByQuerySelAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getGroupByQuerySelGroupByQuerySelectionParserRuleCall_7_0()); }
		ruleGroupByQuerySelection
		{ after(grammarAccess.getDefinitionAggregationAccess().getGroupByQuerySelGroupByQuerySelectionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__AttrRefAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getAttrRefAttributeReferenceParserRuleCall_9_1_0()); }
		ruleAttributeReference
		{ after(grammarAccess.getDefinitionAggregationAccess().getAttrRefAttributeReferenceParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__EveAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getEveEVERYParserRuleCall_10_0()); }
		ruleEVERY
		{ after(grammarAccess.getDefinitionAggregationAccess().getEveEVERYParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionAggregation__AggrTimeAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAggregationAccess().getAggrTimeAggregationTimeParserRuleCall_11_0()); }
		ruleAggregationTime
		{ after(grammarAccess.getDefinitionAggregationAccess().getAggrTimeAggregationTimeParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__AggrtimeDurAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0()); }
		ruleAggregationTimeDuration
		{ after(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation_time_interval__AggrtimeDurAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_1_1_0()); }
		ruleAggregationTimeDuration
		{ after(grammarAccess.getAggregation_time_intervalAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeRange__AggrtimeDurAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0()); }
		ruleAggregationTimeDuration
		{ after(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationTimeRange__AggrtimeDurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_2_0()); }
		ruleAggregationTimeDuration
		{ after(grammarAccess.getAggregationTimeRangeAccess().getAggrtimeDurAggregationTimeDurationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIdIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionNameAccess().getIdIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageNameAccess().getIdIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageNameAccess().getIdIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getValueSCRIPTTerminalRuleCall_0()); }
		RULE_SCRIPT
		{ after(grammarAccess.getFunctionBodyAccess().getValueSCRIPTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerNameAccess().getIdIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getTriggerNameAccess().getIdIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__NaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAnnotationAccess().getNaNameParserRuleCall_3_0()); }
		ruleName
		{ after(grammarAccess.getAppAnnotationAccess().getNaNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Ann5Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_1_0()); }
		ruleAnnotationElement
		{ after(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppAnnotation__Ann5Assignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_2_1_0()); }
		ruleAnnotationElement
		{ after(grammarAccess.getAppAnnotationAccess().getAnn5AnnotationElementParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getNaNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getAnnotationAccess().getNaNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnElementAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_1_0_0()); }
		ruleAnnotationElement
		{ after(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_1_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnElementAssignment_2_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_2_1_0_0()); }
		ruleAnnotationElement
		{ after(grammarAccess.getAnnotationAccess().getAnnElementAnnotationElementParserRuleCall_2_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnAssignment_2_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_2_1_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getAnnotationAccess().getAnnAnnotationParserRuleCall_2_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__PropNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationElementAccess().getPropNamePropertyNameParserRuleCall_0_0_0()); }
		rulePropertyName
		{ after(grammarAccess.getAnnotationElementAccess().getPropNamePropertyNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationElement__PropValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationElementAccess().getPropValPropertyValueParserRuleCall_1_0()); }
		rulePropertyValue
		{ after(grammarAccess.getAnnotationElementAccess().getPropValPropertyValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__SvAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyValueAccess().getSvStringValueParserRuleCall_0()); }
		ruleStringValue
		{ after(grammarAccess.getPropertyValueAccess().getSvStringValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__NaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyNameAccess().getNaNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getPropertyNameAccess().getNaNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__PsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyNameAccess().getPsPropertySeparatorParserRuleCall_2_0_0()); }
		rulePropertySeparator
		{ after(grammarAccess.getPropertyNameAccess().getPsPropertySeparatorParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__NaAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyNameAccess().getNaNameParserRuleCall_2_1_0()); }
		ruleName
		{ after(grammarAccess.getPropertyNameAccess().getNaNameParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeaturesAccess().getNameIdNewParserRuleCall_0_0()); }
		ruleIdNew
		{ after(grammarAccess.getFeaturesAccess().getNameIdNewParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeaturesAccess().getTypeAttributeTypeParserRuleCall_1_0()); }
		ruleAttributeType
		{ after(grammarAccess.getFeaturesAccess().getTypeAttributeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__Ann4Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecPartitionAccess().getAnn4AnnotationParserRuleCall_0_0()); }
		ruleAnnotation
		{ after(grammarAccess.getExecPartitionAccess().getAnn4AnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__PartWithStreamAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_4_0()); }
		rulePartitionWithStream
		{ after(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__PartWithStreamAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_5_1_0()); }
		rulePartitionWithStream
		{ after(grammarAccess.getExecPartitionAccess().getPartWithStreamPartitionWithStreamParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__QuAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_8_0()); }
		ruleQuery
		{ after(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecPartition__QuAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_9_0()); }
		ruleQuery
		{ after(grammarAccess.getExecPartitionAccess().getQuQueryParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionWithStream__OfAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartitionWithStreamAccess().getOfOFParserRuleCall_1_0()); }
		ruleOF
		{ after(grammarAccess.getPartitionWithStreamAccess().getOfOFParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionWithStream__Str_id2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartitionWithStreamAccess().getStr_id2SourceParserRuleCall_2_0()); }
		ruleSource
		{ after(grammarAccess.getPartitionWithStreamAccess().getStr_id2SourceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__ConRangeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_0_0()); }
		ruleConditionRange
		{ after(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__OrAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionRangesAccess().getOrORParserRuleCall_1_0_0()); }
		ruleOR
		{ after(grammarAccess.getConditionRangesAccess().getOrORParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRanges__ConRangeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_1_1_0()); }
		ruleConditionRange
		{ after(grammarAccess.getConditionRangesAccess().getConRangeConditionRangeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__ExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionRangeAccess().getExprExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionRangeAccess().getExprExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__AAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionRangeAccess().getAASParserRuleCall_1_0()); }
		ruleAS
		{ after(grammarAccess.getConditionRangeAccess().getAASParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionRange__SvAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionRangeAccess().getSvStringValueParserRuleCall_2_0()); }
		ruleStringValue
		{ after(grammarAccess.getConditionRangeAccess().getSvStringValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Ann3Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getAnn3AnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getQueryAccess().getAnn3AnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__QInpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getQInpQueryInputParserRuleCall_3_0()); }
		ruleQueryInput
		{ after(grammarAccess.getQueryAccess().getQInpQueryInputParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__QuerySecAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getQuerySecQuerySectionParserRuleCall_4_0()); }
		ruleQuerySection
		{ after(grammarAccess.getQueryAccess().getQuerySecQuerySectionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__OutRateAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getOutRateOutputRateParserRuleCall_5_0()); }
		ruleOutputRate
		{ after(grammarAccess.getQueryAccess().getOutRateOutputRateParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__QOutputAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getQOutputQueryOutputParserRuleCall_6_0()); }
		ruleQueryOutput
		{ after(grammarAccess.getQueryAccess().getQOutputQueryOutputParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__JsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryInputAccess().getJsJoinStreamParserRuleCall_1_0_0()); }
		ruleJoinStream
		{ after(grammarAccess.getQueryInputAccess().getJsJoinStreamParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__SeqSrcChaninAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryInputAccess().getSeqSrcChaninSequenceStreamParserRuleCall_1_1_0()); }
		ruleSequenceStream
		{ after(grammarAccess.getQueryInputAccess().getSeqSrcChaninSequenceStreamParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__PsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryInputAccess().getPsPatternStreamParserRuleCall_1_2_0()); }
		rulePatternStream
		{ after(grammarAccess.getQueryInputAccess().getPsPatternStreamParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryInput__AnonStreamAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryInputAccess().getAnonStreamAnonymousStreamParserRuleCall_1_3_0()); }
		ruleAnonymousStream
		{ after(grammarAccess.getQueryInputAccess().getAnonStreamAnonymousStreamParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Left_sourceAssignment_0_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_0_0_0_0_0()); }
		ruleJoinSource
		{ after(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_0_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Right_sourceAssignment_0_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_0_0_0_1_0()); }
		ruleJoinSource
		{ after(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_0_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Right_uniAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getRight_uniUNIDIRECTIONALParserRuleCall_0_1_0()); }
		ruleUNIDIRECTIONAL
		{ after(grammarAccess.getJoinStreamAccess().getRight_uniUNIDIRECTIONALParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__OnAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_0_2_0_0()); }
		ruleON
		{ after(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__ExprAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_0_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__WtAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_0_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Left_sourceAssignment_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_1_0_0_0_0()); }
		ruleJoinSource
		{ after(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_1_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__JoinAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_1_0_0_1_0()); }
		rulejoins
		{ after(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Right_sourceAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_1_1_0()); }
		ruleJoinSource
		{ after(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__OnAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_1_2_0_0()); }
		ruleON
		{ after(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__ExprAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_1_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__WtAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_1_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Left_sourceAssignment_2_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_2_0_0_0_0()); }
		ruleJoinSource
		{ after(grammarAccess.getJoinStreamAccess().getLeft_sourceJoinSourceParserRuleCall_2_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Left_uniAssignment_2_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getLeft_uniUNIDIRECTIONALParserRuleCall_2_0_0_1_0()); }
		ruleUNIDIRECTIONAL
		{ after(grammarAccess.getJoinStreamAccess().getLeft_uniUNIDIRECTIONALParserRuleCall_2_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__JoinAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_2_1_0()); }
		rulejoins
		{ after(grammarAccess.getJoinStreamAccess().getJoinJoinsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__Right_sourceAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_2_2_0()); }
		ruleJoinSource
		{ after(grammarAccess.getJoinStreamAccess().getRight_sourceJoinSourceParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__OnAssignment_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_2_3_0_0()); }
		ruleON
		{ after(grammarAccess.getJoinStreamAccess().getOnONParserRuleCall_2_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__ExprAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_2_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getJoinStreamAccess().getExprExpressionParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStream__WtAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_2_4_0()); }
		ruleWithinTime
		{ after(grammarAccess.getJoinStreamAccess().getWtWithinTimeParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__AAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinSourceAccess().getAASParserRuleCall_1_0_0()); }
		ruleAS
		{ after(grammarAccess.getJoinSourceAccess().getAASParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__StrAliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinSourceAccess().getStrAliasStreamAliasParserRuleCall_1_1_0()); }
		ruleStreamAlias
		{ after(grammarAccess.getJoinSourceAccess().getStrAliasStreamAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAlias__NaAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAliasAccess().getNaNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getStreamAliasAccess().getNaNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStream__PostWindowHandlersAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardStreamAccess().getPostWindowHandlersBasicSourceStreamHandlersParserRuleCall_1_0_0()); }
		ruleBasicSourceStreamHandlers
		{ after(grammarAccess.getStandardStreamAccess().getPostWindowHandlersBasicSourceStreamHandlersParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainSource__SrcAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainSourceAccess().getSrcSourceParserRuleCall_0_0()); }
		ruleSource
		{ after(grammarAccess.getMainSourceAccess().getSrcSourceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainSource__BasicSShAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainSourceAccess().getBasicSShBasicSourceStreamHandlers1ParserRuleCall_1_0()); }
		ruleBasicSourceStreamHandlers1
		{ after(grammarAccess.getMainSourceAccess().getBasicSShBasicSourceStreamHandlers1ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getEveryPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
			HyphenMinusGreaterThanSign
			{ after(grammarAccess.getEveryPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getEveryPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChainAccess().getRightEveryPatternSourceChain1ParserRuleCall_1_0_2_0()); }
		ruleEveryPatternSourceChain1
		{ after(grammarAccess.getEveryPatternSourceChainAccess().getRightEveryPatternSourceChain1ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__EpsAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getEpsEveryPatternSourceChainParserRuleCall_0_0_1_0()); }
		ruleEveryPatternSourceChain
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getEpsEveryPatternSourceChainParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__WtAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__PscAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChainParserRuleCall_1_0()); }
		rulePatternSourceChain
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChainParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__EveryAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getEveryEVERYParserRuleCall_2_0_0()); }
		ruleEVERY
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getEveryEVERYParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryPatternSourceChain1__PscAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChain1ParserRuleCall_2_1_0()); }
		rulePatternSourceChain1
		{ after(grammarAccess.getEveryPatternSourceChain1Access().getPscPatternSourceChain1ParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
			HyphenMinusGreaterThanSign
			{ after(grammarAccess.getPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getPatternSourceChainAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceChainAccess().getRightPatternSourceChain1ParserRuleCall_1_0_2_0()); }
		rulePatternSourceChain1
		{ after(grammarAccess.getPatternSourceChainAccess().getRightPatternSourceChain1ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__Psc_2Assignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceChain1Access().getPsc_2PatternSourceChainParserRuleCall_0_0_1_0()); }
		rulePatternSourceChain
		{ after(grammarAccess.getPatternSourceChain1Access().getPsc_2PatternSourceChainParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__WtAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__PsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceChain1Access().getPsPatternSourceParserRuleCall_1_0_0()); }
		rulePatternSource
		{ after(grammarAccess.getPatternSourceChain1Access().getPsPatternSourceParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSourceChain1__WtAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0()); }
		ruleWithinTime
		{ after(grammarAccess.getPatternSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSource__LssAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceAccess().getLssLogicalStatefulSourceParserRuleCall_0_0()); }
		ruleLogicalStatefulSource
		{ after(grammarAccess.getPatternSourceAccess().getLssLogicalStatefulSourceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSource__PssAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceAccess().getPssPatternCollectionStatefulSourceParserRuleCall_1_0()); }
		rulePatternCollectionStatefulSource
		{ after(grammarAccess.getPatternSourceAccess().getPssPatternCollectionStatefulSourceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSource__StdssAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceAccess().getStdssStandardStatefulSourceParserRuleCall_2_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getPatternSourceAccess().getStdssStandardStatefulSourceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternSource__LogicalAbsStatefulSrcAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_3_0()); }
		ruleLogicalAbsentStatefulSource
		{ after(grammarAccess.getPatternSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__StdSourceAssignment_0_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_0_0_0_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__AndAssignment_0_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getAndANDParserRuleCall_0_0_0_1_0()); }
		ruleAND
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getAndANDParserRuleCall_0_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__StdSourceAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_1_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__StdSourceAssignment_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__OrAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getOrORParserRuleCall_1_0_0_1_0()); }
		ruleOR
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getOrORParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalStatefulSource__StdSourceAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_1_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCollectionStatefulSource__CollAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternCollectionStatefulSourceAccess().getCollCollectParserRuleCall_2_0()); }
		ruleCollect
		{ after(grammarAccess.getPatternCollectionStatefulSourceAccess().getCollCollectParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__StartAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_0_0_0()); }
		ruleINT_LITERAL
		{ after(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__EndAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_0_2_0()); }
		ruleINT_LITERAL
		{ after(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__StartAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_1_0_0()); }
		ruleINT_LITERAL
		{ after(grammarAccess.getCollectAccess().getStartINT_LITERALParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__EndAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_2_1_0()); }
		ruleINT_LITERAL
		{ after(grammarAccess.getCollectAccess().getEndINT_LITERALParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinTime__TvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithinTimeAccess().getTvTimeValueParserRuleCall_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getWithinTimeAccess().getTvTimeValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__LogicalAbsStatefulSrcAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_0_0_1_0()); }
		ruleLogicalAbsentStatefulSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getLogicalAbsStatefulSrcLogicalAbsentStatefulSourceParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__StdSourceAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__AndAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_1_0_1_0()); }
		ruleAND
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__NotAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNotNOTParserRuleCall_1_0_2_0()); }
		ruleNOT
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getNotNOTParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BsAssignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_1_0_3_0()); }
		ruleBasicSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BsAssignment_2_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_2_0_0_1_0()); }
		ruleBasicSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBsBasicSourceParserRuleCall_2_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__AndAssignment_2_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_2_0_0_2_0()); }
		ruleAND
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_2_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__StdSourceAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_2_1_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__StdSourceAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_3_0_0_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__AndAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_3_0_1_0()); }
		ruleAND
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_3_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_3_0_2_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_3_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_4_0_0_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__AndAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_4_0_1_0()); }
		ruleAND
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__StdSourceAssignment_4_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_4_0_2_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_4_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource2Assignment_5_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_5_0_0_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_5_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__AndAssignment_5_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_5_0_1_0()); }
		ruleAND
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getAndANDParserRuleCall_5_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSourceAssignment_5_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_5_0_2_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_5_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__StdSourceAssignment_6_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_6_0_0_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_6_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__OAssignment_6_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_6_0_1_0()); }
		ruleOR
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_6_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_6_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_6_0_2_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_6_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource1Assignment_7_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_7_0_0_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource1BasicAbsentPatternSourceParserRuleCall_7_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__OAssignment_7_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_7_0_1_0()); }
		ruleOR
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_7_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__StdSourceAssignment_7_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_7_0_2_0()); }
		ruleStandardStatefulSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getStdSourceStandardStatefulSourceParserRuleCall_7_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSource2Assignment_8_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_8_0_0_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSource2BasicAbsentPatternSourceParserRuleCall_8_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__OAssignment_8_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_8_0_1_0()); }
		ruleOR
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getOORParserRuleCall_8_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAbsentStatefulSource__BasicAbsentPatternSourceAssignment_8_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_8_0_2_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLogicalAbsentStatefulSourceAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_8_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__AbsentPatternSrcChainAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentPatternSourceChainAccess().getAbsentPatternSrcChainAbsentPatternSourceChainParserRuleCall_0_0_2_0()); }
		ruleAbsentPatternSourceChain
		{ after(grammarAccess.getAbsentPatternSourceChainAccess().getAbsentPatternSrcChainAbsentPatternSourceChainParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentPatternSourceChain__Wt1Assignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentPatternSourceChainAccess().getWt1WithinTimeParserRuleCall_0_0_4_0()); }
		ruleWithinTime
		{ after(grammarAccess.getAbsentPatternSourceChainAccess().getWt1WithinTimeParserRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentPatternSource__BasicAbsentPSAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryAbsentPatternSourceAccess().getBasicAbsentPSBasicAbsentPatternSourceParserRuleCall_0_1_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getEveryAbsentPatternSourceAccess().getBasicAbsentPSBasicAbsentPatternSourceParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__BasicSrcAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicAbsentPatternSourceAccess().getBasicSrcBasicSourceParserRuleCall_0_1_0()); }
		ruleBasicSource
		{ after(grammarAccess.getBasicAbsentPatternSourceAccess().getBasicSrcBasicSourceParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAbsentPatternSource__FtAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicAbsentPatternSourceAccess().getFtForTimeParserRuleCall_0_2_0()); }
		ruleForTime
		{ after(grammarAccess.getBasicAbsentPatternSourceAccess().getFtForTimeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForTime__TvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForTimeAccess().getTvTimeValueParserRuleCall_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getForTimeAccess().getTvTimeValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__Fb1Assignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getFb1HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getFb1HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
			HyphenMinusGreaterThanSign
			{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getFb1HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getFb1HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSourceAccess().getRightLeftAbsentPatternSource1ParserRuleCall_1_0_2_0()); }
		ruleLeftAbsentPatternSource1
		{ after(grammarAccess.getLeftAbsentPatternSourceAccess().getRightLeftAbsentPatternSource1ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__FbAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getLeftAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
			HyphenMinusGreaterThanSign
			{ after(grammarAccess.getLeftAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getLeftAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0()); }
		ruleEveryAbsentPatternSource
		{ after(grammarAccess.getLeftAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__LeftAbsPSAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPSLeftAbsentPatternSourceParserRuleCall_0_0_2_0()); }
		ruleLeftAbsentPatternSource
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPSLeftAbsentPatternSourceParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__Wt2Assignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getWt2WithinTimeParserRuleCall_0_0_4_0()); }
		ruleWithinTime
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getWt2WithinTimeParserRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__EveryAbsPSAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getEveryAbsPSEveryAbsentPatternSourceParserRuleCall_1_0_0_0()); }
		ruleEveryAbsentPatternSource
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getEveryAbsPSEveryAbsentPatternSourceParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__EveryPSCAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_1_0_2_0()); }
		ruleEveryPatternSourceChain
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__EveryPSCAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_2_0_0_0()); }
		ruleEveryPatternSourceChain
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getEveryPSCEveryPatternSourceChainParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentPatternSource2__LeftAbsPatternSrcAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPatternSrcLeftAbsentPatternSourceParserRuleCall_2_0_2_0()); }
		ruleLeftAbsentPatternSource
		{ after(grammarAccess.getLeftAbsentPatternSource2Access().getLeftAbsPatternSrcLeftAbsentPatternSourceParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Fb2Assignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSourceAccess().getFb2HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getRightAbsentPatternSourceAccess().getFb2HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
			HyphenMinusGreaterThanSign
			{ after(grammarAccess.getRightAbsentPatternSourceAccess().getFb2HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getRightAbsentPatternSourceAccess().getFb2HyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource__Right1Assignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSourceAccess().getRight1RightAbsentPatternSource1ParserRuleCall_1_0_2_0()); }
		ruleRightAbsentPatternSource1
		{ after(grammarAccess.getRightAbsentPatternSourceAccess().getRight1RightAbsentPatternSource1ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__FbAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getRightAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
			HyphenMinusGreaterThanSign
			{ after(grammarAccess.getRightAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getRightAbsentPatternSource1Access().getFbHyphenMinusGreaterThanSignKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0()); }
		ruleEveryAbsentPatternSource
		{ after(grammarAccess.getRightAbsentPatternSource1Access().getRightEveryAbsentPatternSourceParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__RightAbsPSAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_0_0_2_0()); }
		ruleRightAbsentPatternSource
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__Wt3Assignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getWt3WithinTimeParserRuleCall_0_0_4_0()); }
		ruleWithinTime
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getWt3WithinTimeParserRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__EveryPSC1Assignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getEveryPSC1EveryPatternSourceChainParserRuleCall_1_0_0_0()); }
		ruleEveryPatternSourceChain
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getEveryPSC1EveryPatternSourceChainParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__EveryAbsPS1Assignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_1_0_2_0()); }
		ruleEveryAbsentPatternSource
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__EveryAbsPS1Assignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_2_0_0_0()); }
		ruleEveryAbsentPatternSource
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getEveryAbsPS1EveryAbsentPatternSourceParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentPatternSource2__RightAbsPSAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_2_0_2_0()); }
		ruleRightAbsentPatternSource
		{ after(grammarAccess.getRightAbsentPatternSource2Access().getRightAbsPSRightAbsentPatternSourceParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStream__EverySequenceSourceChainAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceStreamAccess().getEverySequenceSourceChainEverySequenceSourceChainParserRuleCall_0_0()); }
		ruleEverySequenceSourceChain
		{ after(grammarAccess.getSequenceStreamAccess().getEverySequenceSourceChainEverySequenceSourceChainParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStream__EveryAbsentSequenceSourceChainAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceStreamAccess().getEveryAbsentSequenceSourceChainEveryAbsentSequenceSourceChainParserRuleCall_1_0()); }
		ruleEveryAbsentSequenceSourceChain
		{ after(grammarAccess.getSequenceStreamAccess().getEveryAbsentSequenceSourceChainEveryAbsentSequenceSourceChainParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__SeqSourceAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEverySequenceSourceChainAccess().getSeqSourceSequenceSourceParserRuleCall_0_1_0()); }
		ruleSequenceSource
		{ after(grammarAccess.getEverySequenceSourceChainAccess().getSeqSourceSequenceSourceParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__WtAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEverySequenceSourceChainAccess().getWtWithinTimeParserRuleCall_0_2_0()); }
		ruleWithinTime
		{ after(grammarAccess.getEverySequenceSourceChainAccess().getWtWithinTimeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EverySequenceSourceChain__SscAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEverySequenceSourceChainAccess().getSscSequenceSourceChainParserRuleCall_0_4_0()); }
		ruleSequenceSourceChain
		{ after(grammarAccess.getEverySequenceSourceChainAccess().getSscSequenceSourceChainParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__AbsSeqSrcChainAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getAbsSeqSrcChainAbsentSequenceSourceChainParserRuleCall_0_1_0()); }
		ruleAbsentSequenceSourceChain
		{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getAbsSeqSrcChainAbsentSequenceSourceChainParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryAbsentSequenceSourceChain__SeqSrcChainAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getSeqSrcChainSequenceSourceChainParserRuleCall_0_3_0()); }
		ruleSequenceSourceChain
		{ after(grammarAccess.getEveryAbsentSequenceSourceChainAccess().getSeqSrcChainSequenceSourceChainParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__AbsentSequenceSourceChainAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getAbsentSequenceSourceChainAbsentSequenceSourceChainParserRuleCall_0_0_1_0()); }
		ruleAbsentSequenceSourceChain
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getAbsentSequenceSourceChainAbsentSequenceSourceChainParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__Wt5Assignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getWt5WithinTimeParserRuleCall_0_0_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getWt5WithinTimeParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__BasicAbsentPatternSourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__LeftAbsentSequenceSourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0()); }
		ruleLeftAbsentSequenceSource
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbsentSequenceSourceChain__RightAbsentSequenceSourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsentSequenceSourceChainAccess().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_3_0()); }
		ruleRightAbsentSequenceSource
		{ after(grammarAccess.getAbsentSequenceSourceChainAccess().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__CommAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
			Comma
			{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSourceAccess().getRightLeftAbsentSequenceSource1ParserRuleCall_1_0_2_0()); }
		ruleLeftAbsentSequenceSource1
		{ after(grammarAccess.getLeftAbsentSequenceSourceAccess().getRightLeftAbsentSequenceSource1ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__CommAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
			Comma
			{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource1Access().getRightBasicAbsentPatternSourceParserRuleCall_1_0_2_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLeftAbsentSequenceSource1Access().getRightBasicAbsentPatternSourceParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__OpAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0()); }
		ruleOPEN_PAR
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__LeftAbsentSequenceSourceAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_0_0_1_0()); }
		ruleLeftAbsentSequenceSource
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__CpAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0()); }
		ruleCLOSE_PAR
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__Wt6Assignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getWt6WithinTimeParserRuleCall_0_0_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getWt6WithinTimeParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__BasicAbsentPatternSourceAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_0_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__CommaAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
			Comma
			{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__SequenceSourceChainAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_2_0()); }
		ruleSequenceSourceChain
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__SequenceSourceChainAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_2_0_0_0()); }
		ruleSequenceSourceChain
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__CommaAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_2_0_1_0()); }
		(
			{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_2_0_1_0()); }
			Comma
			{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_2_0_1_0()); }
		)
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getCommaCommaKeyword_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftAbsentSequenceSource2__LeftAbsentSequenceSourceAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0_2_0()); }
		ruleLeftAbsentSequenceSource
		{ after(grammarAccess.getLeftAbsentSequenceSource2Access().getLeftAbsentSequenceSourceLeftAbsentSequenceSourceParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__CommAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
			Comma
			{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getCommCommaKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource__Right1Assignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSourceAccess().getRight1RightAbsentSequenceSource1ParserRuleCall_1_0_2_0()); }
		ruleRightAbsentSequenceSource1
		{ after(grammarAccess.getRightAbsentSequenceSourceAccess().getRight1RightAbsentSequenceSource1ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__CommAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getRightAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
			Comma
			{ after(grammarAccess.getRightAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getRightAbsentSequenceSource1Access().getCommCommaKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource1Access().getRightSequenceSourceChainParserRuleCall_1_0_2_0()); }
		ruleSequenceSourceChain
		{ after(grammarAccess.getRightAbsentSequenceSource1Access().getRightSequenceSourceChainParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__OpAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0()); }
		ruleOPEN_PAR
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getOpOPEN_PARParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__RightAbsentSequenceSourceAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_0_0_1_0()); }
		ruleRightAbsentSequenceSource
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__CpAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0()); }
		ruleCLOSE_PAR
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getCpCLOSE_PARParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__Wt7Assignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getWt7WithinTimeParserRuleCall_0_0_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getWt7WithinTimeParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__SequenceSourceChainAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_0_0()); }
		ruleSequenceSourceChain
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getSequenceSourceChainSequenceSourceChainParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__CommaAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getRightAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
			Comma
			{ after(grammarAccess.getRightAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getCommaCommaKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__BasicAbsentPatternSourceAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_2_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__BasicAbsentPatternSourceAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_2_0_0_0()); }
		ruleBasicAbsentPatternSource
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getBasicAbsentPatternSourceBasicAbsentPatternSourceParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightAbsentSequenceSource2__RightAbsentSequenceSourceAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_2_0_2_0()); }
		ruleRightAbsentSequenceSource
		{ after(grammarAccess.getRightAbsentSequenceSource2Access().getRightAbsentSequenceSourceRightAbsentSequenceSourceParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceSourceChainAccess().getOpCommaKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getSequenceSourceChainAccess().getOpCommaKeyword_1_0_1_0()); }
			Comma
			{ after(grammarAccess.getSequenceSourceChainAccess().getOpCommaKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getSequenceSourceChainAccess().getOpCommaKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceSourceChainAccess().getRightSequenceSourceChain1ParserRuleCall_1_0_2_0()); }
		ruleSequenceSourceChain1
		{ after(grammarAccess.getSequenceSourceChainAccess().getRightSequenceSourceChain1ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__Wt1Assignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceSourceChain1Access().getWt1WithinTimeParserRuleCall_0_0_3_0()); }
		ruleWithinTime
		{ after(grammarAccess.getSequenceSourceChain1Access().getWt1WithinTimeParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceSourceChain1__WtAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0()); }
		ruleWithinTime
		{ after(grammarAccess.getSequenceSourceChain1Access().getWtWithinTimeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__CollAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getCollCollectParserRuleCall_1_0_1_0()); }
		ruleCollect
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getCollCollectParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Zero_or_moreAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAsteriskKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAsteriskKeyword_1_1_0()); }
			Asterisk
			{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAsteriskKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_moreAsteriskKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__Zero_or_oneAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneQuestionMarkKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneQuestionMarkKeyword_1_2_0()); }
			QuestionMark
			{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneQuestionMarkKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getZero_or_oneQuestionMarkKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCollectionStatefulSource__One_or_moreAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_morePlusSignKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_morePlusSignKeyword_1_3_0()); }
			PlusSign
			{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_morePlusSignKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getSequenceCollectionStatefulSourceAccess().getOne_or_morePlusSignKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__QiAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnonymousStreamAccess().getQiQueryInputParserRuleCall_1_1_0()); }
		ruleQueryInput
		{ after(grammarAccess.getAnonymousStreamAccess().getQiQueryInputParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__QsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnonymousStreamAccess().getQsQuerySectionParserRuleCall_1_2_0()); }
		ruleQuerySection
		{ after(grammarAccess.getAnonymousStreamAccess().getQsQuerySectionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Out_rateAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnonymousStreamAccess().getOut_rateOutputRateParserRuleCall_1_3_0()); }
		ruleOutputRate
		{ after(grammarAccess.getAnonymousStreamAccess().getOut_rateOutputRateParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousStream__Op_event_typeAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnonymousStreamAccess().getOp_event_typeOutputEventTypeParserRuleCall_1_5_0()); }
		ruleOutputEventType
		{ after(grammarAccess.getAnonymousStreamAccess().getOp_event_typeOutputEventTypeParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__Op_rate_typeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateAccess().getOp_rate_typeOutputRateTypeParserRuleCall_0_2_0()); }
		ruleOutputRateType
		{ after(grammarAccess.getOutputRateAccess().getOp_rate_typeOutputRateTypeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__EveryAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_0_3_0()); }
		ruleEVERY
		{ after(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__TvAssignment_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_0_4_0_0()); }
		ruleTimeValue
		{ after(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__EveryAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_1_3_0()); }
		ruleEVERY
		{ after(grammarAccess.getOutputRateAccess().getEveryEVERYParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputRate__TvAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_1_4_0()); }
		ruleTimeValue
		{ after(grammarAccess.getOutputRateAccess().getTvTimeValueParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__OutEventTypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_0_1_0()); }
		ruleOutputEventType
		{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__TarAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_0_3_0()); }
		ruleSource1
		{ after(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__TarAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_1_1_0()); }
		ruleSource1
		{ after(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__OutEventTypeAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_1_2_1_0()); }
		ruleOutputEventType
		{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__OnAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_1_3_0()); }
		ruleON
		{ after(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__ExprAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_1_4_0()); }
		ruleExpression
		{ after(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__OrAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getOrORParserRuleCall_2_1_0_0()); }
		ruleOR
		{ after(grammarAccess.getQueryOutputAccess().getOrORParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__TarAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_2_2_0()); }
		ruleSource1
		{ after(grammarAccess.getQueryOutputAccess().getTarSource1ParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__OutEventTypeAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_2_3_1_0()); }
		ruleOutputEventType
		{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__SetClauseAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getSetClauseSetClauseParserRuleCall_2_4_0()); }
		ruleSetClause
		{ after(grammarAccess.getQueryOutputAccess().getSetClauseSetClauseParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__OnAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_2_5_0()); }
		ruleON
		{ after(grammarAccess.getQueryOutputAccess().getOnONParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__ExprAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_2_6_0()); }
		ruleExpression
		{ after(grammarAccess.getQueryOutputAccess().getExprExpressionParserRuleCall_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOutput__OutEventTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_3_1_0()); }
		ruleOutputEventType
		{ after(grammarAccess.getQueryOutputAccess().getOutEventTypeOutputEventTypeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__SetAssignmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_1_0()); }
		ruleSetAssignment
		{ after(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__SetAssignmentAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_2_1_0()); }
		ruleSetAssignment
		{ after(grammarAccess.getSetClauseAccess().getSetAssignmentSetAssignmentParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAssignment__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSetAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers__BasicSsHandlerAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerBasicSourceStreamHandlerParserRuleCall_0()); }
		ruleBasicSourceStreamHandler
		{ after(grammarAccess.getBasicSourceStreamHandlersAccess().getBasicSsHandlerBasicSourceStreamHandlerParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__ExpAssignment_1_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getExpExpressionParserRuleCall_1_0_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getExpExpressionParserRuleCall_1_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__FoAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getFoFunctionOperationParserRuleCall_1_1_0_1_0()); }
		ruleFunctionOperation
		{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getFoFunctionOperationParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandlers1__Func_opAssignment_2_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlers1Access().getFunc_opFunctionOperationParserRuleCall_2_0_3_0()); }
		ruleFunctionOperation
		{ after(grammarAccess.getBasicSourceStreamHandlers1Access().getFunc_opFunctionOperationParserRuleCall_2_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandler__FilAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlerAccess().getFilFilterParserRuleCall_0_0()); }
		ruleFilter
		{ after(grammarAccess.getBasicSourceStreamHandlerAccess().getFilFilterParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSourceStreamHandler__SfAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceStreamHandlerAccess().getSfStreamFunctionParserRuleCall_1_0()); }
		ruleStreamFunction
		{ after(grammarAccess.getBasicSourceStreamHandlerAccess().getSfStreamFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getExpExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFilterAccess().getExpExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamFunction__FoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamFunctionAccess().getFoFunctionOperationParserRuleCall_1_0()); }
		ruleFunctionOperation
		{ after(grammarAccess.getStreamFunctionAccess().getFoFunctionOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__FuncNamespaceAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionOperationAccess().getFuncNamespaceFunctionNamespaceParserRuleCall_1_0_0()); }
		ruleFunctionNamespace
		{ after(grammarAccess.getFunctionOperationAccess().getFuncNamespaceFunctionNamespaceParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__FuncIdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionOperationAccess().getFuncIdFunctionIdParserRuleCall_2_0()); }
		ruleFunctionId
		{ after(grammarAccess.getFunctionOperationAccess().getFuncIdFunctionIdParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOperation__AttrListAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionOperationAccess().getAttrListAttributeListParserRuleCall_4_0()); }
		ruleAttributeList
		{ after(grammarAccess.getFunctionOperationAccess().getAttrListAttributeListParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionNamespace__NaAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionNamespaceAccess().getNaIdNewParserRuleCall_0()); }
		ruleIdNew
		{ after(grammarAccess.getFunctionNamespaceAccess().getNaIdNewParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionId__NaAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionIdAccess().getNaNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getFunctionIdAccess().getNaNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__AttrAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__AttrAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_1_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributeListAccess().getAttrAttributeParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__MathOpAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getMathOpMathOperationParserRuleCall_0()); }
		ruleMathOperation
		{ after(grammarAccess.getAttributeAccess().getMathOpMathOperationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Out_attAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_0_0()); }
		ruleOutputAttribute
		{ after(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Out_attAssignment_1_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_1_1_0()); }
		ruleOutputAttribute
		{ after(grammarAccess.getGroupByQuerySelectionAccess().getOut_attOutputAttributeParserRuleCall_1_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByQuerySelection__Grp_byAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByQuerySelectionAccess().getGrp_byGroupByParserRuleCall_2_0()); }
		ruleGroupBy
		{ after(grammarAccess.getGroupByQuerySelectionAccess().getGrp_byGroupByParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySection__GrpByQuerySelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuerySectionAccess().getGrpByQuerySelGroupByQuerySelectionParserRuleCall_1_0()); }
		ruleGroupByQuerySelection
		{ after(grammarAccess.getQuerySectionAccess().getGrpByQuerySelGroupByQuerySelectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySection__HavingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuerySectionAccess().getHavingHavingExprParserRuleCall_2_0()); }
		ruleHavingExpr
		{ after(grammarAccess.getQuerySectionAccess().getHavingHavingExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__OutAttrAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAttributeAccess().getOutAttrOutAttrParserRuleCall_0_1_0()); }
		ruleOutAttr
		{ after(grammarAccess.getOutputAttributeAccess().getOutAttrOutAttrParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputAttribute__Attr_refAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAttributeAccess().getAttr_refAttributeReferenceParserRuleCall_1_1_0()); }
		ruleAttributeReference
		{ after(grammarAccess.getOutputAttributeAccess().getAttr_refAttributeReferenceParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__AttrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutAttrAccess().getAttrAttributeParserRuleCall_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getOutAttrAccess().getAttrAttributeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__AAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutAttrAccess().getAASParserRuleCall_1_0()); }
		ruleAS
		{ after(grammarAccess.getOutAttrAccess().getAASParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutAttr__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutAttrAccess().getNameIdNewParserRuleCall_2_0()); }
		ruleIdNew
		{ after(grammarAccess.getOutAttrAccess().getNameIdNewParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Attr_refAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_2_0()); }
		ruleAttributeReference
		{ after(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Attr_refAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_3_1_0()); }
		ruleAttributeReference
		{ after(grammarAccess.getGroupByAccess().getAttr_refAttributeReferenceParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HavingExpr__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHavingExprAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getHavingExprAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOperation__MloAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOperationAccess().getMloMathLogicalOperationParserRuleCall_0()); }
		ruleMathLogicalOperation
		{ after(grammarAccess.getMathOperationAccess().getMloMathLogicalOperationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__AndAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathLogicalOperationAccess().getAndANDParserRuleCall_1_0_1_0_0()); }
		ruleAND
		{ after(grammarAccess.getMathLogicalOperationAccess().getAndANDParserRuleCall_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__OrAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathLogicalOperationAccess().getOrORParserRuleCall_1_0_1_1_0()); }
		ruleOR
		{ after(grammarAccess.getMathLogicalOperationAccess().getOrORParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathLogicalOperation__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathLogicalOperationAccess().getRightMathInOperationParserRuleCall_1_0_2_0()); }
		ruleMathInOperation
		{ after(grammarAccess.getMathLogicalOperationAccess().getRightMathInOperationParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__InAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathInOperationAccess().getInINParserRuleCall_1_0_1_0()); }
		ruleIN
		{ after(grammarAccess.getMathInOperationAccess().getInINParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathInOperation__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathInOperationAccess().getRightNameParserRuleCall_1_0_2_0()); }
		ruleName
		{ after(grammarAccess.getMathInOperationAccess().getRightNameParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__SymbolAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathGtLtOperationAccess().getSymbolAlternatives_1_0_1_0()); }
		(rule__MathGtLtOperation__SymbolAlternatives_1_0_1_0)
		{ after(grammarAccess.getMathGtLtOperationAccess().getSymbolAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathGtLtOperation__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathGtLtOperationAccess().getRightMathGtLtOperationParserRuleCall_1_0_2_0()); }
		ruleMathGtLtOperation
		{ after(grammarAccess.getMathGtLtOperationAccess().getRightMathGtLtOperationParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__EqAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathEqualOperationAccess().getEqEqualsSignEqualsSignKeyword_1_0_1_0_0()); }
		(
			{ before(grammarAccess.getMathEqualOperationAccess().getEqEqualsSignEqualsSignKeyword_1_0_1_0_0()); }
			EqualsSignEqualsSign
			{ after(grammarAccess.getMathEqualOperationAccess().getEqEqualsSignEqualsSignKeyword_1_0_1_0_0()); }
		)
		{ after(grammarAccess.getMathEqualOperationAccess().getEqEqualsSignEqualsSignKeyword_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__Not_eqAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathEqualOperationAccess().getNot_eqExclamationMarkEqualsSignKeyword_1_0_1_1_0()); }
		(
			{ before(grammarAccess.getMathEqualOperationAccess().getNot_eqExclamationMarkEqualsSignKeyword_1_0_1_1_0()); }
			ExclamationMarkEqualsSign
			{ after(grammarAccess.getMathEqualOperationAccess().getNot_eqExclamationMarkEqualsSignKeyword_1_0_1_1_0()); }
		)
		{ after(grammarAccess.getMathEqualOperationAccess().getNot_eqExclamationMarkEqualsSignKeyword_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathEqualOperation__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathEqualOperationAccess().getRightMathAddsubOperationParserRuleCall_1_0_2_0()); }
		ruleMathAddsubOperation
		{ after(grammarAccess.getMathEqualOperationAccess().getRightMathAddsubOperationParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__AddAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathAddsubOperationAccess().getAddPlusSignKeyword_1_0_1_0_0()); }
		(
			{ before(grammarAccess.getMathAddsubOperationAccess().getAddPlusSignKeyword_1_0_1_0_0()); }
			PlusSign
			{ after(grammarAccess.getMathAddsubOperationAccess().getAddPlusSignKeyword_1_0_1_0_0()); }
		)
		{ after(grammarAccess.getMathAddsubOperationAccess().getAddPlusSignKeyword_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__SubstractAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathAddsubOperationAccess().getSubstractHyphenMinusKeyword_1_0_1_1_0()); }
		(
			{ before(grammarAccess.getMathAddsubOperationAccess().getSubstractHyphenMinusKeyword_1_0_1_1_0()); }
			HyphenMinus
			{ after(grammarAccess.getMathAddsubOperationAccess().getSubstractHyphenMinusKeyword_1_0_1_1_0()); }
		)
		{ after(grammarAccess.getMathAddsubOperationAccess().getSubstractHyphenMinusKeyword_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathAddsubOperation__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathAddsubOperationAccess().getRightMathDivmulOperationParserRuleCall_1_0_2_0()); }
		ruleMathDivmulOperation
		{ after(grammarAccess.getMathAddsubOperationAccess().getRightMathDivmulOperationParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__MultiplyAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getMultiplyAsteriskKeyword_1_0_1_0_0()); }
		(
			{ before(grammarAccess.getMathDivmulOperationAccess().getMultiplyAsteriskKeyword_1_0_1_0_0()); }
			Asterisk
			{ after(grammarAccess.getMathDivmulOperationAccess().getMultiplyAsteriskKeyword_1_0_1_0_0()); }
		)
		{ after(grammarAccess.getMathDivmulOperationAccess().getMultiplyAsteriskKeyword_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__DevideAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getDevideSolidusKeyword_1_0_1_1_0()); }
		(
			{ before(grammarAccess.getMathDivmulOperationAccess().getDevideSolidusKeyword_1_0_1_1_0()); }
			Solidus
			{ after(grammarAccess.getMathDivmulOperationAccess().getDevideSolidusKeyword_1_0_1_1_0()); }
		)
		{ after(grammarAccess.getMathDivmulOperationAccess().getDevideSolidusKeyword_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__ModAssignment_1_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getModPercentSignKeyword_1_0_1_2_0()); }
		(
			{ before(grammarAccess.getMathDivmulOperationAccess().getModPercentSignKeyword_1_0_1_2_0()); }
			PercentSign
			{ after(grammarAccess.getMathDivmulOperationAccess().getModPercentSignKeyword_1_0_1_2_0()); }
		)
		{ after(grammarAccess.getMathDivmulOperationAccess().getModPercentSignKeyword_1_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathDivmulOperation__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathDivmulOperationAccess().getRightMathOtherOperationsParserRuleCall_1_0_2_0()); }
		ruleMathOtherOperations
		{ after(grammarAccess.getMathDivmulOperationAccess().getRightMathOtherOperationsParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__NotAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getNotNOTParserRuleCall_0_0_1_0()); }
		ruleNOT
		{ after(grammarAccess.getMathOtherOperationsAccess().getNotNOTParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__OpAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_0_0_2_0()); }
		ruleMathOperation
		{ after(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_1_1_0()); }
		ruleMathOperation
		{ after(grammarAccess.getMathOtherOperationsAccess().getOpMathOperationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations__MathOtherOperations1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperationsAccess().getMathOtherOperations1MathOtherOperations1ParserRuleCall_3_0()); }
		ruleMathOtherOperations1
		{ after(grammarAccess.getMathOtherOperationsAccess().getMathOtherOperations1MathOtherOperations1ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Stream_refAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCheckAccess().getStream_refStreamReferenceParserRuleCall_0_0_0()); }
		ruleStreamReference
		{ after(grammarAccess.getNullCheckAccess().getStream_refStreamReferenceParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__Attr_refAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCheckAccess().getAttr_refAttributeReferenceParserRuleCall_0_1_0()); }
		ruleAttributeReference
		{ after(grammarAccess.getNullCheckAccess().getAttr_refAttributeReferenceParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheck__FoAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCheckAccess().getFoFunctionOperationParserRuleCall_0_2_0()); }
		ruleFunctionOperation
		{ after(grammarAccess.getNullCheckAccess().getFoFunctionOperationParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__HashAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamReferenceAccess().getHashNumberSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getStreamReferenceAccess().getHashNumberSignKeyword_0_0()); }
			NumberSign
			{ after(grammarAccess.getStreamReferenceAccess().getHashNumberSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getStreamReferenceAccess().getHashNumberSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__NaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamReferenceAccess().getNaNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getStreamReferenceAccess().getNaNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamReference__Aatr_indexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamReferenceAccess().getAatr_indexAttributeIndexParserRuleCall_2_1_0()); }
		ruleAttributeIndex
		{ after(grammarAccess.getStreamReferenceAccess().getAatr_indexAttributeIndexParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations1__Const_valAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperations1Access().getConst_valConstantValueParserRuleCall_0_0()); }
		ruleConstantValue
		{ after(grammarAccess.getMathOtherOperations1Access().getConst_valConstantValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations1__FoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperations1Access().getFoFunctionOperationParserRuleCall_1_0()); }
		ruleFunctionOperation
		{ after(grammarAccess.getMathOtherOperations1Access().getFoFunctionOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOtherOperations1__AttrRefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOtherOperations1Access().getAttrRefAttributeReferenceParserRuleCall_2_0()); }
		ruleAttributeReference
		{ after(grammarAccess.getMathOtherOperations1Access().getAttrRefAttributeReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Hash1Assignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getHash1NumberSignKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getAttributeReferenceAccess().getHash1NumberSignKeyword_0_1_0()); }
			NumberSign
			{ after(grammarAccess.getAttributeReferenceAccess().getHash1NumberSignKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getAttributeReferenceAccess().getHash1NumberSignKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Name1Assignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getName1SourceOrEventReferenceParserRuleCall_0_2_0()); }
		ruleSourceOrEventReference
		{ after(grammarAccess.getAttributeReferenceAccess().getName1SourceOrEventReferenceParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Attribute_index1Assignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getAttribute_index1AttributeIndexParserRuleCall_0_3_1_0()); }
		ruleAttributeIndex
		{ after(grammarAccess.getAttributeReferenceAccess().getAttribute_index1AttributeIndexParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Hash2Assignment_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getHash2NumberSignKeyword_0_4_0_0()); }
		(
			{ before(grammarAccess.getAttributeReferenceAccess().getHash2NumberSignKeyword_0_4_0_0()); }
			NumberSign
			{ after(grammarAccess.getAttributeReferenceAccess().getHash2NumberSignKeyword_0_4_0_0()); }
		)
		{ after(grammarAccess.getAttributeReferenceAccess().getHash2NumberSignKeyword_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Name2Assignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getName2SourceOrEventReferenceParserRuleCall_0_4_1_0()); }
		ruleSourceOrEventReference
		{ after(grammarAccess.getAttributeReferenceAccess().getName2SourceOrEventReferenceParserRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Attribute_index2Assignment_0_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getAttribute_index2AttributeIndexParserRuleCall_0_4_2_1_0()); }
		ruleAttributeIndex
		{ after(grammarAccess.getAttributeReferenceAccess().getAttribute_index2AttributeIndexParserRuleCall_0_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__Attr_nameAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getAttr_nameAttributeNameReferenceParserRuleCall_0_6_0()); }
		ruleAttributeNameReference
		{ after(grammarAccess.getAttributeReferenceAccess().getAttr_nameAttributeNameReferenceParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReference__FeaturesOrAttrRefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferenceAccess().getFeaturesOrAttrRefFeaturesOrOutAttrReferenceParserRuleCall_1_0()); }
		ruleFeaturesOrOutAttrReference
		{ after(grammarAccess.getAttributeReferenceAccess().getFeaturesOrAttrRefFeaturesOrOutAttrReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeNameReference__AttrName1Assignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeNameReferenceAccess().getAttrName1FeaturesCrossReference_0()); }
		(
			{ before(grammarAccess.getAttributeNameReferenceAccess().getAttrName1FeaturesIdNewParserRuleCall_0_1()); }
			ruleIdNew
			{ after(grammarAccess.getAttributeNameReferenceAccess().getAttrName1FeaturesIdNewParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getAttributeNameReferenceAccess().getAttrName1FeaturesCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardStatefulSourceAccess().getNameIdNewParserRuleCall_1_0_0()); }
		ruleIdNew
		{ after(grammarAccess.getStandardStatefulSourceAccess().getNameIdNewParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardStatefulSource__BsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardStatefulSourceAccess().getBsBasicSourceParserRuleCall_2_0()); }
		ruleBasicSource
		{ after(grammarAccess.getStandardStatefulSourceAccess().getBsBasicSourceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOrEventReference__NaAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceOrEventReferenceAccess().getNaSource1OrStandardStatefulSourceCrossReference_0()); }
		(
			{ before(grammarAccess.getSourceOrEventReferenceAccess().getNaSource1OrStandardStatefulSourceIdNewParserRuleCall_0_1()); }
			ruleIdNew
			{ after(grammarAccess.getSourceOrEventReferenceAccess().getNaSource1OrStandardStatefulSourceIdNewParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSourceOrEventReferenceAccess().getNaSource1OrStandardStatefulSourceCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSource__SrcAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceAccess().getSrcSourceParserRuleCall_0_0()); }
		ruleSource
		{ after(grammarAccess.getBasicSourceAccess().getSrcSourceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicSource__Basic_ss_handlersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicSourceAccess().getBasic_ss_handlersBasicSourceStreamHandlersParserRuleCall_1_0()); }
		ruleBasicSourceStreamHandlers
		{ after(grammarAccess.getBasicSourceAccess().getBasic_ss_handlersBasicSourceStreamHandlersParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturesOrOutAttrReference__SrcoutAttrrefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefFeaturesOrOutAttrCrossReference_0()); }
		(
			{ before(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefFeaturesOrOutAttrIdNewParserRuleCall_0_1()); }
			ruleIdNew
			{ after(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefFeaturesOrOutAttrIdNewParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFeaturesOrOutAttrReferenceAccess().getSrcoutAttrrefFeaturesOrOutAttrCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__BvAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getBvBoolValueParserRuleCall_0_1_0()); }
		ruleBoolValue
		{ after(grammarAccess.getConstantValueAccess().getBvBoolValueParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__SdvAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getSdvSignedDoubleValueParserRuleCall_1_1_0()); }
		ruleSignedDoubleValue
		{ after(grammarAccess.getConstantValueAccess().getSdvSignedDoubleValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__SfvAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getSfvSignedFloatValueParserRuleCall_2_1_0()); }
		ruleSignedFloatValue
		{ after(grammarAccess.getConstantValueAccess().getSfvSignedFloatValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__SlvAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getSlvSignedLongValueParserRuleCall_3_1_0()); }
		ruleSignedLongValue
		{ after(grammarAccess.getConstantValueAccess().getSlvSignedLongValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__SivAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getSivSignedIntValueParserRuleCall_4_1_0()); }
		ruleSignedIntValue
		{ after(grammarAccess.getConstantValueAccess().getSivSignedIntValueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__TvAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getTvTimeValueParserRuleCall_5_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getConstantValueAccess().getTvTimeValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__SvAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getSvStringValueParserRuleCall_6_1_0()); }
		ruleStringValue
		{ after(grammarAccess.getConstantValueAccess().getSvStringValueParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNameIdNewParserRuleCall_0()); }
		ruleIdNew
		{ after(grammarAccess.getNameAccess().getNameIdNewParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__StrIdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getStrIdSource1CrossReference_0()); }
		(
			{ before(grammarAccess.getSourceAccess().getStrIdSource1IdNewParserRuleCall_0_1()); }
			ruleIdNew
			{ after(grammarAccess.getSourceAccess().getStrIdSource1IdNewParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSourceAccess().getStrIdSource1CrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source1__InnerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource1Access().getInnerNumberSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getSource1Access().getInnerNumberSignKeyword_0_0()); }
			NumberSign
			{ after(grammarAccess.getSource1Access().getInnerNumberSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getSource1Access().getInnerNumberSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source1__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource1Access().getNameIdNewParserRuleCall_1_0()); }
		ruleIdNew
		{ after(grammarAccess.getSource1Access().getNameIdNewParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__SlAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getSlSTRING_LITERALParserRuleCall_0()); }
		ruleSTRING_LITERAL
		{ after(grammarAccess.getStringValueAccess().getSlSTRING_LITERALParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__YvAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getYvYearValueParserRuleCall_0_0_0()); }
		ruleYearValue
		{ after(grammarAccess.getTimeValueAccess().getYvYearValueParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MvAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_0_1_0()); }
		ruleMonthValue
		{ after(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__WvAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_0_2_0()); }
		ruleWeekValue
		{ after(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__DvAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_0_3_0()); }
		ruleDayValue
		{ after(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__HvAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_0_4_0()); }
		ruleHourValue
		{ after(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MinvAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_0_5_0()); }
		ruleMinuteValue
		{ after(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__SecvAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_0_6_0()); }
		ruleSecondValue
		{ after(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_0_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_0_7_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_0_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MvAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_1_0_0()); }
		ruleMonthValue
		{ after(grammarAccess.getTimeValueAccess().getMvMonthValueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__WvAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_1_1_0()); }
		ruleWeekValue
		{ after(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__DvAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_1_2_0()); }
		ruleDayValue
		{ after(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__HvAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_1_3_0()); }
		ruleHourValue
		{ after(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MinvAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_1_4_0()); }
		ruleMinuteValue
		{ after(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__SecvAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_1_5_0()); }
		ruleSecondValue
		{ after(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_1_6_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__WvAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_2_0_0()); }
		ruleWeekValue
		{ after(grammarAccess.getTimeValueAccess().getWvWeekValueParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__DvAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_2_1_0()); }
		ruleDayValue
		{ after(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__HvAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_2_2_0()); }
		ruleHourValue
		{ after(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MinvAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_2_3_0()); }
		ruleMinuteValue
		{ after(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__SecvAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_2_4_0()); }
		ruleSecondValue
		{ after(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_2_5_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__DvAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_3_0_0()); }
		ruleDayValue
		{ after(grammarAccess.getTimeValueAccess().getDvDayValueParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__HvAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_3_1_0()); }
		ruleHourValue
		{ after(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MinvAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_3_2_0()); }
		ruleMinuteValue
		{ after(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__SecvAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_3_3_0()); }
		ruleSecondValue
		{ after(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_3_4_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__HvAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_4_0_0()); }
		ruleHourValue
		{ after(grammarAccess.getTimeValueAccess().getHvHourValueParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MinvAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_4_1_0()); }
		ruleMinuteValue
		{ after(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__SecvAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_4_2_0()); }
		ruleSecondValue
		{ after(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_4_3_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MinvAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_5_0_0()); }
		ruleMinuteValue
		{ after(grammarAccess.getTimeValueAccess().getMinvMinuteValueParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__SecvAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_5_1_0()); }
		ruleSecondValue
		{ after(grammarAccess.getTimeValueAccess().getSecvSecondValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_5_2_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__SvAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getSvSecondValueParserRuleCall_6_0_0()); }
		ruleSecondValue
		{ after(grammarAccess.getTimeValueAccess().getSvSecondValueParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_6_1_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__MsecvAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_7_0()); }
		ruleMillisecondValue
		{ after(grammarAccess.getTimeValueAccess().getMsecvMillisecondValueParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__EAssignment_0_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_0_0_3_0_0()); }
		ruleE
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_0_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__DAssignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_0_0_4_0()); }
		ruleD
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__EAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_1_3_0()); }
		ruleE
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__DAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_1_6_0()); }
		ruleD
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__EAssignment_2_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_2_0_4_0_0()); }
		ruleE
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getEEParserRuleCall_2_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_LITERAL__DAssignment_2_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_2_0_5_0()); }
		ruleD
		{ after(grammarAccess.getDOUBLE_LITERALAccess().getDDParserRuleCall_2_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__EAssignment_0_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_0_0_3_0_0()); }
		ruleE
		{ after(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_0_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__FAssignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_0_0_4_0()); }
		ruleF
		{ after(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__EAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_1_4_0_0()); }
		ruleE
		{ after(grammarAccess.getFLOAT_LITERALAccess().getEEParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__FAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_1_5_0()); }
		ruleF
		{ after(grammarAccess.getFLOAT_LITERALAccess().getFFParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG_LITERAL__LAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLONG_LITERALAccess().getLLParserRuleCall_1_0()); }
		ruleL
		{ after(grammarAccess.getLONG_LITERALAccess().getLLParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AS__AAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getASAccess().getAAsKeyword_0()); }
		(
			{ before(grammarAccess.getASAccess().getAAsKeyword_0()); }
			As
			{ after(grammarAccess.getASAccess().getAAsKeyword_0()); }
		)
		{ after(grammarAccess.getASAccess().getAAsKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ON__OnAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getONAccess().getOnOnKeyword_0()); }
		(
			{ before(grammarAccess.getONAccess().getOnOnKeyword_0()); }
			On
			{ after(grammarAccess.getONAccess().getOnOnKeyword_0()); }
		)
		{ after(grammarAccess.getONAccess().getOnOnKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIDIRECTIONAL__UnidirectionalAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalUnidirectionalKeyword_0()); }
		(
			{ before(grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalUnidirectionalKeyword_0()); }
			Unidirectional
			{ after(grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalUnidirectionalKeyword_0()); }
		)
		{ after(grammarAccess.getUNIDIRECTIONALAccess().getUnidirectionalUnidirectionalKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Not1Assignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getNot1NotKeyword_0()); }
		(
			{ before(grammarAccess.getNOTAccess().getNot1NotKeyword_0()); }
			Not
			{ after(grammarAccess.getNOTAccess().getNot1NotKeyword_0()); }
		)
		{ after(grammarAccess.getNOTAccess().getNot1NotKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVERY__EveryAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVERYAccess().getEveryEveryKeyword_0()); }
		(
			{ before(grammarAccess.getEVERYAccess().getEveryEveryKeyword_0()); }
			Every
			{ after(grammarAccess.getEVERYAccess().getEveryEveryKeyword_0()); }
		)
		{ after(grammarAccess.getEVERYAccess().getEveryEveryKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__AndAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getAndAndKeyword_0()); }
		(
			{ before(grammarAccess.getANDAccess().getAndAndKeyword_0()); }
			And
			{ after(grammarAccess.getANDAccess().getAndAndKeyword_0()); }
		)
		{ after(grammarAccess.getANDAccess().getAndAndKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__OrAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getOrOrKeyword_0()); }
		(
			{ before(grammarAccess.getORAccess().getOrOrKeyword_0()); }
			Or
			{ after(grammarAccess.getORAccess().getOrOrKeyword_0()); }
		)
		{ after(grammarAccess.getORAccess().getOrOrKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IN__InAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINAccess().getInInKeyword_0()); }
		(
			{ before(grammarAccess.getINAccess().getInInKeyword_0()); }
			In
			{ after(grammarAccess.getINAccess().getInInKeyword_0()); }
		)
		{ after(grammarAccess.getINAccess().getInInKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OF__OfAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOFAccess().getOfOfKeyword_0()); }
		(
			{ before(grammarAccess.getOFAccess().getOfOfKeyword_0()); }
			Of
			{ after(grammarAccess.getOFAccess().getOfOfKeyword_0()); }
		)
		{ after(grammarAccess.getOFAccess().getOfOfKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__E__EAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAccess().getEEKeyword_0()); }
		(
			{ before(grammarAccess.getEAccess().getEEKeyword_0()); }
			E
			{ after(grammarAccess.getEAccess().getEEKeyword_0()); }
		)
		{ after(grammarAccess.getEAccess().getEEKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__D__DAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDAccess().getDDKeyword_0()); }
		(
			{ before(grammarAccess.getDAccess().getDDKeyword_0()); }
			D
			{ after(grammarAccess.getDAccess().getDDKeyword_0()); }
		)
		{ after(grammarAccess.getDAccess().getDDKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F__FAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFAccess().getFFKeyword_0()); }
		(
			{ before(grammarAccess.getFAccess().getFFKeyword_0()); }
			F
			{ after(grammarAccess.getFAccess().getFFKeyword_0()); }
		)
		{ after(grammarAccess.getFAccess().getFFKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__L__LAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLAccess().getLLKeyword_0()); }
		(
			{ before(grammarAccess.getLAccess().getLLKeyword_0()); }
			L
			{ after(grammarAccess.getLAccess().getLLKeyword_0()); }
		)
		{ after(grammarAccess.getLAccess().getLLKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APP__ApAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPPAccess().getApAppKeyword_0()); }
		(
			{ before(grammarAccess.getAPPAccess().getApAppKeyword_0()); }
			App
			{ after(grammarAccess.getAPPAccess().getApAppKeyword_0()); }
		)
		{ after(grammarAccess.getAPPAccess().getApAppKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__STREAM__StrAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSTREAMAccess().getStrStreamKeyword_0()); }
		(
			{ before(grammarAccess.getSTREAMAccess().getStrStreamKeyword_0()); }
			Stream
			{ after(grammarAccess.getSTREAMAccess().getStrStreamKeyword_0()); }
		)
		{ after(grammarAccess.getSTREAMAccess().getStrStreamKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DEFINE__DefineAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDEFINEAccess().getDefineDefineKeyword_0()); }
		(
			{ before(grammarAccess.getDEFINEAccess().getDefineDefineKeyword_0()); }
			Define
			{ after(grammarAccess.getDEFINEAccess().getDefineDefineKeyword_0()); }
		)
		{ after(grammarAccess.getDEFINEAccess().getDefineDefineKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TABLE__TableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTABLEAccess().getTableTableKeyword_0()); }
		(
			{ before(grammarAccess.getTABLEAccess().getTableTableKeyword_0()); }
			Table
			{ after(grammarAccess.getTABLEAccess().getTableTableKeyword_0()); }
		)
		{ after(grammarAccess.getTABLEAccess().getTableTableKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WINDOW__WindowAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWINDOWAccess().getWindowWindowKeyword_0()); }
		(
			{ before(grammarAccess.getWINDOWAccess().getWindowWindowKeyword_0()); }
			Window
			{ after(grammarAccess.getWINDOWAccess().getWindowWindowKeyword_0()); }
		)
		{ after(grammarAccess.getWINDOWAccess().getWindowWindowKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OUTPUT__OutputAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOUTPUTAccess().getOutputOutputKeyword_0()); }
		(
			{ before(grammarAccess.getOUTPUTAccess().getOutputOutputKeyword_0()); }
			Output
			{ after(grammarAccess.getOUTPUTAccess().getOutputOutputKeyword_0()); }
		)
		{ after(grammarAccess.getOUTPUTAccess().getOutputOutputKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__STRINGS__StringAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSTRINGSAccess().getStringStringKeyword_0()); }
		(
			{ before(grammarAccess.getSTRINGSAccess().getStringStringKeyword_0()); }
			String
			{ after(grammarAccess.getSTRINGSAccess().getStringStringKeyword_0()); }
		)
		{ after(grammarAccess.getSTRINGSAccess().getStringStringKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INTS__IntAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINTSAccess().getIntIntKeyword_0()); }
		(
			{ before(grammarAccess.getINTSAccess().getIntIntKeyword_0()); }
			Int
			{ after(grammarAccess.getINTSAccess().getIntIntKeyword_0()); }
		)
		{ after(grammarAccess.getINTSAccess().getIntIntKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG__LongAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLONGAccess().getLongLongKeyword_0()); }
		(
			{ before(grammarAccess.getLONGAccess().getLongLongKeyword_0()); }
			Long
			{ after(grammarAccess.getLONGAccess().getLongLongKeyword_0()); }
		)
		{ after(grammarAccess.getLONGAccess().getLongLongKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__DoubleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLEAccess().getDoubleDoubleKeyword_0()); }
		(
			{ before(grammarAccess.getDOUBLEAccess().getDoubleDoubleKeyword_0()); }
			Double
			{ after(grammarAccess.getDOUBLEAccess().getDoubleDoubleKeyword_0()); }
		)
		{ after(grammarAccess.getDOUBLEAccess().getDoubleDoubleKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__FloatAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOATAccess().getFloatFloatKeyword_0()); }
		(
			{ before(grammarAccess.getFLOATAccess().getFloatFloatKeyword_0()); }
			Float
			{ after(grammarAccess.getFLOATAccess().getFloatFloatKeyword_0()); }
		)
		{ after(grammarAccess.getFLOATAccess().getFloatFloatKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL__BoolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLAccess().getBoolBoolKeyword_0()); }
		(
			{ before(grammarAccess.getBOOLAccess().getBoolBoolKeyword_0()); }
			Bool
			{ after(grammarAccess.getBOOLAccess().getBoolBoolKeyword_0()); }
		)
		{ after(grammarAccess.getBOOLAccess().getBoolBoolKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OBJECT__ObjectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOBJECTAccess().getObjectObjectKeyword_0()); }
		(
			{ before(grammarAccess.getOBJECTAccess().getObjectObjectKeyword_0()); }
			Object
			{ after(grammarAccess.getOBJECTAccess().getObjectObjectKeyword_0()); }
		)
		{ after(grammarAccess.getOBJECTAccess().getObjectObjectKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ALL__AllAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getALLAccess().getAllAllKeyword_0()); }
		(
			{ before(grammarAccess.getALLAccess().getAllAllKeyword_0()); }
			All
			{ after(grammarAccess.getALLAccess().getAllAllKeyword_0()); }
		)
		{ after(grammarAccess.getALLAccess().getAllAllKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENTS__EventsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVENTSAccess().getEventsEventsKeyword_0()); }
		(
			{ before(grammarAccess.getEVENTSAccess().getEventsEventsKeyword_0()); }
			Events
			{ after(grammarAccess.getEVENTSAccess().getEventsEventsKeyword_0()); }
		)
		{ after(grammarAccess.getEVENTSAccess().getEventsEventsKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAW__RawAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAWAccess().getRawRawKeyword_0()); }
		(
			{ before(grammarAccess.getRAWAccess().getRawRawKeyword_0()); }
			Raw
			{ after(grammarAccess.getRAWAccess().getRawRawKeyword_0()); }
		)
		{ after(grammarAccess.getRAWAccess().getRawRawKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPIRED__ExpiredAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPIREDAccess().getExpiredExpiredKeyword_0()); }
		(
			{ before(grammarAccess.getEXPIREDAccess().getExpiredExpiredKeyword_0()); }
			Expired
			{ after(grammarAccess.getEXPIREDAccess().getExpiredExpiredKeyword_0()); }
		)
		{ after(grammarAccess.getEXPIREDAccess().getExpiredExpiredKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CURRENT__CurrtAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCURRENTAccess().getCurrtCurrentKeyword_0()); }
		(
			{ before(grammarAccess.getCURRENTAccess().getCurrtCurrentKeyword_0()); }
			Current
			{ after(grammarAccess.getCURRENTAccess().getCurrtCurrentKeyword_0()); }
		)
		{ after(grammarAccess.getCURRENTAccess().getCurrtCurrentKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LAST__LastAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLASTAccess().getLastLastKeyword_0()); }
		(
			{ before(grammarAccess.getLASTAccess().getLastLastKeyword_0()); }
			Last
			{ after(grammarAccess.getLASTAccess().getLastLastKeyword_0()); }
		)
		{ after(grammarAccess.getLASTAccess().getLastLastKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IS__IsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getISAccess().getIsIsKeyword_0()); }
		(
			{ before(grammarAccess.getISAccess().getIsIsKeyword_0()); }
			Is
			{ after(grammarAccess.getISAccess().getIsIsKeyword_0()); }
		)
		{ after(grammarAccess.getISAccess().getIsIsKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NULL__NullAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNULLAccess().getNullNullKeyword_0()); }
		(
			{ before(grammarAccess.getNULLAccess().getNullNullKeyword_0()); }
			Null
			{ after(grammarAccess.getNULLAccess().getNullNullKeyword_0()); }
		)
		{ after(grammarAccess.getNULLAccess().getNullNullKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIGGER__TriggerAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTRIGGERAccess().getTriggerTriggerKeyword_0()); }
		(
			{ before(grammarAccess.getTRIGGERAccess().getTriggerTriggerKeyword_0()); }
			Trigger
			{ after(grammarAccess.getTRIGGERAccess().getTriggerTriggerKeyword_0()); }
		)
		{ after(grammarAccess.getTRIGGERAccess().getTriggerTriggerKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AT__AtAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getATAccess().getAtAtKeyword_0()); }
		(
			{ before(grammarAccess.getATAccess().getAtAtKeyword_0()); }
			At
			{ after(grammarAccess.getATAccess().getAtAtKeyword_0()); }
		)
		{ after(grammarAccess.getATAccess().getAtAtKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION__FunctionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFUNCTIONAccess().getFunctionFunctionKeyword_0()); }
		(
			{ before(grammarAccess.getFUNCTIONAccess().getFunctionFunctionKeyword_0()); }
			Function
			{ after(grammarAccess.getFUNCTIONAccess().getFunctionFunctionKeyword_0()); }
		)
		{ after(grammarAccess.getFUNCTIONAccess().getFunctionFunctionKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RETURN__ReturnAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRETURNAccess().getReturnReturnKeyword_0()); }
		(
			{ before(grammarAccess.getRETURNAccess().getReturnReturnKeyword_0()); }
			Return
			{ after(grammarAccess.getRETURNAccess().getReturnReturnKeyword_0()); }
		)
		{ after(grammarAccess.getRETURNAccess().getReturnReturnKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FROM__FromAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFROMAccess().getFromFromKeyword_0()); }
		(
			{ before(grammarAccess.getFROMAccess().getFromFromKeyword_0()); }
			From
			{ after(grammarAccess.getFROMAccess().getFromFromKeyword_0()); }
		)
		{ after(grammarAccess.getFROMAccess().getFromFromKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WITHIN__WithinAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWITHINAccess().getWithinWithinKeyword_0()); }
		(
			{ before(grammarAccess.getWITHINAccess().getWithinWithinKeyword_0()); }
			Within
			{ after(grammarAccess.getWITHINAccess().getWithinWithinKeyword_0()); }
		)
		{ after(grammarAccess.getWITHINAccess().getWithinWithinKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LEFT__LeftAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLEFTAccess().getLeftLeftKeyword_0()); }
		(
			{ before(grammarAccess.getLEFTAccess().getLeftLeftKeyword_0()); }
			Left
			{ after(grammarAccess.getLEFTAccess().getLeftLeftKeyword_0()); }
		)
		{ after(grammarAccess.getLEFTAccess().getLeftLeftKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIGHT__RightAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRIGHTAccess().getRightRightKeyword_0()); }
		(
			{ before(grammarAccess.getRIGHTAccess().getRightRightKeyword_0()); }
			Right
			{ after(grammarAccess.getRIGHTAccess().getRightRightKeyword_0()); }
		)
		{ after(grammarAccess.getRIGHTAccess().getRightRightKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FULL__FullAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFULLAccess().getFullFullKeyword_0()); }
		(
			{ before(grammarAccess.getFULLAccess().getFullFullKeyword_0()); }
			Full
			{ after(grammarAccess.getFULLAccess().getFullFullKeyword_0()); }
		)
		{ after(grammarAccess.getFULLAccess().getFullFullKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JOIN__JoinAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJOINAccess().getJoinJoinKeyword_0()); }
		(
			{ before(grammarAccess.getJOINAccess().getJoinJoinKeyword_0()); }
			Join
			{ after(grammarAccess.getJOINAccess().getJoinJoinKeyword_0()); }
		)
		{ after(grammarAccess.getJOINAccess().getJoinJoinKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INNER__InnerAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINNERAccess().getInnerInnerKeyword_0()); }
		(
			{ before(grammarAccess.getINNERAccess().getInnerInnerKeyword_0()); }
			Inner
			{ after(grammarAccess.getINNERAccess().getInnerInnerKeyword_0()); }
		)
		{ after(grammarAccess.getINNERAccess().getInnerInnerKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OUTER__OuterAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOUTERAccess().getOuterOuterKeyword_0()); }
		(
			{ before(grammarAccess.getOUTERAccess().getOuterOuterKeyword_0()); }
			Outer
			{ after(grammarAccess.getOUTERAccess().getOuterOuterKeyword_0()); }
		)
		{ after(grammarAccess.getOUTERAccess().getOuterOuterKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SELECT__SelectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSELECTAccess().getSelectSelectKeyword_0()); }
		(
			{ before(grammarAccess.getSELECTAccess().getSelectSelectKeyword_0()); }
			Select
			{ after(grammarAccess.getSELECTAccess().getSelectSelectKeyword_0()); }
		)
		{ after(grammarAccess.getSELECTAccess().getSelectSelectKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GROUP__GroupAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGROUPAccess().getGroupGroupKeyword_0()); }
		(
			{ before(grammarAccess.getGROUPAccess().getGroupGroupKeyword_0()); }
			Group
			{ after(grammarAccess.getGROUPAccess().getGroupGroupKeyword_0()); }
		)
		{ after(grammarAccess.getGROUPAccess().getGroupGroupKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BY__ByAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBYAccess().getByByKeyword_0()); }
		(
			{ before(grammarAccess.getBYAccess().getByByKeyword_0()); }
			By
			{ after(grammarAccess.getBYAccess().getByByKeyword_0()); }
		)
		{ after(grammarAccess.getBYAccess().getByByKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HAVING__HavingAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHAVINGAccess().getHavingHavingKeyword_0()); }
		(
			{ before(grammarAccess.getHAVINGAccess().getHavingHavingKeyword_0()); }
			Having
			{ after(grammarAccess.getHAVINGAccess().getHavingHavingKeyword_0()); }
		)
		{ after(grammarAccess.getHAVINGAccess().getHavingHavingKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SNAPSHOT__SnapshotAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSNAPSHOTAccess().getSnapshotSnapshotKeyword_0()); }
		(
			{ before(grammarAccess.getSNAPSHOTAccess().getSnapshotSnapshotKeyword_0()); }
			Snapshot
			{ after(grammarAccess.getSNAPSHOTAccess().getSnapshotSnapshotKeyword_0()); }
		)
		{ after(grammarAccess.getSNAPSHOTAccess().getSnapshotSnapshotKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FIRST__FirstAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFIRSTAccess().getFirstFirstKeyword_0()); }
		(
			{ before(grammarAccess.getFIRSTAccess().getFirstFirstKeyword_0()); }
			First
			{ after(grammarAccess.getFIRSTAccess().getFirstFirstKeyword_0()); }
		)
		{ after(grammarAccess.getFIRSTAccess().getFirstFirstKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INSERT__InsertAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINSERTAccess().getInsertInsertKeyword_0()); }
		(
			{ before(grammarAccess.getINSERTAccess().getInsertInsertKeyword_0()); }
			Insert
			{ after(grammarAccess.getINSERTAccess().getInsertInsertKeyword_0()); }
		)
		{ after(grammarAccess.getINSERTAccess().getInsertInsertKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INTO__IntoAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINTOAccess().getIntoIntoKeyword_0()); }
		(
			{ before(grammarAccess.getINTOAccess().getIntoIntoKeyword_0()); }
			Into
			{ after(grammarAccess.getINTOAccess().getIntoIntoKeyword_0()); }
		)
		{ after(grammarAccess.getINTOAccess().getIntoIntoKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BEGIN__BeginAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBEGINAccess().getBeginBeginKeyword_0()); }
		(
			{ before(grammarAccess.getBEGINAccess().getBeginBeginKeyword_0()); }
			Begin
			{ after(grammarAccess.getBEGINAccess().getBeginBeginKeyword_0()); }
		)
		{ after(grammarAccess.getBEGINAccess().getBeginBeginKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DELETE__DeleteAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDELETEAccess().getDeleteDeleteKeyword_0()); }
		(
			{ before(grammarAccess.getDELETEAccess().getDeleteDeleteKeyword_0()); }
			Delete
			{ after(grammarAccess.getDELETEAccess().getDeleteDeleteKeyword_0()); }
		)
		{ after(grammarAccess.getDELETEAccess().getDeleteDeleteKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FOR__ForAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFORAccess().getForForKeyword_0()); }
		(
			{ before(grammarAccess.getFORAccess().getForForKeyword_0()); }
			For
			{ after(grammarAccess.getFORAccess().getForForKeyword_0()); }
		)
		{ after(grammarAccess.getFORAccess().getForForKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UPDATE__UpdateAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUPDATEAccess().getUpdateUpdateKeyword_0()); }
		(
			{ before(grammarAccess.getUPDATEAccess().getUpdateUpdateKeyword_0()); }
			Update
			{ after(grammarAccess.getUPDATEAccess().getUpdateUpdateKeyword_0()); }
		)
		{ after(grammarAccess.getUPDATEAccess().getUpdateUpdateKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__END__EndAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENDAccess().getEndEndKeyword_0()); }
		(
			{ before(grammarAccess.getENDAccess().getEndEndKeyword_0()); }
			End
			{ after(grammarAccess.getENDAccess().getEndEndKeyword_0()); }
		)
		{ after(grammarAccess.getENDAccess().getEndEndKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARTITION__PartitionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARTITIONAccess().getPartitionPartitionKeyword_0()); }
		(
			{ before(grammarAccess.getPARTITIONAccess().getPartitionPartitionKeyword_0()); }
			Partition
			{ after(grammarAccess.getPARTITIONAccess().getPartitionPartitionKeyword_0()); }
		)
		{ after(grammarAccess.getPARTITIONAccess().getPartitionPartitionKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WITH__WiAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWITHAccess().getWiWithKeyword_0()); }
		(
			{ before(grammarAccess.getWITHAccess().getWiWithKeyword_0()); }
			With
			{ after(grammarAccess.getWITHAccess().getWiWithKeyword_0()); }
		)
		{ after(grammarAccess.getWITHAccess().getWiWithKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGGREGATION__AggreAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAGGREGATIONAccess().getAggreAggregationKeyword_0()); }
		(
			{ before(grammarAccess.getAGGREGATIONAccess().getAggreAggregationKeyword_0()); }
			Aggregation
			{ after(grammarAccess.getAGGREGATIONAccess().getAggreAggregationKeyword_0()); }
		)
		{ after(grammarAccess.getAGGREGATIONAccess().getAggreAggregationKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGGREGATE__AgrregateAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAGGREGATEAccess().getAgrregateAggregateKeyword_0()); }
		(
			{ before(grammarAccess.getAGGREGATEAccess().getAgrregateAggregateKeyword_0()); }
			Aggregate
			{ after(grammarAccess.getAGGREGATEAccess().getAgrregateAggregateKeyword_0()); }
		)
		{ after(grammarAccess.getAGGREGATEAccess().getAgrregateAggregateKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SET__SetAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSETAccess().getSetSetKeyword_0()); }
		(
			{ before(grammarAccess.getSETAccess().getSetSetKeyword_0()); }
			Set
			{ after(grammarAccess.getSETAccess().getSetSetKeyword_0()); }
		)
		{ after(grammarAccess.getSETAccess().getSetSetKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PER__PerAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPERAccess().getPerPerKeyword_0()); }
		(
			{ before(grammarAccess.getPERAccess().getPerPerKeyword_0()); }
			Per
			{ after(grammarAccess.getPERAccess().getPerPerKeyword_0()); }
		)
		{ after(grammarAccess.getPERAccess().getPerPerKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__YEARS__YearAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYEARSAccess().getYearYearKeyword_0_0()); }
		(
			{ before(grammarAccess.getYEARSAccess().getYearYearKeyword_0_0()); }
			Year
			{ after(grammarAccess.getYEARSAccess().getYearYearKeyword_0_0()); }
		)
		{ after(grammarAccess.getYEARSAccess().getYearYearKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__YEARS__YearsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYEARSAccess().getYearsYearsKeyword_1_0()); }
		(
			{ before(grammarAccess.getYEARSAccess().getYearsYearsKeyword_1_0()); }
			Years
			{ after(grammarAccess.getYEARSAccess().getYearsYearsKeyword_1_0()); }
		)
		{ after(grammarAccess.getYEARSAccess().getYearsYearsKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MONTHS__MonthAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMONTHSAccess().getMonthMonthKeyword_0_0()); }
		(
			{ before(grammarAccess.getMONTHSAccess().getMonthMonthKeyword_0_0()); }
			Month
			{ after(grammarAccess.getMONTHSAccess().getMonthMonthKeyword_0_0()); }
		)
		{ after(grammarAccess.getMONTHSAccess().getMonthMonthKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MONTHS__MonthsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMONTHSAccess().getMonthsMonthsKeyword_1_0()); }
		(
			{ before(grammarAccess.getMONTHSAccess().getMonthsMonthsKeyword_1_0()); }
			Months
			{ after(grammarAccess.getMONTHSAccess().getMonthsMonthsKeyword_1_0()); }
		)
		{ after(grammarAccess.getMONTHSAccess().getMonthsMonthsKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WEEKS__WeekAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWEEKSAccess().getWeekWeekKeyword_0_0()); }
		(
			{ before(grammarAccess.getWEEKSAccess().getWeekWeekKeyword_0_0()); }
			Week
			{ after(grammarAccess.getWEEKSAccess().getWeekWeekKeyword_0_0()); }
		)
		{ after(grammarAccess.getWEEKSAccess().getWeekWeekKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WEEKS__WeeksAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWEEKSAccess().getWeeksWeeksKeyword_1_0()); }
		(
			{ before(grammarAccess.getWEEKSAccess().getWeeksWeeksKeyword_1_0()); }
			Weeks
			{ after(grammarAccess.getWEEKSAccess().getWeeksWeeksKeyword_1_0()); }
		)
		{ after(grammarAccess.getWEEKSAccess().getWeeksWeeksKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DAYS__DayAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDAYSAccess().getDayDayKeyword_0_0()); }
		(
			{ before(grammarAccess.getDAYSAccess().getDayDayKeyword_0_0()); }
			Day
			{ after(grammarAccess.getDAYSAccess().getDayDayKeyword_0_0()); }
		)
		{ after(grammarAccess.getDAYSAccess().getDayDayKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DAYS__DaysAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDAYSAccess().getDaysDaysKeyword_1_0()); }
		(
			{ before(grammarAccess.getDAYSAccess().getDaysDaysKeyword_1_0()); }
			Days
			{ after(grammarAccess.getDAYSAccess().getDaysDaysKeyword_1_0()); }
		)
		{ after(grammarAccess.getDAYSAccess().getDaysDaysKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HOURS__HourAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHOURSAccess().getHourHourKeyword_0_0()); }
		(
			{ before(grammarAccess.getHOURSAccess().getHourHourKeyword_0_0()); }
			Hour
			{ after(grammarAccess.getHOURSAccess().getHourHourKeyword_0_0()); }
		)
		{ after(grammarAccess.getHOURSAccess().getHourHourKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HOURS__HoursAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHOURSAccess().getHoursHoursKeyword_1_0()); }
		(
			{ before(grammarAccess.getHOURSAccess().getHoursHoursKeyword_1_0()); }
			Hours
			{ after(grammarAccess.getHOURSAccess().getHoursHoursKeyword_1_0()); }
		)
		{ after(grammarAccess.getHOURSAccess().getHoursHoursKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MINUTES__MinuteAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMINUTESAccess().getMinuteMinuteKeyword_0_0()); }
		(
			{ before(grammarAccess.getMINUTESAccess().getMinuteMinuteKeyword_0_0()); }
			Minute
			{ after(grammarAccess.getMINUTESAccess().getMinuteMinuteKeyword_0_0()); }
		)
		{ after(grammarAccess.getMINUTESAccess().getMinuteMinuteKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MINUTES__MinutesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMINUTESAccess().getMinutesMinutesKeyword_1_0()); }
		(
			{ before(grammarAccess.getMINUTESAccess().getMinutesMinutesKeyword_1_0()); }
			Minutes
			{ after(grammarAccess.getMINUTESAccess().getMinutesMinutesKeyword_1_0()); }
		)
		{ after(grammarAccess.getMINUTESAccess().getMinutesMinutesKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MINUTES__MinAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMINUTESAccess().getMinMinKeyword_2_0()); }
		(
			{ before(grammarAccess.getMINUTESAccess().getMinMinKeyword_2_0()); }
			Min
			{ after(grammarAccess.getMINUTESAccess().getMinMinKeyword_2_0()); }
		)
		{ after(grammarAccess.getMINUTESAccess().getMinMinKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SECONDS__SecondAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSECONDSAccess().getSecondSecondKeyword_0_0()); }
		(
			{ before(grammarAccess.getSECONDSAccess().getSecondSecondKeyword_0_0()); }
			Second
			{ after(grammarAccess.getSECONDSAccess().getSecondSecondKeyword_0_0()); }
		)
		{ after(grammarAccess.getSECONDSAccess().getSecondSecondKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SECONDS__SecondsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSECONDSAccess().getSecondsSecondsKeyword_1_0()); }
		(
			{ before(grammarAccess.getSECONDSAccess().getSecondsSecondsKeyword_1_0()); }
			Seconds
			{ after(grammarAccess.getSECONDSAccess().getSecondsSecondsKeyword_1_0()); }
		)
		{ after(grammarAccess.getSECONDSAccess().getSecondsSecondsKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SECONDS__SecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSECONDSAccess().getSecSecKeyword_2_0()); }
		(
			{ before(grammarAccess.getSECONDSAccess().getSecSecKeyword_2_0()); }
			Sec
			{ after(grammarAccess.getSECONDSAccess().getSecSecKeyword_2_0()); }
		)
		{ after(grammarAccess.getSECONDSAccess().getSecSecKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MILLISECONDS__MillisecondAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMILLISECONDSAccess().getMillisecondMillisecondKeyword_0_0()); }
		(
			{ before(grammarAccess.getMILLISECONDSAccess().getMillisecondMillisecondKeyword_0_0()); }
			Millisecond
			{ after(grammarAccess.getMILLISECONDSAccess().getMillisecondMillisecondKeyword_0_0()); }
		)
		{ after(grammarAccess.getMILLISECONDSAccess().getMillisecondMillisecondKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MILLISECONDS__MillisecondsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMILLISECONDSAccess().getMillisecondsMillisecondsKeyword_1_0()); }
		(
			{ before(grammarAccess.getMILLISECONDSAccess().getMillisecondsMillisecondsKeyword_1_0()); }
			Milliseconds
			{ after(grammarAccess.getMILLISECONDSAccess().getMillisecondsMillisecondsKeyword_1_0()); }
		)
		{ after(grammarAccess.getMILLISECONDSAccess().getMillisecondsMillisecondsKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MILLISECONDS__MillisecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMILLISECONDSAccess().getMillisecMillisecKeyword_2_0()); }
		(
			{ before(grammarAccess.getMILLISECONDSAccess().getMillisecMillisecKeyword_2_0()); }
			Millisec
			{ after(grammarAccess.getMILLISECONDSAccess().getMillisecMillisecKeyword_2_0()); }
		)
		{ after(grammarAccess.getMILLISECONDSAccess().getMillisecMillisecKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FALSE__FalsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFALSEAccess().getFalsFalseKeyword_0()); }
		(
			{ before(grammarAccess.getFALSEAccess().getFalsFalseKeyword_0()); }
			False
			{ after(grammarAccess.getFALSEAccess().getFalsFalseKeyword_0()); }
		)
		{ after(grammarAccess.getFALSEAccess().getFalsFalseKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TRUE__TrAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTRUEAccess().getTrTrueKeyword_0()); }
		(
			{ before(grammarAccess.getTRUEAccess().getTrTrueKeyword_0()); }
			True
			{ after(grammarAccess.getTRUEAccess().getTrTrueKeyword_0()); }
		)
		{ after(grammarAccess.getTRUEAccess().getTrTrueKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
