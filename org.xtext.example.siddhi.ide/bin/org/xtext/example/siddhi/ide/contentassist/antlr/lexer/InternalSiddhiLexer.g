/*
 * generated by Xtext 2.11.0
 */
lexer grammar InternalSiddhiLexer;

@header {
package org.xtext.example.siddhi.ide.contentassist.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

Unidirectional : ('U'|'u')('N'|'n')('I'|'i')('D'|'d')('I'|'i')('R'|'r')('E'|'e')('C'|'c')('T'|'t')('I'|'i')('O'|'o')('N'|'n')('A'|'a')('L'|'l');

Milliseconds : ('M'|'m')('I'|'i')('L'|'l')('L'|'l')('I'|'i')('S'|'s')('E'|'e')('C'|'c')('O'|'o')('N'|'n')('D'|'d')('S'|'s');

Aggregation : ('A'|'a')('G'|'g')('G'|'g')('R'|'r')('E'|'e')('G'|'g')('A'|'a')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Millisecond : ('M'|'m')('I'|'i')('L'|'l')('L'|'l')('I'|'i')('S'|'s')('E'|'e')('C'|'c')('O'|'o')('N'|'n')('D'|'d');

Aggregate : ('A'|'a')('G'|'g')('G'|'g')('R'|'r')('E'|'e')('G'|'g')('A'|'a')('T'|'t')('E'|'e');

Partition : ('P'|'p')('A'|'a')('R'|'r')('T'|'t')('I'|'i')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Function : ('F'|'f')('U'|'u')('N'|'n')('C'|'c')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Millisec : ('M'|'m')('I'|'i')('L'|'l')('L'|'l')('I'|'i')('S'|'s')('E'|'e')('C'|'c');

Snapshot : ('S'|'s')('N'|'n')('A'|'a')('P'|'p')('S'|'s')('H'|'h')('O'|'o')('T'|'t');

Current : ('C'|'c')('U'|'u')('R'|'r')('R'|'r')('E'|'e')('N'|'n')('T'|'t');

Expired : ('E'|'e')('X'|'x')('P'|'p')('I'|'i')('R'|'r')('E'|'e')('D'|'d');

Minutes : ('M'|'m')('I'|'i')('N'|'n')('U'|'u')('T'|'t')('E'|'e')('S'|'s');

Seconds : ('S'|'s')('E'|'e')('C'|'c')('O'|'o')('N'|'n')('D'|'d')('S'|'s');

Trigger : ('T'|'t')('R'|'r')('I'|'i')('G'|'g')('G'|'g')('E'|'e')('R'|'r');

Define : ('D'|'d')('E'|'e')('F'|'f')('I'|'i')('N'|'n')('E'|'e');

Delete : ('D'|'d')('E'|'e')('L'|'l')('E'|'e')('T'|'t')('E'|'e');

Double : ('D'|'d')('O'|'o')('U'|'u')('B'|'b')('L'|'l')('E'|'e');

Events : ('E'|'e')('V'|'v')('E'|'e')('N'|'n')('T'|'t')('S'|'s');

Having : ('H'|'h')('A'|'a')('V'|'v')('I'|'i')('N'|'n')('G'|'g');

Insert : ('I'|'i')('N'|'n')('S'|'s')('E'|'e')('R'|'r')('T'|'t');

Minute : ('M'|'m')('I'|'i')('N'|'n')('U'|'u')('T'|'t')('E'|'e');

Months : ('M'|'m')('O'|'o')('N'|'n')('T'|'t')('H'|'h')('S'|'s');

Object : ('O'|'o')('B'|'b')('J'|'j')('E'|'e')('C'|'c')('T'|'t');

Output : ('O'|'o')('U'|'u')('T'|'t')('P'|'p')('U'|'u')('T'|'t');

Return : ('R'|'r')('E'|'e')('T'|'t')('U'|'u')('R'|'r')('N'|'n');

Second : ('S'|'s')('E'|'e')('C'|'c')('O'|'o')('N'|'n')('D'|'d');

Select : ('S'|'s')('E'|'e')('L'|'l')('E'|'e')('C'|'c')('T'|'t');

Stream : ('S'|'s')('T'|'t')('R'|'r')('E'|'e')('A'|'a')('M'|'m');

String : ('S'|'s')('T'|'t')('R'|'r')('I'|'i')('N'|'n')('G'|'g');

Update : ('U'|'u')('P'|'p')('D'|'d')('A'|'a')('T'|'t')('E'|'e');

Window : ('W'|'w')('I'|'i')('N'|'n')('D'|'d')('O'|'o')('W'|'w');

Within : ('W'|'w')('I'|'i')('T'|'t')('H'|'h')('I'|'i')('N'|'n');

Begin : ('B'|'b')('E'|'e')('G'|'g')('I'|'i')('N'|'n');

Every : ('E'|'e')('V'|'v')('E'|'e')('R'|'r')('Y'|'y');

False : ('F'|'f')('A'|'a')('L'|'l')('S'|'s')('E'|'e');

First : ('F'|'f')('I'|'i')('R'|'r')('S'|'s')('T'|'t');

Float : ('F'|'f')('L'|'l')('O'|'o')('A'|'a')('T'|'t');

Group : ('G'|'g')('R'|'r')('O'|'o')('U'|'u')('P'|'p');

Hours : ('H'|'h')('O'|'o')('U'|'u')('R'|'r')('S'|'s');

Inner : ('I'|'i')('N'|'n')('N'|'n')('E'|'e')('R'|'r');

Month : ('M'|'m')('O'|'o')('N'|'n')('T'|'t')('H'|'h');

Outer : ('O'|'o')('U'|'u')('T'|'t')('E'|'e')('R'|'r');

Right : ('R'|'r')('I'|'i')('G'|'g')('H'|'h')('T'|'t');

Table : ('T'|'t')('A'|'a')('B'|'b')('L'|'l')('E'|'e');

Weeks : ('W'|'w')('E'|'e')('E'|'e')('K'|'k')('S'|'s');

Years : ('Y'|'y')('E'|'e')('A'|'a')('R'|'r')('S'|'s');

Bool : ('B'|'b')('O'|'o')('O'|'o')('L'|'l');

Days : ('D'|'d')('A'|'a')('Y'|'y')('S'|'s');

From : ('F'|'f')('R'|'r')('O'|'o')('M'|'m');

Full : ('F'|'f')('U'|'u')('L'|'l')('L'|'l');

Hour : ('H'|'h')('O'|'o')('U'|'u')('R'|'r');

Into : ('I'|'i')('N'|'n')('T'|'t')('O'|'o');

Join : ('J'|'j')('O'|'o')('I'|'i')('N'|'n');

Last : ('L'|'l')('A'|'a')('S'|'s')('T'|'t');

Left : ('L'|'l')('E'|'e')('F'|'f')('T'|'t');

Long : ('L'|'l')('O'|'o')('N'|'n')('G'|'g');

Null : ('N'|'n')('U'|'u')('L'|'l')('L'|'l');

Plan : ('P'|'p')('L'|'l')('A'|'a')('N'|'n');

True : ('T'|'t')('R'|'r')('U'|'u')('E'|'e');

Week : ('W'|'w')('E'|'e')('E'|'e')('K'|'k');

With : ('W'|'w')('I'|'i')('T'|'t')('H'|'h');

Year : ('Y'|'y')('E'|'e')('A'|'a')('R'|'r');

FullStopFullStopFullStop : '.''.''.';

All : ('A'|'a')('L'|'l')('L'|'l');

And : ('A'|'a')('N'|'n')('D'|'d');

App : ('A'|'a')('P'|'p')('P'|'p');

Day : ('D'|'d')('A'|'a')('Y'|'y');

End : ('E'|'e')('N'|'n')('D'|'d');

For : ('F'|'f')('O'|'o')('R'|'r');

Int : ('I'|'i')('N'|'n')('T'|'t');

Min : ('M'|'m')('I'|'i')('N'|'n');

Not : ('N'|'n')('O'|'o')('T'|'t');

Per : ('P'|'p')('E'|'e')('R'|'r');

Raw : ('R'|'r')('A'|'a')('W'|'w');

Sec : ('S'|'s')('E'|'e')('C'|'c');

Set : ('S'|'s')('E'|'e')('T'|'t');

ExclamationMarkEqualsSign : '!''=';

HyphenMinusGreaterThanSign : '-''>';

LessThanSignEqualsSign : '<''=';

EqualsSignEqualsSign : '=''=';

GreaterThanSignEqualsSign : '>''=';

As : ('A'|'a')('S'|'s');

At : ('A'|'a')('T'|'t');

By : ('B'|'b')('Y'|'y');

In : ('I'|'i')('N'|'n');

Is : ('I'|'i')('S'|'s');

Of : ('O'|'o')('F'|'f');

On : ('O'|'o')('N'|'n');

Or : ('O'|'o')('R'|'r');

NumberSign : '#';

PercentSign : '%';

LeftParenthesis : '(';

RightParenthesis : ')';

Asterisk : '*';

PlusSign : '+';

Comma : ',';

HyphenMinus : '-';

FullStop : '.';

Solidus : '/';

Colon : ':';

Semicolon : ';';

LessThanSign : '<';

EqualsSign : '=';

GreaterThanSign : '>';

QuestionMark : '?';

CommercialAt : '@';

LeftSquareBracket : '[';

RightSquareBracket : ']';

D : ('D'|'d');

E : ('E'|'e');

F : ('F'|'f');

L : ('L'|'l');

RULE_SCRIPT : '{' RULE_SCRIPT_ATOM* '}';

fragment RULE_SCRIPT_ATOM : (~(('{'|'}'))|'"' ~('"')* '"'|'//' ~(('\r'|'\n'))*|RULE_SCRIPT);

RULE_ID : '`'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* '`'?;

RULE_INT : '0'..'9';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/ ';

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\''|'"""' .* '"""');
